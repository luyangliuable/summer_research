 SPDX-License-Identifier: GPL-2.0-only

/* Copyright (c) 2017 The Linux Foundation. All rights reserved.

/*

 * Try to transition the preemption state from old to new. Return

 * true on success or false if the original state wasn't 'old'

/*

 * Force the preemption state to the specified state.  This is used in cases

 * where the current state is known and won't change

	/*

	 * preempt_state may be read by other cores trying to trigger a

	 * preemption or in the interrupt handler so barriers are needed

	 * before...

 ... and after*/

 Write the most recent wptr for the given ring into the hardware */

 Return the highest priority ringbuffer with something in it */

 Try to trigger a preemption switch */

	/*

	 * Try to start preemption by moving from NONE to START. If

	 * unsuccessful, a preemption is already in flight

 Get the next ring to preempt to */

	/*

	 * If no ring is populated or the highest priority ring is the current

	 * one do nothing except to update the wptr to the latest and greatest

		/*

		 * Its possible that while a preemption request is in progress

		 * from an irq context, a user context trying to submit might

		 * fail to update the write pointer, because it determines

		 * that the preempt state is not PREEMPT_NONE.

		 *

		 * Close the race by introducing an intermediate

		 * state PREEMPT_ABORT to let the submit path

		 * know that the ringbuffer is not going to change

		 * and can safely update the write pointer.

 Make sure the wptr doesn't update while we're in motion */

 Set the address of the incoming preemption record */

 Start a timer to catch a stuck preemption */

 Set the preemption state to triggered */

 Make sure everything is written before hitting the button */

 And actually start the preemption */

 Delete the preemption watchdog timer */

	/*

	 * The hardware should be setting CP_CONTEXT_SWITCH_CNTL to zero before

	 * firing the interrupt, but there is a non zero chance of a hardware

	 * condition or a software race that could set it again before we have a

	 * chance to finish. If that happens, log and go for recovery

 Always come up on rb 0 */

 No preemption if we only have one ring */

 Write a 0 to signal that we aren't switching pagetables */

 Reset the preemption state */

 The buffer to store counters needs to be unprivileged */

 Set up the defaults on the preemption record */

 No preemption if we only have one ring */

			/*

			 * On any failure our adventure is over. Clean up and

			 * set nr_rings to 1 to force preemption off

 SPDX-License-Identifier: GPL-2.0-only

/* Copyright (c) 2014 The Linux Foundation. All rights reserved.

 ignore IB-targets */

 ignore if there has not been a ctx switch: */

	/* Flush HLSQ lazy updates to make sure there is nothing

	 * pending for indirect loads after the timestamp has

	 * passed:

 wait for idle before cache flush/interrupt */

 BIT(31) of CACHE_FLUSH_TS triggers CACHE_FLUSH_TS IRQ from GPU */

/*

 * a4xx_enable_hwcg() - Program the clock control registers

 * @device: The adreno device pointer

 Disable L1 clocking in A420 due to CCU issues with it */

 No CCU for A405 */

	/* Early A430's have a timing issue with SP/TP power collapse;

 Make all blocks contribute to the GPU BUSY perf counter */

 Tune the hystersis counters for SP and CP idle detection */

 Enable the RBBM error reporting bits */

 Enable AHB error reporting*/

 Enable power counters*/

	/*

	 * Turn on hang detection - this spews a lot of useful information

	 * into the RBBM registers on a hang:

 Turn on performance counters: */

	/* use the first CP counter for timestamp queries.. userspace may set

	 * this as well but it selects the same counter/countable:

 Disable L2 bypass to avoid UCHE out of bounds errors */

 On A430 enable SP regfile sleep for power savings */

 TODO downstream does this for !420, so maybe applies for 405 too? */

	/*

	 * For A420 set RBBM_CLOCK_DELAY_HLSQ.CGC_HLSQ_TP_EARLY_CYC >= 2

	 * due to timing issue with HLSQ_TP_CLK_EN

 setup access protection: */

 RBBM registers */

 CP registers */

 RB registers */

 HLSQ registers */

 VPC registers */

 SMMU registers */

	/*

	 * Use the default ringbuffer size and block size but disable the RPTR

	 * shadow

 Set the ringbuffer address */

 Load PM4: */

 Load PFP: */

 clear ME_HALT to start micro engine */

 dump registers before resetting gpu, if enabled: */

 wait for ringbuffer to drain: */

 then wait for GPU to finish: */

 TODO maybe we need to reset GPU here to recover from hang? */

 RBBM */

 CP */

 VSC */

 GRAS */

 RB */

 PC */

 VFD */

 VPC */

 UCHE */

 VMIDMT */

 GRAS CTX 0 */

 PC CTX 0 */

 VFD CTX 0 */

 GRAS CTX 1 */

 PC CTX 1 */

 VFD CTX 1 */

 XPU */

 VBIF */

 sentinel */

 RBBM */

 CP */

 VSC */

 GRAS */

 RB */

 PC */

 VFD */

 VPC */

 UCHE */

 GRAS CTX 0 */

 PC CTX 0 */

 VFD CTX 0 */

 GRAS CTX 1 */

 PC CTX 1 */

 VFD CTX 1 */

 VBIF version 0x20050000*/

 sentinel */

 Set the default register values; set SW_COLLAPSE to 0 */

 Set the default register values; set SW_COLLAPSE to 1 */

 if needed, allocate gmem: */

		/* TODO we think it is possible to configure the GPU to

		 * restrict access to VRAM carveout.  But the required

		 * registers are unknown.  For now just bail out and

		 * limp along with just modesetting.  If it turns out

		 * to not be possible to restrict access, then we must

		 * implement a cmdstream validator.

 allow -ENODATA, ocmem icc is optional */

	/*

	 * Set the ICC path to maximum speed for now by multiplying the fastest

	 * frequency by the bus width (8). We'll want to scale this later on to

	 * improve battery life.

 SPDX-License-Identifier: GPL-2.0

 Copyright (c) 2018-2019 The Linux Foundation. All rights reserved. */

/*

 * Allocate 1MB for the crashdumper scratch region - 8k for the script and

 * the rest for the data

 Make sure all pending memory writes are posted */

 read a value from the GX debug bus */

 Wait 1 us to make sure the data is flowing */

 read a value from the CX debug bus */

 Wait 1 us to make sure the data is flowing */

 Read a chunk of data from the VBIF debug bus */

 Get the current clock setting */

 Force on the bus so we can read it */

 We will read from BUS2 first, so disable BUS1 */

 Enable the VBIF bus for reading */

 Stop BUS2 so we can turn on BUS1 */

 Restore the VBIF clock setting */

 Set up the GX debug bus */

	/* Set up the CX debug bus - it lives elsewhere in the system so do a

	 * temporary ioremap for the registers

		/*

		 * GBIF has same debugbus as of other GPU blocks, fall back to

		 * default path if GPU uses GBIF, also GBIF uses exactly same

		 * ID as of VBIF.

  Dump the VBIF debugbus on applicable targets */

 Read a data cluster from behind the AHB aperture */

 Read a data cluster from the CP aperture with the crashdumper */

 Some clusters need a selector register to be programmed too */

 Read a shader / debug block from the HLSQ aperture with the crashdumper */

 Read registers from behind the HLSQ aperture with the crashdumper */

 Read a block of registers using the crashdumper */

 Some blocks might need to program a selector register first */

 Read a block of registers via AHB */

 Read a block of GMU registers */

 Get the CX GMU registers from AHB */

 Set the fence to ALLOW mode so we can access the registers */

		/*

		 * We can't use the crashdumper when the SMMU is stalled,

		 * because the GPU has no memory access until we resume

		 * translation (but we don't want to do that until after

		 * we have captured as much useful GPU state as possible).

		 * So instead collect registers via the CPU:

 Read a block of data from an indexed register pair */

 All the indexed banks start at address 0 */

 Read the data - each read increments the internal address by 1 */

 Set the CP mempool size to 0 to stabilize it while dumping */

 Get the contents of the CP mempool */

	/*

	 * Offset 0x2000 in the mempool is the size - copy the saved size over

	 * so the data is consistent

 Restore the size in the hardware */

 Get the generic state from the adreno core */

 If GX isn't on the rest of the data isn't going to be accessible */

 Get the banks of indexed registers */

	/*

	 * Try to initialize the crashdumper, if we are not dumping state

	 * with the SMMU stalled.  The crashdumper needs memory access to

	 * write out GPU state, so we need to skip this when the SMMU is

	 * stalled in response to an iova fault

		/*

		 * count for regular debugbus data is in quadwords,

		 * but print the size in dwords for consistency

 vbif debugbus data is in dwords.  Confusing, huh? */

 SPDX-License-Identifier: GPL-2.0-only

/* Copyright (c) 2016-2017 The Linux Foundation. All rights reserved.

	/*

	 * Most flush operations need to issue a WHERE_AM_I opcode to sync up

	 * the rptr shadow

 Copy the shadow to the actual register */

 Make sure to wrap wptr if we need to */

 Make sure everything is posted before making a decision */

 Update HW if this is the current ring and we are not in preempt */

 copy commands into RB: */

			/* _get_vaddr() shouldn't fail at this point,

			 * since we've already mapped it once in

			 * submit_reloc()

				/* normally the OUT_PKTn() would wait

				 * for space for the packet.  But since

				 * we just OUT_RING() the whole thing,

				 * need to call adreno_wait_ring()

				 * ourself:

	/* we might not necessarily have a cmd from userspace to

	 * trigger an event to know that submit has completed, so

	 * do this manually:

 Turn off protected mode to write to special registers */

 Set the save preemption record for the ring/command */

 Turn back on protected mode */

 Enable local preemption for finegrain preemption */

 Allow CP_CONTEXT_SWITCH_YIELD packets in the IB2 */

 Submit the commands */

		/*

		 * Periodically update shadow-wptr if needed, so that we

		 * can see partial progress of submits with large # of

		 * cmds.. otherwise we could needlessly stall waiting for

		 * ringbuffer state, simply due to looking at a shadow

		 * rptr value that has not been updated

	/*

	 * Write the render mode to NULL (0) to indicate to the CP that the IBs

	 * are done rendering - otherwise a lucky preemption would start

	 * replaying from the last checkpoint

 Turn off IB level preemptions */

 Write the fence to the scratch register */

	/*

	 * Execute a CACHE_FLUSH_TS event. This will ensure that the

	 * timestamp is written to the memory and then triggers the interrupt

 Yield the floor on command completion */

	/*

	 * If dword[2:1] are non zero, they specify an address for the CP to

	 * write the value of dword[3] to on preemption complete. Write 0 to

	 * skip the write

 Data value - not used if the address above is 0 */

 Set bit 0 to trigger an interrupt on preempt complete */

 A WHERE_AM_I packet is not needed after a YIELD */

 Check to see if we need to start preemption */

 Enable multiple hardware contexts */

 Enable error detection */

 Don't enable header dump */

 Specify workarounds for various microcode issues */

		/* Workaround for token end syncs

		 * Force a WFI after every direct-render 3D mode draw and every

		 * 2D mode 3 draw

 Workaround for token and syncs */

 No workarounds enabled */

 Turn off protected mode to write to special registers */

 Set the save preemption record for the ring/command */

 Turn back on protected mode */

 Yield the floor on command completion */

 The WHERE_AMI_I packet is not needed after a YIELD is issued */

	/*

	 * If the lowest nibble is 0xa that is an indication that this microcode

	 * has been patched. The actual version is in dword [3] but we only care

	 * about the patchlevel which is the lowest nibble of dword [3]

	/*

	 * If the zap shader is already loaded into memory we just need to kick

	 * the remote processor to reinitialize it

 Make all blocks contribute to the GPU BUSY perf counter */

 Enable RBBM error reporting bits */

		/*

		 * Mask out the activity signals from RB1-3 to avoid false

		 * positives

 Enable fault detection */

 Turn on performance counters */

 Select CP0 to always count cycles */

 Select RBBM0 to countable 6 to get the busy status for devfreq */

 Increase VFD cache access so LRZ and other data gets evicted less */

 Disable L2 bypass in the UCHE */

 Set the GMEM VA range (0 to gpu->gmem) */

	/*

	 * Disable the RB sampler datapath DP2 clock gating optimization

	 * for 1-SP GPUs, as it is enabled by default.

 Disable UCHE global filter as SP can invalidate/flush independently */

 Enable USE_RETENTION_FLOPS */

 Enable ME/PFP split notification */

	/*

	 *  In A5x, CCU can send context_done event of a particular context to

	 *  UCHE which ultimately reaches CP even when there is valid

	 *  transaction of that context inside CCU. This can let CP to program

	 *  config registers, which will make the "valid transaction" inside

	 *  CCU to be interpreted differently. This can cause gpu fault. This

	 *  bug is fixed in latest A510 revision. To enable this bug fix -

	 *  bit[11] of RB_DBG_ECO_CNTL need to be set to 0, default is 1

	 *  (disable). For older A510 version this bit is unused.

 Enable HWCG */

 Set the highest bank bit */

 Disable All flat shading optimization (ALLFLATOPTDIS) */

 Protect registers from the CP */

 RBBM */

 Content protect */

 CP */

 RB */

 VPC */

 UCHE */

	/*

	 * Disable the trusted memory range - we don't actually supported secure

	 * memory rendering at this point in time and we don't want to block off

	 * part of the virtual memory space.

 Put the GPU into 64 bit by default */

	/*

	 * VPC corner case with local memory load kill leads to corrupt

	 * internal state. Normal Disable does not work for all a5x chips.

	 * So do the following setting to disable it.

 Set the ringbuffer address */

	/*

	 * If the microcode supports the WHERE_AM_I opcode then we can use that

	 * in lieu of the RPTR shadow and enable preemption. Otherwise, we

	 * can't safely use the RPTR shadow or preemption. In either case, the

	 * RPTR shadow should be disabled in hardware.

 Create a privileged buffer for the RPTR shadow */

 Disable preemption if WHERE_AM_I isn't available */

 Disable the interrupts through the initial bringup stage */

 Clear ME_HALT to start the micro engine */

	/*

	 * Send a pipeline event stat to get misbehaving counters to start

	 * ticking correctly

	/*

	 * If the chip that we are using does support loading one, then

	 * try to load a zap shader into the secure world. If successful

	 * we can use the CP to switch out of secure mode. If not then we

	 * have no resource but to try to switch ourselves out manually. If we

	 * guessed wrong then access to the RBBM_SECVID_TRUST_CNTL register will

	 * be blocked and a permissions violation will soon follow.

		/*

		 * This device does not use zap shader (but print a warning

		 * just in case someone got their dt wrong.. hopefully they

		 * have a debug UART to realize the error of their ways...

		 * if you mess this up you are about to crash horribly)

 Last step - yield the ringbuffer */

	/*

	 * Nearly every abnormality ends up pausing the GPU and triggering a

	 * fault so we can safely just watch for this one interrupt to fire

 wait for CP to drain ringbuffer: */

		/*

		 * REG_A5XX_CP_PFP_STAT_DATA is indexed, and we want index 1 so

		 * read it twice

 Clear the error */

 Clear the interrupt */

	/*

	 * If stalled on SMMU fault, we could trip the GPU's hang detection,

	 * but the fault handler will trigger the devcore dump, and we want

	 * to otherwise resume normally rather than killing the submit, so

	 * just bail.

 Turn off the hangcheck timer to keep it from bothering us */

	/*

	 * Clear all the interrupts except RBBM_AHB_ERROR - if we clear it

	 * before the source is cleared the interrupt will storm.

 Pass status to a5xx_rbbm_err_irq because we've already cleared it */

 Turn on the core power */

 Adreno 508, 509, 510, 512 needs manual RBBM sus/res control */

 Halt the sp_input_clk at HM level */

 Turn on sp_input_clk at HM level */

 Turn the RBCCU domain first to limit the chances of voltage droop */

 Wait 3 usecs before polling */

 Turn on the SP domain */

 A508, A510 have 3 XIN ports in VBIF */

 Clear the VBIF pipe before shutting down */

	/*

	 * Reset the VBIF before power collapse to avoid issue with FIFO

	 * entries on Adreno A510 and A530 (the others will tend to lock up)

/*

 * These are a list of the registers that need to be read through the HLSQ

 * aperture through the crashdumper.  These are not nominally accessible from

 * the CPU on a secure platform.

 HSLQ non-context */

 HLSQ 2D context 0 */

 HLSQ 2D context 1 */

 HLSQ 3D context 0 */

 HLSQ 3D context 1 */

 SP non-context */

 SP 2D context 0 */

 SP 2D context 1 */

 SP 3D context 0 */

 SP 3D context 1 */

 TP non-context */

 TP 2D context 0 */

 TP 2D context 1 */

 TP 3D context 0 */

 TP 3D context 1 */

 The script will be written at offset 0 */

 Start writing the data at offset 256k */

 Count how many additional registers to get from the HLSQ aperture */

 Build the crashdump script */

 Write the register to select the desired bank */

 Write two zeros to close off the script */

 Copy the data from the crashdumper to the state */

 Temporarily disable hardware clock gating before reading the hw */

 First get the generic state from the adreno core */

	/*

	 * Get the HLSQ regs with the help of the crashdumper, but only if

	 * we are not stalled in an iommu fault (in which case the crashdumper

	 * would not have access to memory)

 Dump the additional a5xx HLSQ registers */

			/*

			 * To keep the crashdump simple we pull the entire range

			 * for each register type but not all of the registers

			 * in the range are valid. Fortunately invalid registers

			 * stick out like a sore thumb with a value of

			 * 0xdeadbeef

 Only read the gpu busy if the hardware is already active */

	/*

	 * If the OPP table specifies a opp-supported-hw property then we have

	 * to set something with dev_pm_opp_set_supported_hw() or the table

	 * doesn't get populated so pick an arbitrary value that should

	 * ensure the default frequencies are selected but not conflict with any

	 * actual bins

 Set up the preemption specific bits and pieces for each ringbuffer */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.

 To prevent the message transaction routine from reentry. */

	/*

	 * cmd fifo only has depth of 144 bytes

 Pack cmd and write to HW */

 addr[19:16] */

 R/W */

 addr[15:8] */

 addr[7:0] */

 len[7:0] */

 index = 0, write */

 Transaction number is always 1 */

 i2c */

 index = 0 */

 discard first byte */

/*

 * This function does the real job to process an AUX transaction.

 * It will call msm_edp_aux_ctrl() function to reset the AUX channel,

 * if the waiting is timeout.

 * The caller who triggers the transaction should avoid the

 * msm_edp_aux_ctrl() running concurrently in other threads, i.e.

 * start transaction only when AUX channel is fully enabled.

 Ignore address only message */

 msg sanity check */

		/*

		 * Clear GO and reset AUX channel

		 * to cancel the current transaction.

 Reply defer to retry */

		/*

		 * The sleep time in caller is not long enough to make sure

		 * our H/W completes transactions. Add more defer time here.

 Return requested size for success or retry */

 Make sure full reset */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.

 initialize bridge */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.

 Invalidate all modes if color format is not supported */

 initialize connector */

 We don't support HPD, so only poll status until connected. */

 Display driver doesn't support interlace now. */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.

 Process eDP irq */

 construct eDP at bind/probe time, grab all the resources. */

 Second part of initialization, the drm/kms level modeset_init */

 bridge/connector are normally destroyed by drm */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.

 Reset */

 Make sure fully reset */

 voltage mode and pre emphasis cfg */

 power up */

 power down */

 power down unused lane */

 power down */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014-2015, The Linux Foundation. All rights reserved.

 uA units */

 uA units */

 Link training return value */

 regulators */

 1.8 V */

 clocks */

 gpios */

 completion and mutex */

 To protect device power status */

 work queue */

 Interrupt register lock */

 edid raw data */

 dpcd raw data */

 Link status */

 Timing status */

 in kHz */

 in kHz */

 Link clock = 162MHz, source clock = 810MHz */

 WSXGA+ 1680x1050@60Hz CVT */

 UXGA 1600x1200@60Hz CVT */

 FHD 1920x1080@60Hz */

 WUXGA 1920x1200@60Hz CVT */

 QXGA 2048x1536@60Hz CVT */

 WQXGA 2560x1600@60Hz CVT */

 AUO B116HAN03.0 Panel */

 AUO B133HTN01.2 Panel */

 Link clock = 270MHz, source clock = 675MHz */

 WSXGA+ 1680x1050@60Hz CVT */

 UXGA 1600x1200@60Hz CVT */

 FHD 1920x1080@60Hz */

 WUXGA 1920x1200@60Hz CVT */

 QXGA 2048x1536@60Hz CVT */

 WQXGA 2560x1600@60Hz CVT */

 AUO B116HAN03.0 Panel */

 AUO B133HTN01.2 Panel */

 need mdp core clock to receive irq */

 ahb_clk should be enabled first */

 Need to set rate and enable link_clk prior to pixel_clk */

	/*

	 * By default, use the maximum link rate and minimum lane count,

	 * so that we can do rate down shift during link training.

 in kByte */

 in kHz */

 in kByte, 10 bits --> 8 bits */

 progressive */

 Make sure H/W status is set */

 use the max level across lanes */

 use the max level across lanes */

 pe0, 0 db */

 pe1, 3.5 db */

 pe2, 6.0 db */

 pe3, 9.5 db */

 voltage swing, 0.2v and 1.0v are not support */

 sw0, 0.4v  */

 sw1, 0.6 v */

 sw1, 0.8 v */

 sw1, 1.2 v, optional */

 Configure host and panel only if both values are allowed */

 in kByte */

 reduce rate */

 increase lane */

 in kHz */

 kByte, 10 bits --> 8 bits */

	/*

	 * Set the current link rate and lane cnt to panel. They may have been

	 * adjusted and the values are different from them in DPCD CAP

 start from default level */

 only legacy rgb mode supported */

 Default */

 Make sure fully reset */

 Enable link channel clocks */

 Make sure phy is programed */

 Do link training only when power is on */

 Re-configure main link */

 Make sure link is fully disabled */

 DP_SET_POWER register is only available on DPCD v1.1 and later */

		/*

		 * According to the DP 1.1 specification, a "Sink Device must

		 * exit the power saving state within 1 ms" (Section 2.5.3.1,

		 * Table 5-52, "Sink Control Field" (register 0x600).

 Start link training */

 DP_SET_POWER register is only available on DPCD v1.1 and later */

 remove masks bit */

 ack bits */

 ack bits */

 Get regulator, clock, gpio, pwm */

 Init aux and phy */

 setup workqueue */

 Initialize link rate as panel max link rate */

	/*

	 * Need to keep color depth, pixel rate and

	 * interlaced information in ctrl context

 Fill initial link config based on passed in timing */

 Configure eDP timing to HW */

 1% error tolerance */

/* tdfx_drv.c -- tdfx driver -*- linux-c -*-

 * Created: Thu Oct  7 10:38:32 1999 by faith@precisioninsight.com

 *

 * Copyright 1999 Precision Insight, Inc., Cedar Park, Texas.

 * Copyright 2000 VA Linux Systems, Inc., Sunnyvale, California.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER

 * DEALINGS IN THE SOFTWARE.

 *

 * Authors:

 *    Rickard E. (Rik) Faith <faith@valinux.com>

 *    Daryll Strauss <daryll@valinux.com>

 *    Gareth Hughes <gareth@valinux.com>

/* savage_bci.c -- BCI support for Savage

 *

 * Copyright 2004  Felix Kuehling

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sub license,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND

 * NON-INFRINGEMENT. IN NO EVENT SHALL FELIX KUEHLING BE LIABLE FOR

 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF

 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/* Need a long timeout for shadow status updates can take a while

 1s */

 5s */

/*

 * Waiting for events.

 *

 * The BIOSresets the event tag to 0 on mode changes. Therefore we

 * never emit 0 to the event tag. If we find a 0 event tag we know the

 * BIOS stomped on it and return success assuming that the BIOS waited

 * for engine idle.

 *

 * Note: if the Xserver uses the event tag it has to follow the same

 * rule. Otherwise there may be glitches every 2^16 events.

 coordinate with Xserver */

 See the comment above savage_wait_event_*. */

/*

 * Freelist management

 hardware hasn't passed the last wrap yet */

/*

 * Command DMA

 Faked DMA buffer pages don't age. */

 hardware hasn't passed the last wrap yet */

	/* pad length to multiples of 2 entries

 pad with noops */

 do flush ... */

 fix alignment of the start of the next block */

 age DMA pages */

 age the current page only when it's full */

 advance to next page */

 Sanity check: all pages except the last one must be full. */

 reset to first page */

/*

 * Initialize mappings. On Savage4 and SavageIX the alignment

 * and size of the aperture is not suitable for automatic MTRR setup

 * in drm_legacy_addmap. Therefore we add them manually before the maps are

 * initialized, and tear them down on last close.

 this should always be true */

			/* Don't make MMIO write-cobining! We need 3

 this should always be true */

			/* Can use one MTRR to cover both fb and

 Automatic MTRR setup will do the right thing. */

/*

 * Delete MTRRs and free device-private data.

 setup bitmap descriptors */

 setup status and bci ptr */

 cliprect functions */

		/* make sure the next instance (which may be running

		 * in PCI mode) doesn't try to use an old

 hardware hasn't passed the last wrap yet */

	/* Don't need to wait if

	 * - event counter wrapped since the event was emitted or

	 * - the hardware has advanced up to or over the event to wait for.

/*

 * DMA buffer management

	/* Please don't send us buffers.

	/* We'll send you buffers.

/* savage_state.c -- State and drawing support for Savage

 *

 * Copyright 2004  Felix Kuehling

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sub license,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND

 * NON-INFRINGEMENT. IN NO EVENT SHALL FELIX KUEHLING BE LIABLE FOR

 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF

 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 reserved bits */

 local */

 AGP */

 if any texture regs were changed ... */

 ... check texture state */

 if any texture regs were changed ... */

 ... check texture state */

 scissor regs are emitted in savage_dispatch_draw */

 scissor regs are emitted in savage_dispatch_draw */

	/* Vertex DMA doesn't work with command DMA at the same time,

	 * so we use BCI_... to submit commands here. Flush buffered

		/* Workaround for what looks like a hardware bug. If a

		 * WAIT_3D_IDLE was emitted some time before the

		 * indexed drawing command then the engine will lock

		 * up. There are two known workarounds:

 Can emit up to 255 indices (85 triangles) at once. */

			/* Need to reorder indices for correct flat

			 * shading while preserving the clock sense

 full vertex */

 full vertex */

 Can emit up to 255 vertices (85 triangles) at once. */

			/* Need to reorder vertices for correct flat

			 * shading while preserving the clock sense

	/* Vertex DMA doesn't work with command DMA at the same time,

	 * so we use BCI_... to submit commands here. Flush buffered

		/* Workaround for what looks like a hardware bug. If a

		 * WAIT_3D_IDLE was emitted some time before the

		 * indexed drawing command then the engine will lock

		 * up. There are two known workarounds:

 Can emit up to 255 indices (85 triangles) at once. */

 check indices */

			/* Need to reorder indices for correct flat

			 * shading while preserving the clock sense

 full vertex */

 full vertex */

 Can emit up to 255 vertices (85 triangles) at once. */

 Check indices */

			/* Need to reorder vertices for correct flat

			 * shading while preserving the clock sense

 set mask */

 reset mask */

 j was check in savage_bci_cmdbuf */

 j was check in savage_bci_cmdbuf */

 What's the best return code? EFAULT? */

	/* Copy the user buffers into kernel temporary areas.  This hasn't been

	 * a performance loss compared to VERIFYAREA_READ/

	 * COPY_FROM_USER_UNCHECKED when done in other drivers, and is correct

	 * for locking on FreeBSD.

	/* Make sure writes to DMA buffers are finished before sending

	/* Coming from user space. Don't know if the Xserver has

		/* Group drawing commands with same state to minimize

 If we didn't need to allocate them, these'll be NULL */

/* savage_drv.c -- Savage driver for Linux

 *

 * Copyright 2004  Felix Kuehling

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sub license,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND

 * NON-INFRINGEMENT. IN NO EVENT SHALL FELIX KUEHLING BE LIABLE FOR

 * ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF

 * CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining

 * a copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sublicense, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial

 * portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.

 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE

 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION

 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 drop reference from allocate - handle holds it now */

	/* the context might still be missing when the first ioctl is

	 * DRM_IOCTL_MODE_CREATE_DUMB or DRM_IOCTL_PRIME_FD_TO_HANDLE

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining

 * a copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sublicense, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial

 * portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.

 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE

 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION

 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

		/*

		 * Hack to avoid re-using resource IDs.

		 *

		 * virglrenderer versions up to (and including) 0.7.0

		 * can't deal with that.  virglrenderer commit

		 * "f91a9dd35715 Fix unlinking resources from hash

		 * table." (Feb 2019) fixes the bug.

 completion handler calls virtio_gpu_cleanup_object() */

	/*

	 * virtio_gpu uses drm_gem_shmem_get_sg_table instead of

	 * drm_gem_shmem_get_pages_sgt because virtio has it's own set of

	 * dma-ops. This is discouraged for other drivers, but should be fine

	 * since virtio_gpu doesn't support dma-buf import from other devices.

 SPDX-License-Identifier: GPL-2.0

 Partial mappings of GEM buffers don't happen much in practice. */

 Virtio devices can access the dma-buf via its UUID. Return a stub

 sg_table so the dma-buf API still works.

TODO: Add an error checking helper function in drm_mm.h */

 Create fake offset */

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining

 * a copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sublicense, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial

 * portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.

 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE

 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION

 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 read the config space */

		/*

		 * Capability ids are defined in the virtio-gpu spec and are

		 * between 1 to 63, inclusive.

 this will expand later */

 get display info */

 can't create contexts without 3d renderer */

 allocate a virt GPU context for this opener */

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Authors:

 *    Dave Airlie

 *    Alon Levy

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

	/*

	 * virtio-gpu can't do modeset and plane update operations

	 * independent from each other.  So the actual modeset happens

	 * in the plane update callback, and here we just check

	 * whenever we must force the modeset.

 lookup object associated with res handle */

 modes will be validated against the framebuffer size */

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Authors:

 *    Dave Airlie <airlied@redhat.com>

 *    Gerd Hoffmann <kraxel@redhat.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * VA LINUX SYSTEMS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

	/* this assumes a vbuf contains a command that starts with a

	 * virtio_gpu_ctrl_hdr, which is true for both ctrl and cursor

	 * virtqueues.

 Create sg_table from a vmalloc'd buffer. */

	/* now that the position of the vbuf in the virtqueue is known, we can

	 * finally set the fence id

 set up vcmd */

 set up vout */

 set up vresp */

/* just create gem objects for userspace and long lived objects,

 * just use dma_alloced pages for the queue objects?

 create a basic resource */

 Copy must occur before is_valid is signalled. */

 Search while under lock in case it was added by another task. */

 Entry was found, so free everything that was just created. */

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining

 * a copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sublicense, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial

 * portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.

 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE

 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION

 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

	/* leaked fence outside driver before completing

	 * initialization with virtio_gpu_fence_emit.

	/* This only partially initializes the fence because the seqno is

	 * unknown yet.  The fence must not be used outside of the driver

	 * until virtio_gpu_fence_emit is called.

 Only currently defined fence param. */

		/*

		 * Signal any fences with a strictly smaller sequence number

		 * than the current signaled fence.

 dma-fence contexts must match */

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining

 * a copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sublicense, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial

 * portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.

 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE

 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION

 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Authors:

 *    Dave Airlie <airlied@redhat.com>

 *    Gerd Hoffmann <kraxel@redhat.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * VA LINUX SYSTEMS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

	/*

	 * Normally the drm_dev_set_unique() call is done by core DRM.

	 * The following comment covers, why virtio cannot rely on it.

	 *

	 * Unlike the other virtual GPU drivers, virtio abstracts the

	 * underlying bus type by using struct virtio_device.

	 *

	 * Hence the dev_is_pci() check, used in core DRM, will fail

	 * and the unique returned will be the virtio_device "virtio0",

	 * while a "pci:..." one is required.

	 *

	 * A few other ideas were considered:

	 * - Extend the dev_is_pci() check [in drm_set_busid] to

	 *   consider virtio.

	 *   Seems like a bigger hack than what we have already.

	 *

	 * - Point drm_device::dev to the parent of the virtio_device

	 *   Semantic changes:

	 *   * Using the wrong device for i2c, framebuffer_alloc and

	 *     prime import.

	 *   Visual changes:

	 *   * Helpers such as DRM_DEV_ERROR, dev_info, drm_printer,

	 *     will print the wrong information.

	 *

	 * We could address the latter issues, by introducing

	 * drm_device::bus_dev, ... which would be used solely for this.

	 *

	 * So for the moment keep things as-is, with a bulky comment

	 * for the next person who feels like removing this

	 * drm_dev_set_unique() quirk.

	/*

	 * Gallium command stream send by virgl is native endian.

	 * Because of that we only support little endian guests on

	 * little endian hosts.

/*

 * Copyright 2014 Canonical

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Andreas Pokorny

			/*

			 * Importing dmabuf exported from our own gem increases

			 * refcount on gem itself instead of f_count of dmabuf.

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Authors:

 *    Dave Airlie

 *    Alon Levy

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 Must be called with &virtio_gpu_fpriv.struct_mutex held. */

/*

 * Usage of execbuffer:

 * Relocations need to take into account the full VIRTIO_GPUDrawable size.

 * However, the command as passed from user space must *not* contain the initial

 * VIRTIO_GPUReleaseInfo struct (first XXX bytes)

		/*

		 * Wait if the fence is from a foreign context, or if the fence

		 * array contains any fence from a foreign context.

 allocate a single page size object */

 similiar to a VM address */

 don't allow userspace to pass 0 */

 only copy to user the minimum of the host caps size or the guest caps size */

 not in cache - need to talk to hw */

 is_valid check must proceed before copy of the cache entry. */

 Must be dword aligned. */

 Number of unique parameters supported at this time. */

 Context capset ID already set */

	/* make transfer async to the main ring? - no sure, can we

	 * thread these in the underlying GL

/*

 * Copyright (C) 2015 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining

 * a copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sublicense, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial

 * portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.

 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE

 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION

 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

		/*

		 * This should not happen, we handle everything listed

		 * in virtio_gpu_formats[].

 new cursor -- update & wait */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (C) 2015 Texas Instruments

 * Author: Jyri Sarha <jsarha@ti.com>

 Only tda998x is supported at the moment. */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (C) 2012 Texas Instruments

 * Author: Rob Clark <robdclark@gmail.com>

/*

 * Encoder:

 nothing needed */

/*

 * Connector:

 our connected encoder */

/*

 * Module:

/*

 * Device:

 maybe move this somewhere common if it is needed by other outputs? */

 optional: */

 bail out early if no DT data: */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (C) 2012 Texas Instruments

 * Author: Rob Clark <robdclark@gmail.com>

 LCDC DRM driver, based on da8xx-fb */

	/*

	 * tilcdc ->atomic_check can update ->mode_changed if pixel format

	 * changes, hence will we check modeset changes again.

/*

 * DRM operations:

 Determine LCD IP Version */

 Choose bpp with RGB support for fbdef */

 Choose bpp with RGB support for fbdef */

 This is just a guess */

 exists in revision 1: */

 new in revision 2: */

/*

 * Power management:

 Select sleep pin state */

 Select default pin state */

/*

 * Platform driver:

 Check if a subcomponent has already triggered the unloading. */

 bail out early if no DT data: */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (C) 2015 Texas Instruments

 * Author: Jyri Sarha <jsarha@ti.com>

 we should have a crtc state if the plane is attached to a crtc */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (C) 2012 Texas Instruments

 * Author: Rob Clark <robdclark@gmail.com>

 Only set if an external encoder is connected */

	/* Write LCDC_DMA_FB_BASE_ADDR_0_REG and LCDC_DMA_FB_CEILING_ADDR_0_REG

	 * with a single insruction, if available. This should make it more

	 * unlikely that LCDC would fetch the DMA addresses in the middle of

	 * an update.

/*

 * The driver currently only supports only true color formats. For

 * true color the palette block is bypassed, but a 32 byte palette

 * should still be loaded. The first 16-bit entry must be 0x4000 while

 * all other entries must be zeroed.

 Tell the LCDC where the palette is located. */

 Set dma load mode for palette loading only. */

 Enable DMA Palette Loaded Interrupt */

 Enable LCDC DMA and wait for palette to be loaded. */

 Disable LCDC DMA and DMA Palette Loaded Interrupt. */

 disable irqs that we might have enabled: */

/*

 * Calculate the percentage difference between the requested pixel clock rate

 * and the effective rate resulting from calculating the clock divider value.

 first try using a standard divider of 2 */

 mode.clock is in KHz, set_rate wants parameter in Hz */

		/*

		 * If we fail to set the clock rate (some architectures don't

		 * use the common clock framework yet and may not implement

		 * all the clk API calls for every clock), try the next best

		 * thing: adjusting the clock divider, unless clk_get_rate()

		 * failed as well.

 Nothing more we can do. Just bail out. */

		/*

		 * Emit a warning if the real clock rate resulting from the

		 * calculated divider differs much from the requested rate.

		 *

		 * 5% is an arbitrary value - LCDs are usually quite tolerant

		 * about pixel clock rates.

 Configure the LCD clock divisor. */

 Configure the Burst Size and fifo threshold of DMA: */

 Configure timings: */

 Set AC Bias Period and Number of Transitions per Interrupt: */

	/*

	 * subtract one from hfp, hbp, hsw because the hardware uses

	 * a value of 0 as 1

 clear bits we're going to set */

	/*

	 * be sure to set Bit 10 for the V2 LCDC controller,

	 * otherwise limited to 1024 pixels width, stopping

	 * 1920x1080 being supported.

 Configure display type: */

 Palette Loading Delay bits */);

 no monochrome/passive support */

	/* There is no real chance for a race here as the time stamp

	 * is taken before the raster DMA is started. The spin-lock is

	 * taken to have a memory barrier after taking the time-stamp

	 * and to avoid a context switch between taking the stamp and

	 * enabling the raster.

	/*

	 * Wait for framedone irq which will still come before putting

	 * things to sleep..

	/*

	 * tilcdc does not generate VESA-compliant sync but aligns

	 * VS on the second edge of HS instead of first edge.

	 * We use adjusted_mode, to fixup sync by aligning both rising

	 * edges and add HSKEW offset to fix the sync.

 If we are not active we don't care */

 Turn the raster off if it for some reason is on. */

 Enable DMA Frame Done Interrupt */

	/*

	 * check to see if the width is within the range that

	 * the LCD Controller physically supports

 width must be multiple of 16 */

	/*

	 * some devices have a maximum allowed pixel clock

	 * configured from the DT

	/*

	 * some devices further limit the max horizontal resolution

	 * configured from the DT

 filter out modes that would require too much memory bandwidth: */

 rev 1 lcdc appears to hang if irq is not disbaled here */

 For revision 2 only */

		/* Indicate to LCDC that the interrupt service routine has

		 * completed, see 13.3.6.1.6 in AM335x TRM.

 This should never happen */

/*

 * Copyright (C) 2009 Red Hat <bskeggs@redhat.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining

 * a copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sublicense, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial

 * portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,

 * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF

 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.

 * IN NO EVENT SHALL THE COPYRIGHT OWNER(S) AND/OR ITS SUPPLIERS BE

 * LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION

 * OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION

 * WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Authors:

 *  Alon Levy <alevy@redhat.com>

 Already registered */

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

 64bit surface bar present */

 64bit surface bar not present (or mapping failed) */

	/* reset the device into a known state - no memslots, no primary

 must initialize irq before first async io - slot creation */

	/*

	 * Note that virtual is surface0. We rely on the single ioremap done

	 * before.

 check if qxl_device_init() was successful (gc_work is initialized last) */

	/*

	 * Ask host to release resources (+fill release ring),

	 * then wait for the release actually happening.

/* qxl_drv.c -- QXL driver -*- linux-c -*-

 *

 * Copyright 2011 Red Hat, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * VA LINUX SYSTEMS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors:

 *    Dave Airlie <airlie@redhat.com>

 *    Alon Levy <alevy@redhat.com>

 TODO: ENODEV ? */

 Complete initialization. */

	/*

	 * TODO: qxl_device_fini() call should be in qxl_pci_remove(),

	 * reordering qxl_modeset_fini() + qxl_device_fini() calls is

	 * non-trivial though.

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

 Chunk */

 FIXME: Check integer overflow */

 TODO: variable number of chunks */

	chunk_stride = stride; /* TODO: should use linesize, but it renders

				  wrong (check the bitmaps are sent correctly

 TODO: BE? check by arch? */

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

 dumb ioctls implementation */

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

 we copy max from the client but it isn't used */

		/* notify that the monitor configuration changed, to

 TODO: vmwgfx where this was cribbed from had locking. Why? */

 if we aren't primary surface ignore this */

 skip source rects */

		/*

		 * we never executed prepare_fb, so there's nothing to

		 * unpin.

 The first monitor is always connected */

 we get HPD via client monitors config */

 modes will be validated against the framebuffer size */

/*

 * Copyright 2011 Red Hat, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * on the rights to use, copy, modify, merge, publish, distribute, sub

 * license, and/or sell copies of the Software, and to permit persons to whom

 * the Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL

 * THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER

 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN

 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/* returns a pointer to the already allocated qxl_rect array inside

 * the qxl_clip_rects. This is *not* the same as the memory allocated

 TODO: Use mapping abstraction properly */

 release needs to be reserved at this point */

 Only primary for now */

 FIXME: add clipping */

	/*

	 * surfaces_dest[i] should apparently be filled out with the

	 * surfaces that we depend on, and surface_rects should be

	 * filled with the rectangles of those surfaces that we

	 * are going to use.

/* push a draw command using the given clipping rectangles as

 * the sources from the shadow framebuffer.

 *

 * Right now implementing with a single draw and a clip list. Clip

 * lists are known to be a problem performance wise, this can be solved

 * by treating them differently in the server.

	/*

	 * TODO: if flags & DRM_MODE_FB_DIRTY_ANNOTATE_FILL then we should

	 * send a fill command instead, much cheaper.

	 *

	 * See include/drm/drm_mode.h

 depth is not actually interesting, we don't mask with it */

 skip the first clip rect */

 do a reservation run over all the objects we just allocated */

 TODO: Use mapping abstraction properly */

 only free drawable on error */

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

		/* TODO: log it, reset device (only way to exit this condition)

		 * (do it a certain number of times, afterwards admit defeat,

		 * to avoid endless loops).

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

 TODO: Remove kptr in favor of map everywhere. */

 TODO: Use mapping abstraction properly */

/*

 * Reserve the BO before pinning the object.  If the BO was reserved

 * beforehand, use the internal version directly __qxl_bo_pin.

 *

/*

 * Reserve the BO before pinning the object.  If the BO was reserved

 * beforehand, use the internal version directly __qxl_bo_unpin.

 *

 this should unref the ttm bo */

 allocate a surface id for this surface now */

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

/*

 * TODO: allocating a new gem(in qxl_bo) for each request.

 * This is wasteful since bo's are page aligned.

/*

 * dst must be validated, i.e. whole bo on vram/surfacesram (right now all bo's

 * are on vram).

 * *(dst + dst_off) = qxl_bo_physical_address(src, src_off)

 return holding the reference to this object */

/*

 * Usage of execbuffer:

 * Relocations need to take into account the full QXLDrawable size.

 * However, the command as passed from user space must *not* contain the initial

 * QXLReleaseInfo struct (first XXX bytes)

 TODO copy slow path code from i915 */

 fill out reloc info structs */

		/* add the bos to the list of bos to validate -

 reserve and validate the reloc dst bo */

 validate all buffers */

 work out size allocate bo with handle */

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

 system memory */

/*

 * TTM backend functions.

 != rom->num_io_pages, we include surface0 */

 No others user of address space so set it to 0 */

 NOTE: this includes the framebuffer (aka surface 0) */

/*

 * Copyright 2014 Canonical

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Andreas Pokorny

/* Empty Implementations as there should not be any other driver for a virtual

/*

 * Copyright 2011 Red Hat, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * on the rights to use, copy, modify, merge, publish, distribute, sub

 * license, and/or sell copies of the Software, and to permit persons to whom

 * the Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT.  IN NO EVENT SHALL

 * THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER

 * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN

 * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

/*

 * drawable cmd cache - allocate a bunch of VRAM pages, suballocate

 * into 256 byte chunks for now - gives 16 cmds per page.

 *

 * use an ida to index into the chunks?

 manage releaseables */

 stack them 16 high for now -drawable object is 191 */

 put an alloc/dealloc surface cmd into one bo and round up to 128 */

 pin releases bo's they are too messy to evict */

 allocate a surface for reserved + validated buffers */

	/* if only one object on the release its the release itself

	/* if only one object on the release its the release itself

 stash the release after the create command */

	/* if only one object on the release its the release itself

	/*

	 * Since we never really allocated a context and we don't want to conflict,

	 * set the highest bits. This will break if we really allow exporting of dma-bufs.

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

 QXL cmd/ring handling */

 not kernel - device */,

 0 is timeout, just bail the "hw" has gone away */

	/* no need to add a release to the fence for this surface bo,

	   since it is only released when we ask to destroy the surface

 remove the surface from the idr, but not the surface id yet */

	/* if we are evicting, we need to make sure the surface is up

 no need to update area if we are just freeing the surface normally */

 nuke the surface id at the hw */

		/* this avoids the case where the objects is in the

		   idr but has been evicted half way - its makes

/*

 * Copyright 2013 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alon Levy

 At least align on page size */

 drop reference from allocate - handle holds it now */

/* r128_drv.c -- ATI Rage 128 driver -*- linux-c -*-

 * Created: Mon Dec 13 09:47:27 1999 by faith@precisioninsight.com

 *

 * Copyright 1999 Precision Insight, Inc., Cedar Park, Texas.

 * Copyright 2000 VA Linux Systems, Inc., Sunnyvale, California.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * VA LINUX SYSTEMS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors:

 *    Rickard E. (Rik) Faith <faith@valinux.com>

 *    Gareth Hughes <gareth@valinux.com>

/*

 * \file ati_pcigart.c

 * ATI PCI GART support

 *

 * \author Gareth Hughes <gareth@valinux.com>

/*

 * Created: Wed Dec 13 21:52:19 2000 by gareth@valinux.com

 *

 * Copyright 2000 VA Linux Systems, Inc., Sunnyvale, California.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER

 * DEALINGS IN THE SOFTWARE.

*< PCI GART page size */

 we need to support large memory configurations */

 we need to support large memory configurations */

/*

 * \file r128_ioc32.c

 *

 * 32-bit ioctl compatibility routines for the R128 DRM.

 *

 * \author Dave Airlie <airlied@linux.ie> with code from patches by Egbert Eich

 *

 * Copyright (C) Paul Mackerras 2005

 * Copyright (C) Egbert Eich 2003,2004

 * Copyright (C) Dave Airlie 2005

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,

 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,

 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS

 * IN THE SOFTWARE.

/**

 * r128_compat_ioctl - Called whenever a 32-bit process running under

 *                     a 64-bit kernel performs an ioctl on /dev/dri/card<n>.

 *

 * @filp: file pointer.

 * @cmd: command.

 * @arg: user argument.

 * return: zero on success or negative number on failure.

/* r128_cce.c -- ATI Rage 128 driver -*- linux-c -*-

 * Created: Wed Apr  5 19:24:19 2000 by kevin@precisioninsight.com

/*

 * Copyright 2000 Precision Insight, Inc., Cedar Park, Texas.

 * Copyright 2000 VA Linux Systems, Inc., Sunnyvale, California.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER

 * DEALINGS IN THE SOFTWARE.

 *

 * Authors:

 *    Gareth Hughes <gareth@valinux.com>

/* ================================================================

 * Engine, FIFO control

/* ================================================================

 * CCE control, initialization

 Load the microcode for the CCE */

/* Flush any pending commands to the CCE.  This should only be used just

 * prior to a wait for idle, as it informs the engine that the command

 * stream is ending.

/* Wait for the CCE to go idle.

/* Start the Concurrent Command Engine.

 as per the sample code */

/* Reset the Concurrent Command Engine.  This will not flush any pending

 * commands, so you must wait for the CCE command stream to complete

 * before calling this routine.

/* Stop the Concurrent Command Engine.  This will not flush any pending

 * commands, so you must flush the command stream and wait for the CCE

 * to go idle before calling this routine.

/* Reset the engine.  This will stop the CCE if it is running.

 Taken from the sample code - do not change */

 Reset the CCE ring */

 The CCE is no longer running after an engine reset */

 Reset any pending vertex, indirect buffers */

	/* The manual (p. 2) says this address is in "VM space".  This

	 * means it's an offset from the start of AGP space.

 Set watermark control */

 Force read.  Why?  Because it's in the examples... */

 Turn on bus mastering */

	/* GH: Simple idle check.

	/* We don't support anything other than bus-mastering ring mode,

	 * but the ring can be in either AGP or PCI space for the ring

	 * read pointer.

	/* Make sure interrupts are disabled here because the uninstall ioctl

	 * may not have been called from userspace and after dev_private

	 * is freed, it's too late.

/* Stop the CCE.  The engine must have been idled before calling this

 * routine.

	/* Flush any pending CCE commands.  This ensures any outstanding

	 * commands are exectuted by the engine before we turn it off.

	/* If we fail to make the engine go idle, we return an error

	 * code so that the DRM ioctl wrapper can try again.

	/* Finally, we can turn off the CCE.  If the engine isn't idle,

	 * we will get some dropped triangles as they won't be fully

	 * rendered before the CCE is shut down.

 Reset the engine */

/* Just reset the CCE ring.  Called as part of an X Server engine reset.

 The CCE is no longer running after an engine reset */

/* ================================================================

 * Freelist management

 FIXME: Optimize -- use freelist code */

				/* The buffer has been processed, so it

				 * can now be used.

/* ================================================================

 * CCE command submission

 FIXME: This is being ignored... */

	/* Please don't send us buffers.

	/* We'll send you buffers.

/* r128_state.c -- State support for r128 -*- linux-c -*-

 * Created: Thu Jan 27 02:53:43 2000 by gareth@valinux.com

/*

 * Copyright 2000 VA Linux Systems, Inc., Sunnyvale, California.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER

 * DEALINGS IN THE SOFTWARE.

 *

 * Authors:

 *    Gareth Hughes <gareth@valinux.com>

/* ================================================================

 * CCE hardware state programming functions

 Turn off the texture cache flushing */

/* ================================================================

 * Performance monitoring functions

/* ================================================================

 * CCE command dispatch functions

	/* Do some trivial performance monitoring...

		/* Make this work even if front & back are flipped:

	/* Increment the frame counter.  The client-side 3D driver must

	 * throttle the framerate by waiting for this value before

	 * performing the swapbuffer ioctl.

	/* Do some trivial performance monitoring...

	/* Increment the frame counter.  The client-side 3D driver must

	 * throttle the framerate by waiting for this value before

	 * performing the swapbuffer ioctl.

 Emit the next set of up to three cliprects */

 Emit the vertex buffer rendering commands */

 Emit the vertex buffer age */

 FIXME: Check dispatched field */

		/* Indirect buffer data must be an even number of

		 * dwords, so if we've been given an odd number we must

		 * pad the data with a Type-2 CCE packet.

 Fire off the indirect buffer */

 Emit the indirect buffer age */

 FIXME: Check dispatched field */

 Emit the next set of up to three cliprects */

 Emit the vertex buffer age */

 FIXME: Check dispatched field */

	/* The compiler won't optimize away a division by a variable,

	 * even if the only legal values are powers of two.  Thus, we'll

	 * use a shift instead.

	/* Flush the pixel cache, and mark the contents as Read Invalid.

	 * This ensures no pixel data gets mixed up with the texture

	 * data from the host data blit, otherwise part of the texture

	 * image may be corrupted.

	/* Dispatch the indirect buffer.

	/* Flush the pixel cache after the blit completes.  This ensures

	 * the texture data is written out to memory before rendering

	 * continues.

/* ================================================================

 * Tiled depth buffer management

 *

 * FIXME: These should all set the destination write mask for when we

 * have hardware stencil support.

/* ================================================================

 * Polygon stipple

/* ================================================================

 * IOCTL functions

	/* Make sure we restore the 3D state next time.

/* Swapping and flipping are different operations, need different ioctls.

 * They can & should be intermixed to support multiple 3d windows.

	/* Wait for the 3D stream to idle before the indirect buffer

	 * containing 2D acceleration commands is processed.

	/* Dispatch the indirect buffer full of commands from the

	 * X server.  This is insecure and is thus only available to

	 * privileged clients.

 r128_irq.c -- IRQ handling for radeon -*- linux-c -*- */

/*

 * Copyright (C) The Weather Channel, Inc.  2002.  All Rights Reserved.

 *

 * The Weather Channel (TM) funded Tungsten Graphics to develop the

 * initial release of the Radeon 8500 driver under the XFree86 license.

 * This notice must be preserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER

 * DEALINGS IN THE SOFTWARE.

 *

 * Authors:

 *    Keith Whitwell <keith@tungstengraphics.com>

 *    Eric Anholt <anholt@FreeBSD.org>

 VBLANK interrupt */

	/*

	 * FIXME: implement proper interrupt disable by using the vblank

	 * counter register (if available)

	 *

	 * R128_WRITE(R128_GEN_INT_CNTL,

	 *            R128_READ(R128_GEN_INT_CNTL) & ~R128_CRTC_VBLANK_INT_EN);

 Disable *all* interrupts */

 Clear vblank bit if it's already high */

 Disable *all* interrupts */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2015 MediaTek Inc.

 * Author: YT SHEN <yt.shen@mediatek.com>

	/*

	 * set max width and height as default value(4096x4096).

	 * this value would be used to check framebuffer size limitation

	 * at drm_mode_addfb().

	/*

	 * We currently support two fixed data streams, each optional,

	 * and each statically assigned to a crtc:

	 * OVL0 -> COLOR0 -> AAL -> OD -> RDMA0 -> UFOE -> DSI0 ...

 ... and OVL1 -> COLOR1 -> GAMMA -> RDMA1 -> DPI0. */

 Use OVL device for all DMA memory allocations */

	/*

	 * Configure the DMA segment size to make sure we get contiguous IOVA

	 * when importing PRIME buffers.

/*

 * We need to override this because the device used to import the memory is

 * not dev->dev, as drm_gem_prime_import() expects.

 Iterate over sibling DISP function blocks */

		/*

		 * Currently only the AAL, CCORR, COLOR, GAMMA, OVL, RDMA, DSI, and DPI

		 * blocks have separate component platform drivers and initialize their own

		 * DDP component structure. The others are initialized here.

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2021 MediaTek Inc.

/*

 * struct mtk_disp_gamma - DISP_GAMMA driver structure

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2015 MediaTek Inc.

 release file pointer to gem object. */

	/*

	 * allocate a id of idr table where the obj is registered

	 * and handle has the id what user can see.

 drop reference from allocate - handle holds it now. */

	/*

	 * Set vm_pgoff (used as a fake buffer offset by DRM) to 0 and map the

	 * whole buffer from the start.

	/*

	 * dma_alloc_attrs() allocated a struct page table for mtk_gem, so clear

	 * VM_PFNMAP flag that was set by drm_gem_mmap_obj()/drm_gem_mmap().

/*

 * Allocate a sg_table for this GEM object.

 * Note: Both the table's contents, and the sg_table itself must be freed by

 *       the caller.

 * Returns a pointer to the newly allocated sg_table, or an ERR_PTR() error.

 check if the entries in the sg_table are contiguous */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2015 MediaTek Inc.

/*

 * struct mtk_disp_ovl - DISP_OVL driver structure

 * @crtc: associated crtc to report vblank events to

 * @data: platform data

 Clear frame completion interrupt */

 We can only do reflection, not rotation */

	/*

	 * TODO: Rotating/reflecting YUV buffers is not supported at this time.

	 *	 Only RGB[AX] variants are supported.

	/* The return value in switch "MEM_MODE_INPUT_FORMAT_XXX"

	 * is defined in mediatek HW data sheet.

	 * The alphabet order in XXX is no relation to data

	 * arrangement in memory.

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2015 MediaTek Inc.

	/*

	 * mtk_dsi_stop() and mtk_dsi_start() is asymmetric, since

	 * mtk_dsi_stop() should be called after mtk_drm_crtc_atomic_disable(),

	 * which needs irq for vblank, and mtk_dsi_stop() will disable irq.

	 * mtk_dsi_start() needs to be called in mtk_output_dsi_enable(),

	 * after dsi is fully set.

 Attach the panel or bridge to the dsi bridge */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2015 MediaTek Inc.

 * Author: CK Hu <ck.hu@mediatek.com>

 Special case for asynchronous cursor updates. */

 Make sure the above parameters are set before update */

 Make sure the above parameter is set before update */

 Make sure the above parameters are set before update */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2015 MediaTek Inc.

 * Authors:

 *	YT Shen <yt.shen@mediatek.com>

 *	CK Hu <ck.hu@mediatek.com>

 If bpc equal to 0, the dithering function didn't be enabled */

 Only DMA capable components need the LARB property */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014 MediaTek Inc.

 * Author: Jie Qiu <jie.qiu@mediatek.com>

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014 MediaTek Inc.

 * Author: Jie Qiu <jie.qiu@mediatek.com>

 let pll_rate can fix the valid range of tvdpll (1G~2GHz) */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2017 MediaTek Inc.

/*

 * struct mtk_disp_color - DISP_COLOR driver structure

 * @crtc: associated crtc to report irq events to

 * @data: platform colour driver data

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2021 MediaTek Inc.

/**

 * struct mtk_disp_ccorr - DISP_CCORR driver structure

 * @ddp_comp - structure containing type enum and hardware resources

 * @crtc - associated crtc to report irq events to

 Converts a DRM S31.32 value to the HW S1.n format. */

 Sign bit. */

 identity value 0x100000000 -> 0x400(mt8183), */

 identity value 0x100000000 -> 0x800(mt8192), */

 if bigger this, set it to max 0x7ff. */

 take the n+1 most important bits. */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2021 MediaTek Inc.

/**

 * struct mtk_disp_aal - DISP_AAL driver structure

 * @ddp_comp - structure containing type enum and hardware resources

 * @crtc - associated crtc to report irq events to

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014 MediaTek Inc.

 * Author: Jie Qiu <jie.qiu@mediatek.com>

 current connector (only valid when 'enabled') */

	/*

	 * MT8173 HDMI hardware has an output control bit to enable/disable HDMI

	 * output. This bit can only be controlled in ARM supervisor mode.

	 * The ARM trusted firmware provides an API for the HDMI driver to set

	 * this control bit to enable HDMI output in supervisor mode.

 Disable high bitrate, set DST packet normal/double */

 Recommended N values from HDMI specification, tables 7-1 to 7-3 */

 Clock, N: 32kHz 44.1kHz 48kHz */

 all other TMDS clocks */

/**

 * hdmi_recommended_n() - Return N value recommended by HDMI specification

 * @freq: audio sample rate in Hz

 * @clock: rounded TMDS clock in kHz

 25.2/1.001 MHz */

 74.25/1.001 MHz */

 148.5/1.001 MHz */

 297/1.001 MHz */

 The DPI driver already should have set TVDPLL to the correct rate */

/*

 * Bridge callbacks

 Retrieve the connector through the atomic state. */

 The CEC module handles HDMI hotplug detection */

	/*

	 * The mediatek,syscon-hdmi property contains a phandle link to the

	 * MMSYS_CONFIG device and the register offset of the HDMI_SYS_CFG

	 * registers it contains.

/*

 * HDMI audio codec callbacks

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2015 MediaTek Inc.

/*

 * struct mtk_disp_rdma - DISP_RDMA driver structure

 * @data: local driver data

 Clear frame completion interrupt */

	/*

	 * Enable FIFO underflow since DSI and DPI can't be blocked.

	 * Keep the FIFO pseudo size reset default of 8 KiB. Set the

	 * output threshold to 70% of max fifo size to make sure the

	 * threhold will not overflow

	/* The return value in switch "MEM_MODE_INPUT_FORMAT_XXX"

	 * is defined in mediatek HW data sheet.

	 * The alphabet order in XXX is no relation to data

	 * arrangement in memory.

 Disable and clear pending interrupts */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2014 MediaTek Inc.

 * Author: Jie Qiu <jie.qiu@mediatek.com>

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2015 MediaTek Inc.

/*

 * struct mtk_drm_crtc - MediaTek specific crtc structure.

 * @base: crtc object.

 * @enabled: records whether crtc_enable succeeded

 * @planes: array of 4 drm_plane structures, one for each overlay plane

 * @pending_planes: whether any plane has pending changes to be applied

 * @mmsys_dev: pointer to the mmsys device for configuration registers

 * @mutex: handle to one of the ten disp_mutex streams

 * @ddp_comp_nr: number of components in ddp_comp

 * @ddp_comp: array of pointers the mtk_ddp_comp structures used by this crtc

 *

 * TODO: Needs update: this header is missing a bunch of member descriptions.

 lock for display hardware access */

 Nothing to do here, but this callback is mandatory. */

 Make sure the above parameters are set before update */

 Initially configure all planes */

	/*

	 * TODO: instead of updating the registers here, we should prepare

	 * working registers in atomic_commit and let the hardware command

	 * queue update module registers on vblank.

 Set all pending plane state to disabled */

 Wait for planes to be disabled */

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Authors: Benjamin Gaignard <benjamin.gaignard@st.com>

 *          Fabien Dessenne <fabien.dessenne@st.com>

 *          for STMicroelectronics.

 GDP color formats */

/*

 * STI GDP structure

 *

 * @sti_plane:          sti_plane structure

 * @dev:                driver device

 * @regs:               gdp registers

 * @clk_pix:            pixel clock for the current gdp

 * @clk_main_parent:    gdp parent clock if main path used

 * @clk_aux_parent:     gdp parent clock if aux path used

 * @vtg_field_nb:       callback for VTG FIELD (top or bottom) notification

 * @is_curr_top:        true if the current node processed is the top field

 * @node_list:          array of node list

 * @vtg:                registered vtg

/**

 * sti_gdp_get_free_nodes

 * @gdp: gdp pointer

 *

 * Look for a GDP node list that is not currently read by the HW.

 *

 * RETURNS:

 * Pointer to the free GDP node list

 in hazardious cases restart with the first node */

/**

 * sti_gdp_get_current_nodes

 * @gdp: gdp pointer

 *

 * Look for GDP nodes that are currently read by the HW.

 *

 * RETURNS:

 * Pointer to the current GDP node list

/**

 * sti_gdp_disable

 * @gdp: gdp pointer

 *

 * Disable a GDP.

 Set the nodes as 'to be ignored on mixer' */

/**

 * sti_gdp_field_cb

 * @nb: notifier block

 * @event: event message

 * @data: private data

 *

 * Handle VTG top field and bottom field event.

 *

 * RETURNS:

 * 0 on success.

 disable need to be synchronize on vsync event */

 Allocate all the nodes within a single memory page */

 GDP of STiH407 chip have its own pixel clock */

/**

 * sti_gdp_get_dst

 * @dev: device

 * @dst: requested destination size

 * @src: source size

 *

 * Return the cropped / clamped destination size

 *

 * RETURNS:

 * cropped / clamped destination size

 no need for further checks if the plane is being disabled */

 src_x are in 16.16 format */

 Set gdp clock */

		/*

		 * According to the mixer used, the gdp pixel clock

		 * should have a different parent clock.

 No change since last update, do not post cmd */

 Register gdp callback */

 src_x are in 16.16 format */

 build the top field */

 pixel memory location */

 output parameters (clamped / cropped) */

 input parameters */

 Same content and chained together */

 Interlaced mode */

	/* Update the NVN field of the 'right' field of the current GDP node

	 * (being used by the HW) with the address of the updated ('free') top

	 * field GDP node.

	 * - In interlaced mode the 'right' field is the bottom field as we

	 *   update frames starting from their top field

	 * - In progressive mode, we update both bottom and top fields which

	 *   are equal nodes.

	 * At the next VSYNC, the updated node list will be used by the HW.

		/* First update or invalid node should directly write in the

			/* Do not update in the middle of the frame, but

			 * postpone the update after the bottom field has

 Direct update to avoid one frame delay */

 Direct update for progressive to avoid one frame delay */

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Authors: Fabien Dessenne <fabien.dessenne@st.com> for STMicroelectronics.

 Firmware name */

 Regs address */

 0x00000000 */

 0x00040000 */

 0x000E0000 */

 0x000E1000 */

 0x000E1004 */

 0x000E1008 */

 0x000E100C */

 0x000E1010 */

 0x000E1014 */

 0x000E1018 */

 0x000E2000 */

 0x000E3000 */

 0x000E3004 */

 0x000E3008 */

 0x000E300C */

 0x000E3010 */

 0x000E3014 */

 0x000E3018 */

 0x000E4000 */

 0x000E4000 */

 0x000E4004 */

 0x000E4008 */

 0x000E400C */

 0x000E4010 */

 0x000E4014 */

 0x000E4018 */

 0x000E401C */

 0x000E4020 */

 0x000E4024 */

 0x000E4028 */

 Plugs config */

 SW reset CTRL */

 Startup ctrl 1 */

 Startup ctrl 2 */

 Info xP70 */

 SOFT_VSYNC */

 Reset & boot poll config */

 Command structures */

 Configs for interlaced : no IT, no pass thru, 3 fields */

 Config for progressive : no IT, no pass thru, 3 fields */

 Default MemFormat: in=420_raster_dual out=444_raster;opaque Mem2Tv mode */

 Min/Max size */

 Config for progressive: by pass */

 Config for directional deinterlacing without motion */

 Additional configs for fader, blender, motion,... deinterlace algorithms */

 Default ParamCtrl: all controls enabled */

 Default Config : IQI bypassed */

 Default Contrast & Brightness gain = 256 */

 Default Saturation gain = 256 */

 Default PxfConf : P2I bypassed */

/* Main commands. We use 2 commands one being processed by the firmware, one

/*

 * STI HQVDP structure

 *

 * @dev:               driver device

 * @drm_dev:           the drm device

 * @regs:              registers

 * @plane:             plane structure for hqvdp it self

 * @clk:               IP clock

 * @clk_pix_main:      pix main clock

 * @reset:             reset control

 * @vtg_nb:            notifier to handle VTG Vsync

 * @btm_field_pending: is there any bottom field (interlaced frame) to display

 * @hqvdp_cmd:         buffer of commands

 * @hqvdp_cmd_paddr:   physical address of hqvdp_cmd

 * @vtg:               vtg for main data path

 * @xp70_initialized:  true if xp70 is already initialized

 * @vtg_registered:    true if registered to VTG

/**

 * sti_hqvdp_get_free_cmd

 * @hqvdp: hqvdp structure

 *

 * Look for a hqvdp_cmd that is not being used (or about to be used) by the FW.

 *

 * RETURNS:

 * the offset of the command to be used.

 * -1 in error cases

/**

 * sti_hqvdp_get_curr_cmd

 * @hqvdp: hqvdp structure

 *

 * Look for the hqvdp_cmd that is being used by the FW.

 *

 * RETURNS:

 *  the offset of the command to be used.

 * -1 in error cases

/**

 * sti_hqvdp_get_next_cmd

 * @hqvdp: hqvdp structure

 *

 * Look for the next hqvdp_cmd that will be used by the FW.

 *

 * RETURNS:

 *  the offset of the next command that will be used.

 * -1 in error cases

 Last command */

 Next command */

/**

 * sti_hqvdp_update_hvsrc

 * @orient: horizontal or vertical

 * @scale:  scaling/zoom factor

 * @hvsrc:  the structure containing the LUT coef

 *

 * Update the Y and C Lut coef, as well as the shift param

 *

 * RETURNS:

 * None.

 Get the appropriate coef tables */

/**

 * sti_hqvdp_check_hw_scaling

 * @hqvdp: hqvdp pointer

 * @mode: display mode with timing constraints

 * @src_w: source width

 * @src_h: source height

 * @dst_w: destination width

 * @dst_h: destination height

 *

 * Check if the HW is able to perform the scaling request

 * The firmware scaling limitation is "CEIL(1/Zy) <= FLOOR(LFW)" where:

 *   Zy = OutputHeight / InputHeight

 *   LFW = (Tx * IPClock) / (MaxNbCycles * Cp)

 *     Tx : Total video mode horizontal resolution

 *     IPClock : HQVDP IP clock (Mhz)

 *     MaxNbCycles: max(InputWidth, OutputWidth)

 *     Cp: Video mode pixel clock (Mhz)

 *

 * RETURNS:

 * True if the HW can scale.

/**

 * sti_hqvdp_disable

 * @hqvdp: hqvdp pointer

 *

 * Disables the HQVDP plane

 Unregister VTG Vsync callback */

 Set next cmd to NULL */

 VTG can stop now */

/**

 * sti_hqvdp_vtg_cb

 * @nb: notifier block

 * @evt: event message

 * @data: private data

 *

 * Handle VTG Vsync event, display pending bottom field

 *

 * RETURNS:

 * 0 on success.

 disable need to be synchronize on vsync event */

 Create the btm field command from the current one */

 Post the command to mailbox */

 Allocate memory for the VDP commands */

 Configure Plugs (same for RD & WR) */

/**

 * sti_hqvdp_start_xp70

 * @hqvdp: hqvdp pointer

 *

 * Run the xP70 initialization sequence

 Request firmware */

 Check firmware parts */

 Enable clock */

 Reset */

 Init Read & Write plugs */

 Authorize Idle Mode */

 Prevent VTG interruption during the boot */

 Download PMEM & DMEM */

 Enable fetch */

 Wait end of boot */

 Launch Vsync */

 no need for further checks if the plane is being disabled */

 src_x are in 16.16 format */

	/*

	 * Input / output size

	 * Align to upper even value

 Start HQVDP XP70 coprocessor */

 Prevent VTG shutdown */

 Register VTG Vsync callback to handle bottom fields */

 No change since last update, do not post cmd */

 src_x are in 16.16 format */

 Static parameters, defaulting to progressive mode */

	/* VC1RE, FMD bypassed : keep everything set to 0

 Buffer planes address */

 Pitches */

	/* Input / output size

 Handle interlaced */

 Top field to display */

 Update pitches and vert size */

 Enable directional deinterlacing processing */

 Update hvsrc lut coef */

 Interlaced : get ready to display the bottom field at next Vsync */

 Create HQVDP plane once xp70 is initialized */

 do nothing */

 Get Memory resources */

 Get clock resources */

 Get reset resources */

 end node */ }

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Author: Benjamin Gaignard <benjamin.gaignard@st.com> for STMicroelectronics.

	/*

	 * set max width and height as default value.

	 * this value would be used to check framebuffer size limitation

	 * at drm_mode_addfb().

 end node */ },

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Authors: Benjamin Gaignard <benjamin.gaignard@st.com>

 *          Fabien Dessenne <fabien.dessenne@st.com>

 *          for STMicroelectronics.

 Compute number of frame updates */

 do not perform fps calcul if new_frame is false */

 Compute number of field updates */

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Author: Vincent Abriou <vincent.abriou@st.com> for STMicroelectronics.

milliseconds */

/*

 * Functional specification recommended values

/**

 * sti_hdmi_tx3g4c28phy_start - Start hdmi phy macro cell tx3g4c28

 *

 * @hdmi: pointer on the hdmi internal structure

 *

 * Return false if an error occur

 Assuming no pixel repetition and 24bits color */

	/*

	 * Configure and power up the PHY PLL

 wait PLL interrupt */

	/*

	 * To configure the source termination and pre-emphasis appropriately

	 * for different high speed TMDS clock frequencies a phy configuration

	 * table must be provided, tailored to the SoC and board combination.

	/*

	 * Default, power up the serializer with no pre-emphasis or

	 * output swing correction

/**

 * sti_hdmi_tx3g4c28phy_stop - Stop hdmi phy macro cell tx3g4c28

 *

 * @hdmi: pointer on the hdmi internal structure

 wait PLL interrupt */

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Authors: Benjamin Gaignard <benjamin.gaignard@st.com>

 *          Fabien Dessenne <fabien.dessenne@st.com>

 *          for STMicroelectronics.

 Prepare and enable the compo IP clock */

 Set rate and prepare/enable pixel clock */

 Disable Background */

 Disable pixel clock and compo IP clocks */

 perform plane actions */

 ignore update for other CRTC */

 update planes tag as updated */

 if plane is HQVDP_0 then commit the vid[0] */

 disabling sequence for planes tag as disabling */

 tag plane status for disabled */

 tag plane status for flushing */

 if plane is HQVDP_0 then disable the vid[0] */

 Other status case are not handled */

		/* Disable mixer only if all overlay planes (GDP and VDP)

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Author: Vincent Abriou <vincent.abriou@st.com> for STMicroelectronics.

	/* skip, repeat and replay arg should not exceed 1023.

	 * If user wants to exceed this value, the instruction should be

	 * duplicate and arg should be adjust for each duplicated instruction.

	 *

	 * mux_sel is used in case of SAV/EAV synchronization.

			/* leave 'arg' + 1 pixel elapsing without changing

 pixel adjustment */

 SKIP instruction not needed */

				/* SKIP 0 not permitted but we want to skip 1

				 * pixel. So we transform SKIP into SET

 REPEAT or REPLAY instruction not needed */

 for jump instruction 7th bit is 1 */

 skip trailing pixel */

 set DE signal high */

 skip the number of active pixel */

 set DE signal low */

 skip trailing lines */

 generate DE signal for each line */

 replay the sequence as many active lines defined */

 skip blanking lines */

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Authors: Benjamin Gaignard <benjamin.gaignard@st.com>

 *          Vincent Abriou <vincent.abriou@st.com>

 *          for STMicroelectronics.

 glue registers */

 enum listing the supported output data format */

 preformatter conversion matrix */

 709 RGB to YCbCr */

/**

 * tvout_vip_set_color_order - Set the clipping mode of a VIP

 *

 * @tvout: tvout structure

 * @reg: register to set

 * @cr_r: red chroma or red order

 * @y_g: y or green order

 * @cb_b: blue chroma or blue order

/**

 * tvout_vip_set_clip_mode - Set the clipping mode of a VIP

 *

 * @tvout: tvout structure

 * @reg: register to set

 * @range: clipping range

/**

 * tvout_vip_set_rnd - Set the rounded value of a VIP

 *

 * @tvout: tvout structure

 * @reg: register to set

 * @rnd: rounded val per component

/**

 * tvout_vip_set_sel_input - Select the VIP input

 *

 * @tvout: tvout structure

 * @reg: register to set

 * @main_path: main or auxiliary path

 * @video_out: selected_input (main/aux + conv)

 on stih407 chip the sel_input bypass mode logic is inverted */

/**

 * tvout_vip_set_in_vid_fmt - Select the input video signed or unsigned

 *

 * @tvout: tvout structure

 * @reg: register to set

 * @in_vid_fmt: used video input format

/**

 * tvout_preformatter_set_matrix - Set preformatter matrix

 *

 * @tvout: tvout structure

 * @mode: display mode structure

/**

 * tvout_dvo_start - Start VIP block for DVO output

 *

 * @tvout: pointer on tvout structure

 * @main_path: true if main path has to be used in the vip configuration

 *	  else aux path is used.

 Select the input sync for dvo */

 Select the input sync for dvo */

 Set color channel order */

 Set clipping mode */

 Set round mode (rounded to 8-bit per component) */

 Set input video format */

 Input selection */

/**

 * tvout_hdmi_start - Start VIP block for HDMI output

 *

 * @tvout: pointer on tvout structure

 * @main_path: true if main path has to be used in the vip configuration

 *	  else aux path is used.

 select the input sync for hdmi */

 select the input sync for hdmi */

 set color channel order */

 set clipping mode */

 set round mode (rounded to 8-bit per component) */

 set input video format */

 input selection */

/**

 * tvout_hda_start - Start HDF VIP and HD DAC

 *

 * @tvout: pointer on tvout structure

 * @main_path: true if main path has to be used in the vip configuration

 *	  else aux path is used.

 Select the input sync for HD analog and HD DCS */

 Select the input sync for HD analog and HD DCS */

 set color channel order */

 set clipping mode */

 set round mode (rounded to 10-bit per component) */

 Set input video format */

 Input selection */

 power up HD DAC */

 Reset VIP register */

 reset VIP register */

 power down HD DAC */

 reset VIP register */

 get memory resources */

 get reset resources */

 take tvout out of reset */

 end node */ }

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Author: Vincent Abriou <vincent.abriou@st.com> for STMicroelectronics.

 DVO registers */

/*

 * STI digital video output structure

 *

 * @dev: driver device

 * @drm_dev: pointer to drm device

 * @mode: current display mode selected

 * @regs: dvo registers

 * @clk_pix: pixel clock for dvo

 * @clk: clock for dvo

 * @clk_main_parent: dvo parent clock if main path used

 * @clk_aux_parent: dvo parent clock if aux path used

 * @panel_node: panel node reference from device tree

 * @panel: reference to the panel connected to the dvo

 * @enabled: true if dvo is enabled else false

 * @encoder: drm_encoder it is bound

/* Configure AWG, writing instructions

 *

 * @dvo: pointer to DVO structure

 * @awg_ram_code: pointer to AWG instructions table

 * @nb: nb of AWG instructions

 Disable/unprepare dvo clock */

 Make sure DVO is disabled */

 Configure AWG */

 Prepare/enable clocks */

 Set LUT */

 Digital output formatter config */

	/* According to the path used (main or aux), the dvo clocks should

 DVO clocks = compositor clock */

 For now, we only support 24bit data enable (DE) synchro format */

 do nothing */

 Set the drm device handle */

 end node */ }

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Author: Fabien Dessenne <fabien.dessenne@st.com> for STMicroelectronics.

 HDformatter registers */

 HDA_ANA_CFG */

 Voltage dependent. stiH416 */

 Default scaling values */

 Video DACs control */

 Upsampler values for the alternative 2X Filter */

 Upsampler values for the 4X Filter */

 AWG instructions for some video modes */

 720p@50 */

 720p@60 */

 1080p@30 */

 1080p@25 */

 1080p@24 */

 720x480p@60 */

 Video mode category */

/* HD analog supported modes

 * Interlaced modes may be added when supported by the whole display chain

 1080p30 74.250Mhz */

 1080p30 74.176Mhz */

 1080p24 74.250Mhz */

 1080p24 74.176Mhz */

 1080p25 74.250Mhz */

 720p60 74.250Mhz */

 720p60 74.176Mhz */

 720p50 74.250Mhz */

 720x480p60 27.027Mhz */

 720x480p60 27.000Mhz */

/*

 * STI hd analog structure

 *

 * @dev: driver device

 * @drm_dev: pointer to drm device

 * @mode: current display mode selected

 * @regs: HD analog register

 * @video_dacs_ctrl: video DACS control register

 * @enabled: true if HD analog is enabled else false

/**

 * hda_get_mode_idx - Search for a video mode in the supported modes table

 *

 * @mode: mode being searched

 * @idx: index of the found mode

 *

 * Return true if mode is found

/**

 * hda_enable_hd_dacs - Enable the HD DACS

 *

 * @hda: pointer to HD analog structure

 * @enable: true if HD DACS need to be enabled, else false

/**

 * sti_hda_configure_awg - Configure AWG, writing instructions

 *

 * @hda: pointer to HD analog structure

 * @awg_instr: pointer to AWG instructions table

 * @nb: nb of AWG instructions

 Disable HD DAC and AWG */

 Disable/unprepare hda clock */

 Prepare/enable clocks */

 HD use alternate 2x filter */

 ED uses 4x filter */

 Enable HD Video DACs */

 Configure scaler */

 Configure sampler */

 Configure main HDFormatter */

 Configure AWG */

 Enable AWG */

 HD use alternate 2x filter */

 ED uses 4x filter */

 HD DAC = 148.5Mhz or 108 Mhz */

 HDformatter clock = compositor clock */

 do nothing */

 the first mode is the preferred mode */

 Set the drm device handle */

 force to disable hd dacs at startup */

 Get resources */

 If no existing video-dacs-ctrl resource continue the probe */

 Get clock resources */

 end node */ }

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Authors: Benjamin Gaignard <benjamin.gaignard@st.com>

 *          Fabien Dessenne <fabien.dessenne@st.com>

 *          for STMicroelectronics.

 Module parameter to set the background color of the mixer */

 regs offset */

 id for depth of CRB reg */

 mask in CTL reg */

 no need to set depth for cursor */

 Search if a previous depth was already assigned to the plane */

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Authors: Benjamin Gaignard <benjamin.gaignard@st.com>

 *          Fabien Dessenne <fabien.dessenne@st.com>

 *          Vincent Abriou <vincent.abriou@st.com>

 *          for STMicroelectronics.

 registers offset */

 Delay introduced by the HDMI in nb of pixel */

 Delay introduced by the DVO in nb of pixel */

 delay introduced by the Arbitrary Waveform Generator in nb of pixels */

/*

 * STI VTG register offset structure

 *

 *@h_hd:     stores the VTG_H_HD_x     register offset

 *@top_v_vd: stores the VTG_TOP_V_VD_x register offset

 *@bot_v_vd: stores the VTG_BOT_V_VD_x register offset

 *@top_v_hd: stores the VTG_TOP_V_HD_x register offset

 *@bot_v_hd: stores the VTG_BOT_V_HD_x register offset

/*

 * STI VTG synchronisation parameters structure

 *

 *@hsync: sample number falling and rising edge

 *@vsync_line_top: vertical top field line number falling and rising edge

 *@vsync_line_bot: vertical bottom field line number falling and rising edge

 *@vsync_off_top: vertical top field sample number rising and falling edge

 *@vsync_off_bot: vertical bottom field sample number rising and falling edge

/*

 * STI VTG structure

 *

 * @regs: register mapping

 * @sync_params: synchronisation parameters used to generate timings

 * @irq: VTG irq

 * @irq_status: store the IRQ status value

 * @notifier_list: notifier callback

 * @crtc: the CRTC for vblank event

 Set output window to fit the display mode selected */

 Only progressive supported for now */

 Get the hsync position */

 Get the vsync position */

 Only progressive supported for now */

 Set the number of clock cycles per line */

 Set Half Line Per Field (only progressive supported for now) */

 Program output window */

 Set hsync and vsync position for HDMI */

 Set hsync and vsync position for HD DCS */

 Set hsync and vsync position for HDF */

 Set hsync and vsync position for DVO */

 Progam the syncs outputs */

 mode */

 clear interrupt status and mask */

 write configuration */

/**

 * sti_vtg_get_line_number

 *

 * @mode: display mode to be used

 * @y:    line

 *

 * Return the line number according to the display mode taking

 * into account the Sync and Back Porch information.

 * Video frame line numbers start at 1, y starts at 0.

 * In interlaced modes the start line is the field line number of the odd

 * field, but y is still defined as a progressive frame.

/**

 * sti_vtg_get_pixel_number

 *

 * @mode: display mode to be used

 * @x:    row

 *

 * Return the pixel number according to the display mode taking

 * into account the Sync and Back Porch information.

 * Pixels are counted from 0.

 force sync bus write */

 Get Memory ressources */

 sentinel */ }

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Authors: Benjamin Gaignard <benjamin.gaignard@st.com>

 *          Fabien Dessenne <fabien.dessenne@st.com>

 *          for STMicroelectronics.

/*

 * stiH407 compositor properties

 Register mixer subdev and video subdev first */

 Nothing to do, wait for the second round */

 Register the other subdevs, create crtc and planes */

 Nothing to do, already done at the first round */

 The first planes are reserved for primary planes*/

 do nothing */

 end node */

 populate data structure depending on compatibility */

 Get Memory ressources */

 Get clock resources */

 Get reset resources */

 Take compo main out of reset */

 Take compo aux out of reset */

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Author: Fabien Dessenne <fabien.dessenne@st.com> for STMicroelectronics.

 Registers */

 Registers values */

/* YCbCr to RGB BT709:

 * R = Y+1.5391Cr

 * G = Y-0.4590Cr-0.1826Cb

/* YCbCr to RGB BT709:

 * R = Y+1.3711Cr

 * G = Y-0.6992Cr-0.3359Cb

 * B = Y+1.7344Cb

	/* Input / output size

 Unmask */

 Color conversion parameters */

 Mask */

 Enable PSI, Mask layer */

 Opaque */

 Brightness, contrast, tint, saturation */

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Authors: Vincent Abriou <vincent.abriou@st.com>

 *          Fabien Dessenne <fabien.dessenne@st.com>

 *          for STMicroelectronics.

 Registers */

/*

 * pixmap dma buffer structure

 *

 * @paddr:  physical address

 * @size:   buffer size

 * @base:   virtual address

/*

 * STI Cursor structure

 *

 * @sti_plane:    sti_plane structure

 * @dev:          driver device

 * @regs:         cursor registers

 * @width:        cursor width

 * @height:       cursor height

 * @clut:         color look up table

 * @clut_paddr:   color look up table physical address

 * @pixmap:       pixmap dma buffer (clut8-format cursor)

 Pick the 2 higher bits of each component */

 Assign CLUT values, ARGB444 format */

 no need for further checks if the plane is being disabled */

 src_x are in 16.16 format */

 If the cursor size has changed, re-allocated the pixmap */

 Convert ARGB8888 to CLUT8 */

 AWS and AWE depend on the mode */

 Set memory location, size, and position */

 Set and fetch CLUT */

 Allocate clut buffer */

 SPDX-License-Identifier: GPL-2.0

/*

 * Copyright (C) STMicroelectronics SA 2014

 * Author: Vincent Abriou <vincent.abriou@st.com> for STMicroelectronics.

 n from 1 to 6 */

 sample flat mask */

/**

 * HDMI interrupt handler threaded

 *

 * @irq: irq number

 * @arg: connector structure

 Hot plug/unplug IRQ */

	/* Sw reset and PLL lock are exclusive so we can use the same

	 * event to signal them

 Audio FIFO underrun IRQ */

/**

 * HDMI interrupt handler

 *

 * @irq: irq number

 * @arg: connector structure

 read interrupt status */

 clear interrupt status */

 force sync bus write */

/**

 * Set hdmi active area depending on the drm display mode selected

 *

 * @hdmi: pointer on the hdmi internal structure

/**

 * Overall hdmi configuration

 *

 * @hdmi: pointer on the hdmi internal structure

 Clear overrun and underrun fifo */

 Select encryption type and the framing mode */

 Set Hsync polarity */

 Set Vsync polarity */

 Enable HDMI */

/*

 * Helper to reset info frame

 *

 * @hdmi: pointer on the hdmi internal structure

 * @slot: infoframe to reset

 Disable transmission for the selected slot */

 Reset info frame registers */

/**

 * Helper to concatenate infoframe in 32 bits word

 *

 * @ptr: pointer on the hdmi internal structure

 * @size: size to write

/**

 * Helper to write info frame

 *

 * @hdmi: pointer on the hdmi internal structure

 * @data: infoframe to write

 * @size: size to write

 Disable transmission slot for updated infoframe */

	/*

	 * Each subpack contains 4 bytes

	 * The First Bytes of the first subpacket must contain the checksum

	 * Packet size is increase by one.

 Enable transmission slot for updated infoframe */

/**

 * Prepare and configure the AVI infoframe

 *

 * AVI infoframe are transmitted at least once per two video field and

 * contains information about HDMI transmission mode such as color space,

 * colorimetry, ...

 *

 * @hdmi: pointer on the hdmi internal structure

 *

 * Return negative value if error occurs

 fixed infoframe configuration not linked to the mode */

/**

 * Prepare and configure the AUDIO infoframe

 *

 * AUDIO infoframe are transmitted once per frame and

 * contains information about HDMI transmission mode such as audio codec,

 * sample size, ...

 *

 * @hdmi: pointer on the hdmi internal structure

 *

 * Return negative value if error occurs

 set audio parameters stored*/

disable audio info frame transmission */

/*

 * Prepare and configure the VS infoframe

 *

 * Vendor Specific infoframe are transmitted once per frame and

 * contains vendor specific information.

 *

 * @hdmi: pointer on the hdmi internal structure

 *

 * Return negative value if error occurs

		/*

		 * Going into that statement does not means vendor infoframe

		 * fails. It just informed us that vendor infoframe is not

		 * needed for the selected mode. Only  4k or stereoscopic 3D

		 * mode requires vendor infoframe. So just simply return 0.

milliseconds */

/**

 * Software reset of the hdmi subsystem

 *

 * @hdmi: pointer on the hdmi internal structure

 *

 Enable hdmi_audio clock only during hdmi reset */

 Sw reset */

 Wait reset completed */

	/*

	 * HDMI_STA_SW_RST bit is set to '1' when SW_RST bit in HDMI_CFG is

	 * set to '1' and clk_audio is running.

 Disable hdmi_audio clock. Not used anymore for drm purpose */

 Disable HDMI */

 Stop the phy */

 Reset info frame transmission */

 Set the default channel data to be a dark red */

 Disable/unprepare hdmi clock */

/**

 * sti_hdmi_audio_get_non_coherent_n() - get N parameter for non-coherent

 * clocks. None-coherent clocks means that audio and TMDS clocks have not the

 * same source (drifts between clocks). In this case assumption is that CTS is

 * automatically calculated by hardware.

 *

 * @audio_fs: audio frame clock frequency in Hz

 *

 * Values computed are based on table described in HDMI specification 1.4b

 *

 * Returns n value.

 Not pre-defined, recommended value: 128 * fs / 1000 */

 update N parameter */

 update HDMI registers according to configuration */

 Prepare/enable clocks */

 Program hdmi serializer and start phy */

 Program hdmi active area */

 Enable working interrupts */

 Program hdmi config */

 Program AVI infoframe */

 Program VS infoframe */

 Sw reset */

 Copy the drm display mode in the connector local structure */

 Update clock framerate according to the selected mode */

 do nothing */

 get detection status of display device */

 colorspace property */

 disable audio */

 Set the drm device handle */

 initialise property */

 Initialize audio infoframe */

 Enable default interrupts */

 end node */

 Get resources */

 Get clock resources */

 Take hdmi out of reset */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (C) 2017 Linus Walleij <linus.walleij@linaro.org>

 * Parts of this file were based on sources as follows:

 *

 * Copyright (C) 2006-2008 Intel Corporation

 * Copyright (C) 2007 Amos Lee <amos_lee@storlinksemi.com>

 * Copyright (C) 2007 Dave Airlie <airlied@linux.ie>

 * Copyright (C) 2011 Texas Instruments

 * Copyright (C) 2017 Eric Anholt

	/*

	 * Vblank IRQ

	 *

	 * The hardware is a bit tilted: the line stays high after clearing

	 * the vblank IRQ, firing many more interrupts. We counter this

	 * by toggling the IRQ back and forth from firing at vblank and

	 * firing at start of active image, which works around the problem

	 * since those occur strictly in sequence, and we get two IRQs for each

	 * frame, one at start of Vblank (that we make call into the CRTC) and

	 * another one at the start of the image (that we discard).

 We have an actual start of vsync */

 Toggle trigger to start of active image */

 Toggle trigger back to start of vsync */

 Clear the interrupt once done */

	/*

	 * We support these specific resolutions and nothing else.

 SIF(525) */

 CIF(625) */

 VGA */

 D1 */

 D1 */

 FB base address must be dword aligned. */

		/*

		 * There's no pitch register, the mode's hdisplay

		 * controls this.

		/*

		 * We can't change the FB format in a flicker-free

		 * manner (and only update it during CRTC enable).

 Reset the TVE200 and wait for it to come back online */

 Function 1 */

 Interlace mode for CCIR656: parameterize? */

 32 words per burst */

 16 retries */

 NTSC mode: parametrize? */

 Vsync IRQ at start of Vsync at first */

 SIF(525) */

 CIF(625) */

 Turn it on */

 Disable put into reset and Power Down */

 For RGB, the Y component is used as base address */

 For three plane YUV we need two more addresses */

 Clear any IRQs and enable */

		/*

		 * The controller actually supports any YCbCr ordering,

		 * for packed YCbCr. This just lists the orderings that

		 * DRM supports.

 This uses three planes */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (C) 2017 Linus Walleij <linus.walleij@linaro.org>

 * Parts of this file were based on sources as follows:

 *

 * Copyright (C) 2006-2008 Intel Corporation

 * Copyright (C) 2007 Amos Lee <amos_lee@storlinksemi.com>

 * Copyright (C) 2007 Dave Airlie <airlied@linux.ie>

 * Copyright (C) 2011 Texas Instruments

 * Copyright (C) 2017 Eric Anholt

/**

 * DOC: Faraday TV Encoder TVE200 DRM Driver

 *

 * The Faraday TV Encoder TVE200 is also known as the Gemini TV Interface

 * Controller (TVC) and is found in the Gemini Chipset from Storlink

 * Semiconductor (later Storm Semiconductor, later Cortina Systems)

 * but also in the Grain Media GM8180 chipset. On the Gemini the module

 * is connected to 8 data lines and a single clock line, comprising an

 * 8-bit BT.656 interface.

 *

 * This is a very basic YUV display driver. The datasheet specifies that

 * it supports the ITU BT.656 standard. It requires a 27 MHz clock which is

 * the hallmark of any TV encoder supporting both PAL and NTSC.

 *

 * This driver exposes a standard KMS interface for this TV encoder.

		/*

		 * TODO: when we are using a different bridge than a panel

		 * (such as a dumb VGA connector) we need to devise a different

		 * method to get the connector out of the bridge.

 Clock the silicon so we can access the registers */

 This clock is for the pixels (27MHz) */

 turn off interrupts before requesting the irq */

	/*

	 * Passing in 16 here will make the RGB565 mode the default

	 * Passing in 32 will use XRGB8888 mode

/* i810_drv.c -- I810 driver -*- linux-c -*-

 * Created: Mon Dec 13 01:56:22 1999 by jhartmann@precisioninsight.com

 *

 * Copyright 1999 Precision Insight, Inc., Cedar Park, Texas.

 * Copyright 2000 VA Linux Systems, Inc., Sunnyvale, California.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * VA LINUX SYSTEMS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors:

 *    Rickard E. (Rik) Faith <faith@valinux.com>

 *    Jeff Hartmann <jhartmann@valinux.com>

 *    Gareth Hughes <gareth@valinux.com>

/* i810_dma.c -- DMA support for the i810 -*- linux-c -*-

 * Created: Mon Dec 13 01:50:01 1999 by jhartmann@precisioninsight.com

 *

 * Copyright 1999 Precision Insight, Inc., Cedar Park, Texas.

 * Copyright 2000 VA Linux Systems, Inc., Sunnyvale, California.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER

 * DEALINGS IN THE SOFTWARE.

 *

 * Authors: Rickard E. (Rik) Faith <faith@valinux.com>

 *	    Jeff Hartmann <jhartmann@valinux.com>

 *          Keith Whitwell <keith@tungstengraphics.com>

 *

 Linear search might not be the best solution */

 In use is already a pointer */

/* This should only be called if the buffer is not sent to the hardware

 * yet, the hardware updates in use for us once its on the ring buffer.

 In use is already a pointer */

 This is all entirely broken */

 Real error */

	/* Make sure interrupts are disabled here because the uninstall ioctl

	 * may not have been called from userspace and after dev_private

	 * is freed, it's too late.

 Not enough space in the status page for the freelist */

 Program Hardware Status Page */

 Now we need to init our freelist */

/* Most efficient way to verify state for the i810 is as it is

 * emitted.  Non-conformant state is silently dropped.

 *

 * Use 'volatile' & local var tmp to force the emitted values to be

 * identical to the verified ones.

/* Need to do some additional checking when setting the dest buffer.

	/* invarient:

/* need to verify

 On i815 at least ASYNC is buggy */

	/* pitch<<5 is from 11.2.8 p158,

	   its the pitch / 8 then left shifted 8,

| ASYNC_FLIP */ );

	/* Increment the frame counter.  The client-side 3D driver must

	 * throttle the framerate by waiting for this value before

	 * performing the swapbuffer ioctl.

 Must be called with the lock held */

 GH: Someone's doing nasty things... */

 Never copy - 2.4.x doesn't need it */

 Never copy - 2.4.x doesn't need it */

 Tell the overlay to update */

/* Not sure why this isn't set all the time:

 Our userspace depends upon the agp mapping support. */

		/* master disappeared, clean up stuff anyway and hope nothing

/*

 * Copyright 2011 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Alex Deucher

 if the displays are off, vblank time is max */

 need special handling */

 sizeof(ATOM_PPLIB_EXTENDEDHEADER) */

 fan table */

 clock dependancy tables, shedding tables */

 cac data */

 ext tables */

 add the i2c bus for thermal/fan chip */

			/*

			 * TODO: need a better lock mechanism

			 *

			 * Here adev->pm.mutex lock protection is enforced on

			 * UVD and VCE cases only. Since for other cases, there

			 * may be already lock protection in amdgpu_pm.c.

			 * This is a quick fix for the deadlock issue below.

			 *     NFO: task ocltst:2028 blocked for more than 120 seconds.

			 *     Tainted: G           OE     5.0.0-37-generic #40~18.04.1-Ubuntu

			 *     echo 0 > /proc/sys/kernel/hung_task_timeout_secs" disables this message.

			 *     cltst          D    0  2028   2026 0x00000000

			 *     all Trace:

			 *     __schedule+0x2c0/0x870

			 *     schedule+0x2c/0x70

			 *     schedule_preempt_disabled+0xe/0x10

			 *     __mutex_lock.isra.9+0x26d/0x4e0

			 *     __mutex_lock_slowpath+0x13/0x20

			 *     ? __mutex_lock_slowpath+0x13/0x20

			 *     mutex_lock+0x2f/0x40

			 *     amdgpu_dpm_set_powergating_by_smu+0x64/0xe0 [amdgpu]

			 *     gfx_v8_0_enable_gfx_static_mg_power_gating+0x3c/0x70 [amdgpu]

			 *     gfx_v8_0_set_powergating_state+0x66/0x260 [amdgpu]

			 *     amdgpu_device_ip_set_powergating_state+0x62/0xb0 [amdgpu]

			 *     pp_dpm_force_performance_level+0xe7/0x100 [amdgpu]

			 *     amdgpu_set_dpm_forced_performance_level+0x129/0x330 [amdgpu]

 enter BACO state */

 exit BACO state */

 enter BACO state */

 exit BACO state */

 switch to the thermal state */

 switch back the user state */

 switch back the user state */

 check if the vblank period is too short to adjust the mclk */

	/* certain older asics have a separare 3D performance state,

	 * so try that first if the user selected performance

 balanced states don't exist at the moment */

 Pick the best power state based on current conditions */

 user states */

 internal states */

 use a fallback state if we didn't match */

 if dpm init failed */

 add other state override checks here */

 update whether vce is active */

 force low perf level for thermal */

 save the user's level */

 otherwise, user selected level */

			/* we have issues with mclk switching with

			 * refresh rates over 120 hz on the non-DC code.

 enable/disable Low Memory PState for UVD (4k videos) */

 XXX select vce level based on ring/task */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Rafał Miłecki <zajec5@gmail.com>

 *          Alex Deucher <alexdeucher@gmail.com>

/**

 * DOC: power_dpm_state

 *

 * The power_dpm_state file is a legacy interface and is only provided for

 * backwards compatibility. The amdgpu driver provides a sysfs API for adjusting

 * certain power related parameters.  The file power_dpm_state is used for this.

 * It accepts the following arguments:

 *

 * - battery

 *

 * - balanced

 *

 * - performance

 *

 * battery

 *

 * On older GPUs, the vbios provided a special power state for battery

 * operation.  Selecting battery switched to this state.  This is no

 * longer provided on newer GPUs so the option does nothing in that case.

 *

 * balanced

 *

 * On older GPUs, the vbios provided a special power state for balanced

 * operation.  Selecting balanced switched to this state.  This is no

 * longer provided on newer GPUs so the option does nothing in that case.

 *

 * performance

 *

 * On older GPUs, the vbios provided a special power state for performance

 * operation.  Selecting performance switched to this state.  This is no

 * longer provided on newer GPUs so the option does nothing in that case.

 *

/**

 * DOC: power_dpm_force_performance_level

 *

 * The amdgpu driver provides a sysfs API for adjusting certain power

 * related parameters.  The file power_dpm_force_performance_level is

 * used for this.  It accepts the following arguments:

 *

 * - auto

 *

 * - low

 *

 * - high

 *

 * - manual

 *

 * - profile_standard

 *

 * - profile_min_sclk

 *

 * - profile_min_mclk

 *

 * - profile_peak

 *

 * auto

 *

 * When auto is selected, the driver will attempt to dynamically select

 * the optimal power profile for current conditions in the driver.

 *

 * low

 *

 * When low is selected, the clocks are forced to the lowest power state.

 *

 * high

 *

 * When high is selected, the clocks are forced to the highest power state.

 *

 * manual

 *

 * When manual is selected, the user can manually adjust which power states

 * are enabled for each clock domain via the sysfs pp_dpm_mclk, pp_dpm_sclk,

 * and pp_dpm_pcie files and adjust the power state transition heuristics

 * via the pp_power_profile_mode sysfs file.

 *

 * profile_standard

 * profile_min_sclk

 * profile_min_mclk

 * profile_peak

 *

 * When the profiling modes are selected, clock and power gating are

 * disabled and the clocks are set for different profiling cases. This

 * mode is recommended for profiling specific work loads where you do

 * not want clock or power gating for clock fluctuation to interfere

 * with your results. profile_standard sets the clocks to a fixed clock

 * level which varies from asic to asic.  profile_min_sclk forces the sclk

 * to the lowest level.  profile_min_mclk forces the mclk to the lowest level.

 * profile_peak sets all clocks (mclk, sclk, pcie) to the highest levels.

 *

 profile_exit setting is valid only when current mode is in profile mode */

 only set user selected power states */

/**

 * DOC: pp_table

 *

 * The amdgpu driver provides a sysfs API for uploading new powerplay

 * tables.  The file pp_table is used for this.  Reading the file

 * will dump the current power play table.  Writing to the file

 * will attempt to upload a new powerplay table and re-initialize

 * powerplay using that new table.

 *

/**

 * DOC: pp_od_clk_voltage

 *

 * The amdgpu driver provides a sysfs API for adjusting the clocks and voltages

 * in each power level within a power state.  The pp_od_clk_voltage is used for

 * this.

 *

 * Note that the actual memory controller clock rate are exposed, not

 * the effective memory clock of the DRAMs. To translate it, use the

 * following formula:

 *

 * Clock conversion (Mhz):

 *

 * HBM: effective_memory_clock = memory_controller_clock * 1

 *

 * G5: effective_memory_clock = memory_controller_clock * 1

 *

 * G6: effective_memory_clock = memory_controller_clock * 2

 *

 * DRAM data rate (MT/s):

 *

 * HBM: effective_memory_clock * 2 = data_rate

 *

 * G5: effective_memory_clock * 4 = data_rate

 *

 * G6: effective_memory_clock * 8 = data_rate

 *

 * Bandwidth (MB/s):

 *

 * data_rate * vram_bit_width / 8 = memory_bandwidth

 *

 * Some examples:

 *

 * G5 on RX460:

 *

 * memory_controller_clock = 1750 Mhz

 *

 * effective_memory_clock = 1750 Mhz * 1 = 1750 Mhz

 *

 * data rate = 1750 * 4 = 7000 MT/s

 *

 * memory_bandwidth = 7000 * 128 bits / 8 = 112000 MB/s

 *

 * G6 on RX5700:

 *

 * memory_controller_clock = 875 Mhz

 *

 * effective_memory_clock = 875 Mhz * 2 = 1750 Mhz

 *

 * data rate = 1750 * 8 = 14000 MT/s

 *

 * memory_bandwidth = 14000 * 256 bits / 8 = 448000 MB/s

 *

 * < For Vega10 and previous ASICs >

 *

 * Reading the file will display:

 *

 * - a list of engine clock levels and voltages labeled OD_SCLK

 *

 * - a list of memory clock levels and voltages labeled OD_MCLK

 *

 * - a list of valid ranges for sclk, mclk, and voltage labeled OD_RANGE

 *

 * To manually adjust these settings, first select manual using

 * power_dpm_force_performance_level. Enter a new value for each

 * level by writing a string that contains "s/m level clock voltage" to

 * the file.  E.g., "s 1 500 820" will update sclk level 1 to be 500 MHz

 * at 820 mV; "m 0 350 810" will update mclk level 0 to be 350 MHz at

 * 810 mV.  When you have edited all of the states as needed, write

 * "c" (commit) to the file to commit your changes.  If you want to reset to the

 * default power levels, write "r" (reset) to the file to reset them.

 *

 *

 * < For Vega20 and newer ASICs >

 *

 * Reading the file will display:

 *

 * - minimum and maximum engine clock labeled OD_SCLK

 *

 * - minimum(not available for Vega20 and Navi1x) and maximum memory

 *   clock labeled OD_MCLK

 *

 * - three <frequency, voltage> points labeled OD_VDDC_CURVE.

 *   They can be used to calibrate the sclk voltage curve.

 *

 * - voltage offset(in mV) applied on target voltage calculation.

 *   This is available for Sienna Cichlid, Navy Flounder and Dimgrey

 *   Cavefish. For these ASICs, the target voltage calculation can be

 *   illustrated by "voltage = voltage calculated from v/f curve +

 *   overdrive vddgfx offset"

 *

 * - a list of valid ranges for sclk, mclk, and voltage curve points

 *   labeled OD_RANGE

 *

 * < For APUs >

 *

 * Reading the file will display:

 *

 * - minimum and maximum engine clock labeled OD_SCLK

 *

 * - a list of valid ranges for sclk labeled OD_RANGE

 *

 * < For VanGogh >

 *

 * Reading the file will display:

 *

 * - minimum and maximum engine clock labeled OD_SCLK

 * - minimum and maximum core clocks labeled OD_CCLK

 *

 * - a list of valid ranges for sclk and cclk labeled OD_RANGE

 *

 * To manually adjust these settings:

 *

 * - First select manual using power_dpm_force_performance_level

 *

 * - For clock frequency setting, enter a new value by writing a

 *   string that contains "s/m index clock" to the file. The index

 *   should be 0 if to set minimum clock. And 1 if to set maximum

 *   clock. E.g., "s 0 500" will update minimum sclk to be 500 MHz.

 *   "m 1 800" will update maximum mclk to be 800Mhz. For core

 *   clocks on VanGogh, the string contains "p core index clock".

 *   E.g., "p 2 0 800" would set the minimum core clock on core

 *   2 to 800Mhz.

 *

 *   For sclk voltage curve, enter the new values by writing a

 *   string that contains "vc point clock voltage" to the file. The

 *   points are indexed by 0, 1 and 2. E.g., "vc 0 300 600" will

 *   update point1 with clock set as 300Mhz and voltage as

 *   600mV. "vc 2 1000 1000" will update point3 with clock set

 *   as 1000Mhz and voltage 1000mV.

 *

 *   To update the voltage offset applied for gfxclk/voltage calculation,

 *   enter the new value by writing a string that contains "vo offset".

 *   This is supported by Sienna Cichlid, Navy Flounder and Dimgrey Cavefish.

 *   And the offset can be a positive or negative value.

 *

 * - When you have edited all of the states as needed, write "c" (commit)

 *   to the file to commit your changes

 *

 * - If you want to reset to the default power levels, write "r" (reset)

 *   to the file to reset them

 *

/**

 * DOC: pp_features

 *

 * The amdgpu driver provides a sysfs API for adjusting what powerplay

 * features to be enabled. The file pp_features is used for this. And

 * this is only available for Vega10 and later dGPUs.

 *

 * Reading back the file will show you the followings:

 * - Current ppfeature masks

 * - List of the all supported powerplay features with their naming,

 *   bitmasks and enablement status('Y'/'N' means "enabled"/"disabled").

 *

 * To manually enable or disable a specific feature, just set or clear

 * the corresponding bit from original ppfeature masks and input the

 * new ppfeature masks.

/**

 * DOC: pp_dpm_sclk pp_dpm_mclk pp_dpm_socclk pp_dpm_fclk pp_dpm_dcefclk pp_dpm_pcie

 *

 * The amdgpu driver provides a sysfs API for adjusting what power levels

 * are enabled for a given power state.  The files pp_dpm_sclk, pp_dpm_mclk,

 * pp_dpm_socclk, pp_dpm_fclk, pp_dpm_dcefclk and pp_dpm_pcie are used for

 * this.

 *

 * pp_dpm_socclk and pp_dpm_dcefclk interfaces are only available for

 * Vega10 and later ASICs.

 * pp_dpm_fclk interface is only available for Vega20 and later ASICs.

 *

 * Reading back the files will show you the available power levels within

 * the power state and the clock information for those levels.

 *

 * To manually adjust these states, first select manual using

 * power_dpm_force_performance_level.

 * Secondly, enter a new value for each level by inputing a string that

 * contains " echo xx xx xx > pp_dpm_sclk/mclk/pcie"

 * E.g.,

 *

 * .. code-block:: bash

 *

 *	echo "4 5 6" > pp_dpm_sclk

 *

 * will enable sclk levels 4, 5, and 6.

 *

 * NOTE: change to the dcefclk max dpm level is not supported now

/*

 * Worst case: 32 bits individually specified, in octal at 12 characters

 * per line (+1 for \n).

/**

 * DOC: pp_power_profile_mode

 *

 * The amdgpu driver provides a sysfs API for adjusting the heuristics

 * related to switching between power levels in a power state.  The file

 * pp_power_profile_mode is used for this.

 *

 * Reading this file outputs a list of all of the predefined power profiles

 * and the relevant heuristics settings for that profile.

 *

 * To select a profile or create a custom profile, first select manual using

 * power_dpm_force_performance_level.  Writing the number of a predefined

 * profile to pp_power_profile_mode will enable those heuristics.  To

 * create a custom set of heuristics, write a string of numbers to the file

 * starting with the number of the custom profile along with a setting

 * for each heuristic parameter.  Due to differences across asic families

 * the heuristic parameters vary from family to family.

 *

/**

 * DOC: gpu_busy_percent

 *

 * The amdgpu driver provides a sysfs API for reading how busy the GPU

 * is as a percentage.  The file gpu_busy_percent is used for this.

 * The SMU firmware computes a percentage of load based on the

 * aggregate activity level in the IP cores.

 read the IP busy sensor */

/**

 * DOC: mem_busy_percent

 *

 * The amdgpu driver provides a sysfs API for reading how busy the VRAM

 * is as a percentage.  The file mem_busy_percent is used for this.

 * The SMU firmware computes a percentage of load based on the

 * aggregate activity level in the IP cores.

 read the IP busy sensor */

/**

 * DOC: pcie_bw

 *

 * The amdgpu driver provides a sysfs API for estimating how much data

 * has been received and sent by the GPU in the last second through PCIe.

 * The file pcie_bw is used for this.

 * The Perf counters count the number of received and sent messages and return

 * those values, as well as the maximum payload size of a PCIe packet (mps).

 * Note that it is not possible to easily and quickly obtain the size of each

 * packet transmitted, so we output the max payload size (mps) to allow for

 * quick estimation of the PCIe bandwidth usage

/**

 * DOC: unique_id

 *

 * The amdgpu driver provides a sysfs API for providing a unique ID for the GPU

 * The file unique_id is used for this.

 * This will provide a Unique ID that will persist from machine to machine

 *

 * NOTE: This will only work for GFX9 and newer. This file will be absent

 * on unsupported ASICs (GFX8 and older)

/**

 * DOC: thermal_throttling_logging

 *

 * Thermal throttling pulls down the clock frequency and thus the performance.

 * It's an useful mechanism to protect the chip from overheating. Since it

 * impacts performance, the user controls whether it is enabled and if so,

 * the log frequency.

 *

 * Reading back the file shows you the status(enabled or disabled) and

 * the interval(in seconds) between each thermal logging.

 *

 * Writing an integer to the file, sets a new logging interval, in seconds.

 * The value should be between 1 and 3600. If the value is less than 1,

 * thermal logging is disabled. Values greater than 3600 are ignored.

		/*

		 * Reset the ratelimit timer internals.

		 * This can effectively restart the timer.

/**

 * DOC: gpu_metrics

 *

 * The amdgpu driver provides a sysfs API for retrieving current gpu

 * metrics data. The file gpu_metrics is used for this. Reading the

 * file will dump all the current gpu metrics data.

 *

 * These data include temperature, frequency, engines utilization,

 * power consume, throttler status, fan speed and cpu core statistics(

 * available for APU only). That's it will give a snapshot of all sensors

 * at the same time.

/**

 * DOC: smartshift_apu_power

 *

 * The amdgpu driver provides a sysfs API for reporting APU power

 * share if it supports smartshift. The value is expressed as

 * the proportion of stapm limit where stapm limit is the total APU

 * power limit. The result is in percentage. If APU power is 130% of

 * STAPM, then APU is using 30% of the dGPU's headroom.

/**

 * DOC: smartshift_dgpu_power

 *

 * The amdgpu driver provides a sysfs API for reporting the dGPU power

 * share if the device is in HG and supports smartshift. The value

 * is expressed as the proportion of stapm limit where stapm limit

 * is the total APU power limit. The value is in percentage. If dGPU

 * power is 20% higher than STAPM power(120%), it's using 20% of the

 * APU's power headroom.

/**

 * DOC: smartshift_bias

 *

 * The amdgpu driver provides a sysfs API for reporting the

 * smartshift(SS2.0) bias level. The value ranges from -100 to 100

 * and the default is 0. -100 sets maximum preference to APU

 * and 100 sets max perference to dGPU.

 TODO: upadte bias level with SMU message */

 PCIe Perf counters won't work on APU nodes */

 the Mi series card does not support standalone mclk/socclk/fclk level setting */

 SMU MP1 does not support dcefclk level setting */

 get current junction temperature */

 get current edge temperature */

 get current memory temperature */

 get the voltage */

 only APUs have vddnb */

 get the voltage */

 get the voltage */

 convert to microwatts */

 convert to Watt */

 get the sclk */

 get the sclk */

/**

 * DOC: hwmon

 *

 * The amdgpu driver exposes the following sensor interfaces:

 *

 * - GPU temperature (via the on-die sensor)

 *

 * - GPU voltage

 *

 * - Northbridge voltage (APUs only)

 *

 * - GPU power

 *

 * - GPU fan

 *

 * - GPU gfx/compute engine clock

 *

 * - GPU memory clock (dGPU only)

 *

 * hwmon interfaces for GPU temperature:

 *

 * - temp[1-3]_input: the on die GPU temperature in millidegrees Celsius

 *   - temp2_input and temp3_input are supported on SOC15 dGPUs only

 *

 * - temp[1-3]_label: temperature channel label

 *   - temp2_label and temp3_label are supported on SOC15 dGPUs only

 *

 * - temp[1-3]_crit: temperature critical max value in millidegrees Celsius

 *   - temp2_crit and temp3_crit are supported on SOC15 dGPUs only

 *

 * - temp[1-3]_crit_hyst: temperature hysteresis for critical limit in millidegrees Celsius

 *   - temp2_crit_hyst and temp3_crit_hyst are supported on SOC15 dGPUs only

 *

 * - temp[1-3]_emergency: temperature emergency max value(asic shutdown) in millidegrees Celsius

 *   - these are supported on SOC15 dGPUs only

 *

 * hwmon interfaces for GPU voltage:

 *

 * - in0_input: the voltage on the GPU in millivolts

 *

 * - in1_input: the voltage on the Northbridge in millivolts

 *

 * hwmon interfaces for GPU power:

 *

 * - power1_average: average power used by the GPU in microWatts

 *

 * - power1_cap_min: minimum cap supported in microWatts

 *

 * - power1_cap_max: maximum cap supported in microWatts

 *

 * - power1_cap: selected power cap in microWatts

 *

 * hwmon interfaces for GPU fan:

 *

 * - pwm1: pulse width modulation fan level (0-255)

 *

 * - pwm1_enable: pulse width modulation fan control method (0: no fan speed control, 1: manual fan speed control using pwm interface, 2: automatic fan speed control)

 *

 * - pwm1_min: pulse width modulation fan control minimum level (0)

 *

 * - pwm1_max: pulse width modulation fan control maximum level (255)

 *

 * - fan1_min: a minimum value Unit: revolution/min (RPM)

 *

 * - fan1_max: a maximum value Unit: revolution/max (RPM)

 *

 * - fan1_input: fan speed in RPM

 *

 * - fan[1-\*]_target: Desired fan speed Unit: revolution/min (RPM)

 *

 * - fan[1-\*]_enable: Enable or disable the sensors.1: Enable 0: Disable

 *

 * NOTE: DO NOT set the fan speed via "pwm1" and "fan[1-\*]_target" interfaces at the same time.

 *       That will get the former one overridden.

 *

 * hwmon interfaces for GPU clocks:

 *

 * - freq1_input: the gfx/compute clock in hertz

 *

 * - freq2_input: the memory clock in hertz

 *

 * You can use hwmon tools like sensors to view this information on your system.

 *

 under multi-vf mode, the hwmon attributes are all not supported */

 there is no fan under pp one vf mode */

 Skip fan attributes if fan is not present */

 Skip fan attributes on APU */

 Skip crit temp on APU */

 Skip limit attributes if DPM is not enabled */

 mask fan attributes if we have no bindings for this asic to expose */

 can't query fan */

 can't query state */

 can't manage fan */

 can't manage state */

 not implemented yet */

 not implemented yet */

 hide max/min values if we can't both query and manage the fan */

 not implemented yet */

 not implemented yet */

 only APUs have vddnb */

 no mclk on APUs */

 only SOC15 dGPUs support hotspot and mem temperatures */

 only Vangogh has fast PPT limit and power labels */

/*

 * Debugfs info

 GPU Clocks */

 GPU Temp */

 GPU Load */

 MEM Load */

 SMC feature mask */

 VCN clocks */

 UVD clocks */

 VCE clocks */

/*

 * amdgpu_pm_priv_buffer_read - Read memory region allocated to FW

 *

 * Reads debug memory region allocated to PMFW

/*

 * Copyright 2013 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* This bit selects who handles display phy powergating.

 * Clear the bit to let atom handle it.

 * Set it to let the driver handle it.

 * For now we just let atom handle it.

 powerup blocks */

 power on the VCE block */

 power on the UVD block */

 XXX */

 stop the UVD block */

 power off the UVD block */

 power on the UVD block */

 re-init the UVD block */

 stop the VCE block */

 power off the VCE block */

 power on the VCE block */

 re-init the VCE block */

 ??? */

 ??? */

 fill in the vce power states */

 true? */

 get temperature in millidegrees */

 powerdown unused blocks for now */

 default to balanced state */

 disable dpm */

 reset the power state */

 asic init will reset to the boot state */

 thermal low to high */

 thermal high to low */

 If all performance levels are the same try to use the UVD clocks to break the tie.*/

 size must be at least 4 bytes for all sensors */

/*

 * Copyright 2013 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 sizeof(ATOM_PPLIB_EXTENDEDHEADER) */

 ??? */

 if no match return the highest voltage */

 we never hit the non-gddr5 limit so disable it */

 limit clocks to max supported clocks based on voltage dependency tables */

 XXX validate the min clocks required for display */

 adjusted low state */

 DEEP_SLEEP_CLK_SEL field should be 0x10 on tahiti A0 */

 find the first active crtc */

	/* Setting this to false forces the performance state to low if the crtcs are disabled.

	 * This can be a problem on PowerXpress systems or if you want to use the card

	 * for offscreen rendering or compute if there are no crtcs enabled.

 ??? */

 XXX validate against display requirements! */

 ??? */

 stop auto-manage */

 restart auto-manage */

 Turn the clocks on when encoding, off otherwise */

			/* Place holder for future VCE1.0 porting to amdgpu

			/* Place holder for future VCE1.0 porting to amdgpu

			vce_v1_0_enable_mgcg(adev, true, false);

 patch up vddc if necessary */

 XXX disable for A0 tahiti */

 patch up boot state */

 fill in the vce power states */

 make sure dc limits are valid */

 thermal low to high */

 thermal high to low */

TODO ?

/**

 * si_dpm_init_microcode - load ucode images from disk

 *

 * @adev: amdgpu_device pointer

 *

 * Use the firmware interface to load the ucode images into

 * the driver (not loaded into hw).

 * Returns 0 on success, error on failure.

 default to balanced state */

 disable dpm */

 reset the power state */

 asic init will reset to the boot state */

 XXX */

 XXX */

 get temperature in millidegrees */

 If all performance levels are the same try to use the UVD clocks to break the tie.*/

 size must be at least 4 bytes for all sensors */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* This interface only be supported On Vi,

 * because only smu7/8 can help to load gfx/sdma fw,

 * smu need to be enabled before load other ip's fw.

 * so call start smu to load smu7 fw and other ip's fw

 enter umd pstate, save current level, disable gfx cg*/

 exit umd pstate, restore level, enable gfx cg*/

 export to DC */

/*

 * Copyright 2013 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Alex Deucher

 RMW for the initial bytes */

 SMC address space is BE */

 RMW for the final bytes */

 SMC address space is BE */

/*

 * Copyright 2011 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Alex Deucher

 SMC address space is BE */

 RMW for the final bytes */

 SMC address space is BE */

 SMC address space is BE */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/* sviLoadLIneEn, SviLoadLineVddC, TDC_VDDC_ThrottleReleaseLimitPerc, TDC_MAWt,

 Wait for smc boot up */

 PHM_WAIT_VFPF_INDIRECT_FIELD_UNEQUAL(smumgr, SMC_IND, RCU_UC_EVENTS, boot_seq_done, 0) */

 Assert reset */

 Clear status */

 De-assert reset */

 Call Test SMU message with 0x20000 offset to trigger SMU start */

 Wait done bit to be set */

 Check pass/failed indicator */

 Wait for firmware to initialize */

 wait for smc boot up */

 Clear firmware interrupt enable flag */

 PHM_WRITE_VFPF_INDIRECT_FIELD(pSmuMgr, SMC_IND, SMC_SYSCON_MISC_CNTL, pre_fetcher_en, 1); */

 Set smc instruct start point at 0x0 */

 Wait for firmware to initialize */

 Only start SMC if SMC RAM is not running */

 Check if SMU is running in protected mode */

 Setup SoftRegsStart here for register lookup in case DummyBackEnd is used and ProcessFirmwareHeader is not executed */

 Setup BIF_SCLK levels */

 Index into DpmTable.Smio. Drive bits from Smio entry to get this voltage level.*/

	/* tables is already swapped, so in order to use the value from it,

	 * we need to swap it back.

	 * We are populating vddc CAC data to BapmVddc table

	 * in split and merged mode

	/* Index (dpm_table->pcie_speed_table.count)

 To Do move to hwmgr */

 clock - voltage dependency table is empty table */

 find first sclk bigger than request */

 sclk is bigger than max sclk in the dependence table */

 get the engine clock dividers for this clock value */

  Hardcode 10% for now. */

  Hardcode 2% for now. */

 PP_Clocks minClocks; */

 populate graphics levels */

 Making sure only DPM level 0-1 have Deep Sleep Div ID populated. */

 set pcieDpmLevel to hightest_pcie_level_enabled */

 set pcieDpmLevel to lowest_pcie_level_enabled */

 set pcieDpmLevel to mid_pcie_level_enabled */

 level count will send to smc once at init smc table and never change */

 populate MCLK dpm table to SMU7 */

 level count will send to smc once at init smc table and never change */

 find mvdd value which clock is more than request */

	/* Get MinVoltage and Frequency from DPM0,

 Get MinVoltage and Frequency from DPM0, already converted to SMC_UL */

retrieve divider value for VBIOS */

 retrieve divider value for VBIOS */

 find boot level from dpm table */

 Populate Sclk_CKS_masterEn0_7 and Sclk_voltageOffset */

 Populate CKS Lookup Table */

 Set Vddc Voltage Controller */

 Set Vddci Voltage Controller */

 only in merged mode */

 Set Mvdd Voltage Controller */

 Currently not used. Set all to zero. */

 TO DO move to hwmgr */

 Currently not used. Set all to zero. */

	/* Since only the initial state is completely set up at this point

	 * (the other states are just copies of the boot state) we only

	 * need to populate the  ARB settings for the initial state.

 Thermal Output GPIO */

		/* For porlarity read GPIOPAD_A with assigned Gpio pin

		 * since VBIOS will program this register to set 'inactive state',

		 * driver can then determine 'active state' from this and

		 * program SMU with correct polarity

 if required, combine VRHot/PCC with thermal out GPIO */

 Populate BIF_SCLK levels into SMC DPM table */

 Upload all dpm data to SMC memory.(dpm level, dpm level count etc) */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/* under sriov, vbios or hypervisor driver

	 * has already copy table to smc so here only skip it

	/* VF has no permission to change smu feature due

	 * to security concern even under pp one vf mode

	 * it still can't do it. For vega10, the smu in

	 * vbios will enable the appropriate features.

 allocate space for pptable */

 allocate space for watermarks table */

 allocate space for AVFS table */

 allocate space for AVFS Fuse table */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 MP Apertures */

/*

 * Check if SMC has responded to previous message.

 *

 * @param    smumgr  the address of the powerplay hardware manager.

 * @return   TRUE    SMC has responded, FALSE otherwise.

/*

 * Send a message to the SMC, and do not wait for its response.

 * @param    smumgr  the address of the powerplay hardware manager.

 * @param    msg the message to send.

 * @return   Always return 0.

/*

 * Send a message to the SMC, and wait for its response.

 * @param    hwmgr  the address of the powerplay hardware manager.

 * @param    msg the message to send.

 * @return   Always return 0.

/*

 * Send a message to the SMC with parameter

 * @param    hwmgr:  the address of the powerplay hardware manager.

 * @param    msg: the message to send.

 * @param    parameter: the parameter to send

 * @return   Always return 0.

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/* sviLoadLIneEn, SviLoadLineVddC, TDC_VDDC_ThrottleReleaseLimitPerc, TDC_MAWt,

  Min      pcie   DeepSleep Activity  CgSpll      CgSpll    CcPwr  CcPwr  Sclk         Enabled      Enabled                       Voltage    Power */

 Voltage, DpmLevel, DivId,  Level,  FuncCntl3,  FuncCntl4,  DynRm, DynRm1 Did, Padding,ForActivity, ForThrottle, UpHyst, DownHyst, DownHyst, Throttle */

 Soft-Reset to reset the engine before loading uCode */

 halt */

 reset everything */

  Default value for VRConfig = VR_MERGED_WITH_VDDC + VR_STATIC_VOLTAGE(VDDCI) */

 Real value:0x50001 */

 MVDD Boot value - neccessary for getting rid of the hang that occurs during Mclk DPM enablement */

 Wait for smc boot up */

 PHM_WAIT_VFPF_INDIRECT_FIELD_UNEQUAL(smumgr, SMC_IND, RCU_UC_EVENTS, boot_seq_done, 0) */

 Assert reset */

 Clear status */

 De-assert reset */

 Call Test SMU message with 0x20000 offset to trigger SMU start */

 Wait done bit to be set */

 Check pass/failed indicator */

 Wait for firmware to initialize */

 wait for smc boot up */

 Clear firmware interrupt enable flag */

 PHM_WRITE_VFPF_INDIRECT_FIELD(pSmuMgr, SMC_IND, SMC_SYSCON_MISC_CNTL, pre_fetcher_en, 1); */

 Set smc instruct start point at 0x0 */

 Wait for firmware to initialize */

 Only start SMC if SMC RAM is not running */

 Check if SMU is running in protected mode */

 Setup SoftRegsStart here for register lookup in case DummyBackEnd is used and ProcessFirmwareHeader is not executed */

 clock - voltage dependency table is empty table */

 find first sclk bigger than request */

 sclk is bigger than max sclk in the dependence table */

 Currently not used. Set all to zero. */

 TO DO move to hwmgr */

 Currently not used. Set all to zero. */

 Index into DpmTable.Smio. Drive bits from Smio entry to get this voltage level.*/

	/* tables is already swapped, so in order to use the value from it,

	 * we need to swap it back.

	 * We are populating vddc CAC data to BapmVddc table

	 * in split and merged mode

	/* Index (dpm_table->pcie_speed_table.count)

 To Do move to hwmgr */

 get the engine clock dividers for this clock value */

  Hardcode 10% for now. */

  Hardcode 2% for now. */

 PP_Clocks minClocks; */

 populate graphics levels */

	/* Default to slow, highest DPM level will be

	 * set to PPSMC_DISPLAY_WATERMARK_LOW later.

 Making sure only DPM level 0-1 have Deep Sleep Div ID populated. */

 set pcieDpmLevel to hightest_pcie_level_enabled */

 set pcieDpmLevel to lowest_pcie_level_enabled */

 set pcieDpmLevel to mid_pcie_level_enabled */

 level count will send to smc once at init smc table and never change */

 populate MCLK dpm table to SMU7 */

 level count will send to smc once at init smc table and never change */

 find mvdd value which clock is more than request */

	/* Get MinVoltage and Frequency from DPM0,

 Get MinVoltage and Frequency from DPM0, already converted to SMC_UL */

 To align with the settings from other OSes */

retrieve divider value for VBIOS */

retrieve divider value for VBIOS */

 retrieve divider value for VBIOS */

 find boot level from dpm table */

	/* Read SMU_Eefuse to read and calculate RO and determine

	 * if the part is SS or FF. if RO >= 1660MHz, part is FF.

 Populate Sclk_CKS_masterEn0_7 and Sclk_voltageOffset */

 Populate CKS Lookup Table */

 Set Vddc Voltage Controller */

 Set Vddci Voltage Controller */

 only in merged mode */

 Set Mvdd Voltage Controller */

	/* Since only the initial state is completely set up at this point

	 * (the other states are just copies of the boot state) we only

	 * need to populate the  ARB settings for the initial state.

 Thermal Output GPIO */

		/* For porlarity read GPIOPAD_A with assigned Gpio pin

		 * since VBIOS will program this register to set 'inactive state',

		 * driver can then determine 'active state' from this and

		 * program SMU with correct polarity

 if required, combine VRHot/PCC with thermal out GPIO */

 Populate BIF_SCLK levels into SMC DPM table */

 Upload all dpm data to SMC memory.(dpm level, dpm level count etc) */

	/* Apply avfs cks-off voltages to avoid the overshoot

	 * when switching to the highest sclk frequency

 use hardware fan control */

 Setup BIF_SCLK levels */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Bytes are written into the SMC address space with the MSB first. */

 Bytes are written into the SMC addres space with the MSB first. */

 get the engine clock dividers for this clock value */

 To get FBDIV we need to multiply this by 16384 and divide it by Fref. */

 low 14 bits is fraction and high 12 bits is divider */

 SPLL_FUNC_CNTL setup */

 SPLL_FUNC_CNTL_3 setup*/

 set to use fractional accumulation*/

 use the minimum phase shedding */

 populate graphics levels */

 this level can be used for throttling.*/

 Default to slow, highest DPM level will be set to PPSMC_DISPLAY_WATERMARK_LOW later.*/

 DW0 - DW3 */

 DW4 - DW5 */

 DW6 */

 DW7 */

 DW8 */

 GPIO voltage control */

 use minimum voltage if ulv voltage in pptable is bigger than minimum voltage */

 used in SMIO Mode. not implemented for now. this is backup only for CI. */

 use minimum voltage if ulv voltage in pptable is bigger than minimum voltage */

 used in SVI2 Mode */

 Index dpm_table->pcie_speed_table.count is reserved for PCIE boot level.*/

 for GDDR5 for all modes and DDR3 */

 tmp = (freq_nom / reference_clock * reference_divider) ^ 2  Note: S.I. reference_divider = 1*/

 Indicates maximum activity level for this performance level.*/

 default set to low watermark. Highest level will be set to high later.*/

 stutter mode not support on ci */

 decide strobe mode*/

 decide EDC mode and memory clock ratio*/

 MCLK frequency in units of 10KHz*/

 Indicates maximum activity level for this performance level.*/

 find mvdd value which clock is more than request */

 Always round to higher voltage. */

 The ACPI state should not do DPM on DC (or ever).*/

 assign zero for now*/

 get the engine clock dividers for this clock value*/

 divider ID for required SCLK*/

 For various features to be enabled/disabled while this level is active.*/

 SCLK frequency in units of 10KHz*/

 table->MemoryACPILevel.MinVddcPhases = table->ACPILevel.MinVddcPhases;*/

 Force reset on DLL*/

 Disable DLL in ACPIState*/

 Enable DLL bypass signal*/

 Indicates maximum activity level for this performance level.*/

 find boot level from dpm table*/

 set smc instruct start point at 0x0 */

 enable smc clock */

 Since only the initial state is completely set up at this point (the other states are just copies of the boot state) we only */

 need to populate the  ARB settings for the initial state. */

 Upload all dpm data to SMC memory.(dpm level, dpm level count etc) */

 Program additional LP registers that are no longer programmed by VBIOS */

 temp hard code to level 0, vce can set min evclk*/

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 allocate space for watermarks table */

 allocate space for watermarks table */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Author: Huang Rui <ray.huang@amd.com>

 *

	/*

	 * sviLoadLIneEn, SviLoadLineVddC, TDC_VDDC_ThrottleReleaseLimitPerc,

	 * TDC_MAWt, TdcWaterfallCtl, DTEAmbientTempBase, DisplayCac, BAPM_TEMP_GRADIENT

 35W - XT, XTL */

	/*

	 * sviLoadLIneEn, SviLoadLineVddC,

	 * TDC_VDDC_ThrottleReleaseLimitPerc, TDC_MAWt,

	 * TdcWaterfallCtl, DTEAmbientTempBase, DisplayCac,

	 * BAPM_TEMP_GRADIENT

 25W - PRO, LE */

	/*

	 * sviLoadLIneEn, SviLoadLineVddC,

	 * TDC_VDDC_ThrottleReleaseLimitPerc, TDC_MAWt,

	 * TdcWaterfallCtl, DTEAmbientTempBase, DisplayCac,

	 * BAPM_TEMP_GRADIENT

 set smc instruct start point at 0x0 */

 enable smc clock */

 de-assert reset */

 load SMC firmware */

 wait for smc boot up */

 clear firmware interrupt enable flag */

 stop smc clock */

 reset smc */

	/* Setup SoftRegsStart here to visit the register UcodeLoadStatus

	 * to check fw loading state

 Currently not used. Set all to zero. */

 DW0 - DW3 */

 DW4 - DW5 */

 DW6 */

 DW7 */

 DW8 */

 DW9-DW12 */

 DW13-DW16 */

 DW18 */

 clock - voltage dependency table is empty table */

 find first sclk bigger than request */

 sclk is bigger than max sclk in the dependence table */

 SCLK/VDDC Dependency Table has to exist. */

	/*

	 * Since voltage in the sclk/vddc dependency table is not

	 * necessarily in ascending order because of ELB voltage

	 * patching, loop through entire list to find exact voltage.

	/*

	 * If voltage is not found in the first pass, loop again to

	 * find the best match, equal or higher value.

 GPIO voltage control */

 use minimum voltage if ulv voltage in pptable is bigger than minimum voltage */

 used in SMIO Mode. not implemented for now. this is backup only for CI. */

 use minimum voltage if ulv voltage in pptable is bigger than minimum voltage */

 used in SVI2 Mode */

 Index (dpm_table->pcie_speed_table.count) is reserved for PCIE boot level. */

 get the engine clock dividers for this clock value*/

 To get FBDIV we need to multiply this by 16384 and divide it by Fref.*/

 low 14 bits is fraction and high 12 bits is divider*/

 SPLL_FUNC_CNTL setup*/

 SPLL_FUNC_CNTL_3 setup*/

 set to use fractional accumulation*/

			/*

			* ss_info.speed_spectrum_percentage -- in unit of 0.01%

			* ss_info.speed_spectrum_rate -- in unit of khz

 clks = reference_clock * 10 / (REFDIV + 1) / speed_spectrum_rate / 2 */

 clkv = 2 * D * fbdiv / NS */

 use the minimum phase shedding */

 populate graphics levels*/

 SCLK frequency in units of 10KHz*/

 Indicates maximum activity level for this performance level. 50% for now*/

 this level can be used if activity is high enough.*/

 this level can be used for throttling.*/

 Default to slow, highest DPM level will be set to PPSMC_DISPLAY_WATERMARK_LOW later.*/

 Making sure only DPM level 0-1 have Deep Sleep Div ID populated. */

 Only enable level 0 for now. */

 set highest level watermark to high */

 set pcieDpmLevel to highest_pcie_level_enabled*/

 set pcieDpmLevel to lowest_pcie_level_enabled*/

 set pcieDpmLevel to mid_pcie_level_enabled*/

 level count will send to smc once at init smc table and never change*/

 MPLL_FUNC_CNTL setup*/

 MPLL_FUNC_CNTL_1 setup*/

 MPLL_AD_FUNC_CNTL setup*/

 MPLL_DQ_FUNC_CNTL setup*/

		/*

		 ************************************

		 Fref = Reference Frequency

		 NF = Feedback divider ratio

		 NR = Reference divider ratio

		 Fnom = Nominal VCO output frequency = Fref * NF / NR

		 Fs = Spreading Rate

		 D = Percentage down-spread / 2

		 Fint = Reference input frequency to PFD = Fref / NR

		 NS = Spreading rate divider ratio = int(Fint / (2 * Fs))

		 CLKS = NS - 1 = ISS_STEP_NUM[11:0]

		 NV = D * Fs / Fnom * 4 * ((Fnom/Fref * NR) ^ 2)

		 CLKV = 65536 * NV = ISS_STEP_SIZE[25:0]

		 *************************************

 for GDDR5 for all modes and DDR3 */

 tmp = (freq_nom / reference_clock * reference_divider) ^ 2  Note: S.I. reference_divider = 1*/

 ss_info.speed_spectrum_percentage -- in unit of 0.01% */

 ss.Info.speed_spectrum_rate -- in unit of khz */

 CLKS = reference_clock / (2 * speed_spectrum_rate * reference_divider) * 10 */

     = reference_clock * 5 / speed_spectrum_rate */

 CLKV = 65536 * speed_spectrum_percentage / 2 * spreadSpecrumRate / freq_nom * 4 / 100000 * ((freq_nom / reference_clock) ^ 2) */

     = 131 * speed_spectrum_percentage * speed_spectrum_rate / 100 * ((freq_nom / reference_clock) ^ 2) / freq_nom */

 MCLK_PWRMGT_CNTL setup */

 Save the result data to outpupt memory level structure */

 Indicates maximum activity level for this performance level.*/

 default set to low watermark. Highest level will be set to high later.*/

 stutter mode not support on iceland */

 decide strobe mode*/

 decide EDC mode and memory clock ratio*/

 MCLK frequency in units of 10KHz*/

 Indicates maximum activity level for this performance level.*/

 populate MCLK dpm table to SMU7 */

 Only enable level 0 for now.*/

	/*

	* in order to prevent MC activity from stutter mode to push DPM up.

	* the UVD change complements this by putting the MCLK in a higher state

	* by default such that we are not effected by up threshold or and MCLK DPM latency.

 set highest level watermark to high*/

 level count will send to smc once at init smc table and never change*/

 find mvdd value which clock is more than request */

 Always round to higher voltage. */

 The ACPI state should not do DPM on DC (or ever).*/

 assign zero for now*/

 get the engine clock dividers for this clock value*/

 divider ID for required SCLK*/

 For various features to be enabled/disabled while this level is active.*/

 SCLK frequency in units of 10KHz*/

 table->MemoryACPILevel.MinVddcPhases = table->ACPILevel.MinVddcPhases;*/

 Force reset on DLL*/

 Disable DLL in ACPIState*/

 Enable DLL bypass signal*/

 Indicates maximum activity level for this performance level.*/

 find boot level from dpm table*/

convert register values from driver to SMC format */

	/*

	 * TDP number of fraction bits are changed from 8 to 7 for Iceland

	 * as requested by SMC team

 The following are for new Iceland Multi-input fan/thermal control */

 Since only the initial state is completely set up at this point (the other states are just copies of the boot state) we only */

 need to populate the  ARB settings for the initial state. */

 Upload all dpm data to SMC memory.(dpm level, dpm level count etc) */

 Upload all ulv setting to SMC memory.(dpm level, dpm level count etc) */

 fan_table.FanControl_GL_Flag = 1; */

---------------------------MC----------------------------*/

 Program additional LP registers that are no longer programmed by VBIOS */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* [2.5%,~2.5%] Clock stretched is multiple of 2.5% vs

 * not and [Fmin, Fmax, LDO_REFSEL, USE_FOR_LOW_FREQ]

/* [FF, SS] type, [] 4 voltage ranges, and

 * [Floor Freq, Boundary Freq, VID min , VID max]

/* [Use_For_Low_freq] value, [0%, 5%, 10%, 7.14%, 14.28%, 20%]

 * (coming from PWR_CKS_CNTL.stretch_amount reg spec)

sviLoadLIneEn,  SviLoadLineVddC, TDC_VDDC_ThrottleReleaseLimitPerc */

 TDC_MAWt, TdcWaterfallCtl, DTEAmbientTempBase */

  Min        Sclk       pcie     DeepSleep Activity  CgSpll      CgSpll    spllSpread  SpllSpread   CcPwr  CcPwr  Sclk   Display     Enabled     Enabled                       Voltage    Power */

 Voltage,  Frequency,  DpmLevel,  DivId,    Level,  FuncCntl3,  FuncCntl4,  Spectrum,   Spectrum2,  DynRm, DynRm1  Did, Watermark, ForActivity, ForThrottle, UpHyst, DownHyst, DownHyst, Throttle */

 Wait for smc boot up */

	/* PHM_WAIT_INDIRECT_FIELD_UNEQUAL(hwmgr, SMC_IND,

 Clear status */

 De-assert reset */

 Wait for ROM firmware to initialize interrupt hendler */

	/*SMUM_WAIT_VFPF_INDIRECT_REGISTER(hwmgr, SMC_IND,

 Set SMU Auto Start */

 Clear firmware interrupt enable flag */

 Wait for done bit to be set */

 Check pass/failed indicator */

 Wait for firmware to initialize */

 wait for smc boot up */

 Clear firmware interrupt enable flag */

 Assert reset */

 Set smc instruct start point at 0x0 */

 Enable clock */

 De-assert reset */

 Wait for firmware to initialize */

 Soft-Reset to reset the engine before loading uCode */

 halt */

 reset everything */

 clear reset */

	/* Default value for vr_config =

 Real value:0x50001 */

 Only start SMC if SMC RAM is not running */

 Check if SMU is running in protected mode */

	/* Setup SoftRegsStart here for register lookup in case

	 * DummyBackEnd is used and ProcessFirmwareHeader is not executed

 clock - voltage dependency table is empty table */

 find first sclk bigger than request */

 sclk is bigger than max sclk in the dependence table */

	/* TDP number of fraction bits are changed from 8 to 7 for Fiji

	 * as requested by SMC team

 The following are for new Fiji Multi-input fan/thermal control */

	/* TDC number of fraction bits are changed from 8 to 7

	 * for Fiji as requested by SMC team

 Currently not used. Set all to zero. */

 Currently not used. Set all to zero. */

 DW6 */

 DW7 */

 DW8 */

 DW9-DW12 */

 DW13-DW14 */

 DW15-DW18 */

 DW20 */

	/* tables is already swapped, so in order to use the value from it,

	 * we need to swap it back.

	 * We are populating vddc CAC data to BapmVddc table

	 * in split and merged mode

	/* Index (dpm_table->pcie_speed_table.count)

 get the engine clock dividers for this clock value */

 To get FBDIV we need to multiply this by 16384 and divide it by Fref. */

 low 14 bits is fraction and high 12 bits is divider */

 SPLL_FUNC_CNTL setup */

 SPLL_FUNC_CNTL_3 setup*/

 set to use fractional accumulation*/

			/*

			 * ss_info.speed_spectrum_percentage -- in unit of 0.01%

			 * ss_info.speed_spectrum_rate -- in unit of khz

			 *

			 * clks = reference_clock * 10 / (REFDIV + 1) / speed_spectrum_rate / 2

 clkv = 2 * D * fbdiv / NS */

 PP_Clocks minClocks; */

 populate graphics levels */

	/* Default to slow, highest DPM level will be

	 * set to PPSMC_DISPLAY_WATERMARK_LOW later.

 Making sure only DPM level 0-1 have Deep Sleep Div ID populated. */

 Only enable level 0 for now.*/

 set highest level watermark to high */

 set pcieDpmLevel to hightest_pcie_level_enabled */

 set pcieDpmLevel to lowest_pcie_level_enabled */

 set pcieDpmLevel to mid_pcie_level_enabled */

 level count will send to smc once at init smc table and never change */

/*

 * MCLK Frequency Ratio

 * SEQ_CG_RESP  Bit[31:24] - 0x0

 * Bit[27:24] \96 DDR3 Frequency ratio

 * 0x0 <= 100MHz,       450 < 0x8 <= 500MHz

 * 100 < 0x1 <= 150MHz,       500 < 0x9 <= 550MHz

 * 150 < 0x2 <= 200MHz,       550 < 0xA <= 600MHz

 * 200 < 0x3 <= 250MHz,       600 < 0xB <= 650MHz

 * 250 < 0x4 <= 300MHz,       650 < 0xC <= 700MHz

 * 300 < 0x5 <= 350MHz,       700 < 0xD <= 750MHz

 * 350 < 0x6 <= 400MHz,       750 < 0xE <= 800MHz

 * 400 < 0x7 <= 450MHz,       800 < 0xF

 mem_clock > 800MHz */

 Save the result data to outpupt memory level structure */

	/* enable stutter mode if all the follow condition applied

	 * PECI_GetNumberOfActiveDisplays(hwmgr->pPECI,

	 * &(data->DisplayTiming.numExistingDisplays));

 populate MCLK dpm table to SMU7 */

 Only enable level 0 for now. */

	/* in order to prevent MC activity from stutter mode to push DPM up.

	 * the UVD change complements this by putting the MCLK in

	 * a higher state by default such that we are not effected by

	 * up threshold or and MCLK DPM latency.

 set highest level watermark to high */

 level count will send to smc once at init smc table and never change */

 find mvdd value which clock is more than request */

		/* Get MinVoltage and Frequency from DPM0,

 get the engine clock dividers for this clock value */

 Get MinVoltage and Frequency from DPM0, already converted to SMC_UL */

retrieve divider value for VBIOS */

 retrieve divider value for VBIOS */

 retrieve divider value for VBIOS */

 find boot level from dpm table */

	/* Read SMU_Eefuse to read and calculate RO and determine

	 * if the part is SS or FF. if RO >= 1660MHz, part is FF.

 Populate Stretch amount */

 Populate Sclk_CKS_masterEn0_7 and Sclk_voltageOffset */

 Populate CKS Lookup Table */

 Program PWR_CKS_CNTL. CKS_USE_FOR_LOW_FREQ */

 Program PWR_CKS_CNTL. CKS_LDO_REFSEL */

 Program PWR_CKS_CNTL. CKS_STRETCH_AMOUNT */

 Populate DDT Lookup Table */

		/* Assign the minimum and maximum VID stored

		 * in the last row of Clock Stretcher Voltage Table.

		/* Loop through each SCLK and check the frequency

		 * to see if it lies within the frequency for clock stretcher.

			/* Check the allowed frequency against the sclk level[j].

			 *  Sclk's endianness has already been converted,

			 *  and it's in 10Khz unit,

			 *  as opposed to Data table, which is in Mhz unit.

 Set Vddc Voltage Controller */

 Set Vddci Voltage Controller */

 only in merged mode */

 Set Mvdd Voltage Controller */

	/* This is a read-modify-write on the first byte of the ARB table.

	 * The first byte in the SMU73_Discrete_MCArbDramTimingTable structure

	 * is the field 'current'.

	 * This solution is ugly, but we never write the whole table only

	 * individual fields in it.

	 * In reality this field should not be in that structure

	 * but in a soft register.

	/* Since only the initial state is completely set up at this point

	 * (the other states are just copies of the boot state) we only

	 * need to populate the  ARB settings for the initial state.

 0:Gen1 1:Gen2 2:Gen3*/

 Thermal Output GPIO */

		/* For porlarity read GPIOPAD_A with assigned Gpio pin

		 * since VBIOS will program this register to set 'inactive state',

		 * driver can then determine 'active state' from this and

		 * program SMU with correct polarity

 if required, combine VRHot/PCC with thermal out GPIO */

 Upload all dpm data to SMC memory.(dpm level, dpm level count etc) */

	/* Program additional LP registers

	 * that are no longer programmed by VBIOS

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 on ci, SMC_IND_ACCESS_CNTL is different */

 Cast dest into byte type in dest_byte.  This way, we don't overflow if the allocated memory is not 4-byte aligned. */

 Bytes are written into the SMC addres space with the MSB first. */

 Bytes are written into the SMC addres space with the MSB first. */

 digest need be excluded out */

 add support for Topaz */

 Check if the FW has been loaded, SMU will not return if loading has not finished. */

 Allocate memory for backend private data */

/* Allocate FW image data structure and header buffer and

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Copy table from SMC into driver FB

 * @param   hwmgr    the address of the HW manager

 * @param   table_id    the driver's table ID to copy from

/*

 * Copy table from Driver FB into SMC

 * @param   hwmgr    the address of the HW manager

 * @param   table_id    the table to copy from

 allocate space for pptable */

 allocate space for watermarks table */

 allocate space for AVFS Fuse table */

 allocate space for OverDrive table */

 allocate space for SMU_METRICS table */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

this interface is needed by island ci/vi */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* sviLoadLIneEn, SviLoadLineVddC, TDC_VDDC_ThrottleReleaseLimitPerc,  TDC_MAWt,

 * TdcWaterfallCtl, DTEAmbientTempBase, DisplayCac,        BAPM_TEMP_GRADIENT

 [Fmin, Fmax, LDO_REFSEL, USE_FOR_LOW_FREQ] */

/* [FF, SS] type, [] 4 voltage ranges,

 * and [Floor Freq, Boundary Freq, VID min , VID max]

 [Use_For_Low_freq] value, [0%, 5%, 10%, 7.14%, 14.28%, 20%] */

 Assert reset */

 Clear status */

 Enable clock */

 De-assert reset */

 Set SMU Auto Start */

 Clear firmware interrupt enable flag */

	/**

	 * Call Test SMU message with 0x20000 offset to trigger SMU start

 Wait for done bit to be set */

 Check pass/failed indicator */

 Wait for firmware to initialize */

 wait for smc boot up */

Clear firmware interrupt enable flag*/

 Set smc instruct start point at 0x0 */

De-assert reset*/

 Wait for firmware to initialize */

 Only start SMC if SMC RAM is not running */

Check if SMU is running in protected mode*/

	/* Setup SoftRegsStart here to visit the register UcodeLoadStatus

	 * to check fw loading state

 clock - voltage dependency table is empty table */

 find first sclk bigger than request */

 sclk is bigger than max sclk in the dependence table */

 Index into DpmTable.Smio. Drive bits from Smio entry to get this voltage level. */

 Index into DpmTable.Smio. Drive bits from Smio entry to get this voltage level.*/

	/* table is already swapped, so in order to use the value from it

	 * we need to swap it back.

 We are populating vddc CAC data to BapmVddc table in split and merged mode */

 We are populating vddgfx CAC data to BapmVddgfx table in split mode */

 Index (dpm_table->pcie_speed_table.count) is reserved for PCIE boot level. */

 get the engine clock dividers for this clock value*/

 To get FBDIV we need to multiply this by 16384 and divide it by Fref.*/

 low 14 bits is fraction and high 12 bits is divider*/

 SPLL_FUNC_CNTL setup*/

 SPLL_FUNC_CNTL_3 setup*/

 set to use fractional accumulation*/

			/*

			* ss_info.speed_spectrum_percentage -- in unit of 0.01%

			* ss_info.speed_spectrum_rate -- in unit of khz

 clks = reference_clock * 10 / (REFDIV + 1) / speed_spectrum_rate / 2 */

 clkv = 2 * D * fbdiv / NS */

 populate graphics levels*/

 SCLK frequency in units of 10KHz*/

 Indicates maximum activity level for this performance level. 50% for now*/

 this level can be used if activity is high enough.*/

 this level can be used for throttling.*/

 Default to slow, highest DPM level will be set to PPSMC_DISPLAY_WATERMARK_LOW later.*/

 CONVERT_FROM_HOST_TO_SMC_UL(graphic_level->MinVoltage);*/

 CONVERT_FROM_HOST_TO_SMC_UL(graphic_level->MinVddcPhases);*/

 Making sure only DPM level 0-1 have Deep Sleep Div ID populated. */

 Only enable level 0 for now. */

 set highest level watermark to high */

 for indexing, we need to decrement by 1.*/

 set pcieDpmLevel to highest_pcie_level_enabled*/

 set pcieDpmLevel to lowest_pcie_level_enabled*/

 set pcieDpmLevel to mid_pcie_level_enabled*/

 level count will send to smc once at init smc table and never change*/

 MPLL_FUNC_CNTL setup*/

 MPLL_FUNC_CNTL_1 setup*/

 MPLL_AD_FUNC_CNTL setup*/

 MPLL_DQ_FUNC_CNTL setup*/

		/*

		 ************************************

		 Fref = Reference Frequency

		 NF = Feedback divider ratio

		 NR = Reference divider ratio

		 Fnom = Nominal VCO output frequency = Fref * NF / NR

		 Fs = Spreading Rate

		 D = Percentage down-spread / 2

		 Fint = Reference input frequency to PFD = Fref / NR

		 NS = Spreading rate divider ratio = int(Fint / (2 * Fs))

		 CLKS = NS - 1 = ISS_STEP_NUM[11:0]

		 NV = D * Fs / Fnom * 4 * ((Fnom/Fref * NR) ^ 2)

		 CLKV = 65536 * NV = ISS_STEP_SIZE[25:0]

		 *************************************

 for GDDR5 for all modes and DDR3 */

 tmp = (freq_nom / reference_clock * reference_divider) ^ 2  Note: S.I. reference_divider = 1*/

 ss_info.speed_spectrum_percentage -- in unit of 0.01% */

 ss.Info.speed_spectrum_rate -- in unit of khz */

 CLKS = reference_clock / (2 * speed_spectrum_rate * reference_divider) * 10 */

     = reference_clock * 5 / speed_spectrum_rate */

 CLKV = 65536 * speed_spectrum_percentage / 2 * spreadSpecrumRate / freq_nom * 4 / 100000 * ((freq_nom / reference_clock) ^ 2) */

     = 131 * speed_spectrum_percentage * speed_spectrum_rate / 100 * ((freq_nom / reference_clock) ^ 2) / freq_nom */

 MCLK_PWRMGT_CNTL setup */

 Save the result data to outpupt memory level structure */

 Indicates maximum activity level for this performance level.*/

 default set to low watermark. Highest level will be set to high later.*/

 decide strobe mode*/

 decide EDC mode and memory clock ratio*/

 MCLK frequency in units of 10KHz*/

 Indicates maximum activity level for this performance level.*/

 populate MCLK dpm table to SMU7 */

 Only enable level 0 for now.*/

	/*

	* in order to prevent MC activity from stutter mode to push DPM up.

	* the UVD change complements this by putting the MCLK in a higher state

	* by default such that we are not effected by up threshold or and MCLK DPM latency.

 set highest level watermark to high*/

 level count will send to smc once at init smc table and never change*/

 find mvdd value which clock is more than request */

 Always round to higher voltage. */

 The ACPI state should not do DPM on DC (or ever).*/

 assign zero for now*/

 get the engine clock dividers for this clock value*/

 divider ID for required SCLK*/

 For various features to be enabled/disabled while this level is active.*/

 SCLK frequency in units of 10KHz*/

 table->MemoryACPILevel.MinVddcPhases = table->ACPILevel.MinVddcPhases;*/

  CONVERT_FROM_HOST_TO_SMC_UL(table->MemoryACPILevel.MinVoltage);*/

 Force reset on DLL*/

 Disable DLL in ACPIState*/

 Enable DLL bypass signal*/

 Indicates maximum activity level for this performance level.*/

 retrieve divider value for VBIOS */

 retrieve divider value for VBIOS */

 retrieve divider value for VBIOS */

 find boot level from dpm table*/

	/* Read SMU_Eefuse to read and calculate RO and determine

	 * if the part is SS or FF. if RO >= 1660MHz, part is FF.

 Populate Stretch amount */

 Populate Sclk_CKS_masterEn0_7 and Sclk_voltageOffset */

 Populate CKS Lookup Table */

 Program PWR_CKS_CNTL. CKS_USE_FOR_LOW_FREQ */

 Program PWR_CKS_CNTL. CKS_LDO_REFSEL */

 Program PWR_CKS_CNTL. CKS_STRETCH_AMOUNT */

 Populate DDT Lookup Table */

		/* Assign the minimum and maximum VID stored

		 * in the last row of Clock Stretcher Voltage Table.

		/* Loop through each SCLK and check the frequency

		 * to see if it lies within the frequency for clock stretcher.

			/* Check the allowed frequency against the sclk level[j].

			 *  Sclk's endianness has already been converted,

			 *  and it's in 10Khz unit,

			 *  as opposed to Data table, which is in Mhz unit.

  Splitted mode */

 Merged mode  */

 Set Vddc Voltage Controller  */

 Set Vddci Voltage Controller  */

 only in merged mode */

 Set Mvdd Voltage Controller */

	/*

	* This is a read-modify-write on the first byte of the ARB table.

	* The first byte in the SMU72_Discrete_MCArbDramTimingTable structure

	* is the field 'current'.

	* This solution is ugly, but we never write the whole table only

	* individual fields in it.

	* In reality this field should not be in that structure

	* but in a soft register.

	/* TDC number of fraction bits are changed from 8 to 7

	 * for Fiji as requested by SMC team

 Currently not used. Set all to zero. */

 Currently not used. Set all to zero. */

 DW6 */

 DW7 */

 DW8 */

 DW9-DW12 */

 DW13-DW14 */

 DW15-DW18 */

 DW20 */

convert register values from driver to SMC format */

	/* Since only the initial state is completely set up at this

	* point (the other states are just copies of the boot state) we only

	* need to populate the  ARB settings for the initial state.

	/*

	* Cail reads current link status and reports it as cap (we cannot

	* change this due to some previous issues we had)

	* SMC drops the link status to lowest level after enabling

	* DPM by PowerPlay. After pnp or toggling CF, driver gets reloaded again

	* but this time Cail reads current link status which was set to low by

	* SMC and reports it as cap to powerplay

	* To avoid it, we set PCIeBootLinkLevel to highest dpm level

 if required, combine VRHot/PCC with thermal out GPIO*/

 Upload all dpm data to SMC memory.(dpm level, dpm level count etc) */

---------------------------MC----------------------------*/

 Program additional LP registers that are no longer programmed by VBIOS */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Send a message to the SMC, and wait for its response.*/

 Read the last message to SMU, to report actual cause */

 Disable MEC parsing/prefetching */

 populate scratch */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 MP Apertures */

 address block */

/*

 * Check if SMC has responded to previous message.

 *

 * @param    smumgr  the address of the powerplay hardware manager.

 * @return   TRUE    SMC has responded, FALSE otherwise.

/*

 * Send a message to the SMC, and do not wait for its response.

 * @param    smumgr  the address of the powerplay hardware manager.

 * @param    msg the message to send.

 * @return   Always return 0.

/*

 * Send a message to the SMC, and wait for its response.

 * @param    hwmgr  the address of the powerplay hardware manager.

 * @param    msg the message to send.

 * @return   Always return 0.

/*

 * Send a message to the SMC with parameter

 * @param    hwmgr:  the address of the powerplay hardware manager.

 * @param    msg: the message to send.

 * @param    parameter: the parameter to send

 * @return   Always return 0.

/*

 * Copy table from SMC into driver FB

 * @param   hwmgr    the address of the HW manager

 * @param   table_id    the driver's table ID to copy from

/*

 * Copy table from Driver FB into SMC

 * @param   hwmgr    the address of the HW manager

 * @param   table_id    the table to copy from

 allocate space for pptable */

 allocate space for watermarks table */

 allocate space for pmstatuslog table */

 allocate space for OverDrive table */

 allocate space for SmuMetrics table */

 allocate space for ActivityMonitor table */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 power tune caps */

 assume disabled */

 Get the SN to turn into a Unique ID */

 need to set voltage control types before EVV patching */

 Parse pptable data read from VBIOS */

 IRQ_SOURCE1_SW_INT */

 The true clock step depends on the frequency, typically 4.5 or 9 MHz. Here we use 5. */

 Setup default Overdrive Fan control settings */

/*

 * @fn vega12_init_dpm_state

 * @brief Function to initialize all Soft Min/Max and Hard Min/Max to 0xff.

 *

 * @param    dpm_state - the address of the DPM Table to initiailize.

 * @return   None.

	/* Bit 31:16: LCLK DPM level. 0 is DPM0, and 1 is DPM1

	 * Bit 15:8:  PCIE GEN, 0 to 3 corresponds to GEN1 to GEN4

	 * Bit 7:0:   PCIE lane width, 1 to 7 corresponds is x1 to x32

 update the pptable */

 override to the highest if it's disabled from ppfeaturmask */

	/*

	 *SMU expects the Clock ID to be in the top 16 bits.

	 *Lower 16 bits specify the level

/*

 * This function is to initialize all DPM state tables

 * for SMU based on the dependency table.

 * Dynamic state patching function will then trim these

 * state tables to the allowed range based

 * on the power policy or external client requests,

 * such as UVD request, etc.

 socclk */

 gfxclk */

 memclk */

 eclk */

 vclk */

 dclk */

 dcefclk */

 pixclk */

 dispclk */

 phyclk */

 save a copy of the default DPM table */

	/* Optimize compute power profile: Use only highest

	 * 2 power levels (if more than 2 are available)

/**

 * vega12_init_smc_table - Initializes the SMC table and uploads it

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * return:  always 0

 AC Max */

 AC Min */

 DC Max */

TODO: Setting DCEFCLK max dpm level is not supported

 gfxclk */

 memclk */

 honour DAL's UCLK Hardmin */

 Hardmin is dependent on displayconfig */

 vclk */

 dclk */

 socclk */

 eclk */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

dump_pptable(&powerplay_table->smcPPTable);

 enable TDP overdrive (PowerControl) feature as well if supported */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 make sure dc limits are valid */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 by default, we delay 1us */

 disable until UNB is ready, Enabled */

 disable until fully verified */

 convert form 8bit vid to real voltage in mV*4 */

 Here use 4 levels, make sure not exceed */

 patch clock table */

 vddc_sclk */

 vddgfx_sclk */

 acp breakdown */

 uvd breakdown */

 vce breakdown */

 update minimum clocks for Stable P-State feature */

Sclk - calculate sclk value based on percentage and find FLOOR sclk from VddcDependencyOnSCLK table  */

 Stable Pstate is enabled and we need to set the VCE DPM to highest level */

		/* disable ECLK DPM 0. Otherwise VCE could hang if

 size must be at least 4 bytes for all sensors */

 Stable Pstate is enabled and we need to set the UVD DPM to highest level */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 aisc already in the target state */

 HW requires at least 20ms between regulator off and on */

 Execute Hardware BACO exit sequence */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 We assume here that fw_info is unchanged if this call fails.*/

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

Cache the result in RAM.*/

/*

 * workaround needed to add another DPM level for pioneer cards

 * as VBIOS is locked down.

 * This DPM level was added to support 3DPM monitors @ 4K120Hz

 *

 currently we always take entries[0] parameters */

 TDP limits */

 enable TDP overdrive (PowerControl) feature as well if supported */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Skip for suspend/resume case */

/**

 * phm_start_thermal_controller - Initializes the thermal controller subsystem.

 *

 * @hwmgr:   the address of the powerplay hardware manager.

 * Exception PP_Result_Failed if any of the paramters is NULL, otherwise the return value from the dispatcher.

 TODO: pass other display configuration in the future */

/**

 * phm_get_clock_info

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * @state: the address of the Power State structure.

 * @pclock_info: the address of PP_ClockInfo structure where the result will be returned.

 * @designation: PHM performance level designation

 * Exception PP_Result_Failed if any of the paramters is NULL, otherwise the return value from the back-end.

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Returns once the part of the register indicated by the mask has

 * reached the given value.

 timeout means wrong logic*/

/*

 * Returns once the part of the register indicated by the mask has

 * reached the given value.The indirect space is described by giving

 * the memory-mapped index of the indirect index register.

 timeout means wrong logic */

 find first voltage equal or bigger than requested */

 voltage is bigger than max voltage in the table */

 find first voltage bigger than requested */

 voltage is bigger than max voltage in the table */

 search for leakage voltage ID 0xff01 ~ 0xff08 and sckl */

/**

 * phm_initializa_dynamic_state_adjustment_rule_settings - Initialize Dynamic State Adjustment Rule Settings

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 initialize vddc_dep_on_dal_pwrl table */

			/*

			 * SW CTF just occurred.

			 * Try to do a graceful shutdown to prevent further damage.

			/*

			 * HW CTF just occurred. Shutdown to prevent further damage.

			/*

			 * SW CTF just occurred.

			 * Try to do a graceful shutdown to prevent further damage.

		/*

		 * HW CTF just occurred. Shutdown to prevent further damage.

 Register CTF(GPIO_19) interrupt */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/** \file

 * Functions related to PCIe lane changes.

 For converting from number of lanes to lane bits.  */

  0 Not Supported  */

  1 Lane  */

  2 Lanes  */

  3 Not Supported  */

  4 Lanes  */

  5 Not Supported  */

  6 Not Supported  */

  7 Not Supported  */

  8 Lanes  */

  9 Not Supported  */

 10 Not Supported  */

 11 Not Supported  */

 12 Lanes (Not actually supported)  */

 13 Not Supported  */

 14 Not Supported  */

 15 Not Supported  */

 16 Lanes  */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 gfx has already entered BACO state */

 aisc already in the target state */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 aisc already in the target state */

 HW requires at least 20ms between regulator off and on */

 Execute Hardware BACO exit sequence */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/*

	 * Disable the following features for now:

	 *   GFXCLK DS

	 *   SOCLK DS

	 *   LCLK DS

	 *   DCEFCLK DS

	 *   FCLK DS

	 *   MP1CLK DS

	 *   MP0CLK DS

 ECC feature should be disabled on old SMUs */

 power tune caps */

 assume disabled */

 Get the SN to turn into a Unique ID */

 need to set voltage control types before EVV patching */

 Parse pptable data read from VBIOS */

 IRQ_SOURCE1_SW_INT */

 The true clock step depends on the frequency, typically 4.5 or 9 MHz. Here we use 5. */

/*

 * @fn vega20_init_dpm_state

 * @brief Function to initialize all Soft Min/Max and Hard Min/Max to 0xff.

 *

 * @param    dpm_state - the address of the DPM Table to initiailize.

 * @return   None.

/*

 * This function is to initialize all DPM state tables

 * for SMU based on the dependency table.

 * Dynamic state patching function will then trim these

 * state tables to the allowed range based

 * on the power policy or external client requests,

 * such as UVD request, etc.

 socclk */

 gfxclk */

 memclk */

 eclk */

 vclk */

 dclk */

 dcefclk */

 pixclk */

 dispclk */

 phyclk */

 fclk */

 save a copy of the default DPM table */

/**

 * vega20_init_smc_table - Initializes the SMC table and uploads it

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * return:  always 0

/*

 * Override PCIe link speed and link width for DPM Level 1. PPTable entries

 * reflect the ASIC capabilities and not the system capabilities. For e.g.

 * Vega20 board in a PCI Gen3 system. In this case, when SMU's tries to switch

 * to DPM1, it fails as system doesn't support Gen4.

	/* Bit 31:16: LCLK DPM level. 0 is DPM0, and 1 is DPM1

	 * Bit 15:8:  PCIE GEN, 0 to 3 corresponds to GEN1 to GEN4

	 * Bit 7:0:   PCIE lane width, 1 to 7 corresponds is x1 to x32

 update the pptable */

 override to the highest if it's disabled from ppfeaturmask */

 Set Feature Capabilities */

 Map FeatureID to individual settings */

 Set default values */

 od percentage */

 retrieve updated gfxclk table */

 od percentage */

 retrieve updated memclk table */

 if DC limit is zero, return AC limit */

 Initialize UVD/VCE powergating state */

 For the 40.46 release, they changed the value name */

 gfxclk soft min/max settings */

 uclk soft min/max settings */

 socclk soft min/max settings */

TODO: Setting DCEFCLK max dpm level is not supported

 retrieve updated gfxclk table */

 retrieve updated memclk table */

 Update the cached feature enablement state */

 gfxclk */

 memclk */

 honour DAL's UCLK Hardmin */

 Hardmin is dependent on displayconfig */

 fclk */

 vclk */

 dclk */

 socclk */

 eclk */

 conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT */

		/* If size==0, then we want to apply the already-configured

		 * CUSTOM profile again. Just apply it, since we checked its

		 * validity above

 Gfxclk */

 Socclk */

 Uclk */

 Fclk */

 conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT */

 I2C bus access can happen very early, when SMU not loaded yet */

 PPSMC_MSG_DFCstateControl is supported with 40.50 and later fws */

 init/fini related */

 power state related */

 export to DAL */

 UMD pstate, profile related */

 od related */

 for sysfs to retrive/set gfxclk/memclk */

 powergate related */

 thermal related */

 fan control related */

 smu memory related */

 BACO related */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * atomctrl_set_mc_reg_address_table - Get memory clock AC timing registers index from VBIOS table

 * VBIOS set end of memory clock AC timing registers by ucPreRegDataLength bit6 = 1

 * @reg_block: the address ATOM_INIT_REG_BLOCK

 * @table: the address of MCRegTable

 * Return:   0

 subtract 1 data end mark entry */

 ucPreRegDataLength bit6 = 1 is the end of memory clock AC timing registers */

/*

 * Set DRAM timings based on engine clock and memory clock.

 They are both in 10KHz Units. */

 in 10 khz units.*/

/*

 * Private Function to get the PowerPlay Table Address.

 * WARNING: The tabled returned by this function is in

 * dynamically allocated memory.

 * The caller has to release if by calling kfree.

/**

 * atomctrl_get_memory_pll_dividers_si

 *

 * @hwmgr:           input parameter: pointer to HwMgr

 * @clock_value:     input parameter: memory clock

 * @mpll_param:      output parameter: memory clock parameters

 * @strobe_mode:     input parameter: 1 for strobe mode,  0 for performance mode

/**

 * atomctrl_get_memory_pll_dividers_vi

 *

 * @hwmgr:                 input parameter: pointer to HwMgr

 * @clock_value:           input parameter: memory clock

 * @mpll_param:            output parameter: memory clock parameters

 VEGAM's mpll takes sometime to finish computing */

/*

 * Get the reference clock in 10KHz

/*

 * Returns true if the given voltage type is controlled by GPIO pins.

 * voltage_type is one of SET_VOLTAGE_TYPE_ASIC_VDDC,

 * SET_VOLTAGE_TYPE_ASIC_MVDDC, SET_VOLTAGE_TYPE_ASIC_MVDDQ.

 * voltage_mode is one of ATOM_SET_VOLTAGE, ATOM_SET_VOLTAGE_PHASE

/*

 * Private Function to get the PowerPlay Table Address.

 * WARNING: The tabled returned by this function is in

 * dynamically allocated memory.

 * The caller has to release if by calling kfree.

/*

 * Returns 1 if the given pin id find in lookup table.

	/*-----------------------------------------------------------

	 *GETTING MULTI-STEP PARAMETERS RELATED TO CURRENT DPM LEVEL

	 *-----------------------------------------------------------

	/*-------------------------

	 * DECODING FUSE VALUES

	 * ------------------------

Decode RO_Fused*/

 Finally, the actual fuse value */

 Decoding the Leakage - No special struct container */

	/*

	 * usLkgEuseIndex=56

	 * ucLkgEfuseBitLSB=6

	 * ucLkgEfuseLength=10

	 * ulLkgEncodeLn_MaxDivMin=69077

	 * ulLkgEncodeMax=1000000

	 * ulLkgEncodeMin=1000

	 * ulEfuseLogisticAlpha=13

	/*-------------------------------------------

	 * PART 2 - Grabbing all required values

	 *-------------------------------------------

	/*-----------------------

	 * PART 3

	 *-----------------------

	/*

	 fA_Term = fSM_A4 * (fSclk + fSclk_margin) + fSM_A5;

	 fB_Term = fSM_A2 * (fSclk + fSclk_margin) + fSM_A6;

	 fC_Term = fRO_DC_margin + fSM_A0 * fLkg_FT + fSM_A1 * fLkg_FT * (fSclk + fSclk_margin) + fSM_A3 * (fSclk + fSclk_margin) + fSM_A7 - fRO_fused;

	/*-----------------

	 * PART 4

	 *-----------------

/**

 * atomctrl_get_voltage_evv_on_sclk: gets voltage via call to ATOM COMMAND table.

 * @hwmgr:              input: pointer to hwManager

 * @voltage_type:       input: type of EVV voltage VDDC or VDDGFX

 * @sclk:               input: in 10Khz unit. DPM state SCLK frequency

 *		         which is define in PPTable SCLK/VDDC dependence

 *			 table associated with this virtual_voltage_Id

 * @virtual_voltage_Id: input: voltage id which match per voltage DPM state: 0xff01, 0xff02.. 0xff08

 * @voltage: 	        output: real voltage level in unit of mv

/**

 * atomctrl_get_voltage_evv: gets voltage via call to ATOM COMMAND table.

 * @hwmgr:              input: pointer to hwManager

 * @virtual_voltage_id: input: voltage id which match per voltage DPM state: 0xff01, 0xff02.. 0xff08

 * @voltage: 	       output: real voltage level in unit of mv

 search for leakage voltage ID 0xff01 ~ 0xff08 and sckl */

 found */

/*

 * Get the mpll reference clock in 10KHz

/*

 * Get the asic internal spread spectrum table

/*

 * Get the asic internal spread spectrum assignment

/*

 * Get the memory clock spread spectrum info

/*

 * Get the engine clock spread spectrum info

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* This function is for Polaris11 only for now,

 * Powerplay will only control the static per CU Power Gating.

 * Dynamic per CU Power Gating will be done in gfx.

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * set_hw_cap - Private Function used during initialization.

 * @hwmgr: Pointer to the hardware manager.

 * @setIt: A flag indication if the capability should be set (TRUE) or reset (FALSE).

 * @cap: Which capability to set/reset.

/**

 * set_platform_caps - Private Function used during initialization.

 * @hwmgr: Pointer to the hardware manager.

 * @powerplay_caps: the bit array (from BIOS) of capability bits.

 * Exception:  the current implementation always returns 1.

/*

 * Private Function to get the PowerPlay Table Address.

Cache the result in RAM.*/

/**

 * get_platform_power_management_table - Private Function used during initialization.

 * Initialize Platform Power Management Parameter table

 * @hwmgr: Pointer to the hardware manager.

 * @atom_ppm_table: Pointer to PPM table in VBIOS

/**

 * init_dpm_2_parameters - Private Function used during initialization.

 * Initialize TDP limits for DPM2

 * @hwmgr: Pointer to the hardware manager.

 * @powerplay_table: Pointer to the PowerPlay Table.

 TDP limits */

 enable TDP overdrive (PowerControl) feature as well if supported */

 currently we always take entries[0] parameters */

		/*

		* Make sure the number of pcie entries are less than or equal to sclk dpm levels.

		* Since first PCIE entry is for ULV, #pcie has to be <= SclkLevel + 1.

 Polaris10/Polaris11 and newer. */

		/*

		* Make sure the number of pcie entries are less than or equal to sclk dpm levels.

		* Since first PCIE entry is for ULV, #pcie has to be <= SclkLevel + 1.

Set the initial temp to the same as default */

 Fiji and newer */

Set the initial temp to the same as default */

Set the initial temp to the same as default */

/**

 * init_clock_voltage_dependency - Private Function used during initialization.

 * Initialize clock voltage dependency

 * @hwmgr: Pointer to the hardware manager.

 * @powerplay_table: Pointer to the PowerPlay Table.

/**

 * init_over_drive_limits - Retrieves the (signed) Overdrive limits from VBIOS.

 * The max engine clock, memory clock and max temperature come from the firmware info table.

 *

 * The information is placed into the platform descriptor.

 *

 * @hwmgr: source of the VBIOS table and owner of the platform descriptor to be updated.

 * @powerplay_table: the address of the PowerPlay table.

 *

 * Return: 1 as long as the firmware info table was present and of a supported version.

/**

 * init_thermal_controller - Private Function used during initialization.

 * Inspect the PowerPlay table for obvious signs of corruption.

 * @hwmgr: Pointer to the hardware manager.

 * @powerplay_table: Pointer to the PowerPlay Table.

 * Exception:  This implementation always returns 1.

 hard coded */

 PPTable stores it in 10Khz unit for 2 decimal places.  SMC wants MHz. */

 PPTable stores it in 10Khz unit for 2 decimal places.  SMC wants MHz. */

 PPTable stores it in 10Khz unit for 2 decimal places.  SMC wants MHz. */

/**

 * check_powerplay_tables - Private Function used during initialization.

 * Inspect the PowerPlay table for obvious signs of corruption.

 * @hwmgr: Pointer to the hardware manager.

 * @powerplay_table: Pointer to the PowerPlay Table.

 * Exception:  2 if the powerplay table is incorrect.

/*

 * Private function to convert flags stored in the BIOS to software flags in PowerPlay.

/**

 * get_powerplay_table_entry_v1_0 - Create a Power State out of an entry in the PowerPlay table.

 * This function is called by the hardware back-end.

 * @hwmgr: Pointer to the hardware manager.

 * @entry_index: The index of the entry to be extracted from the table.

 * @power_state: The address of the PowerState instance being created.

 * @call_back_func: The function to call into to fill power state

 * Return: -1 if the entry cannot be retrieved.

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 8Mhz, the low boundary of engine clock allowed on this chip */

 100Mhz */

 confirm gfx is back to "on" state */

 temporary hardcoded clock voltage breakdown tables */

 enable the pp_od_clk_voltage sysfs file */

 disabled fine grain tuning function by default */

 transfer 10KHz to MHz */

 driver only know min/max gfx_clk, Add level 1 for all other gfx clks */

 driver can't get engine clock, temp hard code to 800MHz */

 GetGfxBusy support was added on RV SMU FW 30.85.00 and PCO 4.30.59 */

 in units of 10KHZ */

 in units of 10KHZ */

 conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * vega10_fan_ctrl_set_static_mode - Set Fan Speed Control to static mode,

 * so that the user can decide what speed to use.

 * @hwmgr:  the address of the powerplay hardware manager.

 * @mode: the fan control mode, 0 default, 1 by percent, 5, by RPM

 * Exception: Should always succeed.

/**

 * vega10_fan_ctrl_set_default_mode - Reset Fan Speed Control to default mode.

 * @hwmgr:  the address of the powerplay hardware manager.

 * Exception: Should always succeed.

/**

 * vega10_enable_fan_control_feature - Enables the SMC Fan Control Feature.

 *

 * @hwmgr: the address of the powerplay hardware manager.

 * Return:   0 on success. -1 otherwise.

/**

 * vega10_fan_ctrl_set_fan_speed_pwm - Set Fan Speed in PWM.

 * @hwmgr:  the address of the powerplay hardware manager.

 * @speed: is the percentage value (0 - 255) to be set.

/**

 * vega10_fan_ctrl_reset_fan_speed_to_default - Reset Fan Speed to default.

 * @hwmgr:  the address of the powerplay hardware manager.

 * Exception: Always succeeds.

/**

 * vega10_fan_ctrl_set_fan_speed_rpm - Set Fan Speed in RPM.

 * @hwmgr:  the address of the powerplay hardware manager.

 * @speed: is the percentage value (min - max) to be set.

 * Exception: Fails is the speed not lie between min and max.

/**

 * vega10_thermal_get_temperature - Reads the remote temperature from the SIslands thermal controller.

 *

 * @hwmgr: The address of the hardware manager.

/**

 * vega10_thermal_set_temperature_range - Set the requested temperature range for high and low alert signals

 *

 * @hwmgr: The address of the hardware manager.

 * @range: Temperature range to be programmed for

 *           high and low alert signals

 * Exception: PP_Result_BadInput if the input data is not valid.

 compare them in unit celsius degree */

	/*

	 * As a common sense, usSoftwareShutdownTemp should be bigger

	 * than ThotspotLimit. For any invalid usSoftwareShutdownTemp,

	 * we will just use the max possible setting VEGA10_THERMAL_MAXIMUM_ALERT_TEMP

	 * to avoid false alarms.

/**

 * vega10_thermal_initialize - Programs thermal controller one-time setting registers

 *

 * @hwmgr: The address of the hardware manager.

/**

 * vega10_thermal_enable_alert - Enable thermal alerts on the RV770 thermal controller.

 *

 * @hwmgr: The address of the hardware manager.

/**

 * vega10_thermal_disable_alert - Disable thermal alerts on the RV770 thermal controller.

 * @hwmgr: The address of the hardware manager.

/**

 * vega10_thermal_stop_thermal_controller - Uninitialize the thermal controller.

 * Currently just disables alerts.

 * @hwmgr: The address of the hardware manager.

/**

 * vega10_thermal_setup_fan_table - Set up the fan table to control the fan using the SMC.

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   result from set temperature range routine

/**

 * vega10_thermal_start_smc_fan_control - Start the fan control on the SMC.

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   result from set temperature range routine

/* If the fantable setup has failed we could have disabled

 * PHM_PlatformCaps_MicrocodeFanControl even after

 * this function was included in the table.

 * Make sure that we still think controlling the fan is OK.

/* We should restrict performance levels to low before we halt the SMC.

 * On the other hand we are still in boot state when we do this

 * so it would be pointless.

 * If this assumption changes we have to revisit this table.

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

Cache the result in RAM.*/

	/* hwmgr->platformDescriptor.minOverdriveVDDC = 0;

	hwmgr->platformDescriptor.maxOverdriveVDDC = 0;

 enable TDP overdrive (PowerControl) feature as well if supported */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 aisc already in the target state */

 HW requires at least 20ms between regulator off and on */

 Execute Hardware BACO exit sequence */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Delay in milli Seconds */

 Delay in micro Seconds */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

DF_CS_AON0_DramBaseAddress0

 power tune caps */

 assume disabled */

 ACG firmware has major version 5 */

 Get the SN to turn into a Unique ID */

 search for leakage voltage ID 0xff01 ~ 0xff08 and sclk */

/**

 * vega10_get_evv_voltages - Get Leakage VDDC based on leakage ID.

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * return:  always 0.

 need to make sure vddc is less than 2v or else, it could burn the ASIC. */

 the voltage should not be zero nor equal to leakage ID */

/**

 * vega10_patch_with_vdd_leakage - Change virtual leakage voltage to actual value.

 *

 * @hwmgr:         the address of the powerplay hardware manager.

 * @voltage:       pointer to changing voltage

 * @leakage_table: pointer to leakage table

 search for leakage voltage ID 0xff01 ~ 0xff08 */

 if this voltage matches a leakage voltage ID */

 patch with actual leakage voltage */

/**

 * vega10_patch_lookup_table_with_leakage - Patch voltage lookup table by EVV leakages.

 *

 * @hwmgr:         the address of the powerplay hardware manager.

 * @lookup_table:  pointer to voltage lookup table

 * @leakage_table: pointer to leakage table

 * return:         always 0

 Sorting voltages */

 need to set voltage control types before EVV patching */

 VDDCR_SOC */

 MVDDC */

 VDDCI_MEM */

 Get leakage voltage based on leakage ID. */

	/* Patch our voltage dependency table with actual leakage voltage

	 * We need to perform leakage translation before it's used by other functions

 Parse pptable data read from VBIOS */

 IRQ_SOURCE1_SW_INT */

 The true clock step depends on the frequency, typically 4.5 or 9 MHz. Here we use 5. */

 Setup default Overdrive Fan control settings */

/**

 * vega10_trim_voltage_table - Remove repeated voltage values and create table with unique values.

 *

 * @hwmgr:      the address of the powerplay hardware manager.

 * @vol_table:  the pointer to changing voltage table

 * return:      0 in success

/* ---- Voltage Tables ----

 * If the voltage table would be bigger than

 * what will fit into the state table on

 * the SMC keep only the higher entries.

/**

 * vega10_construct_voltage_tables - Create Voltage Tables.

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * return:  always 0

/*

 * vega10_init_dpm_state

 * Function to initialize all Soft Min/Max and Hard Min/Max to 0xff.

 *

 * @dpm_state: - the address of the DPM Table to initiailize.

 * return:   None.

/*

 * This function is to initialize all DPM state tables

 * for SMU based on the dependency table.

 * Dynamic state patching function will then trim these

 * state tables to the allowed range based

 * on the power policy or external client requests,

 * such as UVD request, etc.

 Initialize Sclk DPM table based on allow Sclk values */

 Initialize Mclk DPM table based on allow Mclk values */

 Assume there is no headless Vega10 for now */

	/* Zero out the saved copy of the CUSTOM profile

	 * This will be checked when trying to set the profile

	 * and will require that new values be passed in

 save a copy of the default DPM table */

/*

 * vega10_populate_ulv_state

 * Function to provide parameters for Utral Low Voltage state to SMC.

 *

 * @hwmgr: - the address of the hardware manager.

 * return:   Always 0.

/**

 * vega10_populate_single_gfx_level - Populates single SMC GFXSCLK structure

 *                                    using the provided engine clock

 *

 * @hwmgr:      the address of the hardware manager

 * @gfx_clock:  the GFX clock to use to populate the structure.

 * @current_gfxclk_level:  location in PPTable for the SMC GFXCLK structure.

 * @acg_freq:   ACG frequenty to return (MHz)

 Feedback Multiplier: bit 0:8 int, bit 15:12 post_div, bit 31:16 frac */

 Spread FB Multiplier bit: bit 0:8 int, bit 31:16 frac */

 100 Khz to Mhz conversion */

/**

 * vega10_populate_single_soc_level - Populates single SMC SOCCLK structure

 *                                    using the provided clock.

 *

 * @hwmgr:     the address of the hardware manager.

 * @soc_clock: the SOC clock to use to populate the structure.

 * @current_soc_did:   DFS divider to pass back to caller

 * @current_vol_index: index of current VDD to pass back to caller

 * return:      0 on success

/**

 * vega10_populate_all_graphic_levels - Populates all SMC SCLK levels' structure

 *                                      based on the trimmed allowed dpm engine clock states

 *

 * @hwmgr:      the address of the hardware manager

/*

 * Populates single SMC GFXCLK structure using the provided clock.

 *

 * @hwmgr:     the address of the hardware manager.

 * @mem_clock: the memory clock to use to populate the structure.

 * return:     0 on success..

/**

 * vega10_populate_all_memory_levels - Populates all SMC MCLK levels' structure

 *                                     based on the trimmed allowed dpm memory clock states.

 *

 * @hwmgr:  the address of the hardware manager.

 * return:   PP_Result_OK on success.

 Already enabled or disabled */

/**

 * vega10_init_smc_table - Initializes the SMC table and uploads it

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * return:  always 0

 initialize ODN table */

/**

 * vega10_start_dpm - Tell SMC to enabled the supported DPMs.

 *

 * @hwmgr:   the address of the powerplay hardware manager.

 * @bitmap:  bitmap for the features to enabled.

 * return:  0 on at least one DPM is successfully enabled.

 enable didt, do not abort if failed didt */

	/* The following fields are not initialized here:

	 * id orderedList allStatesList

	/* NOTE: There is a classification2 flag in BIOS

	 * that is not being used right now

 Performance levels are arranged from low to high. */

		/* under vega10 pp one vf mode, the gfx clk dpm need be lower

		 * to level-4 due to the limited 110w-power

	/*

	 * This is the earliest time we have all the dependency table

	 * and the VBIOS boot state

 set DC compatible flag if this state supports DC */

 Cap clock DPM tables at DC MAX if it is in DC. */

 result = PHM_CheckVBlankTime(hwmgr, &vblankTooShort);*/

 Set Mclk the max of level 0 and level 1 */

		/* Find the lowest MCLK frequency that is within

		 * the tolerable latency defined in DAL

 This message will also enable SmcToHost Interrupt */

	/*

	 * If a custom pp table is loaded, set DPMTABLE_OD_UPDATE_VDDC flag.

	 * That effectively disables AVFS feature.

	/*

	 * Clear all OD flags except DPMTABLE_OD_UPDATE_VDDC.

	 * That will help to keep AVFS disabled.

 SMC returning actual watts, keep consistent with legacy asics, low 8 bit as 8 fractional bits */

		/* under vega10  pp one vf mode, the gfx clk dpm need be lower

		 * to level-4 due to the limited power

 If the two states don't even have the same number of performance levels they cannot be the same state. */

 If we have found even one performance level pair that is different the states are different. */

 If all performance levels are the same try to use the UVD clocks to break the tie.*/

		/* If size = 0 and the CUSTOM profile has been set already

		 * then just apply the profile. The copy stored in the hwmgr

		 * is zeroed out on init

 force to update all clock tables */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 aisc already in the target state */

 HW requires at least 20ms between regulator off and on */

 Execute Hardware BACO exit sequence */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

* Values for the CG_THERMAL_CTRL::DPM_EVENT_SRC field. */

 End of list

/**

 * smu7_get_mc_microcode_version - Find the MC microcode version and store it in the HwMgr struct

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always 0

 mmPCIE_PORT_INDEX rename as mmPCIE_INDEX */

 mmPCIE_PORT_INDEX rename as mmPCIE_INDEX */

/**

 * smu7_enable_smc_voltage_controller - Enable voltage control

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always PP_Result_OK

/**

 * smu7_voltage_control - Checks if we want to support voltage control

 *

 * @hwmgr:  the address of the powerplay hardware manager.

/**

 * smu7_enable_voltage_control - Enable voltage control

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always 0

 enable voltage control */

/**

 * smu7_construct_voltage_tables - Create Voltage Tables.

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always 0

 VDDGFX has only SVI2 voltage control */

/**

 * smu7_program_static_screen_threshold_parameters - Programs static screed detection parameters

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always 0

 Set static screen threshold unit */

 Set static screen threshold */

/**

 * smu7_enable_display_gap - Setup display gap for glitch free memory clock switching.

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always  0

/**

 * smu7_program_voting_clients - Programs activity state transition voting clients

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always  0

 Clear reset for voting clients before enabling DPM */

 Reset voting clients before disabling DPM */

/* Copy one arb setting to another and then switch the active set.

 * arb_src and arb_dest is one of the MC_CG_ARB_FREQ_Fx constants.

/**

 * smu7_initial_switch_from_arbf0_to_f1 - Initial switch from ARB F0->F1

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always 0

 * This function is to be called from the SetPowerState table.

		/* max_entry is used to make sure we reserve one PCIE level

		 * for boot level (fix for A+A PSPP issue).

		 * If PCIE table from PPTable have ULV entry + 8 entries,

 Hardcode Pcie Table */

 Populate last level for boot PCIE level, but do not increment count. */

/*

 * This function is to initialize all DPM state tables

 * for SMU7 based on the dependency table.

 * Dynamic state patching function will then trim these

 * state tables to the allowed range based

 * on the power policy or external client requests,

 * such as UVD request, etc.

 Initialize Sclk DPM table based on allow Sclk values*/

 Initialize Mclk DPM table based on allow Mclk values */

 Initialize Vddc DPM table based on allow Vddc values.  And populate corresponding std values. */

 param1 is for corresponding std voltage */

 Initialize Vddci DPM table based on allow Mclk values */

		/*

		 * Initialize MVDD DPM table based on allow Mclk

		 * values

 Initialize Sclk DPM table based on allow Sclk values */

 Initialize Mclk DPM table based on allow Mclk values */

 save a copy of the default DPM table */

 initialize ODN table */

 enable SCLK dpm */

 enable MCLK dpm */

enable general power management */

 enable sclk deep sleep */

 prepare for PCIE DPM */

 enable PCIE dpm */

 disable SCLK dpm */

 disable MCLK dpm */

 disable general power management */

 disable sclk deep sleep */

 disable PCIE dpm */

 src is unused */

 Order matters - don't enable thermal protection for the wrong source. */

 need to set voltage control types before EVV patching */

 TODO: PATCH RO in VBIOS */

 TODO: PATCH RO in VBIOS here */

/**

 * smu7_get_evv_voltages - Get Leakage VDDC based on leakage ID.

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always 0

 need to make sure vddgfx is less than 2v or else, it could burn the ASIC. */

 the voltage should not be zero nor equal to leakage ID */

 the voltage should not be zero nor equal to leakage ID */

/**

 * smu7_patch_ppt_v1_with_vdd_leakage - Change virtual leakage voltage to actual value.

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * @voltage: pointer to changing voltage

 * @leakage_table: pointer to leakage table

 search for leakage voltage ID 0xff01 ~ 0xff08 */

 if this voltage matches a leakage voltage ID */

 patch with actual leakage voltage */

/**

 * smu7_patch_lookup_table_with_leakage - Patch voltage lookup table by EVV leakages.

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * @lookup_table: pointer to voltage lookup table

 * @leakage_table: pointer to leakage table

 * Return:     always 0

 This is to avoid entering duplicate calculated records. */

 Only increment the count when we're appending, not replacing duplicate entry. */

 Add the calculated VDDGFX to the VDDGFX lookup table */

 Sorting voltages */

/**

 * smu7_patch_ppt_v0_with_vdd_leakage - Change virtual leakage voltage to actual value.

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * @voltage: pointer to changing voltage

 * @leakage_table: pointer to leakage table

 search for leakage voltage ID 0xff01 ~ 0xff08 */

 if this voltage matches a leakage voltage ID */

 patch with actual leakage voltage */

 Get leakage voltage based on leakage ID. */

 Initalize Dynamic State Adjustment Rule Settings */

 IRQ_SOURCE1_SW_INT */

 The true clock step depends on the frequency, typically 4.5 or 9 MHz. Here we use 5. */

 Ignore return value in here, we are cleaning up a mess. */

 TO DO  for v0 iceland and Ci*/

 Cap clock DPM tables at DC MAX if it is in DC. */

				/* Find the lowest MCLK frequency that is within

				 * the tolerable latency defined in DAL

	/* First retrieve the Boot clocks and VDDC from the firmware info table.

	 * We assume here that fw_info is unchanged if this call fails.

 During a test, there is no firmware info table. */

 Patch the state. */

 set boot power state */

 The following fields are not initialized here: id orderedList allStatesList */

 NOTE: There is a classification2 flag in BIOS that is not being used right now */

 Performance levels are arranged from low to high. */

	/* This is the earliest time we have all the dependency table and the VBIOS boot state

	 * as PP_Tables_GetPowerPlayTableEntry retrieves the VBIOS boot state

	 * if there is only one VDDCI/MCLK level, check if it's the same as VBIOS boot state

 set DC compatible flag if this state supports DC */

 Performance levels are arranged from low to high. */

	/*

	 * This is the earliest time we have all the dependency table

	 * and the VBIOS boot state as

	 * PP_Tables_GetPowerPlayTableEntry retrieves the VBIOS boot

	 * state if there is only one VDDCI/MCLK level, check if it's

	 * the same as VBIOS boot state

 set DC compatible flag if this state supports DC */

	/*

	 * PPSMC_MSG_GetCurrPkgPwr is not supported on:

	 *  - Hawaii

	 *  - Bonaire

	 *  - Fiji

	 *  - Tonga

 size must be at least 4 bytes for all sensors */

	/* TODO: Check SCLK in DAL's minimum clocks

	 * in case DeepSleep divider update is required.

populate MCLK dpm table to SMU7 */

 force the trim if mclk_switching is disabled to prevent flicker */

skip the trim if od is enabled*/

	/*

	 * If a custom pp table is loaded, set DPMTABLE_OD_UPDATE_VDDC flag.

	 * That effectively disables AVFS feature.

/**

 * smu7_program_display_gap - Programs the display gap

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always OK

/**

 * smu7_set_max_fan_rpm_output - Set maximum target operating fan output RPM

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * @us_max_fan_rpm:  max operating fan RPM value.

 * Return:   The response that came from the SMC.

 Register CTF(GPIO_19) interrupt */

 If the two states don't even have the same number of performance levels they cannot be the same state. */

 If we have found even one performance level pair that is different the states are different. */

 If all performance levels are the same try to use the UVD clocks to break the tie.*/

 For OD call, set value based on flag */

	/* Read MC indirect register offset 0x9F bits [3:0] to see

	 * if VBIOS has already loaded a full version of MC ucode

	 * or not.

/**

 * smu7_get_memory_type - Find out if memory is GDDR5.

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always 0

/**

 * smu7_enable_acpi_power_management - Enables Dynamic Power Management by SMC

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always 0

/**

 * smu7_init_power_gate_state - Initialize PowerGating States for different engines

 *

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   always 0

		/* If only CUSTOM is passed in, use the saved values. Check

		 * that we actually have a CUSTOM profile by ensuring that

		 * the "use sclk" or the "use mclk" bits are set

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                Shift                                               Value       Type

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                Shift                                               Value       Type

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                Shift                                               Value       Type

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                Shift                                               Value       Type

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                Shift                                               Value       Type

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                Shift                                               Value       Type

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ */

 DIDT_TD */

 DIDT_TCP */

 End of list */

 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

      Offset                             Mask                                                Shift                                               Value       Type

 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ



 DIDT_TD



 DIDT_TCP



 End of list

 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

      Offset                             Mask                                                Shift                                               Value       Type

 ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ



 DIDT_TD



 DIDT_TCP



 End of list

 adjustment percentage has already been validated */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 assigned unique num for every power state id */

			/*

			 * for vega12/vega20 which does not support power state manager

			 * DAL clock limits should also be honoured

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * vega20_thermal_get_temperature - Reads the remote temperature from the SIslands thermal controller.

 *

 * @hwmgr: The address of the hardware manager.

/**

 * vega20_thermal_set_temperature_range - Set the requested temperature range for high and low alert signals

 *

 * @hwmgr: The address of the hardware manager.

 * @range: Temperature range to be programmed for high and low alert signals

 * Exception: PP_Result_BadInput if the input data is not valid.

 compare them in unit celsius degree */

/**

 * vega20_thermal_enable_alert - Enable thermal alerts on the RV770 thermal controller.

 *

 * @hwmgr: The address of the hardware manager.

/**

 * vega20_thermal_disable_alert - Disable thermal alerts on the RV770 thermal controller.

 * @hwmgr: The address of the hardware manager.

/**

 * vega20_thermal_stop_thermal_controller - Uninitialize the thermal controller.

 * Currently just disables alerts.

 * @hwmgr: The address of the hardware manager.

/**

 * vega20_thermal_setup_fan_table - Set up the fan table to control the fan using the SMC.

 * @hwmgr:  the address of the powerplay hardware manager.

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 gfx has already entered BACO state */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Returns TRUE if the given voltage type is controlled by GPIO pins.

 * voltage_type is one of SET_VOLTAGE_TYPE_ASIC_VDDC, SET_VOLTAGE_TYPE_ASIC_MVDDC, SET_VOLTAGE_TYPE_ASIC_MVDDQ.

 * voltage_mode is one of ATOM_SET_VOLTAGE, ATOM_SET_VOLTAGE_PHASE

 If we cannot find the table do NOT try to control this voltage. */

/*

 * Returns TRUE if the given pin id find in lookup table.

 If we cannot find the table do NOT try to control this voltage. */

/*

 * Enter to SelfRefresh mode.

 * @param hwmgr

	/* 0 - no action

	 * 1 - leave power to video memory always on

/** pp_atomfwctrl_get_gpu_pll_dividers_vega10().

 *

 * @param hwmgr       input parameter: pointer to HwMgr

 * @param clock_type  input parameter: Clock type: 1 - GFXCLK, 2 - UCLK, 0 - All other clocks

 * @param clock_value input parameter: Clock

 * @param dividers    output parameter:Clock dividers

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 aisc already in the target state */

 HW requires at least 20ms between regulator off and on */

 Execute Hardware BACO exit sequence */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 aisc already in the target state */

 HW requires at least 20ms between regulator off and on */

 Execute Hardware BACO exit sequence */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 gfx has already entered BACO state */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ */

 DIDT_TD */

 DIDT_TCP */

 DIDT_DB */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset               Mask                                                     Shift                                                            Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

DIDT_SQ_CTRL3 */

DIDT_TCP_CTRL3 */

DIDT_TD_CTRL3 */

DIDT_DB_CTRL3 */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                            Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ */

 DIDT_TD */

 DIDT_TCP */

 DIDT_DB */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ */

 DIDT_TD */

 DIDT_TCP */

 DIDT_DB */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                  Shift                                                 Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ */

 DIDT_TD */

 DIDT_TCP */

 DIDT_DB */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ */

 DIDT_TD */

 DIDT_TCP */

 DIDT_DB */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                   Mask                                                     Shift                                                      Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ */

 DIDT_TD */

 DIDT_TCP */

 DIDT_DB */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                        Mask                                                      Shift                                                    Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 DIDT_SQ_STALL_PATTERN_1_2 */

 DIDT_SQ_STALL_PATTERN_3_4 */

 DIDT_SQ_STALL_PATTERN_5_6 */

 DIDT_SQ_STALL_PATTERN_7 */

 DIDT_TCP_STALL_PATTERN_1_2 */

 DIDT_TCP_STALL_PATTERN_3_4 */

 DIDT_TCP_STALL_PATTERN_5_6 */

 DIDT_TCP_STALL_PATTERN_7 */

 DIDT_TD_STALL_PATTERN_1_2 */

 DIDT_TD_STALL_PATTERN_3_4 */

 DIDT_TD_STALL_PATTERN_5_6 */

 DIDT_TD_STALL_PATTERN_7 */

 DIDT_DB_STALL_PATTERN_1_2 */

 DIDT_DB_STALL_PATTERN_3_4 */

 DIDT_DB_STALL_PATTERN_5_6 */

 DIDT_DB_STALL_PATTERN_7 */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ */

 TD */

 TCP */

 DB */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ */

 TD */

 TCP */

 DB */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ */

 TD */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ */

 TD */

 TCP */

 DB */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ */

 TD */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ EDC STALL PATTERNs */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ EDC STALL DELAYs */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ EDC CTRL */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 SQ EDC CTRL */

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 End of list */

/* ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 *      Offset                             Mask                                                 Shift                                                  Value

 * ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

 End of list */

 For Vega10, SMC does not support any mask yet. */

 Not used for Vega10 */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * smu7_fan_ctrl_set_static_mode - Set Fan Speed Control to static mode, so that the user can decide what speed to use.

 * @hwmgr:  the address of the powerplay hardware manager.

 * @mode:   the fan control mode, 0 default, 1 by percent, 5, by RPM

 * Exception: Should always succeed.

/**

 * smu7_fan_ctrl_set_default_mode - Reset Fan Speed Control to default mode.

 * @hwmgr:  the address of the powerplay hardware manager.

 * Exception: Should always succeed.

/**

 * smu7_fan_ctrl_set_fan_speed_pwm - Set Fan Speed in PWM.

 * @hwmgr: the address of the powerplay hardware manager.

 * @speed: is the pwm value (0 - 255) to be set.

/**

* smu7_fan_ctrl_reset_fan_speed_to_default - Reset Fan Speed to default.

* @hwmgr:  the address of the powerplay hardware manager.

* Exception: Always succeeds.

/**

 * smu7_fan_ctrl_set_fan_speed_rpm - Set Fan Speed in RPM.

 * @hwmgr: the address of the powerplay hardware manager.

 * @speed: is the percentage value (min - max) to be set.

 * Exception: Fails is the speed not lie between min and max.

/**

 * smu7_thermal_get_temperature - Reads the remote temperature from the SIslands thermal controller.

 *

 * @hwmgr: The address of the hardware manager.

 Bit 9 means the reading is lower than the lowest usable value. */

/**

 * smu7_thermal_set_temperature_range - Set the requested temperature range for high and low alert signals

 *

 * @hwmgr: The address of the hardware manager.

 * @low_temp: Temperature to be programmed for high alert signals

 * @high_temp: Temperature to be programmed for low alert signals

 * Exception: PP_Result_BadInput if the input data is not valid.

/**

 * smu7_thermal_initialize - Programs thermal controller one-time setting registers

 *

 * @hwmgr: The address of the hardware manager.

/**

 * smu7_thermal_enable_alert - Enable thermal alerts on the RV770 thermal controller.

 *

 * @hwmgr: The address of the hardware manager.

 send message to SMU to enable internal thermal interrupts */

/**

 * smu7_thermal_disable_alert - Disable thermal alerts on the RV770 thermal controller.

 * @hwmgr: The address of the hardware manager.

 send message to SMU to disable internal thermal interrupts */

/**

 * smu7_thermal_stop_thermal_controller - Uninitialize the thermal controller.

 * Currently just disables alerts.

 * @hwmgr: The address of the hardware manager.

/**

 * smu7_thermal_start_smc_fan_control - Start the fan control on the SMC.

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:   result from set temperature range routine

/* If the fantable setup has failed we could have disabled

 * PHM_PlatformCaps_MicrocodeFanControl even after

 * this function was included in the table.

 * Make sure that we still think controlling the fan is OK.

/* We should restrict performance levels to low before we halt the SMC.

 * On the other hand we are still in boot state when we do this

 * so it would be pointless.

 * If this assumption changes we have to revisit this table.

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * vega12_enable_fan_control_feature -Enables the SMC Fan Control Feature.

 *

 * @hwmgr: the address of the powerplay hardware manager.

 * Return:   0 on success. -1 otherwise.

/**

 * vega12_fan_ctrl_reset_fan_speed_to_default - Reset Fan Speed to default.

 * @hwmgr:  the address of the powerplay hardware manager.

 * Exception Always succeeds.

/**

 * vega12_thermal_get_temperature - Reads the remote temperature from the SIslands thermal controller.

 *

 * @hwmgr: The address of the hardware manager.

/**

 * vega12_thermal_set_temperature_range - Set the requested temperature range

 *                                        for high and low alert signals

 *

 * @hwmgr: The address of the hardware manager.

 * @range: Temperature range to be programmed for

 *           high and low alert signals

 * Exception: PP_Result_BadInput if the input data is not valid.

 compare them in unit celsius degree */

/**

 * vega12_thermal_enable_alert - Enable thermal alerts on the RV770 thermal controller.

 *

 * @hwmgr: The address of the hardware manager.

/**

 * vega12_thermal_disable_alert - Disable thermal alerts on the RV770 thermal controller.

 * @hwmgr: The address of the hardware manager.

/**

 * vega12_thermal_stop_thermal_controller - Uninitialize the thermal controller.

 * Currently just disables alerts.

 * @hwmgr: The address of the hardware manager.

/**

 * vega12_thermal_setup_fan_table - Set up the fan table to control the fan using the SMC.

 * @hwmgr:  the address of the powerplay hardware manager.

/**

 * vega12_thermal_start_smc_fan_control - Start the fan control on the SMC.

 * @hwmgr:  the address of the powerplay hardware manager.

 * Return:  result from set temperature range routine

	/* If the fantable setup has failed we could have disabled

	 * PHM_PlatformCaps_MicrocodeFanControl even after

	 * this function was included in the table.

	 * Make sure that we still think controlling the fan is OK.

	/* We should restrict performance levels to low before we halt the SMC.

	 * On the other hand we are still in boot state when we do this

	 * so it would be pointless.

	 * If this assumption changes we have to revisit this table.

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

/*

 * Although these are defined in each ASIC's specific header file.

 * They share the same definitions and values. That makes common

 * APIs for SMC messages issuing for all ASICs possible.

/* Redefine the SMU error codes here.

 *

 * Note that these definitions are redundant and should be removed

 * when the SMU has exported a unified header file containing these

 * macros, which header file we can just include and use the SMU's

 * macros. At the moment, these error codes are defined by the SMU

 * per-ASIC unfortunately, yet we're a one driver for all ASICs.

/**

 * __smu_cmn_poll_stat -- poll for a status from the SMU

 * smu: a pointer to SMU context

 *

 * Returns the status of the SMU, which could be,

 *    0, the SMU is busy with your previous command;

 *    1, execution status: success, execution result: success;

 * 0xFF, execution status: success, execution result: failure;

 * 0xFE, unknown command;

 * 0xFD, valid command, but bad (command) prerequisites;

 * 0xFC, the command was rejected as the SMU is busy;

 * 0xFB, "SMC_Result_DebugDataDumpEnd".

 *

 * The values here are not defined by macros, because I'd rather we

 * include a single header file which defines them, which is

 * maintained by the SMU FW team, so that we're impervious to firmware

 * changes. At the moment those values are defined in various header

 * files, one for each ASIC, yet here we're a single ASIC-agnostic

 * interface. Such a change can be followed-up by a subsequent patch.

		/* The SMU executed the command. It completed with a

		 * successful result.

		/* The SMU executed the command. It completed with an

		 * unsuccessful result.

		/* The SMU is busy--still executing your command.

		/* Command completed successfully, but the command

		 * status was failure.

		/* Unknown command--ignored by the SMU.

		/* Valid command--bad prerequisites.

		/* The SMU is busy with other commands. The client

		 * should retry in 10 us.

		/* Unknown or debug response from the SMU.

/**

 * smu_cmn_send_msg_without_waiting -- send the message; don't wait for status

 * @smu: pointer to an SMU context

 * @msg_index: message index

 * @param: message parameter to send to the SMU

 *

 * Send a message to the SMU with the parameter passed. Do not wait

 * for status/result of the message, thus the "without_waiting".

 *

 * Return 0 on success, -errno on error if we weren't able to _send_

 * the message for some reason. See __smu_cmn_reg2errno() for details

 * of the -errno.

/**

 * smu_cmn_wait_for_response -- wait for response from the SMU

 * @smu: pointer to an SMU context

 *

 * Wait for status from the SMU.

 *

 * Return 0 on success, -errno on error, indicating the execution

 * status and result of the message being waited for. See

 * __smu_cmn_reg2errno() for details of the -errno.

/**

 * smu_cmn_send_smc_msg_with_param -- send a message with parameter

 * @smu: pointer to an SMU context

 * @msg: message to send

 * @param: parameter to send to the SMU

 * @read_arg: pointer to u32 to return a value from the SMU back

 *            to the caller

 *

 * Send the message @msg with parameter @param to the SMU, wait for

 * completion of the command, and return back a value from the SMU in

 * @read_arg pointer.

 *

 * Return 0 on success, -errno on error, if we weren't able to send

 * the message or if the message completed with some kind of

 * error. See __smu_cmn_reg2errno() for details of the -errno.

 *

 * If we weren't able to send the message to the SMU, we also print

 * the error to the standard log.

 *

 * Command completion status is printed only if the -errno is

 * -EREMOTEIO, indicating that the SMU returned back an

 * undefined/unknown/unspecified result. All other cases are

 * well-defined, not printed, but instead given back to the client to

 * decide what further to do.

 *

 * The return value, @read_arg is read back regardless, to give back

 * more information to the client, which on error would most likely be

 * @param, but we can't assume that. This also eliminates more

 * conditionals.

/**

 * smu_cmn_disable_all_features_with_exception - disable all dpm features

 *                                               except this specified by

 *                                               @mask

 *

 * @smu:               smu_context pointer

 * @no_hw_disablement: whether real dpm disablement should be performed

 *                     true: update the cache(about dpm enablement state) only

 *                     false: real dpm disablement plus cache update

 * @mask:              the dpm feature which should not be disabled

 *                     SMU_FEATURE_COUNT: no exception, all dpm features

 *                     to disable

 *

 * Returns:

 * 0 on success or a negative error code on failure.

		/*

		 * Flush hdp cache: to guard the content seen by

		 * GPU is consitent with CPU.

	/*

	 * If the ASIC comes with no audio function, we always assume

	 * it is "enabled".

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

/**

 * smu_dpm_set_power_gate - power gate/ungate the specific IP block

 *

 * @handle:        smu_context pointer

 * @block_type: the IP block to power gate/ungate

 * @gate:       to power gate if true, ungate otherwise

 *

 * This API uses no smu->mutex lock protection due to:

 * 1. It is either called by other IP block(gfx/sdma/vcn/uvd/vce).

 *    This is guarded to be race condition free by the caller.

 * 2. Or get called on user setting request of power_dpm_force_performance_level.

 *    Under this case, the smu->mutex lock protection is already enforced on

 *    the parent API smu_force_performance_level of the call path.

	/*

	 * Some legacy code of amdgpu_vcn.c and vcn_v2*.c still uses

	 * AMD_IP_BLOCK_TYPE_UVD for VCN. So, here both of them are kept.

/**

 * smu_set_user_clk_dependencies - set user profile clock dependencies

 *

 * @smu:	smu_context pointer

 * @clk:	enum smu_clk_type type

 *

 * Enable/Disable the clock dependency for the @clk type.

 MCLK takes precedence over FCLK */

 MCLK takes precedence over SOCCLK */

 Add clk dependencies here, if any */

/**

 * smu_restore_dpm_user_profile - reinstate user dpm profile

 *

 * @smu:	smu_context pointer

 *

 * Restore the saved user power configurations include power limit,

 * clock frequencies, fan control mode and fan speed.

 Enable restore flag */

 set the user dpm power limit */

 set the user dpm clock configurations */

			/*

			 * Iterate over smu clk type and force the saved user clk

			 * configs, skip if clock dependency is enabled

 set the user dpm fan configurations */

 Restore user customized OD settings */

 Disable restore flag */

 not support power state */

 vega20 is 11.0.2, but it's supported via the powerplay code */

	/*

	 * Special hw_fini action(for Navi1x, the DPMs disablement will be

	 * skipped) may be needed for custom pptable uploading.

 OD is not supported on Arcturus */

 Enable pp_od_clk_voltage node */

 VRAM allocation for tool table */

 VRAM allocation for driver table */

/**

 * smu_alloc_memory_pool - allocate memory pool in the system memory

 *

 * @smu: amdgpu_device pointer

 *

 * This memory pool will be used for SMC use and msg SetSystemVirtualDramAddr

 * and DramLogSetDramAddr can notify it changed.

 *

 * Returns 0 on success, error on failure.

	/**

	 * Create smu_table structure, and init smc tables such as

	 * TABLE_PPTABLE, TABLE_WATERMARKS, TABLE_SMU_METRICS, and etc.

	/**

	 * Create smu_power_context structure, and allocate smu_dpm_context and

	 * context size to fill the smu_power_context data.

	/*

	 * allocate vram bos to store smc table contents.

 If there is no way to query fan control mode, fan control is not supported */

 this is needed specifically */

	/*

	 * Set PMSTATUSLOG table bo address with SetToolsDramAddr MSG for tools.

	/*

	 * Use msg SetSystemVirtualDramAddr and DramLogSetDramAddr can notify

	 * pool location.

 smu_dump_pptable(smu); */

	/*

	 * Copy pptable bo in the vram to smc with SMU MSGs such as

	 * SetDriverDramAddr and TransferTableDram2Smu.

 issue Run*Btc msg */

	/* Bit 31:16: LCLK DPM level. 0 is DPM0, and 1 is DPM1

	 * Bit 15:8:  PCIE GEN, 0 to 3 corresponds to GEN1 to GEN4

	 * Bit 7:0:   PCIE lane width, 1 to 7 corresponds is x1 to x32

	/*

	 * Set initialized values (get from vbios) to dpm tables context such as

	 * gfxclk, memclk, dcefclk, and etc. And enable the DPM feature for each

	 * type of clks.

	/*

	 * Set min deep sleep dce fclk with bootup value from vbios via

	 * SetMinDeepSleepDcefclk MSG.

	/*

	 * Send msg GetDriverIfVersion to check if the return value is equal

	 * with DRIVER_IF_VERSION of smc header.

 get boot_values from vbios to set revision, gfxclk, and etc. */

	/*

	 * Move maximum sustainable clock retrieving here considering

	 * 1. It is not needed on resume(from S3).

	 * 2. DAL settings come between .hw_init and .late_init of SMU.

	 *    And DAL needs to know the maximum sustainable clocks. Thus

	 *    it cannot be put in .late_init().

	/*

	 * For custom pptable uploading, skip the DPM features

	 * disable process on Navi1x ASICs.

	 *   - As the gfx related features are under control of

	 *     RLC on those ASICs. RLC reinitialization will be

	 *     needed to reenable them. That will cost much more

	 *     efforts.

	 *

	 *   - SMU firmware can handle the DPM reenablement

	 *     properly.

	/*

	 * For Sienna_Cichlid, PMFW will handle the features disablement properly

	 * on BACO in. Driver involvement is unnecessary.

	/*

	 * For gpu reset, runpm and hibernation through BACO,

	 * BACO feature has to be kept enabled.

 skip CGPG when in S0ix */

 enter umd pstate, save current level, disable gfx cg*/

 exit umd pstate, restore level, enable gfx cg*/

 update the saved copy */

 reset user dpm clock state */

/*

 * On system suspending or resetting, the dpm_enabled

 * flag will be cleared. So that those SMU services which

 * are not supported will be gated.

 * However, the mp1 state setting should still be granted

 * even if the dpm_enabled cleared.

 controlled by firmware */

 This should be used for non PSP loading */

 Override custom PWM setting as they cannot co-exist */

/**

 * smu_get_power_limit - Request one of the SMU Power Limits

 *

 * @handle: pointer to smu context

 * @limit: requested limit is written back to this variable

 * @pp_limit_level: &pp_power_limit_level which limit of the power to return

 * @pp_power_type: &pp_power_type type of power

 * Return:  0 on success, <0 on error

 *

 assign uint32_t to int

 reset user dpm fan speed */

 Override custom RPM setting as they cannot co-exist */

 export for sysfs */

 export to amdgpu */

 export to DC */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

 vcn dpm on is a prerequisite for vcn power gate messages */

 allow message will be sent after enable message on Yellow Carp*/

		/* return the percentage of APU power with respect to APU's power limit.

		 * percentage is reported, this isn't boost value. Smartshift power

		 * boost/shift is only when the percentage is more than 100.

		/* return the percentage of dGPU power with respect to dGPU's power limit.

		 * percentage is reported, this isn't boost value. Smartshift power

		 * boost/shift is only when the percentage is more than 100.

 pass data to smu controller */

 Only allowed in manual mode */

 clock in Mhz unit */

 Temporarily do nothing since the optimal clocks haven't been provided yet */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

 possible frequency drift (1Mhz) */

 pptable will handle the features to enable */

 socclk dpm table setup */

 gfxclk dpm table setup */

 in the case of gfxclk, only fine-grained dpm is honored */

 memclk dpm table setup */

 fclk dpm table setup */

 VBIOS pptable is the first choice */

 Valid power data is available only from primary die */

		/*

		 * CurrClock[clk_id] can provide accurate

		 *   output only when the dpm feature is enabled.

		 * We can use Average_* for dpm disabled case.

		 *   But this is available for gfxclk/uclk/socclk/vclk/dclk.

 fine-grained dpm has only 2 levels */

		/*

		 * For DPM disabled case, there will be only one clock level.

		 * And it's safe to assume that is always the current clock.

		/*

		 * Should not arrive here since aldebaran does not

		 * support mclk/socclk/fclk softmin/softmax settings

 the output clock frequency in 10K unit */

	/* Valid power data is available only from primary die.

	 * For secondary die show the value as 0.

 the last hope to figure out the ppt limit */

 Power limit can be set only through primary die */

 Disable determinism if switching to another mode */

 Restore default min/max clocks and enable determinism */

 Only allowed in manual or determinism mode */

 Use the default frequencies for manual and determinism mode */

 wants an 8-bit address */

 write */

				/* The direction changes.

			/*

			 * Insert STOP if we are at the last byte of either last

			 * message for the transaction or the client explicitly

			 * requires a STOP at this particular message.

 aldebaran is not support baco */

 TODO: confirm this on real target */

 Valid power data is available only from primary die */

 This is similar to FLR, wait till max FLR timeout */

 Restore the config space saved during init */

 Wait a bit more time for getting ACK */

	/**

	 * PM FW version support mode1 reset from 68.07

	/**

	 * mode1 reset relies on PSP, so we should check if

	 * PSP is alive.

 message SMU to update the bad page number on SMUBUS */

 init dpm */

 dpm/clk tables */

 pptable related */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

500ms

 doesn't need to load smu firmware in IOV mode */

	/*

	 * 1. if_version mismatch is not critical as our fw is designed

	 * to be backward compatible.

	 * 2. New fw usually brings some optimizations. But that's visible

	 * only on the paired driver.

	 * Considering above, we just leave user a warning message instead

	 * of halt driver loading.

 override pptable_id from driver parameter */

 force using vbios pptable in sriov mode */

 Aldebaran does not support OVERDRIVE */

 if DC limit is zero, return AC limit */

 For THM irqs */

 For MP1 SW irqs */

 For THM irqs */

 For MP1 SW irqs */

 ASIC_TEMP > CG_THERMAL_INT.DIG_THERM_INTH  */

 ASIC_TEMP < CG_THERMAL_INT.DIG_THERM_INTL  */

	/*

	 * ctxid is used to distinguish different

	 * events for SMCToHost interrupt.

			/*

			 * SW CTF just occurred.

			 * Try to do a graceful shutdown to prevent further damage.

		/*

		 * HW CTF just occurred. Shutdown to prevent further damage.

 ACK SMUToHost interrupt */

				/*

				 * Increment the throttle interrupt counter

 Register CTF(GPIO_19) interrupt */

	/*

	* PM FW support SMU_MSG_GfxDeviceDriverReset from 68.07

TODO: mode2 reset wait time should be shorter, add ASIC specific func if required */

 clock in Mhz unit */

	/*

	 * BIT31:  0 - Fine grained DPM, 1 - Dicrete DPM

	 * now, we un-support it

 FW returns 0 based max level, increment by one */

 by default, level 0 clock value as min value */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

 because some SMU12 based ASICs use older ip offset tables

 we should undefine this register from the smuio12 header

 to prevent confusion down the road

	/*

	 * 1. if_version mismatch is not critical as our fw is designed

	 * to be backward compatible.

	 * 2. New fw usually brings some optimizations. But that's visible

	 * only on the paired driver.

	 * Considering above, we just leave user a warning message instead

	 * of halt driver loading.

/**

 * smu_v12_0_get_gfxoff_status - get gfxoff status

 *

 * @smu: amdgpu_device pointer

 *

 * This function will be used to get gfxoff status

 *

 * Returns 0=GFXOFF(default).

 * Returns 1=Transition out of GFX State.

 * Returns 2=Not in GFXOFF.

 * Returns 3=Transition into GFXOFF.

 confirm gfx is back to "on" state, timeout is 0.5 second */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

/*

 * This interface just for getting uclk ultimate freq and should't introduce

 * other likewise function result in overmuch callback.

 mclk levels are in reverse order */

 The sclk as gfxclk and has three level about max/min/current */

 mclk levels are in reverse order */

 clock in Mhz unit */

 retirve table returned paramters unit is MHz */

 driver only know min/max gfx_clk, Add level 1 for all other gfx clks */

 vcn dpm on is a prerequisite for vcn power gate messages */

/*

 * This interface get dpm clock table for dc

 conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT */

		/*

		 * TODO: If some case need switch to powersave/default power mode

		 * then can consider enter WORKLOAD_COMPUTE/WORKLOAD_CUSTOM for power saving.

/* save watermark settings into pplib smu structure,

 * also pass data to smu controller

 save into smu->smu_table.tables[SMU_TABLE_WATERMARKS]->cpu_addr*/

 pass data to smu controller */

		/*

		 * Conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT

		 * Not all profile modes are supported on arcturus.

		/* return the percentage of APU power with respect to APU's power limit.

		 * percentage is reported, this isn't boost value. Smartshift power

		 * boost/shift is only when the percentage is more than 100.

		/* return the percentage of dGPU power with respect to dGPU's power limit.

		 * percentage is reported, this isn't boost value. Smartshift power

		 * boost/shift is only when the percentage is more than 100.

	/*

	 * Until now, the pmfw hasn't exported the interface of SMU

	 * feature mask to APU SKU so just force on all the feature

	 * at early initial stage.

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

 AMD x86 APU only */

 vcn dpm on is a prerequisite for vcn power gate messages */

 we need to re-init after suspend so return false */

 the level 3 ~ 6 of socclk use the same frequency for vangogh */

 the level 3 ~ 6 of socclk use the same frequency for vangogh */

 clock in Mhz unit */

		/*

		 * Conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT

		 * Not all profile modes are supported on vangogh.

 conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT */

 pass data to smu controller */

 Two CUs in one WGP */

 allow message will be sent after enable message on Vangogh*/

 if all CUs are active, no need to power off any WGPs */

	/*

	 * Calculate the total bits number of always on WGPs for all SA/SEs in

	 * RLC_PG_ALWAYS_ON_WGP_MASK.

 Do not request any WGPs less than set in the AON_WGP_MASK */

 convert from milliwatt to watt */

 convert from milliwatt to watt */

 convert from watt to milliwatt */

 convert from watt to milliwatt */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

	/*

	 * Instead of having its own buffer space and get overdrive_table copied,

	 * smu->od_settings just points to the actual overdrive_table

 socclk dpm table setup */

 gfxclk dpm table setup */

 uclk dpm table setup */

 fclk dpm table setup */

 vclk0/1 dpm table setup */

 dclk0/1 dpm table setup */

 dcefclk dpm table setup */

 pixelclk dpm table setup */

 displayclk dpm table setup */

 phyclk dpm table setup */

 vcn dpm on is a prerequisite for vcn power gate messages */

 0 - Fine grained DPM, 1 - Discrete DPM */

 no need to disable gfxoff when retrieving the current gfxclk */

		/*

		 * OD GFX Voltage Offset functionality is supported only by 58.41.0

		 * and onwards SMU firmwares.

 There is only 2 levels for fine grained DPM */

 Sienna_Cichlid do not support to change display num currently */

	/*

	 * For Sienna_Cichlid and later, the fan speed(rpm) reported

	 * by pmfw is always trustable(even when the fan control feature

	 * disabled or 0 RPM kicked in).

 conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT */

 Gfxclk */

 Socclk */

 Memlk */

 conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT */

 convert to khz */

 lclk dpm table setup */

	/*

	 * For S3/S4/Runpm resume, no need to setup those overdrive tables again as

	 *   - either they already have the default OD settings got during cold bootup

	 *   - or they have some user customized OD settings which cannot be overwritten

		/*

		 * OD GFX Voltage Offset functionality is supported only by 58.41.0

		 * and onwards SMU firmwares.

 Wait for PMFW handling for the Dstate change */

	/**

	 * SRIOV env will not support SMU mode1 reset

	 * PM FW support mode1 reset from 58.26

	/**

	 * mode1 reset relies on PSP, so we should check if

	 * PSP is alive.

 wants an 8-bit address */

 write */

				/* The direction changes.

			/*

			 * Insert STOP if we are at the last byte of either last

			 * message for the transaction or the client explicitly

			 * requires a STOP at this particular message.

	/*

	 * Skip the MGpuFanBoost setting for those ASICs

	 * which do not support it

	/*

	 * Message SMU_MSG_Enable2ndUSB20Port is supported by 58.45

	 * onwards PMFWs.

 Ignore others */

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

 unit: MHz */

 unit: mV */

 0x13fe

 we need to re-init after suspend so return false */

	/*

	 * cyan_skillfish specific, query default sclk inseted of hard code.

			/*

			 * PMFW accepts SVI2 VID code, convert voltage to VID:

			 * vid = (uint32_t)((1.55 - voltage) * 160.0 + 0.00001)

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

500ms

	/*

	 * 1. if_version mismatch is not critical as our fw is designed

	 * to be backward compatible.

	 * 2. New fw usually brings some optimizations. But that's visible

	 * only on the paired driver.

	 * Considering above, we just leave user a warning message instead

	 * of halt driver loading.

 Arcturus does not support OVERDRIVE */

	/* Navy_Flounder/Dimgrey_Cavefish do not support to change

	 * display num currently

 if DC limit is zero, return AC limit */

	/*

	 * BIT 24-31: ControllerId (only PPT0 is supported for now)

	 * BIT 16-23: PowerSource

	/*

	 * BIT 24-31: ControllerId (only PPT0 is supported for now)

	 * BIT 16-23: PowerSource

	 * BIT 0-15: PowerLimit

	/*

	 * After init there might have been missed interrupts triggered

	 * before driver registers for interrupt (Ex. AC/DC).

	/*

	 * crystal_clock_freq used for fan speed rpm calculation is

	 * always 25Mhz. So, hardcode it as 2500(in 10K unit).

	/*

	 * To prevent from possible overheat, some ASICs may have requirement

	 * for minimum fan speed:

	 * - For some NV10 SKU, the fan speed cannot be set lower than

	 *   700 RPM.

	 * - For some Sienna Cichlid SKU, the fan speed cannot be set

	 *   lower than 500 RPM.

	/*

	 * For pre Sienna Cichlid ASICs, the 0 RPM may be not correctly

	 * detected via register retrieving. To workaround this, we will

	 * report the fan speed as 0 PWM if user just requested such.

	/*

	 * For pre Sienna Cichlid ASICs, the 0 RPM may be not correctly

	 * detected via register retrieving. To workaround this, we will

	 * report the fan speed as 0 RPM if user just requested such.

 For THM irqs */

 For MP1 SW irqs */

 For THM irqs */

 For MP1 SW irqs */

 ASIC_TEMP > CG_THERMAL_INT.DIG_THERM_INTH  */

 ASIC_TEMP < CG_THERMAL_INT.DIG_THERM_INTL  */

	/*

	 * ctxid is used to distinguish different

	 * events for SMCToHost interrupt.

			/*

			 * SW CTF just occurred.

			 * Try to do a graceful shutdown to prevent further damage.

		/*

		 * HW CTF just occurred. Shutdown to prevent further damage.

 ACK SMUToHost interrupt */

				/*

				 * Increment the throttle interrupt counter

 Register CTF(GPIO_19) interrupt */

 Arcturus does not support this bit mask */

 clear vbios scratch 6 and 7 for coming asic reinit */

 clock in Mhz unit */

	/*

	 * Separate MCLK and SOCCLK soft min/max settings are not allowed

	 * on Arcturus.

	/*

	 * BIT31:  0 - Fine grained DPM, 1 - Dicrete DPM

	 * now, we un-support it

 by default, level 0 clock value as min value */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

 possible frequency drift (1Mhz) */

 pptable will handle the features to enable */

 socclk dpm table setup */

 gfxclk dpm table setup */

 memclk dpm table setup */

 fclk dpm table setup */

 No sort of fan control possible if PPTable has it disabled */

		/*

		 * CurrClock[clk_id] can provide accurate

		 *   output only when the dpm feature is enabled.

		 * We can use Average_* for dpm disabled case.

		 *   But this is available for gfxclk/uclk/socclk/vclk/dclk.

		/*

		 * For DPM disabled case, there will be only one clock level.

		 * And it's safe to assume that is always the current clock.

		/*

		 * Should not arrive here since Arcturus does not

		 * support mclk/socclk/fclk softmin/softmax settings

 the output clock frequency in 10K unit */

		/*

		 * For pre Sienna Cichlid ASICs, the 0 RPM may be not correctly

		 * detected via register retrieving. To workaround this, we will

		 * report the fan speed as 0 RPM if user just requested such.

	/*

	 * crystal_clock_freq used for fan speed rpm calculation is

	 * always 25Mhz. So, hardcode it as 2500(in 10K unit).

	/*

	 * For pre Sienna Cichlid ASICs, the 0 RPM may be not correctly

	 * detected via register retrieving. To workaround this, we will

	 * report the fan speed as 0 PWM if user just requested such.

 the last hope to figure out the ppt limit */

		/*

		 * Conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT

		 * Not all profile modes are supported on arcturus.

 Gfxclk */

 Uclk */

	/*

	 * Conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT

	 * Not all profile modes are supported on arcturus.

 wants an 8-bit address */

 write */

				/* The direction changes.

			/*

			 * Insert STOP if we are at the last byte of either last

			 * message for the transaction or the client explicitly

			 * requires a STOP at this particular message.

 PPSMC_MSG_ReadSerial* is supported by 54.23.0 and onwards */

 Get the SN to turn into a Unique ID */

	/* For Arcturus-and-later, unique_id == serial_number, so convert it to a

	 * 16-digit HEX string for convenience and backwards-compatibility

 PPSMC_MSG_DFCstateControl is supported by 54.15.0 and onwards */

 PPSMC_MSG_GmiPwrDnControl is supported by 54.23.0 and onwards */

 TODO: confirm this on real target */

 init dpm */

 btc */

 dpm/clk tables */

 debug (internal used) */

 pptable related */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * DO NOT use these for err/warn/info/debug messages.

 * Use dev_err, dev_warn, dev_info and dev_dbg instead.

 * They are more MGPU friendly.

 DPM UCLK enablement should be skipped for navi10 A0 secure board */

 DS SOCCLK enablement should be skipped for navi10 A0 secure board */

	/*

	 * Instead of having its own buffer space and get overdrive_table copied,

	 * smu->od_settings just points to the actual overdrive_table

 nv10 and nv14 */

 nv12 */

 TODO: remove it once SMU fw fix it */

 socclk dpm table setup */

 gfxclk dpm table setup */

 uclk dpm table setup */

 vclk dpm table setup */

 dclk dpm table setup */

 dcefclk dpm table setup */

 pixelclk dpm table setup */

 displayclk dpm table setup */

 phyclk dpm table setup */

 vcn dpm on is a prerequisite for vcn power gate messages */

 0 - Fine grained DPM, 1 - Discrete DPM */

 There is only 2 levels for fine grained DPM */

 XTX */

 XT */

 XL */

 XT */

 XTM */

 XLM */

 XTX */

 XL */

 conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT */

 Gfxclk */

 Socclk */

 Memlk */

 conv PP_SMC_POWER_PROFILE* to WORKLOAD_PPLIB_*_BIT */

 pass data to smu controller */

 convert to khz */

 the last hope to figure out the ppt limit */

 lclk dpm table setup */

	/*

	 * This aims the case below:

	 *   amdgpu driver loaded -> runpm suspend kicked -> sound driver loaded

	 *

	 * For NAVI10 and later ASICs, we rely on PMFW to handle the runpm. To

	 * make that possible, PMFW needs to acknowledge the dstate transition

	 * process for both gfx(function 0) and audio(function 1) function of

	 * the ASIC.

	 *

	 * The PCI device's initial runpm status is RUNPM_SUSPENDED. So as the

	 * device representing the audio function of the ASIC. And that means

	 * even if the sound driver(snd_hda_intel) was not loaded yet, it's still

	 * possible runpm suspend kicked on the ASIC. However without the dstate

	 * transition notification from audio function, pmfw cannot handle the

	 * BACO in/exit correctly. And that will cause driver hang on runpm

	 * resuming.

	 *

	 * To address this, we revert to legacy message way(driver masters the

	 * timing for BACO in/exit) on sound driver missing.

 Wait for PMFW handling for the Dstate change */

	/*

	 * For S3/S4/Runpm resume, no need to setup those overdrive tables again as

	 *   - either they already have the default OD settings got during cold bootup

	 *   - or they have some user customized OD settings which cannot be overwritten

 Allow setting zero to disable the OverDrive VDDC curve

 If setting 0, disable all voltage curve settings

 This workaround can be applied only with uclk dpm enabled */

	/*

	 * The NAVI10_UMC_HYBRID_CDR_WORKAROUND_UCLK_THRESHOLD is 750Mhz.

	 * This workaround is needed only when the max uclk frequency

	 * not greater than that.

 Force UCLK out of the highest DPM */

 Revert the UCLK Hardmax */

	/*

	 * In this case, SMU already disabled dummy pstate during enablement

	 * of UCLK DPM, we have to re-enabled it.

	/*

	 * The messages below are only supported by Navi10 42.53.0 and later

	 * PMFWs and Navi14 53.29.0 and later PMFWs.

	 * - PPSMC_MSG_SetDriverDummyTableDramAddrHigh

	 * - PPSMC_MSG_SetDriverDummyTableDramAddrLow

	 * - PPSMC_MSG_GetUMCFWWA

 First bit indicates if the UMC f/w is above v137 */

 Second bit indicates if hybrid-cdr is disabled */

 w/a only allowed if UMC f/w is <= 136 */

 wants an 8-bit address */

 write */

				/* The direction changes.

			/*

			 * Insert STOP if we are at the last byte of either last

			 * message for the transaction or the client explicitly

			 * requires a STOP at this particular message.

 Navi12 does not support this */

	/*

	 * Skip the MGpuFanBoost setting for those ASICs

	 * which do not support it

 Workaround for WS SKU */

		/*

		 * For Navi1X, manually switch it to AC mode as PMFW

		 * may boot it with DC mode.

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

		/**

		 * Timeout covers both the ACK and the wait

		 * for remaining work to finish.

 Force reset in case we timed out, DMCUB is likely hung. */

 Clear the GPINT command manually so we don't send anything during boot. */

	/**

	 * outbox1 wptr register is accessed without locks (dal & dc)

	 * and to be called only by dmub_srv_stat_get_notification()

	/**

	 * outbox1 rptr register is accessed without locks (dal & dc)

	 * and to be called only by dmub_srv_stat_get_notification()

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Registers. */

 Shared functions. */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/**

 * DOC: DMUB_SRV STAT Interface

 *

 * These interfaces are called without acquiring DAL and DC locks.

 * Hence, there is limitations on whese interfaces can access. Only

 * variables exclusively defined for these interfaces can be modified.

/**

 * dmub_srv_stat_get_notification - Retrieves a dmub outbox notification, set up dmub notification

 *                                  structure with message information. Also a pending bit if queue

 *                                  is having more notifications

 *  @dmub: dmub srv structure

 *  @notify: dmub notification structure to be filled up

 *

 *  Returns: dmub_status

	/**

	 * This function is called without dal and dc locks, so

	 * we shall not modify any dmub variables, only dmub->outbox1_rb

	 * is exempted as it is exclusively accessed by this function

 Get write pointer which is updated by dmub */

 Pop outbox1 ringbuffer and update read pointer */

	/**

	 * Notify dc whether dmub has a pending outbox message,

	 * this is to avoid one more call to dmub_srv_stat_get_notification

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Registers. */

 Shared functions. */

 Cached inbox is not supported in this fw version range */

		/**

		 * Timeout covers both the ACK and the wait

		 * for remaining work to finish.

		 *

		 * This is mostly bound by the PHY disable sequence.

		 * Each register check will be greater than 1us, so

		 * don't bother using udelay.

 Clear the GPINT command manually so we don't reset again. */

 Force reset in case we timed out, DMCUB is likely hung. */

 TODO: Move this to CW4. */

 New firmware can support CW4. */

 New firmware can support CW4 for the inbox. */

 New firmware can support CW4 for the outbox. */

	/**

	 * outbox1 wptr register is accessed without locks (dal & dc)

	 * and to be called only by dmub_srv_stat_get_notification()

	/**

	 * outbox1 rptr register is accessed without locks (dal & dc)

	 * and to be called only by dmub_srv_stat_get_notification()

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 gather all bits value/mask getting updated in this register */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Note: the DMUB service is standalone. No additional headers should be

 * added below or above this line unless they reside within the DMUB

 * folder.

 Alignment for framebuffer memory. */

 Stack size. */

 Context size. */

 Mailbox size : Ring buffers are required for both inbox and outbox */

 Default state size if meta is absent. */

 Default tracebuffer size if meta is absent. */

 Default scratch mem size. */

 Number of windows in use. */

 Base addresses. */

	/**

	 * Read 64-byte chunks since we don't want to store a

	 * large temporary buffer for this purpose.

 Read anything leftover into the buffer. */

 Legacy metadata region. */

 Combined metadata region. */

 Out mailbox register access functions for RN and above

outbox0 call stacks

outbox0 call stacks

 Setup asic dependent hardware funcs. */

 Override (some) hardware funcs based on user params. */

 Sanity checks for required hw func pointers. */

	/*

	 * All cache windows below should be aligned to the size

	 * of the DMCUB cache line, 64 bytes.

		/**

		 * If DM didn't fill in a version, then fill it in based on

		 * the firmware meta now that we have it.

		 *

		 * TODO: Make it easier for driver to extract this out to

		 * pass during creation.

		/**

		 * Read back all the instruction memory so we don't hang the

		 * DMCUB when backdoor loading if the write from x86 hasn't been

		 * flushed yet. This only occurs in backdoor loading.

	/**

	 * Doubled the mailbox region to accomodate inbox and outbox.

	 * Note: Currently, currently total mailbox size is 16KB. It is split

	 * equally into 8KB between inbox and outbox. If this config is

	 * changed, then uncached base address configuration of outbox1

	 * has to be updated in funcs->setup_out_mailbox.

 Initialize outbox1 ring buffer

 Report to DMUB what features are supported by current driver */

	/**

	 * Read back all the queued commands to ensure that they've

	 * been flushed to framebuffer memory. Otherwise DMCUB might

	 * read back stale, fully invalid or partially invalid data.

 Queue command

 Execute command

 Wait for DMUB to process command

 Copy data back from ring buffer into command

 copying data

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Registers. */

 Shared functions. */

 MEM_CTNL read/write space doesn't exist. */

 sienna_cichlid  has hardwired virtual addressing for CW2-CW7 */

 New firmware can support CW4. */

 SPDX-License-Identifier: MIT

/*

 * Copyright (C) 2021 Advanced Micro Devices, Inc.

 *

 * Authors: AMD

 Registers. */

 Shared functions. */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Registers. */

 Shared functions. */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Registers. */

 Shared functions. */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 The caprices of the preprocessor require that this be declared right here */

 Number of bytes in PSP header for firmware. */

 Number of bytes in PSP footer for firmware. */

/**

 * DOC: overview

 *

 * The AMDgpu display manager, **amdgpu_dm** (or even simpler,

 * **dm**) sits between DRM and DC. It acts as a liaison, converting DRM

 * requests into DC requests, and DC responses into DRM responses.

 *

 * The root control structure is &struct amdgpu_display_manager.

 basic init/fini API */

/*

 * initializes drm_device display related structures, based on the information

 * provided by DAL. The drm strcutures are: drm_crtc, drm_connector,

 * drm_encoder, drm_mode_config

 *

 * Returns 0 on success

 removes and deallocates the drm structures, created by the above function */

/*

 * dm_vblank_get_counter

 *

 * @brief

 * Get counter for number of vertical blanks

 *

 * @param

 * struct amdgpu_device *adev - [in] desired amdgpu device

 * int disp_idx - [in] which CRTC to get the counter from

 *

 * @return

 * Counter for vertical blanks

		/*

		 * TODO rework base driver to use values directly.

		 * for now parse it back into reg-format

 XXX todo */

 XXX todo */

 XXX todo */

/**

 * dm_pflip_high_irq() - Handle pageflip interrupt

 * @interrupt_params: ignored

 *

 * Handles the pageflip interrupt by notifying all interested parties

 * that the pageflip has been completed.

 IRQ could occur when in initial stage */

 TODO work and BO cleanup */

 page flip completed. */

 Fixed refresh rate, or VRR scanout position outside front-porch? */

		/* Update to correct count and vblank timestamp if racing with

		 * vblank irq. This also updates to the correct vblank timestamp

		 * even in VRR mode, as scanout is past the front-porch atm.

		/* Wake up userspace by sending the pageflip event with proper

		 * count and timestamp of vblank of flip completion.

 Event sent, so done with vblank for this flip */

		/* VRR active and inside front-porch: vblank count and

		 * timestamp for pageflip event will only be up to date after

		 * drm_crtc_handle_vblank() has been executed from late vblank

		 * irq handler after start of back-porch (vline 0). We queue the

		 * pageflip event for send-out by drm_crtc_handle_vblank() with

		 * updated timestamp and count, once it runs after us.

		 *

		 * We need to open-code this instead of using the helper

		 * drm_crtc_arm_vblank_event(), as that helper would

		 * call drm_crtc_accurate_vblank_count(), which we must

		 * not call in VRR mode while we are in front-porch!

 sequence will be replaced by real count during send-out. */

	/* Keep track of vblank of this flip for flip throttling. We use the

	 * cooked hw counter, as that one incremented at start of this vblank

	 * of pageflip completion, so last_flip_vblank is the forbidden count

	 * for queueing new pageflips if vsync + VRR is enabled.

		/* Core vblank handling is done here after end of front-porch in

		 * vrr mode, as vblank timestamping will give valid results

		 * while now done after front-porch. This will also deliver

		 * page-flip completion events that have been queued to us

		 * if a pageflip happened inside front-porch.

 BTR processing for pre-DCE12 ASICs */

/**

 * dm_crtc_high_irq() - Handles CRTC interrupt

 * @interrupt_params: used for determining the CRTC instance

 *

 * Handles the CRTC/VSYNC interrupt by notfying DRM's VBLANK

 * event handler.

	/**

	 * Core vblank handling at start of front-porch is only possible

	 * in non-vrr mode, as only there vblank timestamping will give

	 * valid results while done in front-porch. Otherwise defer it

	 * to dm_vupdate_high_irq after end of front-porch.

	/**

	 * Following stuff must happen at start of vblank, for crc

	 * computation and below-the-range btr support in vrr mode.

 BTR updates need to happen before VUPDATE on Vega and above. */

	/*

	 * If there aren't any active_planes then DCH HUBP may be clock-gated.

	 * In that case, pageflip completion interrupts won't fire and pageflip

	 * completion events won't get delivered. Prevent this by sending

	 * pending pageflip events from here if a flip is still pending.

	 *

	 * If any planes are enabled, use dm_pflip_high_irq() instead, to

	 * avoid race conditions between flip programming and completion,

	 * which could cause too early flip completion events.

/**

 * dm_dcn_vertical_interrupt0_high_irq() - Handles OTG Vertical interrupt0 for

 * DCN generation ASICs

 * @interrupt_params: interrupt parameters

 *

 * Used to set crc window/read out crc value at vertical line 0 position

 CONFIG_DRM_AMD_SECURE_DISPLAY */

/**

 * dmub_aux_setconfig_reply_callback - Callback for AUX or SET_CONFIG command.

 * @adev: amdgpu_device pointer

 * @notify: dmub notification structure

 *

 * Dmub AUX or SET_CONFIG command completion processing callback

 * Copies dmub notification to DM which is to be read by AUX command.

 * issuing thread and also signals the event to wake up the thread.

/**

 * dmub_hpd_callback - DMUB HPD interrupt processing callback.

 * @adev: amdgpu_device pointer

 * @notify: dmub notification structure

 *

 * Dmub Hpd interrupt processing callback. Gets displayindex through the

 * ink index and calls helper to do the processing.

/**

 * register_dmub_notify_callback - Sets callback for DMUB notify

 * @adev: amdgpu_device pointer

 * @type: Type of dmub notification

 * @callback: Dmub interrupt callback function

 * @dmub_int_thread_offload: offload indicator

 *

 * API to register a dmub callback handler for a dmub notification

 * Also sets indicator whether callback processing to be offloaded.

 * to dmub interrupt handling thread

 * Return: true if successfully registered, false if there is existing registration

/**

 * dm_dmub_outbox1_low_irq() - Handles Outbox interrupt

 * @interrupt_params: used for determining the Outbox instance

 *

 * Handles the Outbox Interrupt

 * event handler.

 CONFIG_DRM_AMD_DC_DCN */

 Prototypes of private functions */

 Allocate memory for FBC compressed data  */

 TODO: Disable audio? */

 DMUB isn't supported on the ASIC. */

 Firmware required for DMUB support. */

 Copy firmware and bios info into FB memory. */

	/* if adev->firmware.load_type == AMDGPU_FW_LOAD_PSP,

	 * amdgpu_ucode_init_single_fw will load dmub firmware

	 * fw_inst_const part to cw0; otherwise, the firmware back door load

	 * will be done by dm_dmub_hw_init

 Copy firmware bios info into FB memory. */

 Reset regions that need to be reset. */

 Initialize hardware. */

 backdoor load firmware and trigger dmub running */

 Wait for firmware load to finish. */

 Init DMCU and ABM if available. */

		/*

		 * Raven2 has a HW issue that it is unable to use the vram which

		 * is out of MC_VM_SYSTEM_APERTURE_HIGH_ADDR. So here is the

		 * workaround that increase system aperture high address (add 1)

		 * to get rid of the VM fault and hardware hang.

 Control PSR based on vblank requirements from OS */

bugzilla.kernel.org/show_bug.cgi?id=214417 */

 Zero all the fields */

 TODO: initialize init_data.asic_id.vram_type here!!!! */

 development */

 linux-firmware.git hash 6d9f399 */

 linux-firmware.git hash 9a0b0f4 */

 Display Core create. */

 Call the DC init_memory func

 CONFIG_DRM_AMD_DC_DCN */

 create fake encoders for MST */

 TODO: Add_display_info? */

 TODO use dynamic cursor width */

 DC Destroy TODO: Replace destroy DAL */

	/*

	 * TODO: pageflip, vlank interrupt

	 *

	 * amdgpu_dm_irq_fini(adev);

 DMCU firmware is not necessary, so don't raise a fuss if it's missing */

 ASIC doesn't support DMUB. */

 Create the DMUB service. */

 Calculate the size of all the regions for the DMUB service. */

	/*

	 * Allocate a framebuffer based on the total size of all the regions.

	 * TODO: Move this into GART.

 Rebase the regions on the framebuffer address. */

	/* Min backlight level after ABM reduction,  Don't allow below 1%

	 * 0xFFFF x 0.01 = 0x28F

	/* In the case where abm is implemented on dmcub,

	* dmcu object will be null.

	* ABM 2.4 and up are implemented on dmcub.

	/* This interface is for dGPU Navi1x.Linux dc-pplib interface depends

	 * on window driver dc implementation.

	 * For Navi1x, clock settings of dcn watermarks are fixed. the settings

	 * should be passed to smu during boot up and resume from s3.

	 * boot up: dc calculate dcn watermark clock settings within dc_create,

	 * dcn20_resource_construct

	 * then call pplib functions below to pass the settings to smu:

	 * smu_set_watermarks_for_clock_ranges

	 * smu_set_watermarks_table

	 * navi10_set_watermarks_table

	 * smu_write_watermarks_table

	 *

	 * For Renoir, clock settings of dcn watermark are also fixed values.

	 * dc has implemented different flow for window driver:

	 * dc_hardware_init / dc_set_power_state

	 * dcn10_init_hw

	 * notify_wm_ranges

	 * set_wm_ranges

	 * -- Linux

	 * smu_set_watermarks_for_clock_ranges

	 * renoir_set_watermarks_table

	 * smu_write_watermarks_table

	 *

	 * For Linux,

	 * dc_hardware_init -> amdgpu_dm_init

	 * dc_set_power_state --> dm_resume

	 *

	 * therefore, this function apply to navi10/12/14 but not Renoir

	 * *

/**

 * dm_hw_init() - Initialize DC device

 * @handle: The base driver device containing the amdgpu_dm device.

 *

 * Initialize the &struct amdgpu_display_manager device. This involves calling

 * the initializers of each DM component, then populating the struct with them.

 *

 * Although the function implies hardware initialization, both hardware and

 * software are initialized here. Splitting them out to their relevant init

 * hooks is a future TODO item.

 *

 * Some notable things that are initialized here:

 *

 * - Display Core, both software and hardware

 * - DC modules that we need (freesync and color management)

 * - DRM software states

 * - Interrupt sources and handlers

 * - Vblank support

 * - Debug FS entries, if enabled

 Create DAL display manager */

/**

 * dm_hw_fini() - Teardown DC device

 * @handle: The base driver device containing the amdgpu_dm device.

 *

 * Teardown components within &struct amdgpu_display_manager that require

 * cleanup. This involves cleaning up the DRM device, DC, and any modules that

 * were loaded. Also flush IRQ workqueues and disable them.

 First remove from context all streams */

 Remove all planes for removed streams and then remove the streams */

 dc_sink_create returns a new reference */

		/*

		 * Resource allocation happens for link encoders for newer ASIC in

		 * dc_validate_global_state, so we need to revalidate it.

		 *

		 * This shouldn't fail (it passed once before), so warn if it does.

 Recreate dc_state - DC invalidates it when setting power state to S3. */

 TODO: Remove dc_state->dccg, use dc->dccg directly. */

 Before powering on DC we need to re-initialize DMUB. */

 power on hardware */

 program HPD filter */

	/*

	 * early enable HPD Rx IRQ, should be done before set mode as short

	 * pulse interrupts are used for MST

 On resume we need to rewrite the MSTM control bits to enable MST*/

 Do detection*/

		/*

		 * this is the case when traversing through already created

		 * MST connectors, should be skipped

 Force mode set in atomic commit */

	/*

	 * atomic_check is expected to create the dc states. We need to release

	 * them here, since they were duplicated as part of the suspend

	 * procedure.

/**

 * DOC: DM Lifecycle

 *

 * DM (and consequently DC) is registered in the amdgpu base driver as a IP

 * block. When CONFIG_DRM_AMD_DC is enabled, the DM device IP block is added to

 * the base driver's device list to be initialized and torn down accordingly.

 *

 * The functions to do so are provided as hooks in &struct amd_ip_funcs.

/**

 * DOC: atomic

 *

 * *WIP*

	if (caps->ext_caps->bits.oled == 1 /*||

	    caps->ext_caps->bits.sdr_aux_backlight_control == 1 ||

	/* From the specification (CTA-861-G), for calculating the maximum

	 * luminance we need to use:

	 *	Luminance = 50*2**(CV/32)

	 * Where CV is a one-byte value.

	 * For calculating this expression we may need float point precision;

	 * to avoid this complexity level, we take advantage that CV is divided

	 * by a constant. From the Euclids division algorithm, we know that CV

	 * can be written as: CV = 32*q + r. Next, we replace CV in the

	 * Luminance expression and get 50*(2**q)*(2**(r/32)), hence we just

	 * need to pre-compute the value of r/32. For pre-computing the values

	 * We just used the following Ruby line:

	 *	(0...32).each {|cv| puts (50*2**(cv/32.0)).round}

	 * The results of the above expressions can be verified at

	 * pre_computed_values.

 min luminance: maxLum * (CV/255)^2 / 100

 MST handled by drm_mst framework */

	/*

	 * Edid mgmt connector gets first update only in mode_valid hook and then

	 * the connector sink is set to either fake or physical sink depends on link status.

	 * Skip if already done during boot.

		/*

		 * For S3 resume with headless use eml_sink to fake stream

		 * because on resume connector->sink is set to NULL

				/*

				 * retain and release below are used to

				 * bump up refcount for sink because the link doesn't point

				 * to it anymore after disconnect, so on next crtc to connector

				 * reshuffle by UMD we will get into unwanted dc_sink release

	/*

	 * TODO: temporary guard to look for proper fix

	 * if this sink is MST sink, we should not do anything

		/*

		 * We got a DP short pulse (Link Loss, DP CTS, etc...).

		 * Do nothing!!

	/*

	 * 1. Update status of the drm connector

	 * 2. Send an event and let userspace tell us what to do

		/*

		 * TODO: check if we still need the S3 mode update workaround.

		 * If yes, put it here.

 Set CP to DESIRED if it was ENABLED, so we can re-enable it again on hotplug */

	/*

	 * In case of failure or MST no need to update connector status or notify the OS

	 * since (for MST case) MST does this in its own context.

 DPCD 0x200 - 0x201 for downstream IRQ */

 DPCD 0x2002 - 0x2005 for downstream IRQ */

 handle HPD short pulse irq */

 ACK at DPCD to notify down stream */

 check if there is new irq to be handled */

	/*

	 * TODO:Temporary add mutex to protect hpd interrupt not have a gpio

	 * conflict, after implement i2c helper, this mutex should be

	 * retired.

 Downstream Port status changed. */

 Also register for DP short pulse (hpd_rx). */

 Register IRQ sources and initialize IRQ callbacks */

	/*

	 * Actions of amdgpu_irq_add_id():

	 * 1. Register a set() function with base driver.

	 *    Base driver will call set() function to enable/disable an

	 *    interrupt in DC hardware.

	 * 2. Register amdgpu_dm_irq_handler().

	 *    Base driver will call amdgpu_dm_irq_handler() for ALL interrupts

	 *    coming from DC hardware.

	 *    amdgpu_dm_irq_handler() will re-direct the interrupt to DC

 Use VBLANK interrupt */

 Use GRPH_PFLIP interrupt */

 HPD */

 Register IRQ sources and initialize IRQ callbacks */

	/*

	 * Actions of amdgpu_irq_add_id():

	 * 1. Register a set() function with base driver.

	 *    Base driver will call set() function to enable/disable an

	 *    interrupt in DC hardware.

	 * 2. Register amdgpu_dm_irq_handler().

	 *    Base driver will call amdgpu_dm_irq_handler() for ALL interrupts

	 *    coming from DC hardware.

	 *    amdgpu_dm_irq_handler() will re-direct the interrupt to DC

 Use VBLANK interrupt */

 Use VUPDATE interrupt */

 Use GRPH_PFLIP interrupt */

 HPD */

 Register IRQ sources and initialize IRQ callbacks */

	/*

	 * Actions of amdgpu_irq_add_id():

	 * 1. Register a set() function with base driver.

	 *    Base driver will call set() function to enable/disable an

	 *    interrupt in DC hardware.

	 * 2. Register amdgpu_dm_irq_handler().

	 *    Base driver will call amdgpu_dm_irq_handler() for ALL interrupts

	 *    coming from DC hardware.

	 *    amdgpu_dm_irq_handler() will re-direct the interrupt to DC

	 *    for acknowledging and handling.

 Use VSTARTUP interrupt */

 Use otg vertical line interrupt */

	/* Use VUPDATE_NO_LOCK interrupt on DCN, which seems to correspond to

	 * the regular VUPDATE interrupt on DCE. We want DC_IRQ_SOURCE_VUPDATEx

	 * to trigger at end of each vblank, regardless of state of the lock,

	 * matching DCE behaviour.

 Use GRPH_PFLIP interrupt */

 HPD */

 Register Outbox IRQ sources and initialize IRQ callbacks */

/*

 * Acquires the lock for the atomic state object and returns

 * the new atomic state.

 *

 * This should only be called during atomic check.

 indicates support for immediate flip */

 Firmware limits are in nits, DC API wants millinits.

 Firmware limits are 8-bit, PWM control is 16-bit.

 Rescale 0..255 to min..max

 Rescale min..max to 0..255

 Change brightness based on AUX property */

	/*

	 * HACK: IGT tests expect that the primary plane for a CRTC

	 * can only have one possible CRTC. Only expose support for

	 * any CRTC if they're not going to be used as a primary plane

	 * for a CRTC - like overlay or underlay planes.

		/*

		 * Event if registration failed, we should continue with

		 * DM initialization because not having a backlight control

		 * is better then a black screen.

/*

 * In this architecture, the association

 * connector -> encoder -> crtc

 * id not really requried. The crtc and connector will hold the

 * display_index as an abstraction to use with DAL component

 *

 * Returns 0 on success

 Update the actual used number of crtc */

 There is one primary plane per CRTC */

	/*

	 * Initialize primary planes, implicit planes for legacy IOCTLS.

	 * Order is reversed to match iteration order in atomic check.

	/*

	 * Initialize overlay planes, index starting after primary planes.

	 * These planes have a higher DRM index than the primary planes since

	 * they should be considered as having a higher z-order.

	 * Order is reversed to match iteration order in atomic check.

	 *

	 * Only support DCN for now, and only expose one so we don't encourage

	 * userspace to use up all the pipes.

 Only create one overlay plane. */

 Use Outbox interrupt */

 Determine whether to enable PSR support by default. */

 loops over all connectors on the board */

 Software is initialized. Now we can register interrupt handlers. */

/******************************************************************************

 * amdgpu_display_funcs functions

/*

 * dm_bandwidth_update - program display watermarks

 *

 * @adev: amdgpu_device pointer

 *

 * Calculate and program the display watermarks and line buffer allocation.

 TODO: implement later */

 called unconditionally */

 called unconditionally */

 never called for DC */

 never called for DC */

 called unconditionally */

 called unconditionally */

 VBIOS parsing. DAL does it. */

 called unconditionally */

 VBIOS parsing. DAL does it. */

 VBIOS parsing. DAL does it. */

	/*

	 * Note: Do NOT change adev->audio_endpt_rreg and

	 * adev->audio_endpt_wreg because they are initialised in

	 * amdgpu_device_init()

 Caps for all supported planes are the same on DCE and DCN 1 - 3 */

	/*

	 * A factor of 1 in the plane_cap means to not allow scaling, ie. use a

	 * scaling factor of 1.0 == 1000 units.

 Source is fixed 16.16 but we ignore mantissa for now... */

	/*

	 * For reasons we don't (yet) fully understand a non-zero

	 * src_y coordinate into an NV12 buffer can cause a

	 * system hang on DCN1x.

	 * To avoid hangs (and maybe be overly cautious)

	 * let's reject both non-zero src_x and src_y.

	 *

	 * We currently know of only one use-case to reproduce a

	 * scenario with non-zero src_x and src_y for NV12, which

	 * is to gesture the YouTube Android app into full screen

	 * on ChromeOS.

 DRM doesn't specify clipping on destination output. */

 Validate scaling per-format with DC plane caps */

	/*

	 * The "scaling_quality" can be ignored for now, quality = 0 has DC

	 * assume reasonable defaults based on the format.

 Fill GFX8 params */

 XXX fix me for VI */

 for DCC we know it isn't rb aligned, so rb_per_se doesn't matter. */

	/*

	 * We always have to allow these modifiers:

	 * 1. Core DRM checks for LINEAR support if userspace does not provide modifiers.

	 * 2. Not passing any modifiers is the same as explicitly passing INVALID.

 Check that the modifier is on the list of the plane's supported modifiers. */

	/*

	 * For D swizzle the canonical modifier depends on the bpp, so check

	 * it here.

 Per radeonsi comments 16/64 bpp are more complicated. */

		/* We support multi-planar formats, but not when combined with

 Raven2 and later */

		/*

		 * No _D DCC swizzles yet because we only allow 32bpp, which

		 * doesn't support _D on DCN

	/*

	 * Only supported for 64bpp on Raven, will be filtered on format in

	 * dm_plane_format_mod_supported.

	/*

	 * Only supported for 64bpp on Raven, will be filtered on format in

	 * dm_plane_format_mod_supported.

 Only supported for 64bpp, will be filtered in dm_plane_format_mod_supported */

 Only supported for 64bpp, will be filtered in dm_plane_format_mod_supported */

 We have not hooked up any pre-GFX9 modifiers. */

 INVALID marks the end of the list. */

 TODO: set these based on surface format */

 DRM color properties only affect non-RGB formats. */

 Always returns 0

	/*

	 * Always set input transfer function, since plane state is refreshed

	 * every time.

 viewport in composition space*/

 stream addressable area */

 no mode. nothing to be done */

 Full screen scaling by default */

 height needs less upscaling/more downscaling */

 width needs less upscaling/more downscaling */

 Cap display bpc based on HDMI 2.0 HF-VSDB */

 Assume 8 bpc by default if no bpc is specified. */

		/*

		 * Cap display bpc based on the user requested value.

		 *

		 * The value for state->max_bpc may not correctly updated

		 * depending on when the connector gets added to the state

		 * or if this was called outside of atomic check, so it

		 * can't be used directly.

 Round down to the nearest even number. */

		/*

		 * Temporary Work around, DRM doesn't parse color depth for

		 * EDID revision before 1.4

		 * TODO: Fix edid parsing

 1-1 mapping, since both enums follow the HDMI spec. */

		/*

		 * 27030khz is the separation point between HDTV and SDTV

		 * according to HDMI spec, we use YCbCr709 and YCbCr601

		 * respectively

 YCbCr 4:2:0 requires additional adjustment of 1/2 */

 Adjusting pix clock following on HDMI spec based on colour depth */

 The above depths are the only ones valid for HDMI. */

 TODO: un-hardcode */

 TODO: We only check for the progressive mode, check for interlace mode too */

 TODO: For DP, video and audio latency should be calculated from DPCD caps */

 no scaling nor amdgpu inserted, no need to patch */

		/*

		 * TODO: add a function to read AMD VSDB bits and set

		 * crtc_sync_master.multi_sync_enabled flag

		 * For now it's set to false

 Set DSC policy according to dsc_clock_en */

 Overwrite the stream flag if DSC is enabled through debugfs */

 CONFIG_DRM_AMD_DC_DCN */

/**

 * DOC: FreeSync Video

 *

 * When a userspace application wants to play a video, the content follows a

 * standard format definition that usually specifies the FPS for that format.

 * The below list illustrates some video format and the expected FPS,

 * respectively:

 *

 * - TV/NTSC (23.976 FPS)

 * - Cinema (24 FPS)

 * - TV/PAL (25 FPS)

 * - TV/NTSC (29.97 FPS)

 * - TV/NTSC (30 FPS)

 * - Cinema HFR (48 FPS)

 * - TV/PAL (50 FPS)

 * - Commonly used (60 FPS)

 * - Multiples of 24 (48,72,96,120 FPS)

 *

 * The list of standards video format is not huge and can be added to the

 * connector modeset list beforehand. With that, userspace can leverage

 * FreeSync to extends the front porch in order to attain the target refresh

 * rate. Such a switch will happen seamlessly, without screen blanking or

 * reprogramming of the output in any other way. If the userspace requests a

 * modesetting change compatible with FreeSync modes that only differ in the

 * refresh rate, DC will skip the full update and avoid blink during the

 * transition. For example, the video player can change the modesetting from

 * 60Hz to 30Hz for playing TV/NTSC content when it goes full screen without

 * causing any display blink. This same concept can be applied to a mode

 * setting change.

 Find the preferred mode */

 Probably an EDID with no preferred mode. Fallback to first entry */

	/*

	 * Find the mode with highest refresh rate with same resolution.

	 * For some monitors, preferred mode is not the mode with highest

	 * supported refresh rate.

 Search for preferred mode */

		/*

		 * This may not be an error, the use case is when we have no

		 * usermode calls to reset and set mode upon hotplug. In this

		 * case, we call set mode ourselves to restore the previous mode

		 * and the modelist may not be filled in in time.

       /*

	* If scaling is enabled and refresh rate didn't change

	* we copy the vic and polarities of the old timings

 SST DSC determination policy */



 should decide stream support vsc sdp colorimetry capability

 before building vsc info packet



 TODO Destroy dc_stream objects are stream object is flattened */

 TODO Duplicate dc_stream after objects are stream object is flattened */

 vblank irq on -> Only need vupdate irq in vrr mode */

 vblank irq off -> vupdate irq off */

 Implemented only the options currently availible for the driver */

	/*

	 * Notes:

	 * 1. This interface is NOT called in context of HPD irq.

	 * 2. This interface *is called* in context of user-mode ioctl. Which

	 * makes it a bad place for *any* MST-related activity.

	/*

	 * Call only if mst_mgr was iniitalized before since it's not done

	 * for all connector types.

	/*

	 * In case of headless boot with force on for DP managed connector

	 * Those settings have to be != 0 to get initial modeset

 lower bpc to retry validation */

 TODO: Unhardcode stream count */

	/*

	 * Only run this the first time mode_valid is called to initilialize

	 * EDID mgmt

 TODO: error handling*/

 26 + 4 */

 Static metadata is a fixed 26 bytes + 4 byte header. */

 Prepare the infopacket for DC. */

 type */

 version */

 length */

 checksum */

 sdp id, zero */

 type */

 payload len - 1 */

 sdp version */

 version */

 length */

		/*

		 * DC considers the stream backends changed if the

		 * static metadata changes. Forcing the modeset also

		 * gives a simple way for userspace to switch from

		 * 8bpc to 10bpc when setting the metadata to enter

		 * or exit HDR.

		 *

		 * Changing the static metadata after it's been

		 * set is permissible, however. So only force a

		 * modeset if we're entering or exiting HDR.

	/*

	 * If hotplugging a second bigger display in FB Con mode, bigger resolution

	 * modes will be filtered by drm_mode_validate_size(), and those modes

	 * are missing after user start lightdm. So we need to renew modes list.

	 * in get_modes call back, not just return the modes count

 Cursor planes are "fake". */

			/*

			 * The plane is enable on the CRTC and hasn't changed

			 * state. This means that it previously passed

			 * validation and is therefore enabled.

 We need a framebuffer to be considered enabled. */

	/*

	 * We require the primary plane to be enabled whenever the CRTC is, otherwise

	 * drm_mode_cursor_universal may end up trying to enable the cursor plane while all other

	 * planes are disabled, which is not supported by the hardware. And there is legacy

	 * userspace which stops using the HW cursor altogether in response to the resulting EINVAL.

 In some use cases, like reset, no stream is attached */

 pbn is calculated by compute_mst_dsc_configs_for_state*/

	/**

	 * We don't do surface updates on planes that have been newly created,

	 * but we also don't have the afb->address during atomic check.

	 *

	 * Fill in buffer attributes depending on the address here, but only on

	 * newly created planes since they're not being used by DC yet and this

	 * won't modify global state.

 Plane enabled? Validate viewport and get scaling factors from plane caps. */

 Validate viewport to cover the case when only the position changes */

 x2 for width is because of pipe-split. */

 Get min/max allowed scaling factors from plane caps. */

		/*

		 * Convert to drm convention: 16.16 fixed point, instead of dc's

		 * 1.0 == 1000. Also drm scaling is src/dst instead of dc's

		 * dst/src, so min_scale = 1.0 / max_upscale, etc.

 Only support async updates on cursor planes. */

/*

 * TODO: these are currently initialized to rgb formats only.

 * For future use cases we should either initialize them dynamically based on

 * plane capabilities, or initialize this array to all formats, so internal drm

 * check will succeed, and let DC implement proper check

	/*

	 * TODO: Query support for each group of formats directly from

	 * DC plane caps. This will require adding more formats to the

	 * caps list.

 This only affects YUV formats. */

 Create (reset) the plane state */

 Create (reset) the plane state */

 There is only one encoder per connector */

 empty probed_modes */

		/* sorting the probed modes before calling function

		 * amdgpu_dm_get_native_mode() since EDID can have

		 * more than one preferred mode. The modes that are

		 * later in the probed mode list could be of higher

		 * and preferred resolution. For example, 3840x2160

		 * resolution in base EDID preferred timing and 4096x2160

		 * preferred resolution in DID extension block later.

		/* Freesync capabilities are reset by calling

		 * drm_add_edid_modes() and need to be

		 * restored here.

	/* Standard FPS values

	 *

	 * 23.976       - TV/NTSC

	 * 24 	        - Cinema

	 * 25 	        - TV/PAL

	 * 29.97        - TV/NTSC

	 * 30 	        - TV/NTSC

	 * 48 	        - Cinema HFR

	 * 50 	        - TV/PAL

	 * 60 	        - Commonly used

	 * 48,72,96,120 - Multiples of 24

	/*

	 * Find mode with highest refresh rate with the same resolution

	 * as the preferred mode. Some monitors report a preferred mode

	 * with lower resolution than the highest refresh rate supported.

 Check for illegal modes */

	/*

	 * Some of the properties below require access to state, like bpc.

	 * Allocate some default initial connector state with our reset helper.

 not used */

	/*

	 * configure support HPD hot plug connector_>polled default value is 0

	 * which means HPD hot plug not supported

 This defaults to the max in the range, but we want 8bpc for non-edp. */

/*

 * Note: this function assumes that dc_link_detect() was called for the

 * dc_link which will be represented by this aconnector.

	/*

	 * We have no guarantee that the frontend index maps to the same

	 * backend index - some even map to more than one.

	 *

	 * TODO: Use a different interrupt or check DC itself for the mapping.

	/**

	 * This reads the current state for the IRQ and force reapplies

	 * the setting to hardware.

 Handle: Type0/1 change */

	/* CP is being re enabled, ignore this

	 *

	 * Handles:	ENABLED -> DESIRED

	/* S3 resume case, since old state will always be 0 (UNDESIRED) and the restored state will be ENABLED

	 *

	 * Handles:	UNDESIRED -> ENABLED

	/* Stream removed and re-enabled

	 *

	 * Can sometimes overlap with the HPD case,

	 * thus set update_hdcp to false to avoid

	 * setting HDCP multiple times.

	 *

	 * Handles:	DESIRED -> DESIRED (Special case)

	/* Hot-plug, headless s3, dpms

	 *

	 * Only start HDCP if the display is connected/enabled.

	 * update_hdcp flag will be set to false until the next

	 * HPD comes in.

	 *

	 * Handles:	DESIRED -> DESIRED (Special case)

	/*

	 * Handles:	UNDESIRED -> UNDESIRED

	 *		DESIRED -> DESIRED

	 *		ENABLED -> ENABLED

	/*

	 * Handles:	UNDESIRED -> DESIRED

	 *		DESIRED -> UNDESIRED

	 *		ENABLED -> UNDESIRED

	/*

	 * Handles:	DESIRED -> ENABLED

 this is the update mode case */

 turn off cursor */

 Set the flip status */

 Mark this event as consumed */

	/*

	 * TODO: Determine why min/max totals and vrefresh can be 0 here.

	 * For now it's sufficient to just guard against these conditions.

 Need to call this before the frame ends. */

	/*

	 * TODO: Determine why min/max totals and vrefresh can be 0 here.

	 * For now it's sufficient to just guard against these conditions.

		/*

		 * if freesync compatible mode was set, config.state will be set

		 * in atomic check

 Copy state for access from DM IRQ handler */

		/* Transition VRR inactive -> active:

		 * While VRR is active, we must not disable vblank irq, as a

		 * reenable after disable would compute bogus vblank/pflip

		 * timestamps if it likely happened inside display front-porch.

		 *

		 * We also need vupdate irq for the actual core vblank handling

		 * at end of vblank.

		/* Transition VRR active -> inactive:

		 * Allow vblank irq disable again for fixed refresh rate.

	/*

	 * TODO: Make this per-stream so we don't issue redundant updates for

	 * commits with multiple streams.

	/*

	 * Disable the cursor first if we're disabling all the planes.

	 * It'll remain on the screen after the planes are re-enabled

	 * if we don't.

 update planes when needed */

 Cursor plane is handled after stream updates */

		/*

		 * Wait for all fences on this FB. Do limited wait to avoid

		 * deadlock during GPU reset when this fence will not signal

		 * but we hold reservation lock for the BO.

		/*

		 * Only allow immediate flips for fast updates that don't

		 * change FB pitch, DCC state, rotation or mirroing.

			/* Use old throttling in non-vrr fixed refresh rate mode

			 * to keep flip scheduling based on target vblank counts

			 * working in a backwards compatible way, e.g., for

			 * clients using the GLX_OML_sync_control extension or

			 * DRI3/Present extension with defined target_msc.

			/* For variable refresh rate mode only:

			 * Get vblank of last completed flip to avoid > 1 vrr

			 * flips per video frame by use of throttling, but allow

			 * flip programming anywhere in the possibly large

			 * variable vrr vblank interval for fine-grained flip

			 * timing control and more opportunity to avoid stutter

			 * on late submission of flips.

		/*

		 * Wait until we're out of the vertical blank period before the one

		 * targeted by the flip

		/**

		 * Prepare the flip event for the pageflip interrupt to handle.

		 *

		 * This only works in the case where we've already turned on the

		 * appropriate hardware blocks (eg. HUBP) so in the transition case

		 * from 0 -> n planes we have to skip a hardware generated event

		 * and rely on sending it from software.

 Update the planes if changed or disable if we don't have any. */

		/*

		 * If PSR or idle optimizations are enabled then flush out

		 * any pending work before hardware programming.

			/*

			 * TODO: This isn't fully correct since we've actually

			 * already modified the stream in place.

		/*

		 * If FreeSync state on the stream has changed then we need to

		 * re-adjust the min/max bounds now that DC doesn't handle this

		 * as part of commit.

		/**

		 * Enable or disable the interrupts on the backend.

		 *

		 * Most pipes are put into power gating when unused.

		 *

		 * When power gating is enabled on a pipe we lose the

		 * interrupt enablement state when power gating is disabled.

		 *

		 * So we need to update the IRQ control state in hardware

		 * whenever the pipe turns on (since it could be previously

		 * power gated) or off (since some pipes can't be power gated

		 * on some ASICs).

 Decrement skip count when PSR is enabled and we're doing fast updates. */

 Allow PSR when skip count is 0. */

	/*

	 * Update cursor state *after* programming all the planes.

	 * This avoids redundant programming in the case where we're going

	 * to be disabling a single plane - those pipes are being disabled.

 Notify device removals. */

 CRTC changes require notification. */

 Notify audio device additions. */

/*

 * amdgpu_dm_crtc_copy_transient_flags - copy mirrored flags from DRM to DC

 * @crtc_state: the DRM CRTC state

 * @stream_state: the DC stream state.

 *

 * Copy the mirrored transient state flags from DRM, to DC. It is used to bring

 * a dc_stream_state's flags in sync with a drm_crtc_state's flags.

/**

 * amdgpu_dm_atomic_commit_tail() - AMDgpu DM's commit tail implementation.

 * @state: The atomic state to commit

 *

 * This will tell DC to commit the constructed DC state from atomic_check,

 * programming the hardware. Any failures here implies a hardware failure, since

 * atomic check should have filtered anything non-kosher.

 No state changes, retain current state. */

 update changed items */

 Disable cursor if disabling crtc */

 Copy all transient state flags into dc state */

		/* handles headless hotplug case, updating new_state and

		 * aconnector as needed

				/*

				 * this could happen because of issues with

				 * userspace notifications delivery.

				 * In this case userspace tries to set mode on

				 * display which is disconnected in fact.

				 * dc_sink is NULL in this case on aconnector.

				 * We expect reset mode will come soon.

				 *

				 * This can also happen when unplug is done

				 * during resume sequence ended

				 *

				 * In this case, we want to pretend we still

				 * have a sink to keep the pipe running so that

				 * hw state is consistent with the sw state

 i.e. reset mode */

 for_each_crtc_in_state() */

 if there mode set or reset, disable eDP PSR */

 Allow idle optimization when vblank count is 0 for display off */

 Handle connector state changes */

 Skip any modesets/resets */

		/*

		 * TODO: DC refuses to perform stream updates without a dc_surface_update.

		 * Here we create an empty update on each plane.

		 * To fix this, DC should permit updating only stream properties.

 Count number of newly disabled CRTCs for dropping PM refs later. */

 For freesync config update on crtc state and params for irq */

 Handle vrr on->off / off->on transitions */

	/**

	 * Enable interrupts for CRTCs that are newly enabled or went through

	 * a modeset. It was intentionally deferred until after the front end

	 * state was modified to wait until the OTG was on and so the IRQ

	 * handlers didn't access stale or invalid state.

			/**

			 * Frontend may have changed so reapply the CRC capture

			 * settings for the stream.

 update planes when needed per crtc*/

 Update audio instances for each connector. */

 restore the backlight level */

	/*

	 * send vblank event on all events not handled in flip and

	 * mark consumed event for drm_atomic_helper_commit_hw_done

 Signal HW programming completion */

 return the stolen vga memory back to VRAM */

	/*

	 * Finally, drop a runtime PM reference for each newly disabled CRTC,

	 * so we can put the GPU into runtime suspend if we're not driving any

	 * displays anymore

 Construct an atomic state to restore previous display setting */

	/*

	 * Attach connectors to drm_atomic_state

 Attach crtc to drm_atomic_state*/

 force a restore */

 Attach plane to drm_atomic_state */

 Call commit internally with the state we just constructed */

/*

 * This function handles all cases when set mode does not come upon hotplug.

 * This includes when a display is unplugged then plugged back into the

 * same port and when running without usermode desktop manager supprot

	/*

	 * If the previous sink is not released and different from the current,

	 * we deduce we are in a state where we can not rely on usermode call

	 * to turn on the display, so we do it here

/*

 * Grabs all modesetting locks to serialize against any blocking commits,

 * Waits for completion of all non blocking commits.

	/*

	 * Adding all modeset locks to aquire_ctx will

	 * ensure that when the framework release it the

	 * extra locks we are locking here will get released to

		/*

		 * Make sure all pending HW programming completed and

		 * page flips done

	/*

	 * TODO Move this code into dm_crtc_atomic_check once we get rid of dc_validation_set

	 * update changed items

 TODO This hack should go away */

 Make sure fake sink is created in plug-in scenario */

		/*

		 * we can have no stream on ACTION_SET if a display

		 * was disconnected during S3, in this case it is not an

		 * error, the OS will be updated after detection, and

		 * will do the right thing on next atomic commit

		/*

		 * TODO: Check VSDB bits to decide whether this should

		 * be enabled or not.

		/*

		 * If we already removed the old stream from the context

		 * (and set the new stream to NULL) then we can't reuse

		 * the old stream even if the stream and scaling are unchanged.

		 * We'll hit the BUG_ON and black screen.

		 *

		 * TODO: Refactor this function to allow this check to work

		 * in all conditions.

 mode_changed flag may get updated above, need to check again */

 Remove stream for any changed/disabled CRTC */

 i.e. reset mode */

 Add stream for any updated/enabled CRTC */

		/*

		 * Quick fix to prevent NULL pointer on new_stream when

		 * added MST connectors not found in existing crtc_state in the chained mode

		 * TODO: need to dig out the root cause of that

 Release extra reference */

	/*

	 * We want to do dc stream updates that do not require a

	 * full modeset below.

	/*

	 * Given above conditions, the dc state cannot be NULL because:

	 * 1. We're in the process of enabling CRTCs (just been added

	 *    to the dc context, or already is on the context)

	 * 2. Has a valid connector attached, and

	 * 3. Is currently active and enabled.

	 * => The dc stream state currently exists.

 Scaling or underscan settings */

 ABM settings */

	/*

	 * Color management settings. We also update color properties

	 * when a modeset is needed, to ensure it gets reprogrammed.

 Update Freesync settings. */

	/*

	 * TODO: Remove this hack once the checks below are sufficient

	 * enough to determine when we need to reset all the planes on

	 * the stream.

 Exit early if we know that we're adding or removing the plane. */

 old crtc == new_crtc == NULL, plane not in context. */

 CRTC Degamma changes currently require us to recreate planes. */

	/*

	 * If there are any new primary or overlay planes being added or

	 * removed then the z-order can potentially change. To ensure

	 * correct z-order and pipe acquisition the current DC architecture

	 * requires us to remove and recreate all existing planes.

	 *

	 * TODO: Come up with a more elegant solution for this.

 Src/dst size and scaling updates. */

 Rotation / mirroring updates. */

 Blending updates. */

 Alpha updates. */

 Colorspace changes. */

 Framebuffer checks fall at the end. */

 Pixel format changes can require bandwidth updates. */

 Tiling and DCC changes also require bandwidth updates. */

 Pitch in pixels */

 FB pitch is supported by cursor plane */

	/* Core DRM takes care of checking FB modifiers, so we only need to

 Remove any changed/removed planes */

 Add new planes */

		/*

		 * Any atomic check errors that occur after this will

		 * not need a release. The plane state will be attached

		 * to the stream, and therefore part of the atomic

		 * state. It'll be released when the atomic state is

		 * cleaned.

		/* Tell DC to do a full surface update every time there

		 * is a plane change. Inefficient, but works for now.

	/* On DCE and DCN there is no dedicated hardware cursor plane. We get a

	 * cursor per pipe but it's going to inherit the scaling and

	 * positioning from the underlying pipe. Check the cursor plane's

 Narrow down to non-cursor planes on the same CRTC as the cursor */

 Ignore disabled planes */

 If this plane covers the whole CRTC, no need to check planes underneath */

/**

 * amdgpu_dm_atomic_check() - Atomic check implementation for AMDgpu DM.

 * @dev: The DRM device

 * @state: The atomic state to commit

 *

 * Validate that the given atomic state is programmable by DC into hardware.

 * This involves constructing a &struct dc_state reflecting the new hardware

 * state we wish to commit, then querying DC to see if it is programmable. It's

 * important not to modify the existing DC state. Otherwise, atomic_check

 * may unexpectedly commit hardware changes.

 *

 * When validating the DC state, it's important that the right locks are

 * acquired. For full updates case which removes/adds/updates streams on one

 * CRTC while flipping on another CRTC, acquiring global lock will guarantee

 * that any such full update commit will wait for completion of any outstanding

 * flip using DRMs synchronization events.

 *

 * Note that DM adds the affected connectors for all CRTCs in state, when that

 * might not seem necessary. This is because DC stream creation requires the

 * DC sink, which is tied to the DRM connector state. Cleaning this up should

 * be possible but non-trivial - a possible TODO item.

 *

 * Return: -Error code if validation failed.

 Check connector changes */

 Skip connectors that are disabled or part of modeset already. */

	/*

	 * Add all primary and overlay planes on the CRTC to the state

	 * whenever a plane is enabled to maintain correct z-ordering

	 * and to enable fast surface updates.

 Remove exiting planes if they are modified */

 Disable all crtcs which require disable */

 Enable all crtcs which require enable */

 Add new/modified planes */

 Run this here since we want to validate the streams we created */

 Check cursor planes scaling */

		/*

		 * This is a fast cursor update coming from the plane update

		 * helper, check if it can be done asynchronously for better

		 * performance.

		/*

		 * Skip the remaining global validation if this is an async

		 * update. Cursor updates can be done without affecting

		 * state or bandwidth calcs and this avoids the performance

		 * penalty of locking the private state object and

		 * allocating a new dc_state.

 Check scaling and underscan changes*/

	/* TODO Removed scaling changes validation due to inability to commit

	 * new stream into context w\o causing full reset. Need to

	 * decide how to handle.

 Skip any modesets/resets */

 Skip any thing not scale or underscan changes */

 set the slot info for each mst_state based on the link encoding format */

	/**

	 * Streams and planes are reset when there are changes that affect

	 * bandwidth. Anything that affects bandwidth needs to go through

	 * DC global validation to ensure that the configuration can be applied

	 * to hardware.

	 *

	 * We have to currently stall out here in atomic_check for outstanding

	 * commits to finish in this case because our IRQ handlers reference

	 * DRM state directly - we can end up disabling interrupts too early

	 * if we don't.

	 *

	 * TODO: Remove this stall and drop DM state private objects.

		/*

		 * Perform validation of MST topology in the state:

		 * We need to perform MST atomic check before calling

		 * dc_validate_global_state(), or there is a chance

		 * to get stuck in an infinite loop and hang eventually.

		/*

		 * The commit is a fast update. Fast updates shouldn't change

		 * the DC context, affect global validation, and can have their

		 * commit work done in parallel with other commits not touching

		 * the same resource. If we have a new DC context as part of

		 * the DM atomic state from validation we need to free it and

		 * retain the existing one instead.

		 *

		 * Furthermore, since the DM atomic state only contains the DC

		 * context and can safely be annulled, we can free the state

		 * and clear the associated private object now to free

		 * some memory and avoid a possible use-after-free later.

				/* If i is not at the end of the array then the

				 * last element needs to be moved to where i was

				 * before the array can safely be truncated.

 Store the overall update type for use later in atomic check. */

 Must be success */

 send extension block to DMCU for parsing */

 send 8 bytes a time */

 EDID block sent completed, expect result */

 amd vsdb found */

 not amd vsdb */

 check for ack*/

 send extension block to DMCU for parsing */

 send 8 bytes a time */

----- drm_find_cea_extension() -----*/

 No EDID or EDID extensions */

 Find CEA extension */

----- cea_db_offsets() -----*/

				/*

				 * Check if monitor has continuous frequency mode

				/*

				 * Check for flag range limits only. If flag == 1 then

				 * no additional timing information provided.

				 * Default GTF, GTF Secondary curve and CVT are not

				 * supported

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * If the SRM version being loaded is less than or equal to the

 * currently loaded SRM, psp will return 0xFFFF as the version

			/* Explicitly set the saved SRM as sysfs call will be after we already enabled hdcp

			 * (s3 resume case)

	/* the removal of display will invoke auth reset -> hdcp destroy and

	 * we'd expect the Content Protection (CP) property changed back to

	 * DESIRED if at the time ENABLED. CP property change should occur

	 * before the element removed from linked list.

/* NOTE: From the usermodes prospective you only need to call write *ONCE*, the kernel

 *      will automatically call once or twice depending on the size

 *

 * call: "cat file > /sys/class/drm/card0/device/hdcp_srm" from usermode no matter what the size is

 *

 * The kernel can only send PAGE_SIZE at once and since MAX_SRM_FILE(5120) > PAGE_SIZE(4096),

 * srm_data_write can be called multiple times.

 *

 * sysfs interface doesn't tell us the size we will get so we are sending partial SRMs to psp and on

 * the last call we will send the full SRM. PSP will fail on every call before the last.

 *

 * This means we don't know if the SRM is good until the last call. And because of this limitation we

 * cannot throw errors early as it will stop the kernel from writing to sysfs

 *

 * Example 1:

 * 	Good SRM size = 5096

 * 	first call to write 4096 -> PSP fails

 * 	Second call to write 1000 -> PSP Pass -> SRM is set

 *

 * Example 2:

 * 	Bad SRM size = 4096

 * 	first call to write 4096 -> PSP fails (This is the same as above, but we don't know if this

 * 	is the last call)

 *

 * Solution?:

 * 	1: Parse the SRM? -> It is signed so we don't know the EOF

 * 	2: We can have another sysfs that passes the size before calling set. -> simpler solution

 * 	below

 *

 * Easy Solution:

 * Always call get after Set to verify if set was successful.

 * +----------------------+

 * |   Why it works:      |

 * +----------------------+

 * PSP will only update its srm if its older than the one we are trying to load.

 * Always do set first than get.

 * 	-if we try to "1. SET" a older version PSP will reject it and we can "2. GET" the newer

 * 	version and save it

 *

 * 	-if we try to "1. SET" a newer version PSP will accept it and we can "2. GET" the

 * 	same(newer) version back and save it

 *

 * 	-if we try to "1. SET" a newer version and PSP rejects it. That means the format is

 * 	incorrect/corrupted and we should correct our SRM by getting it from PSP

/* From the hdcp spec (5.Renewability) SRM needs to be stored in a non-volatile memory.

 *

 * For example,

 * 	if Application "A" sets the SRM (ver 2) and we reboot/suspend and later when Application "B"

 * 	needs to use HDCP, the version in PSP should be SRM(ver 2). So SRM should be persistent

 * 	across boot/reboots/suspend/resume/shutdown

 *

 * Currently when the system goes down (suspend/shutdown) the SRM is cleared from PSP. For HDCP we need

 * to make the SRM persistent.

 *

 * -PSP owns the checking of SRM but doesn't have the ability to store it in a non-volatile memory.

 * -The kernel cannot write to the file systems.

 * -So we need usermode to do this for us, which is why an interface for usermode is needed

 *

 *

 *

 * Usermode can read/write to/from PSP using the sysfs interface

 * For example:

 * 	to save SRM from PSP to storage : cat /sys/class/drm/card0/device/hdcp_srm > srmfile

 * 	to load from storage to PSP: cat srmfile > /sys/class/drm/card0/device/hdcp_srm

 Limit SRM size */

 File created at /sys/class/drm/card0/device/hdcp_srm*/

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* parse_write_buffer_into_params - Helper function to parse debugfs write buffer into an array

 *

 * Function takes in attributes passed to debugfs write entry

 * and writes into param array.

 * The user passes max_param_num to identify maximum number of

 * parameters that could be parsed.

 *

 r is bytes not be copied */

 check number of parameters. isspace could not differ space and \n */

 skip space*/

 skip non-space*/

 reset buf pointer */

 number of char already checked */

 after strsep, wr_buf_ptr will be moved to after space */

/* function description

 * get/ set DP configuration: lane_count, link_rate, spread_spectrum

 *

 * valid lane count value: 1, 2, 4

 * valid link rate value:

 * 06h = 1.62Gbps per lane

 * 0Ah = 2.7Gbps per lane

 * 0Ch = 3.24Gbps per lane

 * 14h = 5.4Gbps per lane

 * 1Eh = 8.1Gbps per lane

 *

 * debugfs is located at /sys/kernel/debug/dri/0/DP-x/link_settings

 *

 * --- to get dp configuration

 *

 * cat /sys/kernel/debug/dri/0/DP-x/link_settings

 *

 * It will list current, verified, reported, preferred dp configuration.

 * current -- for current video mode

 * verified --- maximum configuration which pass link training

 * reported --- DP rx report caps (DPCD register offset 0, 1 2)

 * preferred --- user force settings

 *

 * --- set (or force) dp configuration

 *

 * echo <lane_count>  <link_rate> > link_settings

 *

 * for example, to force to  2 lane, 2.7GHz,

 * echo 4 0xa > /sys/kernel/debug/dri/0/DP-x/link_settings

 *

 * spread_spectrum could not be changed dynamically.

 *

 * in case invalid lane count, link rate are force, no hw programming will be

 * done. please check link settings after force operation to see if HW get

 * programming.

 *

 * cat /sys/kernel/debug/dri/0/DP-x/link_settings

 *

 * check current and preferred settings.

 *

 r = -EFAULT */

 0: lane_count; 1: link_rate */

	/* save user force lane_count, link_rate to preferred settings

	 * spread spectrum will not be changed

/* function: get current DP PHY settings: voltage swing, pre-emphasis,

 * post-cursor2 (defined by VESA DP specification)

 *

 * valid values

 * voltage swing: 0,1,2,3

 * pre-emphasis : 0,1,2,3

 * post cursor2 : 0,1,2,3

 *

 *

 * how to use this debugfs

 *

 * debugfs is located at /sys/kernel/debug/dri/0/DP-x

 *

 * there will be directories, like DP-1, DP-2,DP-3, etc. for DP display

 *

 * To figure out which DP-x is the display for DP to be check,

 * cd DP-x

 * ls -ll

 * There should be debugfs file, like link_settings, phy_settings.

 * cat link_settings

 * from lane_count, link_rate to figure which DP-x is for display to be worked

 * on

 *

 * To get current DP PHY settings,

 * cat phy_settings

 *

 * To change DP PHY settings,

 * echo <voltage_swing> <pre-emphasis> <post_cursor2> > phy_settings

 * for examle, to change voltage swing to 2, pre-emphasis to 3, post_cursor2 to

 * 0,

 * echo 2 3 0 > phy_settings

 *

 * To check if change be applied, get current phy settings by

 * cat phy_settings

 *

 * In case invalid values are set by user, like

 * echo 1 4 0 > phy_settings

 *

 * HW will NOT be programmed by these settings.

 * cat phy_settings will show the previous valid settings.

 r = -EFAULT */

 get link settings: lane count, link rate */

 apply phy settings from user */

 program ASIC registers and DPCD registers */

/* function description

 *

 * set PHY layer or Link layer test pattern

 * PHY test pattern is used for PHY SI check.

 * Link layer test will not affect PHY SI.

 *

 * Reset Test Pattern:

 * 0 = DP_TEST_PATTERN_VIDEO_MODE

 *

 * PHY test pattern supported:

 * 1 = DP_TEST_PATTERN_D102

 * 2 = DP_TEST_PATTERN_SYMBOL_ERROR

 * 3 = DP_TEST_PATTERN_PRBS7

 * 4 = DP_TEST_PATTERN_80BIT_CUSTOM

 * 5 = DP_TEST_PATTERN_CP2520_1

 * 6 = DP_TEST_PATTERN_CP2520_2 = DP_TEST_PATTERN_HBR2_COMPLIANCE_EYE

 * 7 = DP_TEST_PATTERN_CP2520_3

 *

 * DP PHY Link Training Patterns

 * 8 = DP_TEST_PATTERN_TRAINING_PATTERN1

 * 9 = DP_TEST_PATTERN_TRAINING_PATTERN2

 * a = DP_TEST_PATTERN_TRAINING_PATTERN3

 * b = DP_TEST_PATTERN_TRAINING_PATTERN4

 *

 * DP Link Layer Test pattern

 * c = DP_TEST_PATTERN_COLOR_SQUARES

 * d = DP_TEST_PATTERN_COLOR_SQUARES_CEA

 * e = DP_TEST_PATTERN_VERTICAL_BARS

 * f = DP_TEST_PATTERN_HORIZONTAL_BARS

 * 10= DP_TEST_PATTERN_COLOR_RAMP

 *

 * debugfs phy_test_pattern is located at /syskernel/debug/dri/0/DP-x

 *

 * --- set test pattern

 * echo <test pattern #> > test_pattern

 *

 * If test pattern # is not supported, NO HW programming will be done.

 * for DP_TEST_PATTERN_80BIT_CUSTOM, it needs extra 10 bytes of data

 * for the user pattern. input 10 bytes data are separated by space

 *

 * echo 0x4 0x11 0x22 0x33 0x44 0x55 0x66 0x77 0x88 0x99 0xaa > test_pattern

 *

 * --- reset test pattern

 * echo 0 > test_pattern

 *

 * --- HPD detection is disabled when set PHY test pattern

 *

 * when PHY test pattern (pattern # within [1,7]) is set, HPD pin of HW ASIC

 * is disable. User could unplug DP display from DP connected and plug scope to

 * check test pattern PHY SI.

 * If there is need unplug scope and plug DP display back, do steps below:

 * echo 0 > phy_test_pattern

 * unplug scope

 * plug DP display.

 *

 * "echo 0 > phy_test_pattern" will re-enable HPD pin again so that video sw

 * driver could detect "unplug scope" and "plug DP display"

 init with default 80bit custom pattern */

 not use default value */

	/* Usage: set DP physical test pattern using debugfs with normal DP

	 * panel. Then plug out DP panel and connect a scope to measure

	 * For normal video mode and test pattern generated from CRCT,

	 * they are visibile to user. So do not disable HPD.

	 * Video Mode is also set to clear the test pattern, so enable HPD

	 * because it might have been disabled after a test pattern was set.

	 * AUX depends on HPD * sequence dependent, do not move!

	/* Usage: Set DP physical test pattern using AMDDP with normal DP panel

	 * Then plug out DP panel and connect a scope to measure DP PHY signal.

	 * Need disable interrupt to avoid SW driver disable DP output. This is

	 * done after the test pattern is set.

/*

 * Returns the DMCUB tracebuffer contents.

 * Example usage: cat /sys/kernel/debug/dri/0/amdgpu_dm_dmub_tracebuffer

/*

 * Returns the DMCUB firmware state contents.

 * Example usage: cat /sys/kernel/debug/dri/0/amdgpu_dm_dmub_fw_state

/*

 * Returns the current and maximum output bpc for the connector.

 * Example usage: cat /sys/kernel/debug/dri/0/DP-1/output_bpc

/*

 * Example usage:

 * Disable dsc passthrough, i.e.,: have dsc decoding at converver, not external RX

 *   echo 1 /sys/kernel/debug/dri/0/DP-1/dsc_disable_passthrough

 * Enable dsc passthrough, i.e.,: have dsc passthrough to external RX

 *   echo 0 /sys/kernel/debug/dri/0/DP-1/dsc_disable_passthrough

/*

 * Returns the HDCP capability of the Display (1.4 for now).

 *

 * NOTE* Not all HDMI displays report their HDCP caps even when they are capable.

 * Since its rare for a display to not be HDCP 1.4 capable, we set HDMI as always capable.

 *

 * Example usage: cat /sys/kernel/debug/dri/0/DP-1/hdcp_sink_capability

 *		or cat /sys/kernel/debug/dri/0/HDMI-A-1/hdcp_sink_capability

/*

 * Returns whether the connected display is internal and not hotpluggable.

 * Example usage: cat /sys/kernel/debug/dri/0/DP-1/internal_display

/* function description

 *

 * generic SDP message access for testing

 *

 * debugfs sdp_message is located at /syskernel/debug/dri/0/DP-x

 *

 * SDP header

 * Hb0 : Secondary-Data Packet ID

 * Hb1 : Secondary-Data Packet type

 * Hb2 : Secondary-Data-packet-specific header, Byte 0

 * Hb3 : Secondary-Data-packet-specific header, Byte 1

 *

 * for using custom sdp message: input 4 bytes SDP header and 32 bytes raw data

/* function: Read link's DSC & FEC capabilities

 *

 *

 * Access it with the following command (you need to specify

 * connector like DP-1):

 *

 *	cat /sys/kernel/debug/dri/0/DP-X/dp_dsc_fec_support

 *

			/* aconnector sets dsc_aux during get_modes call

			 * if MST connector has it means it can either

			 * enable DSC on the sink device or on MST branch

			 * its connected to.

/* function: Trigger virtual HPD redetection on connector

 *

 * This function will perform link rediscovery, link disable

 * and enable, and dm connector state update.

 *

 * Retrigger HPD on an existing connector by echoing 1 into

 * its respectful "trigger_hotplug" debugfs entry:

 *

 *	echo 1 > /sys/kernel/debug/dri/0/DP-X/trigger_hotplug

 *

 * This function can perform HPD unplug:

 *

 *	echo 0 > /sys/kernel/debug/dri/0/DP-X/trigger_hotplug

 *

/* function: read DSC status on the connector

 *

 * The read function: dp_dsc_clock_en_read

 * returns current status of DSC clock on the connector.

 * The return is a boolean flag: 1 or 0.

 *

 * Access it with the following command (you need to specify

 * connector like DP-1):

 *

 *	cat /sys/kernel/debug/dri/0/DP-X/dsc_clock_en

 *

 * Expected output:

 * 1 - means that DSC is currently enabled

 * 0 - means that DSC is disabled

 r = -EFAULT */

/* function: write force DSC on the connector

 *

 * The write function: dp_dsc_clock_en_write

 * enables to force DSC on the connector.

 * User can write to either force enable or force disable DSC

 * on the next modeset or set it to driver default

 *

 * Accepted inputs:

 * 0 - default DSC enablement policy

 * 1 - force enable DSC on the connector

 * 2 - force disable DSC on the connector (might cause fail in atomic_check)

 *

 * Writing DSC settings is done with the following command:

 * - To force enable DSC (you need to specify

 * connector like DP-1):

 *

 *	echo 0x1 > /sys/kernel/debug/dri/0/DP-X/dsc_clock_en

 *

 * - To return to default state set the flag to zero and

 * let driver deal with DSC automatically

 * (you need to specify connector like DP-1):

 *

 *	echo 0x0 > /sys/kernel/debug/dri/0/DP-X/dsc_clock_en

 *

 Get CRTC state

/* function: read DSC slice width parameter on the connector

 *

 * The read function: dp_dsc_slice_width_read

 * returns dsc slice width used in the current configuration

 * The return is an integer: 0 or other positive number

 *

 * Access the status with the following command:

 *

 *	cat /sys/kernel/debug/dri/0/DP-X/dsc_slice_width

 *

 * 0 - means that DSC is disabled

 *

 * Any other number more than zero represents the

 * slice width currently used by DSC in pixels

 *

 r = -EFAULT */

/* function: write DSC slice width parameter

 *

 * The write function: dp_dsc_slice_width_write

 * overwrites automatically generated DSC configuration

 * of slice width.

 *

 * The user has to write the slice width divisible by the

 * picture width.

 *

 * Also the user has to write width in hexidecimal

 * rather than in decimal.

 *

 * Writing DSC settings is done with the following command:

 * - To force overwrite slice width: (example sets to 1920 pixels)

 *

 *	echo 0x780 > /sys/kernel/debug/dri/0/DP-X/dsc_slice_width

 *

 *  - To stop overwriting and let driver find the optimal size,

 * set the width to zero:

 *

 *	echo 0x0 > /sys/kernel/debug/dri/0/DP-X/dsc_slice_width

 *

 Safely get CRTC state

/* function: read DSC slice height parameter on the connector

 *

 * The read function: dp_dsc_slice_height_read

 * returns dsc slice height used in the current configuration

 * The return is an integer: 0 or other positive number

 *

 * Access the status with the following command:

 *

 *	cat /sys/kernel/debug/dri/0/DP-X/dsc_slice_height

 *

 * 0 - means that DSC is disabled

 *

 * Any other number more than zero represents the

 * slice height currently used by DSC in pixels

 *

 r = -EFAULT */

/* function: write DSC slice height parameter

 *

 * The write function: dp_dsc_slice_height_write

 * overwrites automatically generated DSC configuration

 * of slice height.

 *

 * The user has to write the slice height divisible by the

 * picture height.

 *

 * Also the user has to write height in hexidecimal

 * rather than in decimal.

 *

 * Writing DSC settings is done with the following command:

 * - To force overwrite slice height (example sets to 128 pixels):

 *

 *	echo 0x80 > /sys/kernel/debug/dri/0/DP-X/dsc_slice_height

 *

 *  - To stop overwriting and let driver find the optimal size,

 * set the height to zero:

 *

 *	echo 0x0 > /sys/kernel/debug/dri/0/DP-X/dsc_slice_height

 *

 Get CRTC state

/* function: read DSC target rate on the connector in bits per pixel

 *

 * The read function: dp_dsc_bits_per_pixel_read

 * returns target rate of compression in bits per pixel

 * The return is an integer: 0 or other positive integer

 *

 * Access it with the following command:

 *

 *	cat /sys/kernel/debug/dri/0/DP-X/dsc_bits_per_pixel

 *

 *  0 - means that DSC is disabled

 r = -EFAULT */

/* function: write DSC target rate in bits per pixel

 *

 * The write function: dp_dsc_bits_per_pixel_write

 * overwrites automatically generated DSC configuration

 * of DSC target bit rate.

 *

 * Also the user has to write bpp in hexidecimal

 * rather than in decimal.

 *

 * Writing DSC settings is done with the following command:

 * - To force overwrite rate (example sets to 256 bpp x 1/16):

 *

 *	echo 0x100 > /sys/kernel/debug/dri/0/DP-X/dsc_bits_per_pixel

 *

 *  - To stop overwriting and let driver find the optimal rate,

 * set the rate to zero:

 *

 *	echo 0x0 > /sys/kernel/debug/dri/0/DP-X/dsc_bits_per_pixel

 *

 Get CRTC state

/* function: read DSC picture width parameter on the connector

 *

 * The read function: dp_dsc_pic_width_read

 * returns dsc picture width used in the current configuration

 * It is the same as h_addressable of the current

 * display's timing

 * The return is an integer: 0 or other positive integer

 * If 0 then DSC is disabled.

 *

 * Access it with the following command:

 *

 *	cat /sys/kernel/debug/dri/0/DP-X/dsc_pic_width

 *

 * 0 - means that DSC is disabled

 r = -EFAULT */

 r = -EFAULT */

/* function: read DSC chunk size parameter on the connector

 *

 * The read function: dp_dsc_chunk_size_read

 * returns dsc chunk size set in the current configuration

 * The value is calculated automatically by DSC code

 * and depends on slice parameters and bpp target rate

 * The return is an integer: 0 or other positive integer

 * If 0 then DSC is disabled.

 *

 * Access it with the following command:

 *

 *	cat /sys/kernel/debug/dri/0/DP-X/dsc_chunk_size

 *

 * 0 - means that DSC is disabled

 r = -EFAULT */

/* function: read DSC slice bpg offset on the connector

 *

 * The read function: dp_dsc_slice_bpg_offset_read

 * returns dsc bpg slice offset set in the current configuration

 * The value is calculated automatically by DSC code

 * and depends on slice parameters and bpp target rate

 * The return is an integer: 0 or other positive integer

 * If 0 then DSC is disabled.

 *

 * Access it with the following command:

 *

 *	cat /sys/kernel/debug/dri/0/DP-X/dsc_slice_bpg_offset

 *

 * 0 - means that DSC is disabled

 r = -EFAULT */

/*

 * function description: Read max_requested_bpc property from the connector

 *

 * Access it with the following command:

 *

 *	cat /sys/kernel/debug/dri/0/DP-X/max_bpc

 *

 r = -EFAULT */

/*

 * function description: Set max_requested_bpc property on the connector

 *

 * This function will not force the input BPC on connector, it will only

 * change the max value. This is equivalent to setting max_bpc through

 * xrandr.

 *

 * The BPC value written must be >= 6 and <= 16. Values outside of this

 * range will result in errors.

 *

 * BPC values:

 *	0x6 - 6 BPC

 *	0x8 - 8 BPC

 *	0xa - 10 BPC

 *	0xc - 12 BPC

 *	0x10 - 16 BPC

 *

 * Write the max_bpc in the following way:

 *

 * echo 0x6 > /sys/kernel/debug/dri/0/DP-X/max_bpc

 *

/*

 * Backlight at this moment.  Read only.

 * As written to display, taking ABM and backlight lut into account.

 * Ranges from 0x0 to 0x10000 (= 100% PWM)

 *

 * Example usage: cat /sys/kernel/debug/dri/0/eDP-1/current_backlight

/*

 * Backlight value that is being approached.  Read only.

 * As written to display, taking ABM and backlight lut into account.

 * Ranges from 0x0 to 0x10000 (= 100% PWM)

 *

 * Example usage: cat /sys/kernel/debug/dri/0/eDP-1/target_backlight

/*

 * Force YUV420 output if available from the given mode

/*

 * Check if YUV420 is forced when available from the given mode

/*

 *  Read PSR state

/*

 * Set dmcub trace event IRQ enable or disable.

 * Usage to enable dmcub trace event IRQ: echo 1 > /sys/kernel/debug/dri/0/amdgpu_dm_dmcub_trace_event_en

 * Usage to disable dmcub trace event IRQ: echo 0 > /sys/kernel/debug/dri/0/amdgpu_dm_dmcub_trace_event_en

/*

 * The interface doesn't need get function, so it will return the

 * value of zero

 * Usage: cat /sys/kernel/debug/dri/0/amdgpu_dm_dmcub_trace_event_en

/*

 * Set crc window coordinate x start

/*

 * Get crc window coordinate x start

/*

 * Set crc window coordinate y start

/*

 * Get crc window coordinate y start

/*

 * Set crc window coordinate x end

/*

 * Get crc window coordinate x end

/*

 * Set crc window coordinate y end

/*

 * Get crc window coordinate y end

/*

 * Trigger to commit crc window

/*

 * Get crc window update flag

/*

 * Writes DTN log state to the user supplied buffer.

 * Example usage: cat /sys/kernel/debug/dri/0/amdgpu_dm_dtn_log

/*

 * Writes DTN log state to dmesg when triggered via a write.

 * Example usage: echo 1 > /sys/kernel/debug/dri/0/amdgpu_dm_dtn_log

 Write triggers log output via dmesg. */

 Ensure we're only dumping the topology of a root mst node */

/*

 * Sets trigger hpd for MST topologies.

 * All connected connectors will be rediscovered and re started as needed if val of 1 is sent.

 * All topologies will be disconnected if val of 0 is set .

 * Usage to enable topologies: echo 1 > /sys/kernel/debug/dri/0/amdgpu_dm_trigger_hpd_mst

 * Usage to disable topologies: echo 0 > /sys/kernel/debug/dri/0/amdgpu_dm_trigger_hpd_mst

/*

 * The interface doesn't need get function, so it will return the

 * value of zero

 * Usage: cat /sys/kernel/debug/dri/0/amdgpu_dm_trigger_hpd_mst

/*

 * Sets the force_timing_sync debug option from the given string.

 * All connected displays will be force synchronized immediately.

 * Usage: echo 1 > /sys/kernel/debug/dri/0/amdgpu_dm_force_timing_sync

/*

 * Gets the force_timing_sync debug option value into the given buffer.

 * Usage: cat /sys/kernel/debug/dri/0/amdgpu_dm_force_timing_sync

/*

 * Disables all HPD and HPD RX interrupt handling in the

 * driver when set to 1. Default is 0.

/*

 * Returns 1 if HPD and HPRX interrupt handling is disabled,

 * 0 otherwise.

/*

 * Sets the DC visual confirm debug option from the given string.

 * Example usage: echo 1 > /sys/kernel/debug/dri/0/amdgpu_visual_confirm

/*

 * Reads the DC visual confirm debug option value into the given buffer.

 * Example usage: cat /sys/kernel/debug/dri/0/amdgpu_dm_visual_confirm

/*

 * Dumps the DCC_EN bit for each pipe.

 * Example usage: cat /sys/kernel/debug/dri/0/amdgpu_dm_dcc_en

 r = -EFAULT */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 Error in pplib. Provide default values. */

 Error in pplib. Provide default values. */

 Translate 10 kHz to kHz. */

 Determine the highest non-boosted level from the Validation Clocks */

				/* This clock is higher the validation clock.

				 * Than means the previous one is the highest

	/*

	 * Limit this watermark setting for Polaris for now

	 * TODO: expand this to other ASICs

 TODO: to be implemented */

 0: successful or smu.ppt_funcs->set_display_count = NULL;  1: fail */

 0: successful or smu.ppt_funcs->set_deep_sleep_dcefclk = NULL;1: fail */

	/* 0: successful or smu.ppt_funcs->display_clock_voltage_request = NULL

	 * 1: fail

	/* 0: successful or smu.ppt_funcs->display_clock_voltage_request = NULL

	 * 1: fail

	/* 0: successful or smu.ppt_funcs->display_clock_voltage_request = NULL

	 * 1: fail

 todo set_pme_wa_enable cause 4k@6ohz display not light up */

 todo debug waring message */

 todo  compare data with window driver*/

todo  compare data with window driver */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 DSC branch decoder caps 0xA0 ~ 0xA2

	/*

	 * drm_dp_mst_dsc_aux_for_port() will return NULL for certain configs

	 * because it only check the dsc/fec caps of the "port variable" and not the dock

	 *

	 * This case will return NULL: DSC capabe MST dock connected to a non fec/dsc capable display

	 *

	 * Workaround: explicitly check the use case above and use the mst dock's aux as dsc_aux

	 *

 dc_link_add_remote_sink returns a new reference */

	/*

	 * Initialize connector state before adding the connectror to drm and

	 * framebuffer lists

 Set up params */

 k is start index of vars for current phy link used by mst hub */

 set vars start index for next mst hub phy link */

 Try no compression */

 Try max compression */

 Optimize degree of compression */

 only check phy used by mst branch */

 check if there is mode change in new request */

 check if stream using the same link for mst */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * The DC interface to HW gives us the following color management blocks

 * per pipe (surface):

 *

 * - Input gamma LUT (de-normalized)

 * - Input CSC (normalized)

 * - Surface degamma LUT (normalized)

 * - Surface CSC (normalized)

 * - Surface regamma LUT (normalized)

 * - Output CSC (normalized)

 *

 * But these aren't a direct mapping to DRM color properties. The current DRM

 * interface exposes CRTC degamma, CRTC CTM and CRTC regamma while our hardware

 * is essentially giving:

 *

 * Plane CTM -> Plane degamma -> Plane CTM -> Plane regamma -> Plane CTM

 *

 * The input gamma LUT block isn't really applicable here since it operates

 * on the actual input data itself rather than the HW fp representation. The

 * input and output CSC blocks are technically available to use as part of

 * the DC interface but are typically used internally by DC for conversions

 * between color spaces. These could be blended together with user

 * adjustments in the future but for now these should remain untouched.

 *

 * The pipe blending also happens after these blocks so we don't actually

 * support any CRTC props with correct blending with multiple planes - but we

 * can still support CRTC color management properties in DM in most single

 * plane cases correctly with clever management of the DC interface in DM.

 *

 * As per DRM documentation, blocks should be in hardware bypass when their

 * respective property is set to NULL. A linear DGM/RGM LUT should also

 * considered as putting the respective block into bypass mode.

 *

 * This means that the following

 * configuration is assumed to be the default:

 *

 * Plane DGM Bypass -> Plane CTM Bypass -> Plane RGM Bypass -> ...

 * CRTC DGM Bypass -> CRTC CTM Bypass -> CRTC RGM Bypass

/*

 * Initialize the color module.

 *

 * We're not using the full color module, only certain components.

 * Only call setup functions for components that we need.

 Extracts the DRM lut and lut size from a blob. */

/*

 * Return true if the given lut is a linear mapping of values, i.e. it acts

 * like a bypass LUT.

 *

 * It is considered linear if the lut represents:

 * f(a) = (0xFF00/MAX_COLOR_LUT_ENTRIES-1)a; for integer a in

 *                                           [0, MAX_COLOR_LUT_ENTRIES)

 All color values should equal */

 Allow a +/-1 error. */

/*

 * Convert the drm_color_lut to dc_gamma. The conversion depends on the size

 * of the lut - whether or not it's legacy.

 else */

/*

 * Converts a DRM CTM to a DC CSC float matrix.

 * The matrix needs to be a 3x4 (12 entry) matrix.

	/*

	 * DRM gives a 3x3 matrix, but DC wants 3x4. Assuming we're operating

	 * with homogeneous coordinates, augment the matrix with 0's.

	 *

	 * The format provided is S31.32, using signed-magnitude representation.

	 * Our fixed31_32 is also S31.32, but is using 2's complement. We have

	 * to convert from signed-magnitude to 2's complement.

 Skip 4th element */

 gamut_remap_matrix[i] = ctm[i - floor(i/4)] */

 If negative, convert to 2's complement. */

 Calculates the legacy transfer function - only for sRGB input space. */

 Calculates the output transfer function based on expected input space. */

		/*

		 * Color module doesn't like calculating regamma params

		 * on top of a linear input. But degamma params can be used

		 * instead to simulate this.

		/*

		 * Assume sRGB. The actual mapping will depend on whether the

		 * input was legacy or not.

 Caculates the input transfer function based on expected input space. */

/**

 * Verifies that the Degamma and Gamma LUTs attached to the |crtc_state| are of

 * the expected size.

 * Returns 0 on success.

/**

 * amdgpu_dm_update_crtc_color_mgmt: Maps DRM color management to DC stream.

 * @crtc: amdgpu_dm crtc state

 *

 * With no plane level color management properties we're free to use any

 * of the HW blocks as long as the CRTC CTM always comes before the

 * CRTC RGM and after the CRTC DGM.

 *

 * The CRTC RGM block will be placed in the RGM LUT block if it is non-linear.

 * The CRTC DGM block will be placed in the DGM LUT block if it is non-linear.

 * The CRTC CTM will be placed in the gamut remap block if it is non-linear.

 *

 * The RGM block is typically more fully featured and accurate across

 * all ASICs - DCE can't support a custom non-linear CRTC DGM.

 *

 * For supporting both plane level color management and CRTC level color

 * management at once we have to either restrict the usage of CRTC properties

 * or blend adjustments together.

 *

 * Returns 0 on success.

 Reset all adjustments. */

 Setup regamma and degamma. */

		/*

		 * Legacy regamma forces us to use the sRGB RGM as a base.

		 * This also means we can't use linear DGM since DGM needs

		 * to use sRGB as a base as well, resulting in incorrect CRTC

		 * DGM and CRTC CTM.

		 *

		 * TODO: Just map this to the standard regamma interface

		 * instead since this isn't really right. One of the cases

		 * where this setup currently fails is trying to do an

		 * inverse color ramp in legacy userspace.

 CRTC RGM goes into RGM LUT. */

		/*

		 * No CRTC RGM means we can just put the block into bypass

		 * since we don't have any plane level adjustments using it.

	/*

	 * CRTC DGM goes into DGM LUT. It would be nice to place it

	 * into the RGM since it's a more featured block but we'd

	 * have to place the CTM in the OCSC in that case.

 Setup CRTC CTM. */

		/*

		 * Gamut remapping must be used for gamma correction

		 * since it comes before the regamma correction.

		 *

		 * OCSC could be used for gamma correction, but we'd need to

		 * blend the adjustments together with the required output

		 * conversion matrix - so just use the gamut remap block

		 * for now.

 Bypass CTM. */

/**

 * amdgpu_dm_update_plane_color_mgmt: Maps DRM color management to DC plane.

 * @crtc: amdgpu_dm crtc state

 * @dc_plane_state: target DC surface

 *

 * Update the underlying dc_stream_state's input transfer function (ITF) in

 * preparation for hardware commit. The transfer function used depends on

 * the prepartion done on the stream for color management.

 *

 * Returns 0 on success.

 Get the correct base transfer function for implicit degamma. */

 DC doesn't have a transfer function for BT601 specifically. */

		/*

		 * This case isn't fully correct, but also fairly

		 * uncommon. This is userspace trying to use a

		 * legacy gamma LUT + atomic degamma LUT

		 * at the same time.

		 *

		 * Legacy gamma requires the input to be in linear

		 * space, so that means we need to apply an sRGB

		 * degamma. But color module also doesn't support

		 * a user ramp in this case so the degamma will

		 * be lost.

		 *

		 * Even if we did support it, it's still not right:

		 *

		 * Input -> CRTC DGM -> sRGB DGM -> CRTC CTM ->

		 * sRGB RGM -> CRTC RGM -> Output

		 *

		 * The CSC will be done in the wrong space since

		 * we're applying an sRGB DGM on top of the CRTC

		 * DGM.

		 *

		 * TODO: Don't use the legacy gamma interface and just

		 * map these to the atomic one instead.

		/*

		 * For legacy gamma support we need the regamma input

		 * in linear space. Assume that the input is sRGB.

 ...Otherwise we can just bypass the DGM block. */

 SPDX-License-Identifier: MIT

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/**

 * DOC: DC FPU manipulation overview

 *

 * DC core uses FPU operations in multiple parts of the code, which requires a

 * more specialized way to manage these areas' entrance. To fulfill this

 * requirement, we created some wrapper functions that encapsulate

 * kernel_fpu_begin/end to better fit our need in the display component. In

 * summary, in this file, you can find functions related to FPU operation

 * management.

/**

 * dc_assert_fp_enabled - Check if FPU protection is enabled

 *

 * This function tells if the code is already under FPU protection or not. A

 * function that works as an API for a set of FPU operations can use this

 * function for checking if the caller invoked it after DC_FP_START(). For

 * example, take a look at dcn20_fpu.c file.

/**

 * dc_fpu_begin - Enables FPU protection

 * @function_name: A string containing the function name for debug purposes

 *   (usually __func__)

 *

 * @line: A line number where DC_FP_START was invoked for debug purpose

 *   (usually __LINE__)

 *

 * This function is responsible for managing the use of kernel_fpu_begin() with

 * the advantage of providing an event trace for debugging.

 *

 * Note: Do not call this function directly; always use DC_FP_START().

/**

 * dc_fpu_end - Disable FPU protection

 * @function_name: A string containing the function name for debug purposes

 * @line: A-line number where DC_FP_END was invoked for debug purpose

 *

 * This function is responsible for managing the use of kernel_fpu_end() with

 * the advantage of providing an event trace for debugging.

 *

 * Note: Do not call this function directly; always use DC_FP_END().

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* dm_helpers_parse_edid_caps

 *

 * Parse edid caps

 *

 * @edid:	[in] pointer to edid

 *  edid_caps:	[in] pointer to edid caps

 * @return

 *	void

	/* One of the four detailed_timings stores the monitor name. It's

 number of active streams */

 end of vcp_id table */

/*

 * Writes payload allocation table in immediate downstream device.

	/* Accessing the connector state is required for vcpi_slots allocation

	 * and directly relies on behaviour in commit check

	 * that blocks before commit guaranteeing that the state

 It's OK for this to fail */

	/* mst_mgr->->payloads are VC payload notify MST branch using DPCD or

	 * AUX message. The sequence is slot 1-63 allocated sequence for each

	 * stream. AMD ASIC stream slot allocation should follow the same

/*

 * poll pending down reply

/*

 * Clear payload allocation table before enable MST DP link.

/*

 * Polls for ACT (allocation change trigger) handled and sends

 * ALLOCATE_PAYLOAD message.

 It's OK for this to fail */

 No context, redirect to dmesg. */

 Measure the output. */

 Reallocate the string buffer as needed. */

 Write the formatted string to the log buffer. */

	/* some dongles read edid incorrectly the first time,

	 * do check sum and retry to make sure read correct edid.

 DP Compliance Test 4.2.2.6 */

 We don't need the original edid anymore */

		/* connector->display_info will be parsed from EDID and saved

		 * into drm_connector->display_info from edid by call stack

		 * below:

		 * drm_parse_ycbcr420_deep_color_info

		 * drm_parse_hdmi_forum_vsdb

		 * drm_parse_cea_ext

		 * drm_add_display_info

		 * drm_connector_update_edid_property

		 *

		 * drm_connector->display_info will be used by amdgpu_dm funcs,

		 * like fill_stream_properties_from_drm_display_mode

 DP Compliance Test 4.2.2.3 */

 TODO: something */

 TODO:

amdgpu_device_gpu_recover(dc_context->driver-context, NULL);

 add da to list in dm */

 walk the da list in DM */

 TODO: virtual DPCD */

 FPGA programming for this clock in diags framework that

 needs to go through dm layer, therefore leave dummy interace here

 TODO: add peridic detection implementation */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/**

 * DOC: overview

 *

 * DM provides another layer of IRQ management on top of what the base driver

 * already provides. This is something that could be cleaned up, and is a

 * future TODO item.

 *

 * The base driver provides IRQ source registration with DRM, handler

 * registration into the base driver's IRQ table, and a handler callback

 * amdgpu_irq_handler(), with which DRM calls on interrupts. This generic

 * handler looks up the IRQ table, and calls the respective

 * &amdgpu_irq_src_funcs.process hookups.

 *

 * What DM provides on top are two IRQ tables specifically for top-half and

 * bottom-half IRQ handling, with the bottom-half implementing workqueues:

 *

 * - &amdgpu_display_manager.irq_handler_list_high_tab

 * - &amdgpu_display_manager.irq_handler_list_low_tab

 *

 * They override the base driver's IRQ table, and the effect can be seen

 * in the hooks that DM provides for &amdgpu_irq_src_funcs.process. They

 * are all set to the DM generic handler amdgpu_dm_irq_handler(), which looks up

 * DM's IRQ tables. However, in order for base driver to recognize this hook, DM

 * still needs to register the IRQ with the base driver. See

 * dce110_register_irq_handlers() and dcn10_register_irq_handlers().

 *

 * To expose DC's hardware interrupt toggle to the base driver, DM implements

 * &amdgpu_irq_src_funcs.set hooks. Base driver calls it through

 * amdgpu_irq_update() to enable or disable the interrupt.

/******************************************************************************

 * Private declarations.

/**

 * struct amdgpu_dm_irq_handler_data - Data for DM interrupt handlers.

 *

 * @list: Linked list entry referencing the next/previous handler

 * @handler: Handler function

 * @handler_arg: Argument passed to the handler when triggered

 * @dm: DM which this handler belongs to

 * @irq_source: DC interrupt source that this handler is registered for

 * @work: work struct

 DAL irq source which registered for this interrupt. */

/******************************************************************************

 * Private functions.

/**

 * dm_irq_work_func() - Handle an IRQ outside of the interrupt handler proper.

 *

 * @work: work struct

	/* Call a DAL subcomponent which registered for interrupt notification

	 * at INTERRUPT_LOW_IRQ_CONTEXT.

/*

 * Remove a handler and return a pointer to handler list from which the

 * handler was removed.

 Found our handler. Remove it from the list. */

		/* Not necessarily an error - caller may not

/**

 * unregister_all_irq_handlers() - Cleans up handlers from the DM IRQ table

 * @adev: The base driver device containing the DM device

 *

 * Go through low and high context IRQ tables and deallocate handlers.

/******************************************************************************

 * Public functions.

 *

 * Note: caller is responsible for input validation.

/**

 * amdgpu_dm_irq_register_interrupt() - Register a handler within DM.

 * @adev: The base driver device containing the DM device.

 * @int_params: Interrupt parameters containing the source, and handler context

 * @ih: Function pointer to the interrupt handler to register

 * @handler_args: Arguments passed to the handler when the interrupt occurs

 *

 * Register an interrupt handler for the given IRQ source, under the given

 * context. The context can either be high or low. High context handlers are

 * executed directly within ISR context, while low context is executed within a

 * workqueue, thereby allowing operations that sleep.

 *

 * Registered handlers are called in a FIFO manner, i.e. the most recently

 * registered handler will be called first.

 *

 * Return: Handler data &struct amdgpu_dm_irq_handler_data containing the IRQ

 *         source, handler function, and args

 Lock the list, add the handler. */

	/* This pointer will be stored by code which requested interrupt

	 * registration.

	 * The same pointer will be needed in order to unregister the

/**

 * amdgpu_dm_irq_unregister_interrupt() - Remove a handler from the DM IRQ table

 * @adev: The base driver device containing the DM device

 * @irq_source: IRQ source to remove the given handler from

 * @ih: Function pointer to the interrupt handler to unregister

 *

 * Go through both low and high context IRQ tables, and find the given handler

 * for the given irq source. If found, remove it. Otherwise, do nothing.

		/* If we got here, it means we searched all irq contexts

/**

 * amdgpu_dm_irq_init() - Initialize DM IRQ management

 * @adev:  The base driver device containing the DM device

 *

 * Initialize DM's high and low context IRQ tables.

 *

 * The N by M table contains N IRQ sources, with M

 * &struct amdgpu_dm_irq_handler_data hooked together in a linked list. The

 * list_heads are initialized here. When an interrupt n is triggered, all m

 * handlers are called in sequence, FIFO according to registration order.

 *

 * The low context table requires special steps to initialize, since handlers

 * will be deferred to a workqueue. See &struct irq_list_head.

 low context handler list init */

 high context handler init */

/**

 * amdgpu_dm_irq_fini() - Tear down DM IRQ management

 * @adev: The base driver device containing the DM device

 *

 * Flush all work within the low context IRQ table.

		/* The handler was removed from the table,

		 * it means it is safe to flush all the 'work'

 Deallocate handlers from the table. */

	/**

	 * Disable HW interrupt  for HPD and HPDRX only since FLIP and VBLANK

	 * will be disabled from manage_dm_interrupts on disable CRTC.

 re-enable short pulse interrupts HW interrupt */

	/**

	 * Renable HW interrupt  for HPD and only since FLIP and VBLANK

	 * will be enabled from manage_dm_interrupts on enable CRTC.

/*

 * amdgpu_dm_irq_schedule_work - schedule all work items registered for the

 * "irq_source".

get the amdgpu_dm_irq_handler_data of first item pointed by handler_list*/

allocate a new amdgpu_dm_irq_handler_data*/

copy new amdgpu_dm_irq_handler_data members from handler_data*/

/*

 * amdgpu_dm_irq_immediate_work

 * Callback high irq work immediately, don't send to work queue

		/* Call a subcomponent which registered for immediate

/**

 * amdgpu_dm_irq_handler - Generic DM IRQ handler

 * @adev: amdgpu base driver device containing the DM device

 * @source: Unused

 * @entry: Data about the triggered interrupt

 *

 * Calls all registered high irq work immediately, and schedules work for low

 * irq. The DM IRQ table is used to find the corresponding handlers.

 Call high irq work immediately */

Schedule low_irq work */

/**

 * amdgpu_dm_hpd_init - hpd setup callback.

 *

 * @adev: amdgpu_device pointer

 *

 * Setup the hpd pins used by the card (evergreen+).

 * Enable the pin, set the polarity, and enable the hpd interrupts.

/**

 * amdgpu_dm_hpd_fini - hpd tear down callback.

 *

 * @adev: amdgpu_device pointer

 *

 * Tear down the hpd pins used by the card (evergreen+).

 * Disable the hpd interrupts.

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

*** power component interfaces ****/

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * amdgpu_dm_set_psr_caps() - set link psr capabilities

 * @link: link

 *

/*

 * amdgpu_dm_link_setup_psr() - configure psr link

 * @stream: stream state

 *

 * Return: true if success

/*

 * amdgpu_dm_psr_enable() - enable psr f/w

 * @stream: stream state

 *

 * Return: true if success

	/* Calculate number of static frames before generating interrupt to

	 * enter PSR.

 Init fail safe of 2 frames static

	/* Round up

	 * Calculate number of frames such that at least 30 ms of time has

	 * passed.

/*

 * amdgpu_dm_psr_disable() - disable psr f/w

 * @stream:  stream state

 *

 * Return: true if success

/*

 * amdgpu_dm_psr_disable() - disable psr f/w

 * if psr is enabled on any stream

 *

 * Return: true if success

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Configuration will be deferred to stream enable. */

 Enable CRTC CRC generation if necessary. */

 Configure dithering */

		/*

		 * Need to wait for all outstanding programming to complete

		 * in commit tail since it can modify CRC related fields and

		 * hardware state. Since we're holding the CRTC lock we're

		 * guaranteed that no other commit work can be queued off

		 * before we modify the state below.

	/*

	 * USER REQ SRC | CURRENT SRC | BEHAVIOR

	 * -----------------------------

	 * None         | None        | Do nothing

	 * None         | CRTC        | Disable CRTC CRC, set default to dither

	 * None         | DPRX        | Disable DPRX CRC, need 'aux', set default to dither

	 * None         | CRTC DITHER | Disable CRTC CRC

	 * None         | DPRX DITHER | Disable DPRX CRC, need 'aux'

	 * CRTC         | XXXX        | Enable CRTC CRC, no dither

	 * DPRX         | XXXX        | Enable DPRX CRC, need 'aux', no dither

	 * CRTC DITHER  | XXXX        | Enable CRTC CRC, set dither

	 * DPRX DITHER  | XXXX        | Enable DPRX CRC, need 'aux', set dither

	/*

	 * Reading the CRC requires the vblank interrupt handler to be

	 * enabled. Keep a reference until CRC capture stops.

 Reset crc_skipped on dm state */

/**

 * amdgpu_dm_crtc_handle_crc_irq: Report to DRM the CRC on given CRTC.

 * @crtc: DRM CRTC object.

 *

 * This function should be called at the end of a vblank, when the fb has been

 * fully processed through the pipe.

 Early return if CRC capture is not enabled. */

	/*

	 * Since flipping and crc enablement happen asynchronously, we - more

	 * often than not - will be returning an 'uncooked' crc on first frame.

	 * Probably because hw isn't ready yet. For added security, skip the

	 * first two CRC values.

 Early return if CRC capture is not enabled. */

 take 3 lines margin*/

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Execute and wait for queue to become empty again. */

 Requeue the command. */

 TODO: Add wait command -- poll register for ACK

 Wait up to a second for PHY init. */

 Initialization OK */

			/*

			 * Server likely initialized or we don't have

			 * DMCUB HW support - this won't end.

 Continue spinning so we don't hang the ASIC. */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * dc_helper.c

 *

 *  Created on: Aug 30, 2016

 *      Author: agrodzov

 gather all bits value/mask getting updated in this register */

 flush command if buffer is full */

 flush command if buffer is full */

 pack commands */

 todo: return void so we can decouple code running in driver from register states */

 mmio write directly */

 mmio write directly */

 todo: return void so we can decouple code running in driver from register states */

/* note:  va version of this is pretty bad idea, since there is a output parameter pass by pointer

 * compiler won't be able to check for size match and is prone to stack corruption type of bugs



uint32_t generic_reg_get(const struct dc_context *ctx,

		uint32_t addr, int n, ...)

{

	uint32_t shift, mask;

	uint32_t *field_value;

	uint32_t reg_val;

	int i = 0;



	reg_val = dm_read_reg(ctx, addr);



	va_list ap;

	va_start(ap, n);



	while (i < n) {

		shift = va_arg(ap, uint32_t);

		mask = va_arg(ap, uint32_t);

		field_value = va_arg(ap, uint32_t *);



		*field_value = get_reg_field_value_ex(reg_val, mask, shift);

		i++;

	}



	va_end(ap);



	return reg_val;

}

	/*

	 * Something is terribly wrong if time out is > 3000ms.

	 * 3000ms is the maximum time needed for SMU to pass values back.

	 * This value comes from experiments.

	 *

 when reg read, there should not be any offload.

	/* if reg sequence is supported and enabled, set flag to

	 * indicate we want to have REG_SET, REG_UPDATE macro build

	 * reg sequence command buffer rather than MMIO directly.

 caller sequence mismatch.  need to debug caller.  offload will not work!!! */

 callback to DM to poll for last submission done*/

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE11.2 register header files */

/*******************************************************************************

 * Private definitions

		/* Revert MASTER_UPDATE_MODE to 0 because bios sets it 2

		 * by default when command table is called

	/* All registers used by dce11.2 match those in dce11 in offset and

	 * structure

/*

* Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set register offset */

 set register offset with instance */

 why 8? 6 combo PHY PLL + 2 regular PLLs? */

 why 8? 6 combo PHY PLL + 2 regular PLLs? */

5124*/

 acquire new resources */

	/*do system clock  TODO PPLIB: after PPLIB implement,

	 * then remove old way

 This is only for temporary */

 convert all the clock fro kHz to fix point mHz */

do memory clock*/

 convert all the clock fro kHz to fix point mHz  TODO: wloop data */

do memory clock*/

	/* we don't need to call PPLIB for validation clock since they

	 * also give us the highest sclk and highest mclk (UMA clock).

	 * ALSO always convert UMA clock (from PPLIB)  to YCLK (HW formula):

	 * YCLK = UMACLK*m_memoryTypeMultiplier

	/* Now notify PPLib/SMU about which Watermarks sets they should select

	 * depending on DPM state they are in. And update BW MGR GFX Engine and

	 * Memory clock member variables for Watermarks calculations for each

	 * Watermark Set

 5 GHz instead of data[7].clockInKHz to cover Overdrive */

 5 GHz instead of data[2].clockInKHz to cover Overdrive */

 5 GHz instead of data[7].clockInKHz to cover Overdrive */

 5 GHz instead of data[2].clockInKHz to cover Overdrive */

 Notify PP Lib/SMU which Watermarks to use for which clock ranges */

	/*************************************************

	 *  Resource + asic cap harcoding                *

1.4 w/a not applied by default*/

	/*************************************************

	 *  Create resources                             *

 Create hardware sequencer */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Bit 0 - Display registers updated */

 Bit 2 - FBC_GRPH_COMP_EN register updated */

 Bit 3 - FBC_SRC_SEL register updated */

 Bit 4 - FBC_MIN_COMPRESSION register updated */

 Bit 5 - FBC_ALPHA_COMP_EN register updated */

 Bit 6 - FBC_ZERO_ALPHA_CHUNK_SKIP_EN register updated */

 Bit 7 - FBC_FORCE_COPY_TO_COMP_BUF register updated */

 Bit 24 - Memory write to region 0 defined by MC registers. */

 Bit 25 - Memory write to region 1 defined by MC registers */

 Bit 26 - Memory write to region 2 defined by MC registers */

 Bit 27 - Memory write to region 3 defined by MC registers. */

 Bit 28 - Memory write from any client other than MCIF */

 Bit 29 - CG statics screen signal is inactive */

LPT_ALIGNMENT (in bytes) = ROW_SIZE * #BANKS * # DRAM CHANNELS. */

LPT MC Config */

		/* POSSIBLE VALUES for LPT NUM_PIPES (DRAM CHANNELS):

		 * 00 - 1 CHANNEL

		 * 01 - 2 CHANNELS

		 * 02 - 4 OR 6 CHANNELS

		 * (Only for discrete GPU, N/A for CZ)

		 * 03 - 8 OR 12 CHANNELS

		/* The mapping for LPT NUM_BANKS is in

		 * GRPH_CONTROL.GRPH_NUM_BANKS register field

		 * Specifies the number of memory banks for tiling

		 * purposes. Only applies to 2D and 3D tiling modes.

		 * POSSIBLE VALUES:

		 * 00 - DCP_GRPH_NUM_BANKS_2BANK: ADDR_SURF_2_BANK

		 * 01 - DCP_GRPH_NUM_BANKS_4BANK: ADDR_SURF_4_BANK

		 * 02 - DCP_GRPH_NUM_BANKS_8BANK: ADDR_SURF_8_BANK

		/* The mapping is in DMIF_ADDR_CALC.

		 * ADDR_CONFIG_PIPE_INTERLEAVE_SIZE register field for

		 * Carrizo specifies the memory interleave per pipe.

		 * It effectively specifies the location of pipe bits in

		 * the memory address.

		 * POSSIBLE VALUES:

		 * 00 - ADDR_CONFIG_PIPE_INTERLEAVE_256B: 256 byte

		 * interleave

		 * 01 - ADDR_CONFIG_PIPE_INTERLEAVE_512B: 512 byte

		 * interleave

256B */

512B */

		/* The mapping for LOW_POWER_TILING_ROW_SIZE is in

		 * DMIF_ADDR_CALC.ADDR_CONFIG_ROW_SIZE register field

		 * for Carrizo. Specifies the size of dram row in bytes.

		 * This should match up with NOOFCOLS field in

		 * MC_ARB_RAMCFG (ROW_SIZE = 4 * 2 ^^ columns).

		 * This register DMIF_ADDR_CALC is not used by the

		 * hardware as it is only used for addrlib assertions.

		 * POSSIBLE VALUES:

		 * 00 - ADDR_CONFIG_1KB_ROW: Treat 1KB as DRAM row

		 * boundary

		 * 01 - ADDR_CONFIG_2KB_ROW: Treat 2KB as DRAM row

		 * boundary

		 * 02 - ADDR_CONFIG_4KB_ROW: Treat 4KB as DRAM row

4 KB */

 HW needs to do power measurement comparison. */

FBC_MIN_COMPRESSION 0 ==> 2:1 */

                    1 ==> 4:1 */

                    2 ==> 8:1 */

                  0xF ==> 1:1 */

		/* Before enabling FBC first need to enable LPT if applicable

		 * LPT state should always be changed (enable/disable) while FBC

 Keep track of enum controller_id FBC is attached to */

Toggle it as there is bug in HW */

 Turn off compression */

 Reset enum controller_id to undefined */

		/* Whenever disabling FBC make sure LPT is disabled if LPT

 Check the hardware register */

 Check the hardware register */

 Clear content first. */

 Write address, HIGH has to be first. */

 Clear content first. */

 Write FBC Pitch. */

 Disable all pipes LPT Stutter */

 Disable Underlay pipe LPT Stutter */

 Disable LPT */

 Clear selection of Channel(s) containing Compressed Surface */

 Enable LPT Stutter from Display pipe */

 Enable Underlay pipe LPT Stutter */

	/* Selection of Channel(s) containing Compressed Surface: 0xfffffff

	 * will disable LPT.

		channels + 1, /* not mentioned in programming guide,

 Enable LPT */

	/* POSSIBLE VALUES for Low Power Tiling Mode:

	 * 00 - Use channel 0

	 * 01 - Use Channel 0 and 1

	 * 02 - Use Channel 0,1,2,3

	/* case 2:

Use Channel 0 for LPT for DCE 11 */

	/* Program LOW_POWER_TILING_ROWS_PER_CHAN field which depends on

	 * FBC compressed surface pitch.

	 * LOW_POWER_TILING_ROWS_PER_CHAN = Roundup ((Surface Height *

	 * Surface Pitch) / (Row Size * Number of Channels *

/*

 * DCE 11 Frame Buffer Compression Implementation

	/* Disable region hit event, FBC_MEMORY_REGION_MASK = 0 (bits 16-19)

	 * for DCE 11 regions cannot be used - does not work with S/G

	/* Setup events when to clear all CSM entries (effectively marking

	 * current compressed data invalid)

	 * For DCE 11 CSM metadata 11111 means - "Not Compressed"

	 * Used as the initial value of the metadata sent to the compressor

	 * after invalidation, to indicate that the compressor should attempt

	 * to compress all chunks on the current pass.  Also used when the chunk

	 * is not successfully written to memory.

	 * When this CSM value is detected, FBC reads from the uncompressed

	 * buffer. Set events according to passed in value, these events are

	 * valid for DCE11:

	 *     - bit  0 - display register updated

	 *     - bit 28 - memory write from any client except from MCIF

	 *     - bit 29 - CG static screen signal is inactive

	 * In addition, DCE11.1 also needs to set new DCE11.1 specific events

	 * that are used to trigger invalidation on certain register changes,

	 * for example enabling of Alpha Compression may trigger invalidation of

	 * FBC once bit is set. These events are as follows:

	 *      - Bit 2 - FBC_GRPH_COMP_EN register updated

	 *      - Bit 3 - FBC_SRC_SEL register updated

	 *      - Bit 4 - FBC_MIN_COMPRESSION register updated

	 *      - Bit 5 - FBC_ALPHA_COMP_EN register updated

	 *      - Bit 6 - FBC_ZERO_ALPHA_CHUNK_SKIP_EN register updated

	 *      - Bit 7 - FBC_FORCE_COPY_TO_COMP_BUF register updated

 For DCE 11 always use one DRAM channel for LPT */

	/* Check if this system has more than 1 DRAM channel; if only 1 then LPT

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 TODO store GPIO_MUX_CONTROL if we ever use it */

 TODO restore GPIO_MUX_CONTROL if we ever use it */

	/* This is the public interface

	 * where the input comes from client, not shifted yet

		/* We use (EN) to faster switch (used in DDC GPIO).

		 * So (A) is grounded, output is driven by (EN = 0)

		 * to pull the line down (output == 0) and (EN=1)

		/* turn off output enable, act as input pin;

		/* turn on output enable, act as output pin;

		/* grounding the A register then use the EN register bit

 program the pin as tri-state, pin is driven by HW */

 Interrupt mode supported only by HPD (IrqGpio) pins. */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/*

 * Post-requisites: headers required by this unit

/*

 * This unit

/*

 * @brief

 * Public API

 No action if allocation failed during gpio construct

/*

 * @brief

 * Creation and destruction

initialize hw_container union based on id

 TODO: currently gpio for sync and gsl does not get created, might need it later

TODO: might want to change it to init_ddc_clock

 TODO: currently gpio for sync and gsl does not get created, might need it later

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/*

 * Header of this unit

/*

 * Post-requisites: headers required by this unit

/*

 * This unit

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/*

 * Header of this unit

/*

 * Post-requisites: headers required by this unit

/*

 * This unit

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 in Interrupt mode we ask for SENSE bit */

 in any other modes, operate as normal GPIO */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

		/* On plug-in, there is a transient level on the pad

		 * which must be discharged through the internal pull-down.

		 * Enable internal pull-down, 2.5msec discharge time

			/* let pins to get de-asserted

				/* [anaumov] in DAL2, there was

 set the I2C pad mode */

			/* read the register again,

set  DC_IO_aux_rxsel = 2'b01

 set the AUX pad mode */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/*

 * Header of this unit

/*

 * Post-requisites: headers required by this unit

/*

 * @brief

 * Public API.

 allocate and initialize busyness storage */

 free business storage */

/*

 * @brief

 * Private API.

TODO: gsl and sync support? create_sync and create_gsl are NULL

/*

 * @brief

 * Creation and destruction

	/* DDC clock and data pins should belong

	 * to the same DDC block id,

		/* this is from detect_sink_type,

	/* [anaumov] DAL2 code returns GPIO_RESULT_NON_SPECIFIC_ERROR

	 * in case of failures;

	 * set_mode() is so that, in case of failure,

/*

 * Copyright 2013-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/* begin *********************

 compile time expand base address. */

/* macros to expend register list macro defined in HW object header file

 GENERIC */

 HPD */

 SYNCA */

 REG(DC_GPIO_GENLK_MASK */

 DDC */

	/* we don't care about the GPIO_ID for DDC

	 * in DdcHandle it will use GPIO_ID_DDC_DATA/GPIO_ID_DDC_CLOCK

 GPIO_I2CPAD */

 Not implemented */

 UNEXPECTED */

 function table */

/*

 * dal_hw_translate_dce120_init

 *

 * @brief

 * Initialize Hw translate function pointers.

 *

 * @param

 * struct hw_translate *tr - [out] struct of function pointers

 *

/*

 * Copyright 2013-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set field name */

 set field name */

 compile time expand base address. */

 set field name */

 function table */

/*

 * dal_hw_factory_dce120_init

 *

 * @brief

 * Initialize HW factory function pointers and pin info

 *

 * @param

 * struct hw_factory *factory - [out] struct of function pointers

TODO check ASIC CAPs*/

/*

 * Copyright 2013-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/*

 * Header of this unit

 function table */

/*

 * Copyright 2013-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 function table */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set field name */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/*

 * @brief

 * Returns index of first bit (starting with LSB) which is set

 GENERIC */

 HPD */

 SYNCA */

 mmDC_GPIO_GENLK_MASK */

 GPIOPAD */

 DDC */

	/* we don't care about the GPIO_ID for DDC

	 * in DdcHandle it will use GPIO_ID_DDC_DATA/GPIO_ID_DDC_CLOCK

 GPIO_I2CPAD */

 Not implemented */

 UNEXPECTED */

/*

 * Copyright 2020 Mauro Rossi <issor.oruam@gmail.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/*

 * @brief

 * Returns index of first bit (starting with LSB) which is set

 GENERIC */

 HPD */

 SYNCA */

 mmDC_GPIO_GENLK_MASK */

 GPIOPAD */

 DDC */

	/* we don't care about the GPIO_ID for DDC

	 * in DdcHandle it will use GPIO_ID_DDC_DATA/GPIO_ID_DDC_CLOCK

 GPIO_I2CPAD */

 Not implemented */

 UNEXPECTED */

/*

 * Copyright 2020 Mauro Rossi <issor.oruam@gmail.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set field name */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/* begin *********************

 DCN */

/* macros to expend register list macro defined in HW object header file

 GENERIC */

 HPD */

 REG(DC_GPIO_GENLK_MASK */

 DDC */

	/* we don't care about the GPIO_ID for DDC

	 * in DdcHandle it will use GPIO_ID_DDC_DATA/GPIO_ID_DDC_CLOCK

	case REG(DC_GPIO_I2CPAD_A): not exit

	case REG(DC_GPIO_PWRSEQ_A):

	case REG(DC_GPIO_PAD_STRENGTH_1):

	case REG(DC_GPIO_PAD_STRENGTH_2):

	case REG(DC_GPIO_DEBUG):

 UNEXPECTED */

	case REG(DC_GPIO_SYNCA_A): not exist

not implmented*/

not implmented*/

not implmented*/

not implmented*/

 function table */

/*

 * dal_hw_translate_dcn10_init

 *

 * @brief

 * Initialize Hw translate function pointers.

 *

 * @param

 * struct hw_translate *tr - [out] struct of function pointers

 *

/*

 * Copyright 2013-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* begin *********************

 DCN */

/* macros to expend register list macro defined in HW object header file

 set field name */

 set field name */

 function table */

/*

 * dal_hw_factory_dcn10_init

 *

 * @brief

 * Initialize HW factory function pointers and pin info

 *

 * @param

 * struct hw_factory *factory - [out] struct of function pointers

TODO check ASIC CAPs*/

add this*/

/*

 * Copyright 2013-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* begin *********************

 DCN */

/* macros to expend register list macro defined in HW object header file

 set field name */

 set field name */

 function table */

/*

 * dal_hw_factory_dcn10_init

 *

 * @brief

 * Initialize HW factory function pointers and pin info

 *

 * @param

 * struct hw_factory *factory - [out] struct of function pointers

TODO check ASIC CAPs*/

add this*/

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/* begin *********************

 DCN */

/* macros to expend register list macro defined in HW object header file

 GENERIC */

 HPD */

 REG(DC_GPIO_GENLK_MASK */

 DDC */

	/* we don't care about the GPIO_ID for DDC

	 * in DdcHandle it will use GPIO_ID_DDC_DATA/GPIO_ID_DDC_CLOCK

	case REG(DC_GPIO_I2CPAD_A): not exit

	case REG(DC_GPIO_PWRSEQ_A):

	case REG(DC_GPIO_PAD_STRENGTH_1):

	case REG(DC_GPIO_PAD_STRENGTH_2):

	case REG(DC_GPIO_DEBUG):

 UNEXPECTED */

	case REG(DC_GPIO_SYNCA_A): not exist

not implmented*/

not implmented*/

not implmented*/

not implmented*/

 function table */

/*

 * dal_hw_translate_dcn10_init

 *

 * @brief

 * Initialize Hw translate function pointers.

 *

 * @param

 * struct hw_translate *tr - [out] struct of function pointers

 *

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/* begin *********************

 DCN */

/* macros to expend register list macro defined in HW object header file

 GENERIC */

 HPD */

 REG(DC_GPIO_GENLK_MASK */

 DDC */

	/* we don't care about the GPIO_ID for DDC

	 * in DdcHandle it will use GPIO_ID_DDC_DATA/GPIO_ID_DDC_CLOCK

	case REG(DC_GPIO_I2CPAD_A): not exit

	case REG(DC_GPIO_PWRSEQ_A):

	case REG(DC_GPIO_PAD_STRENGTH_1):

	case REG(DC_GPIO_PAD_STRENGTH_2):

	case REG(DC_GPIO_DEBUG):

 UNEXPECTED */

	case REG(DC_GPIO_SYNCA_A): not exist

not implmented*/

not implmented*/

not implmented*/

not implmented*/

 function table */

/*

 * dal_hw_translate_dcn10_init

 *

 * @brief

 * Initialize Hw translate function pointers.

 *

 * @param

 * struct hw_translate *tr - [out] struct of function pointers

 *

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* begin *********************

 DCN */

/* macros to expend register list macro defined in HW object header file

 set field name */

 set field name */

 function table */

/*

 * dal_hw_factory_dcn10_init

 *

 * @brief

 * Initialize HW factory function pointers and pin info

 *

 * @param

 * struct hw_factory *factory - [out] struct of function pointers

TODO check ASIC CAPs*/

add this*/

/*

 * Copyright 2013-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

/* begin *********************

 compile time expand base address. */

/* macros to expend register list macro defined in HW object header file

 GENERIC */

 HPD */

 SYNCA */

 REG(DC_GPIO_GENLK_MASK */

 DDC */

	/* we don't care about the GPIO_ID for DDC

	 * in DdcHandle it will use GPIO_ID_DDC_DATA/GPIO_ID_DDC_CLOCK

 GPIO_I2CPAD */

 Not implemented */

 UNEXPECTED */

 function table */

/*

 * dal_hw_translate_dcn10_init

 *

 * @brief

 * Initialize Hw translate function pointers.

 *

 * @param

 * struct hw_translate *tr - [out] struct of function pointers

 *

/*

 * Copyright 2013-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set field name */

 compile time expand base address. */

 set field name */

 set field name */

 function table */

/*

 * dal_hw_factory_dcn10_init

 *

 * @brief

 * Initialize HW factory function pointers and pin info

 *

 * @param

 * struct hw_factory *factory - [out] struct of function pointers

TODO check ASIC CAPs*/

/*

 * Copyright 2013-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Pre-requisites: headers required by header of this unit

 GENERIC */

 HPD */

 SYNCA */

 mmDC_GPIO_GENLK_MASK */

 DDC */

	/* we don't care about the GPIO_ID for DDC

	 * in DdcHandle it will use GPIO_ID_DDC_DATA/GPIO_ID_DDC_CLOCK

 GPIO_I2CPAD */

 Not implemented */

 UNEXPECTED */

 function table */

/*

 * dal_hw_translate_dce110_init

 *

 * @brief

 * Initialize Hw translate function pointers.

 *

 * @param

 * struct hw_translate *tr - [out] struct of function pointers

 *

/*

 * Copyright 2013-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set field name */

 set field name */

/*

 * dal_hw_factory_dce110_init

 *

 * @brief

 * Initialize HW factory function pointers and pin info

 *

 * @param

 * struct hw_factory *factory - [out] struct of function pointers

TODO check ASIC CAPs*/

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

ASSERT(exp == (int)exp);*/

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

REVISION#250*/

scaler taps calculation*/

mode support, voltage state and soc configuration*/

scale ratio support check*/

source format, pixel format and scan support check*/

bandwidth support check*/

writeback latency support check*/

re-ordering buffer support check*/

display io support check*/

total available writeback support check*/

maximum dispclk/dppclk support check*/

viewport size check*/

total available pipes support check*/

urgent latency support check*/

prefetch check*/

mode support, voltage state and soc configuration*/

display pipe configuration*/

dispclk and dppclk calculation*/

urgent watermark*/

nb p-state/dram clock change watermark*/

stutter efficiency*/

dcfclk deep sleep*/

stutter watermark*/

urgent latency supported*/

non-urgent latency tolerance*/

prefetch*/

min ttuv_blank*/

nb p-state/dram clock change support*/

maximum bandwidth used*/

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 * Copyright 2019 Raptor Engineering, LLC

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

/* Defaults from spreadsheet rev#247.

 * RV2 delta: dram_clock_change_latency, max_num_dpp

 latencies */

us*/

us*/

us*/

us*/

us*/

%*/

		/* below default clocks derived from STA target base on

		 * slow-slow corner + 10% margin with voltages aligned to FCLK.

		 *

		 * Use these value if fused value doesn't make sense as earlier

 default DCF CLK DPM on RV*/

 MHz, = 3600/5.5 */

 MHz, = 3600/5.75 */

 MHz, = 3600/6, bypass */

 MHz, = 3600/12, bypass */

 default DISP CLK voltage state on RV */

 MHz, = 3600/3.25 */

 MHz, = 3600/3.5 */

 MHz, = 3600/3.75 */

 MHz, = 3600/5.75 */

 default DPP CLK voltage state on RV */

 MHz, = 3600/5 */

 MHz, = 3600/5.25 */

 MHz, = 3600/5.75 */

 MHz, = 3600/9 */

 default PHY CLK voltage state on RV */

MHz*/

MHz*/

MHz*/

MHz*/

 BW depend on FCLK, MCLK, # of channels */

 dual channel BW */

GB/s*/

GB/s*/

GB/s*/

GB/s*/

		/* single channel BW

		.fabric_and_dram_bandwidth_vmax0p9 = 19.2f,

		.fabric_and_dram_bandwidth_vnom0p8 = 17.066f,

		.fabric_and_dram_bandwidth_vmid0p72 = 14.933f,

		.fabric_and_dram_bandwidth_vmin0p65 = 12.8f,

MHz*/

%*/

DCFCLK Cycles*/

bytes*/

bytes*/

bytes*/

bytes*/

 Depends on user class (client vs embedded, workstation, etc) */

%*/

kbytes*/

kbytes*/

kbytes*/

bit*/

kbytes*/

kbytes*/

pixels/dppclk*/

pixels/dppclk*/

pixels/dppclk*/

pixels/dppclk*/

%*/

TODO clone of something else? sr_enter_plus_exit_time?*/

not in formula*/

 for 4/8/16 high tiles */

 For 64bpp 2 high tiles */

 Unsupported swizzle modes for dcn */

 Not supported */

 stereo can never be split */

 reset the split group if it was already considered split. */

		/*

		 * this method requires us to always re-calculate watermark when dcc change

		 * between flip.

		/*

		 * allow us to disable dcc on the fly without re-calculating WM

		 *

		 * extra overhead for DCC is quite small.  for 1080p WM without

		 * DCC is only 0.417us lower (urgent goes from 6.979us to 6.562us)

 TODO: Cursor calcs, not curently stored */

 Not supported */

 TODO: Fix pixel format mappings */

	dc->dml.logger = pool->base.logger;

input[in_idx].dout.output_standard;

todo: soc->sr_enter_plus_exit_time??*/

 Calculate set A last to keep internal var state consistent for required config */

	/*

	 * disable optional pipe split by lower dispclk bounding box

	 * at DPM0

	/*

	 * force enabling pipe split by lower dpp clock for DPM0 to just

	 * below the specify pixel_rate, so bw calc would split pipe.

		/**

		 * Workaround for avoiding pipe-split in cases where we'd split

		 * planes that are too small, resulting in splits that aren't

		 * valid for the scaler.

 for low power RV2 variants, the highest voltage level we want is 0 */

 we are ok with all levels */

	/*

	 * we want a breakdown of the various stages of validation, which the

	 * perf_trace macro doesn't support

 skip all but first of split pipes */

 taken care of in recout already*/

			/*

			 * for cases where we have no plane, we want to validate up to 1080p

			 * source size because here we are only interested in if the output

			 * timing is supported or not. if we cannot support native resolution

			 * of the high res display, we still want to support lower res up scale

			 * to native

				/*

				 * this method requires us to always re-calculate watermark when dcc change

				 * between flip.

				/*

				 * allow us to disable dcc on the fly without re-calculating WM

				 *

				 * extra overhead for DCC is quite small.  for 1080p WM without

				 * DCC is only 0.417us lower (urgent goes from 6.979us to 6.562us)

			/*

			 * Spreadsheet doesn't handle taps_c is one properly,

			 * need to force Chroma to always be scaled to pass

			 * bandwidth validation.

TODO: Worst case? does this change?*/

 Unhack dppclk: dont bother with trying to pipe split if we cannot maintain dpm0 */

calc_wm_sets_and_perf_params(context, v);*/

		/* Only 1 set is used by dcn since no noticeable

		 * performance improvement was measured and due to hw bug DEGVIDCN10-254

 skip inactive pipe */

 skip all but first of split pipes */

 update previously split pipe */

 pipe not split previously needs split */

 merge previously split pipe */

 Clear plane_res and stream_res */

 for now important to do this after pipe split for building e2e params */

	/*

	 * BW limit is set to prevent display from impacting other system functions

todo some clock not in the considerations*/

find a common supported voltage level*/

find that level conresponding dcfclk*/

 Ensure that the result is sane */

 TODO: This is not the proper way to obtain fabric_and_dram_bandwidth, should be min(fclk, memclk) */

 5 GHz to cover Overdrive */

	/* Now notify PPLib/SMU about which Watermarks sets they should select

	 * depending on DPM state they are in. And update BW MGR GFX Engine and

	 * Memory clock member variables for Watermarks calculations for each

	 * Watermark Set. Only one watermark set for dcn1 due to hw bug DEGVIDCN10-254.

	/* SOCCLK does not affect anytihng but writeback for DCN so for now we dont

	 * care what the value is, hence min to overdrive level

 Notify PP Lib/SMU which Watermarks to use for which clock ranges */

pte_buffer_size_in_requests missing in dml*/

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* verification code:

	 * once calculation is ok we can remove it

 end of verification code */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 determine integer part */

 determine fractional part */

 round up LSB */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

/*******************************************************************************

 * Private Functions

initialize variables*/

''''''''''''''''''*/

 surface assignment:*/

 0: d0 underlay or underlay luma*/

 1: d0 underlay chroma*/

 2: d1 underlay or underlay luma*/

 3: d1 underlay chroma*/

 4: d0 graphics*/

 5: d1 graphics*/

 6: d2 graphics*/

 7: d3 graphics, same mode as d2*/

 8: d4 graphics, same mode as d2*/

 9: d5 graphics, same mode as d2*/

 ...*/

 maximum_number_of_surfaces-2: d1 display_write_back420 luma*/

 maximum_number_of_surfaces-1: d1 display_write_back420 chroma*/

 underlay luma and chroma surface parameters from spreadsheet*/

underlay0 same and graphics display pipe0*/

underlay1 same and graphics display pipe1*/

underlay0 same and graphics display pipe0*/

underlay1 same and graphics display pipe1*/

underlay0 same and graphics display pipe0*/

underlay1 same and graphics display pipe1*/

 graphics surface parameters from spreadsheet*/

 display_write_back420*/

assume display pipe1 has dwb enabled*/

mode check calculations:*/

 mode within dce ip capabilities*/

 fbc*/

 hsr*/

 vsr*/

 lb size*/

effective scaling source and ratios:*/

for graphics, non-stereo, non-interlace surfaces when the size of the source and destination are the same, only one tap is used*/

420 chroma has half the width, height, horizontal and vertical scaling ratios than luma*/

rotating a graphic or underlay surface swaps the width, height, horizontal and vertical scaling ratios*/

in top-bottom stereo mode there is 2:1 vertical downscaling for each eye*/

in side-by-side stereo mode there is 2:1 horizontal downscaling for each eye*/

in interlace mode there is 2:1 vertical downscaling for each field*/

in panning or bezel adjustment mode the source width has an extra 128 pixels*/

mode support checks:*/

the number of graphics and underlay pipes is limited by the ip support*/

maximum horizontal and vertical scale ratio is 4, and should not exceed the number of taps*/

for downscaling with the pre-downscaler, the horizontal scale ratio must be more than the ceiling of one quarter of the number of taps*/

the pre-downscaler reduces the line buffer source by the horizontal scale ratio*/

the number of lines in the line buffer has to exceed the number of vertical taps*/

the size of the line in the line buffer is the product of the source width and the bits per component, rounded up to a multiple of 48*/

the size of the line in the line buffer in the case of 10 bit per component is the product of the source width rounded up to multiple of 8 and 30.023438 / 3, rounded up to a multiple of 48*/

the size of the line in the line buffer in the case of 8 bit per component is the product of the source width rounded up to multiple of 8 and 30.023438 / 3, rounded up to a multiple of 48*/

frame buffer compression is not supported with stereo mode, rotation, or non- 888 formats*/

rotation is not supported with linear of stereo modes*/

clamp the partitions to the maxium number supported by the lb*/

number of memory channels for write-back client*/

modify number of memory channels if lpt mode is enabled*/

 low power tiling mode register*/

 0 = use channel 0*/

 1 = use channel 0 and 1*/

 2 = use channel 0,1,2,3*/

memory request size and latency hiding:*/

request size is normally 64 byte, 2-line interleaved, with full latency hiding*/

the display write-back requests are single line*/

for tiled graphics surfaces, or undelay surfaces with width higher than the maximum size for full efficiency, request size is 32 byte in 8 and 16 bpp or if the rotation is orthogonal to the tiling grain. only half is useful of the bytes in the request size in 8 bpp or in 32 bpp if the rotation is orthogonal to the tiling grain.*/

for undelay surfaces with width lower than the maximum size for full efficiency, requests are 4-line interleaved in 16bpp if the rotation is parallel to the tiling grain, and 8-line interleaved with 4-line latency hiding in 8bpp or if the rotation is orthogonal to the tiling grain.*/

underlay portrait tiling mode is not supported*/

graphics portrait tiling mode*/

underlay landscape tiling mode is only supported*/

graphics landscape tiling mode*/

requested peak bandwidth:*/

the peak request-per-second bandwidth is the product of the maximum source lines in per line out in the beginning*/

and in the middle of the frame, the ratio of the source width to the line time, the ratio of line interleaving*/

in memory to lines of latency hiding, and the ratio of bytes per pixel to useful bytes per request.*/

*/

if the dmif data buffer size holds more than vta_ps worth of source lines, then only vsr is used.*/

the peak bandwidth is the peak request-per-second bandwidth times the request size.*/

*/

the line buffer lines in per line out in the beginning of the frame is the vertical filter initialization value*/

rounded up to even and divided by the line times for initialization, which is normally three.*/

the line buffer lines in per line out in the middle of the frame is at least one, or the vertical scale ratio,*/

rounded up to line pairs if not doing line buffer prefetching.*/

*/

the non-prefetching rounding up of the vertical scale ratio can also be done up to 1 (for a 0,2 pattern), 4/3 (for a 0,2,2 pattern),*/

6/4 (for a 0,2,2,2 pattern), or 3 (for a 2,4 pattern).*/

*/

the scaler vertical filter initialization value is calculated by the hardware as the floor of the average of the*/

vertical scale ratio and the number of vertical taps increased by one.  add one more for possible odd line*/

panning/bezel adjustment mode.*/

*/

for the bottom interlace field an extra 50% of the vertical scale ratio is considered for this calculation.*/

in top-bottom stereo mode software has to set the filter initialization value manually and explicitly limit it to 4.*/

furthermore, there is only one line time for initialization.*/

*/

line buffer prefetching is done when the number of lines in the line buffer exceeds the number of taps plus*/

the ceiling of the vertical scale ratio.*/

*/

multi-line buffer prefetching is only done in the graphics pipe when the scaler is disabled or when upscaling and the vsr <= 0.8.'*/

*/

the horizontal blank and chunk granularity factor is indirectly used indicate the interval of time required to transfer the source pixels.*/

the denominator of this term represents the total number of destination output pixels required for the input source pixels.*/

it applies when the lines in per line out is not 2 or 4.  it does not apply when there is a line buffer between the scl and blnd.*/

outstanding chunk request limit*/

if underlay buffer sharing is enabled, the data buffer size for underlay in 422 or 444 is the sum of the luma and chroma data buffer sizes.*/

underlay buffer sharing mode is only permitted in orthogonal rotation modes.*/

*/

if there is only one display enabled, the dmif data buffer size for the graphics surface is increased by concatenating the adjacent buffers.*/

*/

the memory chunk size in bytes is 1024 for the writeback, and 256 times the memory line interleaving and the bytes per pixel for graphics*/

and underlay.*/

*/

the pipe chunk size uses 2 for line interleaving, except for the write back, in which case it is 1.*/

graphics and underlay data buffer size is adjusted (limited) using the outstanding chunk request limit if there is more than one*/

display enabled or if the dmif request buffer is not large enough for the total data buffer size.*/

the outstanding chunk request limit is the ceiling of the adjusted data buffer size divided by the chunk size in bytes*/

the adjusted data buffer size is the product of the display bandwidth and the minimum effective data buffer size in terms of time,*/

rounded up to the chunk size in bytes, but should not exceed the original data buffer size*/

data_buffer_size(i) = max_dmif_buffer_allocated * graphics_dmif_size*/

the effective dmif buffer size in non-fbc mode is limited by the 16 entry chunk tracker*/

set maximum chunk limit if only one graphic pipe is enabled*/

clamp maximum chunk limit in the graphic display pipe*/

outstanding pte request limit*/

in tiling mode with no rotation the sg pte requests are 8 useful pt_es, the sg row height is the page height and the sg page width x height is 64x64 for 8bpp, 64x32 for 16 bpp, 32x32 for 32 bpp*/

in tiling mode with rotation the sg pte requests are only one useful pte, and the sg row height is also the page height, but the sg page width and height are swapped*/

in linear mode the pte requests are 8 useful pt_es, the sg page width is 4096 divided by the bytes per pixel, the sg page height is 1, but there is just one row whose height is the lines of pte prefetching*/

the outstanding pte request limit is obtained by multiplying the outstanding chunk request limit by the peak pte request to eviction limiting ratio, rounding up to integer, multiplying by the pte requests per chunk, and rounding up to integer again*/

if not using peak pte request to eviction limiting, the outstanding pte request limit is the pte requests in the vblank*/

the pte requests in the vblank is the product of the number of pte request rows times the number of pte requests in a row*/

the number of pte requests in a row is the quotient of the source width divided by 256, multiplied by the pte requests per chunk, rounded up to even, multiplied by the scatter-gather row height and divided by the scatter-gather page height*/

the pte requests per chunk is 256 divided by the scatter-gather page width and the useful pt_es per pte request*/

pitch padding recommended for efficiency in linear mode*/

in linear mode graphics or underlay with scatter gather, a pitch that is a multiple of the channel interleave (256 bytes) times the channel-bank rotation is not efficient*/

if that is the case it is recommended to pad the pitch by at least 256 pixels*/

pixel transfer time*/

the dmif and mcifwr yclk(pclk) required is the one that allows the transfer of all pipe's data buffer size in memory in the time for data transfer*/

for dmif, pte and cursor requests have to be included.*/

the dram data requirement is doubled when the data request size in bytes is less than the dram channel width times the burst size (8)*/

the dram data requirement is also multiplied by the number of channels in the case of low power tiling*/

the page close-open time is determined by trc and the number of page close-opens*/

in tiled mode graphics or underlay with scatter-gather enabled the bytes per page close-open is the product of the memory line interleave times the maximum of the scatter-gather page width and the product of the tile width (8 pixels) times the number of channels times the number of banks.*/

in linear mode graphics or underlay with scatter-gather enabled and inefficient pitch, the bytes per page close-open is the line request alternation slice, because different lines are in completely different 4k address bases.*/

otherwise, the bytes page close-open is the chunk size because that is the arbitration slice.*/

pte requests are grouped by pte requests per chunk if that is more than 1. each group costs a page close-open time for dmif reads*/

cursor requests outstanding are limited to a group of two source lines. each group costs a page close-open time for dmif reads*/

the display reads and writes time for data transfer is the minimum data or cursor buffer size in time minus the mc urgent latency*/

the mc urgent latency is experienced more than one time if the number of dmif requests in the data buffer exceeds the request buffer size plus the request slots reserved for dmif in the dram channel arbiter queues*/

the dispclk required is the maximum for all surfaces of the maximum of the source pixels for first output pixel times the throughput factor, divided by the pixels per dispclk, and divided by the minimum latency hiding minus the dram speed/p-state change latency minus the burst time, and the source pixels for last output pixel, times the throughput factor, divided by the pixels per dispclk, and divided by the minimum latency hiding minus the dram speed/p-state change latency minus the burst time, plus the active time.*/

the data burst time is the maximum of the total page close-open time, total dmif/mcifwr buffer size in memory divided by the dram bandwidth, and the total dmif/mcifwr buffer size in memory divided by the 32 byte sclk data bus bandwidth, each multiplied by its efficiency.*/

the source line transfer time is the maximum for all surfaces of the maximum of the burst time plus the urgent latency times the floor of the data required divided by the buffer size for the fist pixel, and the burst time plus the urgent latency times the floor of the data required divided by the buffer size for the last pixel plus the active time.*/

the source pixels for the first output pixel is 512 if the scaler vertical filter initialization value is greater than 2, and it is 4 times the source width if it is greater than 4.*/

the source pixels for the last output pixel is the source width times the scaler vertical filter initialization value rounded up to even*/

the source data for these pixels is the number of pixels times the bytes per pixel times the bytes per request divided by the useful bytes per request.*/

for hbm memories, each channel is split into 2 pseudo-channels that are each 64 bits in width.  each*/

pseudo-channel may be read independently of one another.*/

the read burst length (bl) for hbm memories is 4, so each read command will access 32 bytes of data.*/

the 64 or 32 byte sized data is stored in one pseudo-channel.*/

it will take 4 memclk cycles or 8 yclk cycles to fetch 64 bytes of data from the hbm memory (2 read commands).*/

it will take 2 memclk cycles or 4 yclk cycles to fetch 32 bytes of data from the hbm memory (1 read command).*/

for gddr5/ddr4 memories, there is additional overhead if the size of the request is smaller than 64 bytes.*/

the read burst length (bl) for gddr5/ddr4 memories is 8, regardless of the size of the data request.*/

therefore it will require 8 cycles to fetch 64 or 32 bytes of data from the memory.*/

the memory efficiency will be 50% for the 32 byte sized data.*/

time to transfer data from the dmif buffer to the lb.  since the mc to dmif transfer time overlaps*/

with the dmif to lb transfer time, only time to transfer the last chunk  is considered.*/

during an mclk switch the requests from the dce ip are stored in the gmc/arb.  these requests should be serviced immediately*/

after the mclk switch sequence and not incur an urgent latency penalty.  it is assumed that the gmc/arb can hold up to 256 requests*/

per memory channel.  if the dce ip is urgent after the mclk switch sequence, all pending requests and subsequent requests should be*/

immediately serviced without a gap in the urgent requests.*/

the latency incurred would be the time to issue the requests and return the data for the first or last output pixel.*/

during an mclk switch the requests from the dce ip are stored in the gmc/arb.  these requests should be serviced immediately*/

after the mclk switch sequence and not incur an urgent latency penalty.  it is assumed that the gmc/arb can hold up to 256 requests*/

per memory channel.  if the dce ip is urgent after the mclk switch sequence, all pending requests and subsequent requests should be*/

immediately serviced without a gap in the urgent requests.*/

the latency incurred would be the time to issue the requests and return the data for the first or last output pixel.*/

cpu c-state and p-state change enable*/

for cpu p-state change to be possible for a yclk(pclk) and sclk level the dispclk required has to be enough for the blackout duration*/

for cpu c-state change to be possible for a yclk(pclk) and sclk level the dispclk required has to be enough for the blackout duration and recovery*/

condition for the blackout duration:*/

 minimum latency hiding > blackout duration + dmif burst time + line source transfer time*/

condition for the blackout recovery:*/

 recovery time >  dmif burst time + 2 * urgent latency*/

 recovery time > (display bw * blackout duration  + (2 * urgent latency + dmif burst time)*dispclk - dmif size )*/

                  / (dispclk - display bw)*/

the minimum latency hiding is the minimum for all pipes of one screen line time, plus one more line time if doing lb prefetch, plus the dmif data buffer size equivalent in time, minus the urgent latency.*/

the minimum latency hiding is  further limited by the cursor.  the cursor latency hiding is the number of lines of the cursor buffer, minus one if the downscaling is less than two, or minus three if it is more*/

initialize variables*/

nb p-state change enable*/

for dram speed/p-state change to be possible for a yclk(pclk) and sclk level there has to be positive margin and the dispclk required has to be*/

below the maximum.*/

the dram speed/p-state change margin is the minimum for all surfaces of the maximum latency hiding minus the dram speed/p-state change latency,*/

minus the dmif burst time, minus the source line transfer time*/

the maximum latency hiding is the minimum latency hiding plus one source line used for de-tiling in the line buffer, plus half the urgent latency*/

if stutter and dram clock state change are gated before cursor then the cursor latency hiding does not limit stutter or dram clock state change*/

maximum_latency_hiding(i) = minimum_latency_hiding(i) + 1 / vsr(i) **/

      h_total(i) / pixel_rate(i) + 0.5 * total_dmifmc_urgent_latency*/

determine the minimum dram clock change margin for each set of clock frequencies*/

compute the maximum clock frequuency required for the dram clock change at each set of clock frequencies*/

determine the minimum dram clock change margin for each display pipe*/

compute the maximum clock frequuency required for the dram clock change at each set of clock frequencies*/

determine the number of displays with margin to switch in the v_active region*/

determine the number of displays that don't have any dram clock change margin, but*/

have the same resolution.  these displays can switch in a common vblank region if*/

their frames are aligned.*/

compute the maximum number of aligned displays with no margin*/

dram clock change is possible, if all displays have positive margin except for one display or a group of*/

aligned displays with the same timing.*/

the display(s) with the negative margin can be switched in the v_blank region while the other*/

displays are in v_blank or v_active.*/

dram clock change is possible only in vblank if all displays are aligned and have no margin*/

average bandwidth*/

the average bandwidth with no compression is the vertical active time is the source width times the bytes per pixel divided by the line time, multiplied by the vertical scale ratio and the ratio of bytes per request divided by the useful bytes per request.*/

the average bandwidth with compression is the same, divided by the compression ratio*/

required yclk(pclk)*/

yclk requirement only makes sense if the dmif and mcifwr data total page close-open time is less than the time for data transfer and the total pte requests fit in the scatter-gather saw queque size*/

if that is the case, the yclk requirement is the maximum of the ones required by dmif and mcifwr, and the high/low yclk(pclk) is chosen accordingly*/

high yclk(pclk) has to be selected when dram speed/p-state change is not possible.*/

 number of cursor lines stored in the cursor data return buffer*/

compute number of cursor lines stored in data return buffer*/

compute minimum time to read one chunk from the dmif buffer*/

required sclk*/

sclk requirement only makes sense if the total pte requests fit in the scatter-gather saw queque size*/

if that is the case, the sclk requirement is the maximum of the ones required by dmif and mcifwr, and the high/mid/low sclk is chosen accordingly, unless that choice results in foresaking dram speed/nb p-state change.*/

the dmif and mcifwr sclk required is the one that allows the transfer of all pipe's data buffer size through the sclk bus in the time for data transfer*/

for dmif, pte and cursor requests have to be included.*/

required_sclk = high_sclk*/

dispclk*/

if dispclk is set to the maximum, ramping is not required.  dispclk required without ramping is less than the dispclk required with ramping.*/

if dispclk required without ramping is more than the maximum dispclk, that is the dispclk required, and the mode is not supported*/

if that does not happen, but dispclk required with ramping is more than the maximum dispclk, dispclk required is just the maximum dispclk*/

if that does not happen either, dispclk required is the dispclk required with ramping.*/

dispclk required without ramping is the maximum of the one required for display pipe pixel throughput, for scaler throughput, for total read request thrrougput and for dram/np p-state change if enabled.*/

the display pipe pixel throughput is the maximum of lines in per line out in the beginning of the frame and lines in per line out in the middle of the frame multiplied by the horizontal blank and chunk granularity factor, altogether multiplied by the ratio of the source width to the line time, divided by the line buffer pixels per dispclk throughput, and multiplied by the display pipe throughput factor.*/

the horizontal blank and chunk granularity factor is the ratio of the line time divided by the line time minus half the horizontal blank and chunk time.  it applies when the lines in per line out is not 2 or 4.*/

the dispclk required for scaler throughput is the product of the pixel rate and the scaling limits factor.*/

the dispclk required for total read request throughput is the product of the peak request-per-second bandwidth and the dispclk cycles per request, divided by the request efficiency.*/

for the dispclk required with ramping, instead of multiplying just the pipe throughput by the display pipe throughput factor, we multiply the scaler and pipe throughput by the ramping factor.*/

the scaling limits factor is the product of the horizontal scale ratio, and the ratio of the vertical taps divided by the scaler efficiency clamped to at least 1.*/

the scaling limits factor itself it also clamped to at least 1*/

if doing downscaling with the pre-downscaler enabled, the horizontal scale ratio should not be considered above (use "1")*/

 required core voltage*/

 the core voltage required is low if sclk, yclk(pclk)and dispclk are within the low limits*/

 otherwise, the core voltage required is medium if yclk (pclk) is within the low limit and sclk and dispclk are within the medium limit*/

 otherwise, the core voltage required is high if the three clocks are within the high limits*/

 otherwise, or if the mode is not supported, core voltage requirement is not applicable*/

required blackout recovery time*/

sclk deep sleep*/

during self-refresh, sclk can be reduced to dispclk divided by the minimum pixels in the data fifo entry, with 15% margin, but shoudl not be set to less than the request bandwidth.*/

the data fifo entry is 16 pixels for the writeback, 64 bytes/bytes_per_pixel for the graphics, 16 pixels for the parallel rotation underlay,*/

and 16 bytes/bytes_per_pixel for the orthogonal rotation underlay.*/

in parallel mode (underlay pipe), the data read from the dmifv buffer is variable and based on the pixel depth (8bbp - 16 bytes, 16 bpp - 32 bytes, 32 bpp - 64 bytes)*/

in orthogonal mode (underlay pipe), the data read from the dmifv buffer is fixed at 16 bytes.*/

urgent, stutter and nb-p_state watermark*/

the urgent watermark is the maximum of the urgent trip time plus the pixel transfer time, the urgent trip times to get data for the first pixel, and the urgent trip times to get data for the last pixel.*/

the stutter exit watermark is the self refresh exit time plus the maximum of the data burst time plus the pixel transfer time, the data burst times to get data for the first pixel, and the data burst times to get data for the last pixel.  it does not apply to the writeback.*/

the nb p-state change watermark is the dram speed/p-state change time plus the maximum of the data burst time plus the pixel transfer time, the data burst times to get data for the first pixel, and the data burst times to get data for the last pixel.*/

the pixel transfer time is the maximum of the time to transfer the source pixels required for the first output pixel, and the time to transfer the pixels for the last output pixel minus the active line time.*/

blackout_duration is added to the urgent watermark*/

compute total time to request one chunk from each active display pipe*/

compute total time to request cursor data*/

unconditionally remove black out time from the nb p_state watermark*/

maximize the watermark to force the switch in the vb_lank region of the frame*/

maximize the watermark to force the switch in the vb_lank region of the frame*/

stutter mode enable*/

in the multi-display case the stutter exit or entry watermark cannot exceed the minimum latency hiding capabilities of the*/

display pipe.*/

performance metrics*/

 display read access efficiency (%)*/

 display write back access efficiency (%)*/

 stutter efficiency (%)*/

 extra underlay pitch recommended for efficiency (pixels)*/

 immediate flip time (us)*/

 latency for other clients due to urgent display read (us)*/

 latency for other clients due to urgent display write (us)*/

 average bandwidth consumed by display (no compression) (gb/s)*/

 required dram  bandwidth (gb/s)*/

 required sclk (m_hz)*/

 required rd urgent latency (us)*/

 nb p-state change margin (us)*/

dmif and mcifwr dram access efficiency*/

is the ratio between the ideal dram access time (which is the data buffer size in memory divided by the dram bandwidth), and the actual time which is the total page close-open time.  but it cannot exceed the dram efficiency provided by the memory subsystem*/

stutter efficiency*/

the stutter efficiency is the frame-average time in self-refresh divided by the frame-average stutter cycle duration.  only applies if the display write-back is not enabled.*/

the frame-average stutter cycle used is the minimum for all pipes of the frame-average data buffer size in time, times the compression rate*/

the frame-average time in self-refresh is the stutter cycle minus the self refresh exit latency and the burst time*/

the stutter cycle is the dmif buffer size reduced by the excess of the stutter exit watermark over the lb size in time.*/

the burst time is the data needed during the stutter cycle divided by the available bandwidth*/

compute the time read all the data from the dmif buffer to the lb (dram refresh period)*/

compute stutter efficiency assuming 60 hz refresh rate*/

immediate flip time*/

if scatter gather is enabled, the immediate flip takes a number of urgent memory trips equivalent to the pte requests in a row divided by the pte request limit.*/

otherwise, it may take just one urgenr memory trip*/

worst latency for other clients*/

it is the urgent latency plus the urgent burst time*/

dmif mc urgent latency supported in high sclk and yclk*/

dram speed/p-state change margin*/

in the multi-display case the nb p-state change watermark cannot exceed the average lb size plus the dmif size or the cursor dcp buffer size*/

sclk required vs urgent latency*/

output link bit per pixel supported*/

/*******************************************************************************

 * Public functions

 us */

 todo: this is a bug*/

		/* TODO: Treat VEGAM the same as P10 for now

 us */

 64-bit

 us */

 64-bit

 us */

 us */

 us */

/*

 * Compare calculated (required) clocks against the clocks available at

 * maximum voltage (max Performance Level).

 MHz to kHz */

 MHz to kHz */

 Pipes with underlay first */

 Pipes without underlay after */

/*

 * Return:

 *	true -	Display(s) configuration supported.

 *		In this case 'calcs_output' contains data for HW programming

 *	false - Display(s) configuration not supported (not enough bandwidth).

 units: nanosecond, 16bit storage. */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 *****************************************************************************

 *  Function: is_in_vertical_blank

 *

 *  @brief

 *     check the current status of CRTC to check if we are in Vertical Blank

 *     regioneased" state

 *

 *  @return

 *     true if currently in blank region, false otherwise

 *

 *****************************************************************************

 determine if given timing can be supported by TG */

******* HW programming ************/

 Disable/Enable Timing Generator */

	/* Set MASTER_UPDATE_MODE to 0

 TODO API for AtomFirmware didn't change*/

*************** TG current status ******************/

 return the current frame counter. Used by Linux kernel DRM */

 Get current H and V position */

 wait until TG is in beginning of vertical blank region */

	/* We want to catch beginning of VBlank here, so if the first try are

	 * in VBlank, we might be very close to Active, in this case wait for

	 * another frame

 error - no point to wait if counter is not moving */

 error - no point to wait if counter is not moving */

 wait until TG is in beginning of active region */

 error - no point to wait if counter is not moving */

********** Timing Generator Synchronization routines ****/

 Setups Global Swap Lock group, TimingServer or TimingClient*/

 Checkpoint relative to end of frame */

 This pipe will belong to GSL Group zero. */

		/* Keep signal low (pending high) during 6 lines.

 DCP_GSL_PURPOSE_SURFACE_FLIP */

 Clear all the register writes done by setup_global_swap_lock */

 Settig HW default values from reg specs */

 DCP_GSL_PURPOSE_SURFACE_FLIP */

TODO Why this value here ?*/

 Reset slave controllers on master VSync */

 Setup trigger edge */

	/* Register spec has reversed definition:

 TODO What about other sources ?*/

 send every signal */

 no delay */

 clear trigger status */

 disabling trigger-reset */

 clear trigger status */

 Checks whether CRTC triggered reset occurred */

******* Stuff to move to other virtual HW objects *****************/

 Move to enable accelerated mode */

 TODO: Should we move it to transform */

 Fully program CRTC timing in timing generator */

	/* In case of V_TOTAL_CONTROL is on, make sure V_TOTAL_MAX and

	 * V_TOTAL_MIN are equal to V_TOTAL.

 TODO: Should we move it to opp? */

 Combine with below and move YUV/RGB color conversion to SW layer */

 Combine with above and move YUV/RGB color conversion to SW layer */

	/* This is desirable to have a constant DAC output voltage during the

	 * blank time that is higher than the 0 volt reference level that the

	 * DAC outputs when the NBLANK signal

	/* TO DO we have to program EXT registers and we need to know LB DATA

	 * format because it is used when more 10 , i.e. 12 bits per color

	 *

	 * m_mmDxCRTC_OVERSCAN_COLOR_EXT

	 * m_mmDxCRTC_BLACK_COLOR_EXT

	 * m_mmDxCRTC_BLANK_DATA_COLOR_EXT

	/* Program advanced line position acc.to the best case from fetching data perspective to hide MC latency

	 * and prefilling Line Buffer in V Blank (to 10 lines as LB can store max 10 lines)

 By register spec, it only takes 8 bit value

	/* TODO: replace 'controller_dp_test_pattern' by 'test_pattern_mode'

	 * because this is not DP-specific (which is probably somewhere in DP

 color ramp generator mixes 16-bits color */

 requested bpc */

	/* RGB values of the color bars.

	 * Produce two RGB colors: RGB0 - white (all Fs)

	 * and RGB1 - black (all 0s)

	 * (three RGB components for two colors)

 dest color (converted to the specified color format) */

 translate to bit depth */

 adjust color to the required colorFormat */

			/* dst = 2^dstBpc * src / 2^srcBpc = src >>

			 * (srcBpc - dstBpc);

		/* CRTC_TEST_PATTERN_DATA has 16 bits,

		 * lowest 6 are hardwired to ZERO

		 * color bits should be left aligned aligned to MSB

		 * XXXXXXXXXX000000 for 10 bit,

		 * XXXXXXXX00000000 for 8 bit and XXXXXX0000000000 for 6

		/* We have to write the mask before data, similar to pipeline.

		 * For example, for 8 bpc, if we want RGB0 to be magenta,

		 * and RGB1 to be cyan,

		 * we need to make 7 writes:

		 * MASK   DATA

		 * 000001 00000000 00000000                     set mask to R0

		 * 000010 11111111 00000000     R0 255, 0xFF00, set mask to G0

		 * 000100 00000000 00000000     G0 0,   0x0000, set mask to B0

		 * 001000 11111111 00000000     B0 255, 0xFF00, set mask to R1

		 * 010000 00000000 00000000     R1 0,   0x0000, set mask to G1

		 * 100000 11111111 00000000     G1 255, 0xFF00, set mask to B1

		 * 100000 11111111 00000000     B1 255, 0xFF00

		 *

		 * we will make a loop of 6 in which we prepare the mask,

		 * then write, then prepare the color for next write.

		 * first iteration will write mask only,

		 * but each next iteration color prepared in

		 * previous iteration will be written within new mask,

		 * the last component will written separately,

		 * mask is not changing between 6th and 7th write

		 * and color will be prepared by last iteration

		/* write color, color values mask in CRTC_TEST_PATTERN_MASK

		 * is B1, G1, R1, B0, G0, R0

			/* prepare color mask, first write PATTERN_DATA

			 * will have all zeros

 write color component */

			/* prepare next color component,

			 * will be written in the next iteration

		/* write last color component,

		 * it's been already prepared in the loop

 enable test pattern */

		/* increment for the first ramp for one color gradation

		 * 1 gradation for 6-bit color is 2^10

		 * gradations in 16-bit color

 enable test pattern */

 Cannot configure crc on a CRTC that is disabled */

 First, disable CRC before we configure it. */

 Program frame boundaries */

 Window A x axis start and end. */

 Window A y axis start and end. */

 Window B x axis start and end. */

 Window B y axis start and end. */

 Set crc mode and selection, and enable. Only using CRC0*/

 Early return if CRC is not enabled for this CRTC */

 used by enable_timing_synchronization. Not need for FPGA */

 never be called */

 used by enable_timing_synchronization. Not need for FPGA */

 never be called */

CRTC requires a minimum HBLANK = 32 pixels and o

	 * Minimum HSYNC = 8 pixels*/

	tg110->min_h_blank = 32;

	/*DCE12_CRTC_Block_ARch.doc*/

	tg110->min_h_front_porch = 0;

	tg110->min_h_back_porch = 0;



	tg110->min_h_sync_width = 4;

	tg110->min_v_sync_width = 1;

	tg110->min_v_blank = 3;

}

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*******************************************************************************

 * Private definitions

/*

	addr = mmDCP0_DVMM_PTE_CONTROL + controller_id *

			(mmDCP1_DVMM_PTE_CONTROL- mmDCP0_DVMM_PTE_CONTROL);



	value = dm_read_reg(ctx, addr);



	set_reg_field_value(

			value, 0, DCP, controller_id,

			DVMM_PTE_CONTROL,

			DVMM_USE_SINGLE_PTE);



	set_reg_field_value_soc15(

			value, 1, DCP, controller_id,

			DVMM_PTE_CONTROL,

			DVMM_PTE_BUFFER_MODE0);



	set_reg_field_value_soc15(

			value, 1, DCP, controller_id,

			DVMM_PTE_CONTROL,

			DVMM_PTE_BUFFER_MODE1);



 disable for bringup */

		/* Revert MASTER_UPDATE_MODE to 0 because bios sets it 2

		 * by default when command table is called

 TODO: port code from dal2 */

For ZFB case need to put DCHUB FB BASE and TOP upside down to indicate ZFB mode*/

Should not touch FB LOCATION (done by VBIOS on AsicInit table)*/

Should not touch FB LOCATION (done by VBIOS on AsicInit table)*/

/**

 * dce121_xgmi_enabled() - Check if xGMI is enabled

 * @hws: DCE hardware sequencer object

 *

 * Return true if xGMI is enabled. False otherwise.

 PF_MAX_REGION == 0 means xgmi is disabled */

	/* All registers used by dce11.2 match those in dce11 in offset and

	 * structure

/*

* Copyright 2012-15 Advanced Micro Devices, Inc.cls

*

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* begin *********************

 compile time expand base address. */

 MMHUB */

/* macros to expend register list macro defined in HW object header file

	/* All registers used by dce11.2 match those in dce11 in offset and

	 * structure

TODO	Move to separate file and Override what is needed */

 HWSEQ regs for VG20 */

5124*/

original logic in dal3*/

do system clock*/

 convert all the clock fro kHz to fix point mHz  TODO: wloop data */

do memory clock*/

	/* we don't need to call PPLIB for validation clock since they

	 * also give us the highest sclk and highest mclk (UMA clock).

	 * ALSO always convert UMA clock (from PPLIB)  to YCLK (HW formula):

	 * YCLK = UMACLK*m_memoryTypeMultiplier

	/* Now notify PPLib/SMU about which Watermarks sets they should select

	 * depending on DPM state they are in. And update BW MGR GFX Engine and

	 * Memory clock member variables for Watermarks calculations for each

	 * Watermark Set

 5 GHz instead of data[7].clockInKHz to cover Overdrive */

 5 GHz instead of data[2].clockInKHz to cover Overdrive */

 5 GHz instead of data[7].clockInKHz to cover Overdrive */

 5 GHz instead of data[2].clockInKHz to cover Overdrive */

 Notify PP Lib/SMU which Watermarks to use for which clock ranges */

 VG20 support max 6 pipes */

 TODO: Fill more data from GreenlandAsicCapability.cpp */

1.4 w/a not applied by default*/

	/*************************************************

	 *  Create resources                             *

 VG20: Pipe harvesting enabled, retrieve valid pipe fuses */

 index to valid pipe resource */

 check next valid pipe */

 valid pipe num */

 Create hardware sequencer */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 0x74 >> 1*/

 0x76 >> 1*/

 actual hdcp payload, will be filled later, zeroed for now*/

only HW

 Read KSV, need repeatedly handle */

todo version2.2

todo version2.2

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE8 register header files */

 used as index in array */

 DCE8.0 overrides */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 TODO remove this include */

 set register offset */

 set register offset with instance */

 TODO implement when needed but for now hardcode max value*/

	/*************************************************

	 *  Resource + asic cap harcoding                *

	/*************************************************

	 *  Create resources                             *

 Create hardware sequencer */

	/*************************************************

	 *  Resource + asic cap harcoding                *

	/*************************************************

	 *  Create resources                             *

 Create hardware sequencer */

	/*************************************************

	 *  Resource + asic cap harcoding                *

	/*************************************************

	 *  Create resources                             *

 Create hardware sequencer */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE8 register header files */

/*******************************************************************************

 * Private definitions

**************************PIPE_CONTROL***********************************/

/*

 * Copyright 2020 Mauro Rossi <issor.oruam@gmail.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE6 register header files */

 used as index in array */

 DCE6 has CRTC_PREFETCH_EN bit in CRTC_CONTROL register */

	/* DCE6 does not support CRTC_LEGACY_REQUESTOR_EN bit

 Cannot configure crc on a CRTC that is disabled */

 DCE6 has no CRTC_CRC_CNTL register, nothing to do */

 DCE6.0 overrides */

/*

 * Copyright 2020 Mauro Rossi <issor.oruam@gmail.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 TODO remove this include */

 set register offset */

 set register offset with instance */

 TODO implement when needed but for now hardcode max value*/

	/*************************************************

	 *  Resource + asic cap harcoding                *

	/*************************************************

	 *  Create resources                             *

 Create hardware sequencer */

	/*************************************************

	 *  Resource + asic cap harcoding                *

	/*************************************************

	 *  Create resources                             *

 Create hardware sequencer */

	/*************************************************

	 *  Resource + asic cap harcoding                *

	/*************************************************

	 *  Create resources                             *

 Create hardware sequencer */

/*

 * Copyright 2020 Mauro Rossi <issor.oruam@gmail.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE6 register header files */

/*******************************************************************************

 * Private definitions

**************************PIPE_CONTROL***********************************/

/*

 *  Check if FBC can be enabled

 FBC memory should be allocated */

 Only supports single display */

 fbc not applicable on underlay pipe */

 Only supports eDP */

 PSR should not be enabled */

 Nothing to compress */

 Only for non-linear tiling */

/*

 *  Enable FBC

 Program GRPH COMPRESSED ADDRESS and PITCH */

/*******************************************************************************

 * Front End programming

 display color depth */

 Lb color depth */

/*******************************************************************************

 * In order to turn on surface we will program

 * CRTC

 *

 * DCE6 has no bottom_pipe and no Blender HW

 * We need to set 'blank_target' to false in order to turn on the display

 *

 * |-----------|------------|---------|

 * |curr pipe  | set_blank  |         |

 * |Surface    |blank_target|  CRCT   |

 * |visibility |  argument  |         |

 * |-----------|------------|---------|

 * |    off    |   true     | blank   |

 * |    on     |   false    | unblank |

 * |-----------|------------|---------|

 *

 DCE6 has no bottom_pipe and no Blender HW */

 DCE6 skip dce_set_blender_mode() but then proceed to 'unblank' CRTC */

 set boarder color to red */

 set boarder color to blue */

 set boarder color to green */

 set boarder color to yellow */

 set boarder color to white */

 DCE6 skips DCN TOFPGA check for transform_set_pixel_storage_depth == NULL */

		/*

		 * The way 420 is packed, 2 channels carry Y component, 1 channel

		 * alternate between Cb and Cr, so both channels need the pixel

		 * value for Y

 Moved programming gamma from dc to hwss */

 Need to allocate mem before program front end for Fiji */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Should never be hit, if it is we have an erroneous hw config*/

 Should never be hit, if it is we have an erroneous hw config*/

 Repeat for water mark set A, B, C and D. */

 clock state A */

 determine the transfer time for a quantity of data for a particular requestor.*/

 clock state B */

 determine the transfer time for a quantity of data for a particular requestor.*/

 clock state C */

 determine the transfer time for a quantity of data for a particular requestor.*/

 clock state D */

 determine the transfer time for a quantity of data for a particular requestor.*/

 clock state A */

 clock state B */

 clock state C */

 clock state D */

 clock state A */

 clock state B */

 clock state C */

 clock state D */

	/*

	 * The DCHub arbiter has a mechanism to dynamically rate limit the DCHub request stream to the fabric.

	 * If the memory controller is fully utilized and the DCHub requestors are

	 * well ahead of their amortized schedule, then it is safe to prevent the next winner

	 * from being committed and sent to the fabric.

	 * The utilization of the memory controller is approximated by ensuring that

	 * the number of outstanding requests is greater than a threshold specified

	 * by the ARB_MIN_REQ_OUTSTANDING. To determine that the DCHub requestors are well ahead of the amortized schedule,

	 * the slack of the next winner is compared with the ARB_SAT_LEVEL in DLG RefClk cycles.

	 *

	 * TODO: Revisit request limit after figure out right number. request limit for RM isn't decided yet, set maximum value (0x1FF)

	 * to turn off it for now.

	/*REG_SET(DCHUBBUB_ARB_SAT_LEVEL, 0,

			DCHUBBUB_ARB_SAT_LEVEL, 60 * refclk_mhz);

	REG_UPDATE(DCHUBBUB_ARB_DF_REQ_OUTSTAND,

 copied from DML.  might want to refactor DML to leverage from DML */

 DML : get_blk256_size */

 full 256B request */

 half 128b request */

 full 256B request */

 half 128b request */

 access_dir not known, must use most constraining */

			/* reg128 is true for either horz and vert

			 * but segment_order is contiguous

 Exception for 64KB_R_X */

 Init VMID 0 based on PA config

		/*

		 * The external Reference Clock may change based on the board or

		 * platform requirements and the programmable integer divide must

		 * be programmed to provide a suitable DLG RefClk frequency between

		 * a minimum of 20MHz and maximum of 50MHz

 HUBBUB global timer must be enabled.

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Reset APG */

 Enable APG */

 Disable APG */

 these are one to one */

	/* if Rear Left and Right exist move RC speaker to channel 7

	 * otherwise to channel 5

 FRONT Left Right Center and REAR Left Right Center are exclusive */

 This should not happen.it does so we don't get BSOD*/

 DisplayPort only allows for one audio stream with stream ID 0 */

	/* When running in "pair mode", pairs of audio channels have their own enable

 REG_UPDATE(APG_DBG_GEN_CONTROL, APG_DBG_AUDIO_CHANNEL_ENABLE, channels);

 Disable forced mem power off */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Enable all clocks in the DP_STREAM_ENC */

 Assert reset to the DP_SYM32_ENC logic */

 Wait for reset to complete (to assert) */

 De-assert reset to the DP_SYM32_ENC logic */

 Wait for reset to de-assert */

 Enable idle pattern generation */

 Set the input mux for video stream source */

 Enable video transmission in main framer */

 Reset and Enable Pixel to Symbol FIFO */

 Disable Clock Ramp Adjuster FIFO */

 Reset and Enable Clock Ramp Adjuster FIFO */

 For Debug -- Enable CRC */

 Disable video transmission */

	/* Wait for video stream transmission disabled

	 * Larger delay to wait until VBLANK - use max retry of

	 * 10us*5000=50ms. This covers 41.7ms of minimum 24 Hz mode +

	 * a little more because we may not trust delay accuracy.

REG_WAIT(DP_SYM32_ENC_VID_STREAM_CONTROL,

		VID_STREAM_STATUS, 0,

		10, 5000);

 Disable SDP tranmission */

 Disable Pixel to Symbol FIFO */

 Disable Clock Ramp Adjuster FIFO */

 Disable DP_SYM32_ENC */

 Disable clocks in the DP_STREAM_ENC */

	/* MISC0[0]   = 0    video and link clocks are asynchronous

	 * MISC1[0]   = 0    interlace not supported

	 * MISC1[2:1] = 0    stereo field is handled by hardware

	 * MISC1[5:3] = 0    Reserved

 Interlaced not supported */

	/* Double buffer enable for MSA and pixel format registers

	 * Only double buffer for changing stream attributes for active streams

	 * Do not double buffer when initially enabling a stream

 Pixel Encoding */

 MISC0[2:1] = 01

 MISC0[2:1] = 10

				/* HW testing only, no use case yet.

				 * Color depth of Y-only could be

				 * 8, 10, 12, 16 bits

 MISC1[7] = 1

 MISC1[6] = 1

	/* For YCbCr420 and BT2020 Colorimetry Formats, VSC SDP shall be used.

	 * When MISC1, bit 6, is Set to 1, a Source device uses a VSC SDP to indicate the

	 * Pixel Encoding/Colorimetry Format and that a Sink device shall ignore MISC1, bit 7,

	 * and MISC0, bits 7:1 (MISC1, bit 7, and MISC0, bits 7:1, become "don't care").

 Color depth */

 MISC0[7:5] = 000

 MISC0[7:5] = 001

 MISC0[7:5] = 010

 MISC0[7:5] = 011

 bit7 = 0*/

 bit3=1 */

 bit7 = 0*/

 bit3=1, bit4=0 */

 bit7 = 0*/

 bit2=0, bit1=1 */

 bit2=1, bit1=0 */

 bit3=1, bit4=1 */

 bit7 = 0*/

 bit2=0, bit1=1 */

 bit2=1, bit1=0 */

 do nothing */

	/* calculate from vesa timing parameters

	 * h_active_start related to leading edge of sync

 start at beginning of left border */

	/*   MSA Packet Mapping to 32-bit Link Symbols - DP2 spec, section 2.7.4.1

	 *

	 *                      Lane 0           Lane 1          Lane 2         Lane 3

	 *    MSA[0] = {             0,               0,              0,  VFREQ[47:40]}

	 *    MSA[1] = {             0,               0,              0,  VFREQ[39:32]}

	 *    MSA[2] = {             0,               0,              0,  VFREQ[31:24]}

	 *    MSA[3] = {  HTotal[15:8],    HStart[15:8],   HWidth[15:8],  VFREQ[23:16]}

	 *    MSA[4] = {  HTotal[ 7:0],    HStart[ 7:0],   HWidth[ 7:0],  VFREQ[15: 8]}

	 *    MSA[5] = {  VTotal[15:8],    VStart[15:8],  VHeight[15:8],  VFREQ[ 7: 0]}

	 *    MSA[6] = {  VTotal[ 7:0],    VStart[ 7:0],  VHeight[ 7:0],  MISC0[ 7: 0]}

	 *    MSA[7] = { HSP|HSW[14:8],   VSP|VSW[14:8],              0,  MISC1[ 7: 0]}

	 *    MSA[8] = {     HSW[ 7:0],       VSW[ 7:0],              0,             0}

 packetIndex */

 packetIndex */

 packetIndex */

	/* enable/disable transmission of packet(s).

	 * If enabled, packet transmission begins on the next frame

 check if dynamic metadata packet transmission is enabled */

 Enable secondary data path */

 stop generic packets on DP */

 Disable secondary data path if audio is also disabled */

 Configure for PPS packet size (128 bytes) */

 Load PPS into infoframe (SDP) registers */

		/* SW should make sure VBID[6] update line number is bigger

		 * than PPS transmit line number

 Send PPS data at the line number specified above. */

 Disable Generic Stream Packet 11 (GSP) transmission */

 Set the input mux for video stream source */

 Enable Audio packets */

 Program the ATP and AIP next */

 Enable secondary data path */

 Enable APG block */

 Disable Audio packets */

 Disable STP Stream Enable if other SDP GSP are also disabled */

 Disable APG block */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 get current status of link enabled */

 Enable clocks first */

 Reset DPHY.  Only reset if going from disable to enable */

 Configure DPHY settings */

 Configure DPHY settings */

 Shut down clock last */

 programs DP VC payload allocation */

	/* --- Set MSE Stream Attribute -

	 * Setup VC Payload Table on Tx Side,

	 * Issue allocation change trigger

	 * to commit payload on both tx and rx side

 we should clean-up table each time */

 --- wait for transaction finish */

	/* send allocation change trigger (ACT)

	 * this step first sends the ACT,

	 * then double buffers the SAT into the hardware

	 * making the new allocation active on the DP MST mode link

	/* SAT_UPDATE:

	 * 0 - No Action

	 * 1 - Update SAT with trigger

	 * 2 - Update SAT without trigger

	/* wait for update to complete

	 * (i.e. SAT_UPDATE_PENDING field is set to 0)

	 * No need for HW to enforce keepout.

	/* Best case and worst case wait time for SAT_UPDATE_PENDING

	 *   best: 109 us

	 *   worst: 868 us

	/* Best case and worst case wait time for RATE_UPDATE_PENDING

	 *   best: 116 ns

	 *   worst: 903 ns

 wait for update to be completed on the link */

 if value == 1 alt mode is disabled, otherwise it is enabled */

 enables DP PHY output for 128b132b encoding */

 Set the transmitter */

 Enable the PHY */

cntl.pll_id = clock_source;

 disable transmitter */

 disable encoder */

 disable transmitter */

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 unused */

 unused */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Assume less than 6 pipes */

/**

 * Enable CRTC

 * Enable CRTC - call ASIC Control Object to enable Timing generator.

 opp instance for OTG, 1 to 1 mapping and odm will adjust */

 VTG enable first is for HW workaround */

 Enable CRTC */

 disable_crtc - call ASIC Control Object to disable Timing generator. */

	/* disable otg request until end of the first line

	 * in the vertical blank region

 CRTC disabled, so disable  clock. */

 CRTC disabled, so disable  clock. */

		/*

		 * MIN_MASK_EN is gone and MASK is now always enabled.

		 *

		 * To get it to it work with manual trigger we need to make sure

		 * we program the correct bit.

 TRIGA */

 Setup manual flow control for EOF via TRIG_A

 used by enable_timing_synchronization. Not need for FPGA */

 used by enable_timing_synchronization. Not need for FPGA */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Force ERAM to shutdown if DMCU is not enabled

 Set default OPTC memory power states

 Shutdown when unassigned and light sleep in VBLANK

 Power down VGA memory

 Power down VPGs

 enable all DCN clock gating */

Enable ability to power gate / don't force power on permanently

 Initialize the dccg

 Not all ASICs have DCCG sw component

		/* Power up AND update implementation according to the

		 * required signal (which may be different from the

		 * default signal on connector).

 Check for enabled DIG to identify enabled display */

 Power gate DSCs */

 Enables outbox notifications for usb4 dpia */

 we want to turn off all dp displays before doing detection */

 if any of the displays are lit up turn them off */

 blank dp stream before power off receiver*/

	/* If taking control over from VBIOS, we may want to optimize our first

	 * mode set, so we need to skip powering down pipes until we know which

	 * pipes we want to use.

	 * Otherwise, if taking control is not possible, we need to power

	 * everything down.

 power AFMT HDMI memory TODO: may move to dis/en output save power*/

 Set i2c to light sleep until engine is setup

 enable all DCN clock gating */

 DSC0 */

 DSC1 */

 DSC2 */

 disable power gating */

 DCHUBP0/1/2/3/4/5 */

 DPP0/1/2/3/4/5 */

 DCS0/1/2/3/4/5 */

 this is not root pipe */

	/*

	 * DMUB notifies whether restore is required.

	 * Optimization to avoid sending commands when not required.

 Convert from MC address to offset into FB */

 DPMS may already disable or */

		/* dpms_off status is incorrect due to fastboot

		 * feature. When system resume from S4 with second

		 * screen only, the dpms_off would be true but

		 * VBIOS lit up eDP, so check link status too.

 free acquired resources */

disable az_endpoint*/

free audio*/

we have to dynamic arbitrate the audio endpoints*/

we free the resource, need reset is_audio_acquired*/

 Reset Back End*/

 New dc_state in the process of being applied to hardware. */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 TODO: change include headers /amd/include/asic_reg after upstream

TODO: correct dispclk/dppclk voltage level determination*/

/* begin *********************

 * macros to expend register list macro defined in HW object header file

 DCN */

 TODO awful hack. fixup dcn20_dwb.h */

 NBIO */

 MMHUB */

 CLOCK */

MPC_RMU_REG_LIST_DCN3AG(2),

 6:1 downscaling ratio: 1000/6 = 166.666

upto true 4K*/

 -1 = disable,

 This is previously known to cause hang on S3 cycles if enabled

 -1 = disable

/* Create a minimal link encoder object not associated with a particular

 * physical connector.

 * resource_funcs.link_enc_create_minimal

 Light sleep by default, no need to power down here

 Mapping of VPG, AFMT, DME register blocks to DIO block instance */

 For B0 only. C->F, D->G.

	/* Mapping of VPG register blocks to HPO DP block instance:

	 * VPG[6] -> HPO_DP[0]

	 * VPG[7] -> HPO_DP[1]

	 * VPG[8] -> HPO_DP[2]

	 * VPG[9] -> HPO_DP[3]

	/* Mapping of APG register blocks to HPO DP block instance:

	 * APG[0] -> HPO_DP[0]

	 * APG[1] -> HPO_DP[1]

	 * APG[2] -> HPO_DP[2]

	 * APG[3] -> HPO_DP[3]

 allocate HPO stream encoder and create VPG sub-block */

 allocate HPO link encoder */

		/* DCN3.1 FPGA Workaround

		 * Need to enable HPO DP Stream Encoder before setting OTG master enable.

		 * To do so, move calling function enable_stream_timing to only be done AFTER calling

		 * function core_link_enable_stream

		/*

		 * Immediate flip can be set dynamically after enabling the plane.

		 * We need to require support for immediate flip or underflow can be

		 * intermittently experienced depending on peak b/w requirements.

	/* We don't recalculate clocks for 0 pipe configs, which can block

	 * S0i3 as high clocks will block low power states

	 * Override any clocks that can block S0i3 to min here

 always should be vlevel 0

 TODO

	/* Set B:

	 * TODO

	/* Set C:

	 * TODO

	/* Set D:

	 * TODO

	/* Set A:

	 * All clocks min required

	 *

	 * Set A calculated last so that following calculations are based on Set A

 TODO: remove: */

 end remove*/

 Disable fast_validate to set min dcfclk in alculate_wm_and_dlg

 Default clock levels are used for diags, which may lead to overclocking.

 Prepass to find max clocks independent of voltage level. */

 loop backwards*/

 Clocks dependent on voltage level. */

 Clocks independent of voltage level. */

	/*************************************************

	 *  Resource + asic cap harcoding                *

1.4 w/a applied by default*/

 Color pipeline capabilities */

 must use gamma_corr

 no OGAM ROM on DCN301

2

 read VBIOS LTTPR caps */

 interop bit is implicit */

 Init the vm_helper

	/*************************************************

	 *  Create resources                             *

 Clock Sources for Pixel Clock*/

 todo: not reuse phy_pll registers */

 TODO: DCCG */

 TODO: IRQ */

 HUBBUB */

 HUBPs, DPPs, OPPs and TGs */

 PSR */

 ABM */

 MPC and DSC */

 DWB and MMHUBBUB */

 AUX and I2C */

 YELLOW CARP B0 has 4 DPIA's */

 Audio, Stream Encoders including HPO and virtual, MPC 3D LUTs */

 HW Sequencer and Plane caps */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Do nothing */

/*

	00 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__1to2 : 1/2

	01 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__3to4 : 3/4

	02 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__7to8 : 7/8

	03 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__15to16 : 15/16

	04 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__31to32 : 31/32

	05 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__63to64 : 63/64

	06 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__127to128 : 127/128

	07 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__255to256 : 255/256

/*

	AUX_REG_UPDATE_5(AUX_DPHY_RX_CONTROL0,

	AUX_RX_START_WINDOW = 1 [6:4]

	AUX_RX_RECEIVE_WINDOW = 1 default is 2 [10:8]

	AUX_RX_HALF_SYM_DETECT_LEN  = 1 [13:12] default is 1

	AUX_RX_TRANSITION_FILTER_EN = 1 [16] default is 1

	AUX_RX_ALLOW_BELOW_THRESHOLD_PHASE_DETECT [17] is 0  default is 0

	AUX_RX_ALLOW_BELOW_THRESHOLD_START [18] is 1  default is 1

	AUX_RX_ALLOW_BELOW_THRESHOLD_STOP [19] is 1  default is 1

	AUX_RX_PHASE_DETECT_LEN,  [21,20] = 0x3 default is 3

	AUX_RX_DETECTION_THRESHOLD [30:28] = 1

AUX_DPHY_TX_REF_CONTROL'AUX_TX_REF_DIV HW default is 0x32;

 Set AUX_TX_REF_DIV Divider to generate 2 MHz reference from refclk

 27MHz -> 0xd

 100MHz -> 0x32

 48MHz -> 0x18

from display_init*/

 Set TMDS_CTL0 to 1.  This is a legacy setting.

HW default is 5*/

	/* set the flag to indicate whether driver poll the I2C data pin

	 * while doing the DP sink detect

/*	if (dal_adapter_service_is_feature_supported(as,

		FEATURE_DP_SINK_DETECT_POLL_DATA_PIN))

		enc10->base.features.flags.bits.

	/* For DCE 8.0 and 8.1, by design, UNIPHY is hardwired to DIG_BE.

	 * SW always assign DIG_FE 1:1 mapped to DIG_FE for non-MST UNIPHY.

	 * SW assign DIG_FE to non-MST UNIPHY first and MST last. So prefer

	 * DIG is per UNIPHY and used by SST DP, eDP, HDMI, DVI and LVDS.

	 * Prefer DIG assignment is decided by board design.

	 * For DCE 8.0, there are only max 6 UNIPHYs, we assume board design

	 * and VBIOS will filter out 7 UNIPHY for DCE 8.0.

	 * By this, adding DIGG should not hurt DCE 8.0.

	 * This will let DCE 8.1 share DCE 8.0 as much as possible

 default to one to mirror Windows behavior */

 Override features with DCE-specific values */

 DPIA equivalent of link_transmitter_control. */

 reset training complete */

 Enable transmitter and encoder. */

 0 for SST; 5 for MST */

		/* DIG_BE_CNTL.DIG_HPD_SELECT set to 5 (hpdsel - 1) to indicate HPD pin

		 * unused by DPIA.

 Enable transmitter and encoder. */

 0 for SST; 5 for MST */

		/* DIG_BE_CNTL.DIG_HPD_SELECT set to 5 (hpdsel - 1) to indicate HPD pin

		 * unused by DPIA.

 Disable transmitter and encoder. */

 0 for SST; 5 for MST */

 0 for SST; 5 for MST */

 [Note] no need to check hw_internal_rev once phy mux selection is ready

		/*

		 * B0 phys use a new set of registers to check whether alt mode is disabled.

		 * if value == 1 alt mode is disabled, otherwise it is enabled.

 [Note] need to change TRANSMITTER_UNIPHY_C/D to F/G once phy mux selection is ready

 in usb c dp2 mode, max lane count is 2 */

 [Note] no need to check hw_internal_rev once phy mux selection is ready

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 phase / modulo = dpp pipe clk / dpp global clk

 use FF at the end

DTO must be enabled to generate a 0Hz clock output

 enabled to select one of the DTBCLKs for pipe */

 select one of the PHYD32CLKs as the source for symclk32_se */

 set refclk as the source for symclk32_se */

 select one of the PHYD32CLKs as the source for symclk32_le */

 set refclk as the source for symclk32_le */

DTO must be enabled to generate a 0 Hz clock output

Disable DTO

 Force PHYSYMCLK on and Select phyd32clk as the source of clock which is output to PHY through DCIO */

 Controls the generation of pixel valid for OTG in (OTG -> HPO case) */

	/* Mode	                DTBDTO Rate       DTBCLK_DTO<x>_DIV Register

	 * ODM 4:1 combine      pixel rate/4      2

	 * ODM 2:1 combine      pixel rate/2      4

	 * non-DSC 4:2:0 mode   pixel rate/2      4

	 * DSC native 4:2:0     pixel rate/2      4

	 * DSC native 4:2:2     pixel rate/2      4

	 * Other modes          pixel rate        8

 phase / modulo = dtbclk / dtbclk ref

		/* The recommended programming sequence to enable DTBCLK DTO to generate

		 * valid pixel HPO DPSTREAM ENCODER, specifies that DTO source select should

		 * be set only after DTO is enabled

 phase / modulo = dtbclk / dtbclk ref

REG_UPDATE(DCCG_AUDIO_DTO_SOURCE,

		DCCG_AUDIO_DTBCLK_DTO_USE_512FBR_DTO, 1);

  04 - DCCG_AUDIO_DTO_SEL_AUDIO_DTO_DTBCLK

  03 - DCCG_AUDIO_DTO_SEL_NO_AUDIO_DTO

	/*

	 * Assume refclk is sourced from xtalin

	 * expect 24MHz

	/* Set HPO stream encoder to use refclk to avoid case where PHY is

	 * disabled and SYMCLK32 for HPO SE is sourced from PHYD32CLK which

	 * will cause DCN to hang.

/*

 * Copyright 2012-20 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* NOTE: This is not a generic setup_gsl function (hence the suffix as_lock)

 * This is only used to lock pipes in pipe splitting case with immediate flip

 * Ordinary MPC/OTG locks suppress VUPDATE which doesn't help with immediate,

 * so we get tearing with freesync since we cannot flip multiple pipes

 * atomically.

 * We use GSL for this:

 * - immediate flip: find first available GSL group if not already assigned

 *                   program gsl with that group, set current OTG as master

 *                   and always us 0x4 = AND of flip_ready from all pipes

 * - vsync flip: disable GSL if used

 *

 * Groups in stream_res are stored as +1 from HW registers, i.e.

 * gsl_0 <=> pipe_ctx->stream_res.gsl_group == 1

 * Using a magic value like -1 would require tracking all inits/resets

		/* return if group already assigned since GSL was set up

		 * for vsync flip, we would unassign so it can't be "left over"

 set gsl group reg field and mark resource used */

 invalid case

 if not in use, just return

 unset gsl group reg field and mark resource free */

 at this point we want to program whether it's to enable or disable */

 disable power gating */

 DCHUBP0/1/2/3/4/5 */

 DPP0/1/2/3/4/5 */

 DCS0/1/2/3/4/5 */

	/*

	 * set MICROSECOND_TIME_BASE_DIV

	 * 100Mhz refclk -> 0x120264

	 * 27Mhz refclk -> 0x12021b

	 * 48Mhz refclk -> 0x120230

	 *

	/*

	 * set MILLISECOND_TIME_BASE_DIV

	 * 100Mhz refclk -> 0x1186a0

	 * 27Mhz refclk -> 0x106978

	 * 48Mhz refclk -> 0x10bb80

	 *

 This value is dependent on the hardware pipeline delay so set once per SOC */

 Blank pixel data during initialization */

 program opp dpg blank color */

 get the OTG active size */

 get the OPTC source */

 DSC0 */

 DSC1 */

 DSC2 */

 DSC3 */

 DSC4 */

 DSC5 */

 DPP0 */

 DPP1 */

 DPP2 */

 DPP3 */

 DPP4 */

 DPP5 */

		/*

		 * Do not power gate DPP5, should be left at HW default, power on permanently.

		 * PG on Pipe5 is De-featured, attempting to put it to PG state may result in hard

		 * reset.

		 * REG_UPDATE(DOMAIN11_PG_CONFIG,

		 *		DOMAIN11_POWER_GATE, power_gate);

		 *

		 * REG_WAIT(DOMAIN11_PG_STATUS,

		 *		DOMAIN11_PGFSM_PWR_STATUS, pwr_status,

		 * 		1, 1000);

 DCHUBP0 */

 DCHUBP1 */

 DCHUBP2 */

 DCHUBP3 */

 DCHUBP4 */

 DCHUBP5 */

		/*

		 * Do not power gate DCHUB5, should be left at HW default, power on permanently.

		 * PG on Pipe5 is De-featured, attempting to put it to PG state may result in hard

		 * reset.

		 * REG_UPDATE(DOMAIN10_PG_CONFIG,

		 *		DOMAIN10_POWER_GATE, power_gate);

		 *

		 * REG_WAIT(DOMAIN10_PG_STATUS,

		 *		DOMAIN10_PGFSM_PWR_STATUS, pwr_status,

		 *		1, 1000);

/* disable HW used by plane.

 * note:  cannot disable until disconnect is complete

	/* In flip immediate with pipe splitting case GSL is used for

	 * synchronization so we must disable it when the plane is disabled.

 ODM combine 4:1 case */

	/* by upper caller loop, pipe0 is parent pipe and be called first.

	 * back end is set up by for pipe0. Other children pipe share back end

	 * with pipe 0. No program is needed.

 TODO check if timing_changed, disable stream if timing changed */

	/* HW program guide assume display already disable

	 * by unplug sequence. OTG assume stop.

 VTG is  within DCHUB command block. DCFCLK is always on */

 DRR should set trigger event to monitor surface update event

	/* Event triggers and num frames initialized for DRR, but can be

	 * later updated for PSR use. Note DRR trigger events are generated

	 * regardless of whether num frames met.

 TODO program crtc source select for non-virtual signal*/

 TODO program FMT */

 TODO setup link_enc */

 TODO set stream attributes */

 TODO program audio */

 TODO enable stream if timing changed */

 TODO unblank stream if DP */

	/*

	 * program OGAM only for the top pipe

	 * if there is a pipe split then fix diagnostic is required:

	 * how to pass OGAM parameter for stream.

	 * if programming for all pipes is required then remove condition

	 * pipe_ctx->top_pipe == NULL ,but then fix the diagnostic.

		/*

		 * there is no ROM

	/*

	 * if above if is not executed then 'params' equal to 0 and set in bypass

	/* handle here the optimized cases when de-gamma ROM could be used.

	 *

		/*

		 * if we are here, we did not handle correctly.

		 * fix is required for this use case

 get opp dpg blank color */

if (dc->debug.sanity_checks) {

	dcn10_verify_allow_pstate_change_high(dc);

}

 enable DCFCLK current DCHUB */

 initialize HUBP on power up */

 make sure OPP_PIPE_CLOCK_EN = 1 */

/* TODO: enable/disable in dm as per update type.

	if (plane_state) {

		DC_LOG_DC(dc->ctx->logger,

				"Pipe:%d 0x%x: addr hi:0x%x, "

				"addr low:0x%x, "

				"src: %d, %d, %d,"

				" %d; dst: %d, %d, %d, %d;\n",

				pipe_ctx->pipe_idx,

				plane_state,

				plane_state->address.grph.addr.high_part,

				plane_state->address.grph.addr.low_part,

				plane_state->src_rect.x,

				plane_state->src_rect.y,

				plane_state->src_rect.width,

				plane_state->src_rect.height,

				plane_state->dst_rect.x,

				plane_state->dst_rect.y,

				plane_state->dst_rect.width,

				plane_state->dst_rect.height);



		DC_LOG_DC(dc->ctx->logger,

				"Pipe %d: width, height, x, y         format:%d\n"

				"viewport:%d, %d, %d, %d\n"

				"recout:  %d, %d, %d, %d\n",

				pipe_ctx->pipe_idx,

				plane_state->format,

				pipe_ctx->plane_res.scl_data.viewport.width,

				pipe_ctx->plane_res.scl_data.viewport.height,

				pipe_ctx->plane_res.scl_data.viewport.x,

				pipe_ctx->plane_res.scl_data.viewport.y,

				pipe_ctx->plane_res.scl_data.recout.width,

				pipe_ctx->plane_res.scl_data.recout.height,

				pipe_ctx->plane_res.scl_data.recout.x,

				pipe_ctx->plane_res.scl_data.recout.y);

		print_rq_dlg_ttu(dc, pipe_ctx);

	}

 Program system aperture settings

	if (dc->debug.sanity_checks) {

		dcn10_verify_allow_pstate_change_high(dc);

	}

	/* use TG master update lock to lock everything on the TG

	 * therefore only top pipe need to lock

 no reason it should take this long for immediate flips */

	/* In flip immediate and pipe splitting case, we need to use GSL

	 * for synchronization. Only do setup on locking and on flip type change.

 Exit on unchanged, unused pipe */

 Detect pipe enable/disable */

 Detect plane change */

 Detect top pipe only changes */

 Detect odm changes */

 Detect global sync changes */

	/*

	 * Detect opp / tg change, only set on change, not on enable

	 * Assume mpcc inst = pipe index, if not this code needs to be updated

	 * since mpcc is what is affected by these. In fact all of our sequence

	 * makes this assumption at the moment with how hubp reset is matched to

	 * same index mpcc reset.

	/*

	 * Detect mpcc blending changes, only dpp inst and opp matter here,

	 * mpccs getting removed/inserted update connected ones during their own

	 * programming

 Detect dppclk change */

 Check for scl update */

 Check for vp update */

 Detect dlg/ttu/rq updates */

 Detect pipe interdependent updates */

 Detect any other updates to ttu/rq/dlg */

	/* TODO: Need input parameter to tell current DCHUB pipe tie to which OTG

	 * VTG is within DCHUBBUB which is commond block share by each pipe HUBP.

	 * VTG is 1:1 mapping with OTG. Each pipe HUBP will select which VTG

 program the input csc

TODO :for CNVC set scale and bias registers if necessary

 MPCC inst is equal to pipe index in practice

 scaler configuration */

 Any updates are handled in dc interface, just need to apply existing for plane enable */

	/* Any updates are handled in dc interface, just need

 dpp/cm gamut remap*/

call the dcn2 method which uses mpc csc*/

 Only need to unblank on top pipe */

 Only update TG on top pipe */

	/* dcn10_translate_regamma_to_hw_format takes 750us to finish

	 * only do gamma programming for powering on, internal memcmp to avoid

	 * updating on slave planes

	/* If the pipe has been enabled or has a different opp, we

	 * should reprogram the fmt. This deals with cases where

	 * interation between mpc and odm combine on different streams

	 * causes a different pipe to be chosen to odm combine with.

 Carry over GSL groups in case the context is changing. */

turn off triple buffer for full update*/

 Set pipe update flags and lock pipes */

 OTG blank before disabling all front ends */

 Disconnect mpcc */

	/*

	 * Program all updated pipes, order matters for mpcc setup. Start with

	 * top pipe and program all pipes that follow in order

 Program secondary blending tree and writeback pipes */

	/*

	 * If we are enabling a pipe, we need to wait for pending clear as this is a critical

	 * part of the enable operation otherwise, DM may request an immediate flip which

	 * will cause HW to perform an "immediate enable" (as opposed to "vsync enable") which

	 * is unsupported on DCN.

 WA to apply WM setting*/

 WA for stutter underflow during MPO transitions when adding 2nd plane */

 program dchubbub watermarks */

 decrease compbuf size */

 program dchubbub watermarks */

 increase compbuf size */

 recalculate DML parameters */

 apply updated bandwidth parameters */

 update hubp configs for all pipes */

 set the OPTC source mux */

 set MCIF_WB buffer and arbitration configuration */

 Enable MCIF_WB */

 Enable DWB */

 TODO: add sequence to enable/disable warmup */

 always repeat */

 VMID cannot be 0 for vm context */

 Call Helper to track VMID use

 only 3 items below are used by unblank */

 TODO - DP2.0 HW: Set ODM mode in dp hpo encoder here */

 DPMS may already disable or */

		/* dpms_off status is incorrect due to fastboot

		 * feature. When system resume from S4 with second

		 * screen only, the dpms_off would be true but

		 * VBIOS lit up eDP, so check link status too.

 free acquired resources */

disable az_endpoint*/

free audio*/

we have to dynamic arbitrate the audio endpoints*/

we free the resource, need reset is_audio_acquired*/

	/* by upper caller loop, parent pipe: pipe0, will be reset last.

	 * back end share by all pipes and will be disable only when disable

	 * parent pipe.

 Reset Back End*/

 input to MPCC is always RGB, by default leave black_color at 0

	/*

	 * TODO: remove hack

	 * Note: currently there is a bug in init_hw such that

	 * on resume from hibernate, BIOS sets up MPCC0, and

	 * we do mpcc_remove but the mpcc cannot go to idle

	 * after remove. This cause us to pick mpcc1 here,

	 * which causes a pstate hang for yet unknown reason.

 If there is no full update, don't need to touch MPC tree*/

 check if this MPCC is already being used */

 remove MPCC if being used */

 Call MPC to insert new plane */

	/* For MST, there are multiply stream go to only one link.

	 * connect DIG back_end to front_end while enable_stream and

	 * disconnect them during disable_stream

	 * BY this, it is logic clean to separate stream and link

 enable early control to avoid corruption on DP monitor*/

 enable audio only within mode set */

 if using dynamic meta, don't set up generic infopackets */

 Initialize the dccg

Enable ability to power gate / don't force power on permanently

 Specific to FPGA dccg and registers



 Blank pixel data with OPP DPG */

 Reset all MPCC muxes */

 initialize OPP mpc_tree parameter */

dc->res_pool->opps[i]->mpc_tree_params.opp_id = dc->res_pool->opps[i]->inst;

dc->res_pool->opps[i]->mpc_tree_params.opp_list = NULL;

to do*/

 initialize DWB pointer to MCIF_WB */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* According the hardware spec, we need to poll for the lowest

	 * bit of PAGE_TABLE_BASE_ADDR_LO32 = 1 any time a GPUVM

	 * context is updated. We can't use REG_WAIT here since we

	 * don't have a seperate field to wait on.

	 *

	 * TODO: Confirm timeout / poll interval with hardware team

 VM setup timed out */

 Note: per hardware spec PAGE_TABLE_BASE_ADDR_LO32 must be programmed last in sequence */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

Temp, put CM in bypass mode

 Setting de gamma bypass for now */

	/* determine which gamut_remap coefficients (A or B) we are using

	 * currently. select the alternate set to double buffer

	 * the update so gamut_remap is updated on frame boundary

 value stored in dbg reg will be 1 greater than mode we want */

 Bypass if type is bypass or hw */

	/* determine which CSC coefficients (A or B) we are using

	 * currently.  select the alternate set to double buffer

	 * the CSC update so CSC is updated on frame boundary

program blnd lut RAM A*/

program blnd lut RAM B*/

program shaper RAM A*/

program shaper RAM B*/

/*

 * select ramA or ramB, or bypass

 * select color channel size 10 or 12 bits

 * select 3dlut size 17x17x17 or 9x9x9

/*

 * load selected lut with 10 bits color channels

/*

 * Copyright 2012-17 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 we only support 1 adapter currently */

 Set DWB source size */

 source size is not equal the source size, then enable cropping. */

 Set CAPTURE_RATE */

 Set CNV output pixel depth */

 Only chroma scaling (sub-sampling) is supported in DCN2 */

 disable power gating */

REG_UPDATE_5(WB_EC_CONFIG, DISPCLK_R_WB_GATE_DIS, 1,

			 DISPCLK_G_WB_GATE_DIS, 1, DISPCLK_G_WBSCL_GATE_DIS, 1,

			 WB_LB_LS_DIS, 1, WB_LUT_LS_DIS, 1);

 Set WB_ENABLE (not double buffered; capture not enabled) */

 Set CNV parameters */

 Set scaling parameters */

 Enable DWB capture enable (double buffered) */

 disable warmup

 disable CNV */

 disable WB */

 soft reset */

 enable power gating */

REG_UPDATE_5(WB_EC_CONFIG, DISPCLK_R_WB_GATE_DIS, 0,

			 DISPCLK_G_WB_GATE_DIS, 0, DISPCLK_G_WBSCL_GATE_DIS, 0,

			 WB_LB_LS_DIS, 0, WB_LUT_LS_DIS, 0);

 Only chroma scaling (sub-sampling) is supported in DCN2 */

	/*

	 * Check if the caller has already locked CNV registers.

	 * If so: assume the caller will unlock, so don't touch the lock.

	 * If not: lock them for this update, then unlock after the

	 * update is complete.

 Lock DWB registers */

 Set CNV parameters */

 Set scaling parameters */

 Unlock DWB registers */

 Program scaling mode */

 Program output size */

 Program round offsets */

 Program clamp values */

 Program outside pixel strategy to use edge pixels */

 horizontal scale */

 vertical scale */

 horizontal scale */

 vertical scale */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 BGAM has no ROM, and definition is different, can't reuse same dump

REG_GET(CM_BLNDGAM_CONTROL,

		CM_BLNDGAM_LUT_MODE, &s->rgam_lut_mode);

hardcode default

FORMAT_CONTROL. FORMAT_CNV16                                 	default 0: U0.16/S.1.15;         1: U1.15/ S.1.14

FORMAT_CONTROL. CNVC_BYPASS_MSB_ALIGN          				default 0: disabled              1: enabled

FORMAT_CONTROL. CLAMP_POSITIVE                               	default 0: disabled              1: enabled

FORMAT_CONTROL. CLAMP_POSITIVE_C                          	default 0: disabled              1: enabled

 ARGB16161616_UNORM */

 if input adjustments exist, program icsc with those values

compute the maximum number of lines that we can fit in the line buffer*/

 +5 to ceil */

 +5 to ceil */

 +5 to ceil */

 420 mode: using 3rd mem from Y, Cr and Cb */

 todo: clarify what to program these to */

0x1404*/

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Object I/F functions */

 Macro definitios for REG_SET macros*/

 API functions (external or via structure->function_pointer) */

/* This returns the capabilities for a single DSC encoder engine. Number of slices and total throughput

 * can be doubled, tripled etc. by using additional DSC engines.

 v1.2 - DP spec defined it in reverse order and we kept it */

	/* Maximum total throughput with all the slices combined. This is different from how DP spec specifies it.

	 * Our decoder's total throughput in Pix/s is equal to DISPCLK. This is then shared between slices.

	 * The value below is the absolute maximum value. The actual throughput may be lower, but it'll always

	 * be sufficient to process the input pixel rate fed into a single DSC engine.

	/* For pixel clock bigger than a single-pipe limit we'll need two engines, which then doubles our

	 * throughput and number of slices, but also introduces a lower limit of 2 slices

 TODO DSC: This is actually image width limitation, not a slice width. This should be added to the criteria to use ODM.

 (including 64 overlap pixels for eDP MSO mode) */

 1/16th of a bit */

/* this function read dsc related register fields to be logged later in dcn10_log_hw_state

 * into a dcn_dsc_state struct.

 This module's internal functions */

 DC_LOG_DSC("\trc_parameter_set %d", pps->rc_parameter_set); */

 Validate input parameters */

 6.0 <= bits_per_pixel <= 63.9375

 v1.1 line buffer depth range:

 v1.2 line buffer depth range:

 Copy input config */

 TODO: in addition to validating slice height (pic height must be divisible by slice height),

 see what happens when the same condition doesn't apply for slice_width/pic_width.

 NOTE: We don't support DSC_PIXFMT_SIMPLE_YCBCR422 */

 Non-PPS values */

reg_vals->disable_ich                 = 0;*/

 PPS values */

/* Updates dsc_reg_values::reg_vals::xxx fields based on the values from computed params.

 * This is required because dscc_compute_dsc_parameters returns a modified PPS, which in turn

 * affects non-PPS register values.

 pps_computed will have the "expanded" values; need to shift them to make them fit for regs.

 dsccif registers

 dscc registers

	/*REG_SET_2(DSCC_CONFIG1, 0,

		DSCC_RATE_CONTROL_BUFFER_MODEL_SIZE, reg_vals->rc_buffer_model_size,

/*

 * Copyright 2012-2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 The format of default addr is 48:12 of the 48 bit addr

 The format of high/low are 48:18 of the 48 bit addr

 1 = system physical memory */

 DLG - Per hubp */

 DLG - Per luma/chroma */

 TTU - per hubp */

 TTU - per luma/chroma */

 Assumed surf0 is luma and 1 is chroma */

 disable_dlg_test_mode Set 9th bit to 1 to disable "dv" mode */

	/*

	if (VSTARTUP_START - (VREADY_OFFSET+VUPDATE_WIDTH+VUPDATE_OFFSET)/htotal)

	<= OTG_V_BLANK_END

		Set HUBP_VREADY_AT_OR_AFTER_VSYNC = 1

	else

		Set HUBP_VREADY_AT_OR_AFTER_VSYNC = 0

	/* otg is locked when this func is called. Register are double buffered.

	 * disable the requestors is not needed

/* DCN2 (GFX10), the following GFX fields are deprecated. They can be set but they will not be used:

 *	NUM_BANKS

 *	NUM_SE

 *	NUM_RB_PER_SE

 *	RB_ALIGNED

 * Other things can be defaulted, since they never change:

 *	PIPE_ALIGNED = 0

 *	META_LINEAR = 0

 * In GFX10, only these apply:

 *	PIPE_INTERLEAVE

 *	NUM_PIPES

 *	MAX_COMPRESSED_FRAGS

 *	SW_MODE

	/* Program data and meta surface pitch (calculation from addrlib)

	 * 444 or 420 luma

 Chroma pitch zero can cause system hang! */

 Program rotation angle and horz mirror - no mirror */

 swap for ABGR format */

 Mapping is same as ipp programming (cnvc) */

we use crossbar already*/

 ARGB16161616_UNORM */

we use crossbar already*/

 don't see the need of program the xbar in DCN 1.0 */

 no shift of the cursor HDL schedule */

 used to shift the cursor chunk request deadline */

 set to HW mode */

 for DMDATA flip, need to use SURFACE_UPDATE_LOCK */

 toggle DMDATA_UPDATED and set repeat and size */

 set DMDATA address */

 set to SW mode before loading data */

 toggle DMDATA_SW_UPDATED to start loading sequence */

 load data into hubp dmdata buffer */

 Note that DL_DELTA must be programmed if we want to use TTU mode */

 load dmdata into HUBP buffer in SW mode */

program flip type

 Program VMID reg

 turn off stereo if not in stereo

	/* HW automatically latch rest of address register on write to

	 * DCSURF_PRIMARY_SURFACE_ADDRESS if SURFACE_UPDATE_LOCK is not used

	 *

	 * program high first and then the low addr, order matters!

		/* DCN1.0 does not support const color

		 * TODO: program DCHUBBUB_RET_PATH_DCC_CFGx_0/1

		 * base on address->grph.dcc_const_color

		 * x = 0, 2, 4, 6 for pipe 0, 1, 2, 3 for rgb and luma

		 * x = 1, 3, 5, 7 for pipe 0, 1, 2, 3 for chroma

			/* init sequence workaround: in case HUBP is

			 * power gated, this wait would timeout.

			 *

			 * we just wrote reg_val to non-0, if it stay 0

			 * it means HUBP is gated

	/*

	 * Guard aganst cursor_set_position() from being called with invalid

	 * attributes

	 *

	 * TODO: Look at combining cursor_set_position() and

	 * cursor_set_attributes() into cursor_update()

 Rotated cursor width/height and hotspots tweaks for offset calculation

 not visible beyond right edge*/

 not visible beyond left edge*/

 not visible beyond bottom edge*/

 not visible beyond top edge*/

 TODO Handle surface pixel formats other than 4:4:4 */

 Requester */

 DLG - Per hubp */

 DLG - Per luma/chroma */

 TTU - per hubp */

 TTU - per luma/chroma */

 Assumed surf0 is luma and 1 is chroma */

 Rest of hubp */

 Requestor Regs */

 DLG - Per hubp */

 DLG - Per luma/chroma */

 TTU - per hubp */

 TTU - per luma/chroma */

 Assumed surf0 is luma and 1 is chroma */

/*

 * Copyright 2012-17 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 should never happen, bug */

 Even tap coefficient (bits 1:0 fixed to 0) */

 Write/read control for even coefficient */

 Odd tap coefficient (bits 1:0 fixed to 0) */

 Write/read control for odd coefficient */

Calculate ratio*/

Program ratio*/

 Program taps*/

 Calculate phase*/

 Program phase*/

 Program LUT coefficients*/

Calculate ratio*/

Program ratio*/

 Program taps*/

 Calculate phase*/

 Program phase*/

 Program LUT coefficients*/

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 DML: get_bytes_per_element */

 copied from DML.  might want to refactor DML to leverage from DML */

 DML : get_blk256_size */

 full 256B request */

 half 128b request */

 full 256B request */

 half 128b request */

 implement section 1.6.2.1 of DCN1_Programming_Guide.docx */

 access_dir not known, must use most constraining */

			/* reg128 is true for either horz and vert

			 * but segment_order is contiguous

 Exception for 64KB_R_X */

 Init VMID 0 based on PA config

For ZFB case need to put DCHUB FB BASE and TOP upside down to indicate ZFB mode*/

This field defines the 24 MSBs, bits [47:24] of the 48 bit AGP Base*/

This field defines the bottom range of the AGP aperture and represents the 24*/

MSBs, bits [47:24] of the 48 address bits*/

This field defines the top range of the AGP aperture and represents the 24*/

MSBs, bits [47:24] of the 48 address bits*/

Should not touch FB LOCATION (done by VBIOS on AsicInit table)*/

This field defines the 24 MSBs, bits [47:24] of the 48 bit AGP Base*/

This field defines the bottom range of the AGP aperture and represents the 24*/

MSBs, bits [47:24] of the 48 address bits*/

This field defines the top range of the AGP aperture and represents the 24*/

MSBs, bits [47:24] of the 48 address bits*/

Should not touch FB LOCATION (should be done by VBIOS)*/

This field defines the 24 MSBs, bits [47:24] of the 48 bit AGP Base*/

This field defines the bottom range of the AGP aperture and represents the 24*/

MSBs, bits [47:24] of the 48 address bits*/

This field defines the top range of the AGP aperture and represents the 24*/

MSBs, bits [47:24] of the 48 address bits*/

 DC hub reference frequency must be around 50Mhz, otherwise there may be

 overflow/underflow issues when doing HUBBUB programming

 HUBBUB global timer must be enabled.

	/*

	 * Need to clamp to max of the register values (i.e. no wrap)

	 * for dcn1, all wm registers are 21-bit wide

	/*

	 * There's a special case when going from p-state support to p-state unsupported

	 * here we are going to LOWER watermarks to go to dummy p-state only, but this has

	 * to be done prepare_bandwidth, not optimize

 164KB for DCN2.0 */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 phase / modulo = dpp pipe clk / dpp global clk

 use FF at the end

 DCN20 has never been validated for non-xtalin as reference

 frequency.  There's actually no way for DC to determine what

 frequency a non-xtalin source is.

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 not valid used case! */

	/* determine which CSC coefficients (A or B) we are using

	 * currently.  select the alternate set to double buffer

	 * the CSC update so CSC is updated on frame boundary

	/* determine which CSC coefficients (A or B) we are using

	 * currently.  select the alternate set to double buffer

	 * the CSC update so CSC is updated on frame boundary

hw fixed in new review*/

		/*this will only work if OTG is locked.

		 *if we were to support OTG unlock case,

		 *the workaround will be more complex

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 color ramp generator mixes 16-bits color */

 requested bpc */

	/* RGB values of the color bars.

	 * Produce two RGB colors: RGB0 - white (all Fs)

	 * and RGB1 - black (all 0s)

	 * (three RGB components for two colors)

 dest color (converted to the specified color format) */

 translate to bit depth */

 set DPG dimentions */

 set DPG offset */

 adjust color to the required colorFormat */

			/* dst = 2^dstBpc * src / 2^srcBpc = src >>

			 * (srcBpc - dstBpc);

		/* DPG_COLOUR registers are 16-bit MSB aligned value with bits 3:0 hardwired to ZERO.

		 * XXXXXXXXXX000000 for 10 bit,

		 * XXXXXXXX00000000 for 8 bit,

		 * XXXXXX0000000000 for 6 bits

 enable test pattern */

		/* increment for the first ramp for one color gradation

		 * 1 gradation for 6-bit color is 2^10

		 * gradations in 16-bit color

 enable test pattern */

 16-bit MSB aligned value. Bits 3:0 of this field are hardwired to ZERO */

	/* Specifies the number of extra left edge pixels that are supplied to

	 * the 422 horizontal chroma sub-sample filter.

	 * Note that when left edge pixel is not "0", fmt pixel encoding can be in either 420 or 422 mode

****************************************/

 Constructor, Destructor               */

****************************************/

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/**

 * Enable CRTC

 * Enable CRTC - call ASIC Control Object to enable Timing generator.

	/* TODO FPGA wait for answer

	 * OTG_MASTER_UPDATE_MODE != CRTC_MASTER_UPDATE_MODE

	 * OTG_MASTER_UPDATE_LOCK != CRTC_MASTER_UPDATE_LOCK

	/* opp instance for OTG. For DCN1.0, ODM is remoed.

	 * OPP and OPTC should 1:1 mapping

 VTG enable first is for HW workaround */

 Enable CRTC */

/**

 * DRR double buffering control to select buffer point

 * for V_TOTAL, H_TOTAL, VTOTAL_MIN, VTOTAL_MAX, VTOTAL_MIN_SEL and VTOTAL_MAX_SEL registers

 * Options: anytime, start of frame, dp start of frame (range timing)

/**

 *For the below, I'm not sure how your GSL parameters are stored in your env,

 * so I will assume a gsl_params struct for now

/**

 * There are (MAX_OPTC+1)/2 gsl groups available for use.

 * In each group (assign an OTG to a group by setting OTG_GSLX_EN = 1,

 * set one of the OTGs to be the master (OTG_GSL_MASTER_EN = 1) and the rest are slaves.

 Use the gsl allow flip as the master update lock */

 You can control the GSL timing by limiting GSL to a window (X,Y) */

 DSC encoder frame start controls: x = h position, line_num = # of lines from vstartup */

/* Set DSC-related configuration.

 *   dsc_mode: 0 disables DSC, other values enable DSC in specified format

 *   sc_bytes_per_pixel: Bytes per pixel in u3.28 format

 *   dsc_slice_width: Slice width in pixels

TEMP: Need to figure out inheritance model here.*/

	/* TODO: In pseudocode but does not affect maximus, delete comment if we dont need on asic

	 * REG_SET(OTG_GLOBAL_CONTROL2, 0, GLOBAL_UPDATE_LOCK_EN, 1);

	 * Program OTG register MASTER_UPDATE_LOCK_DB_X/Y to the position before DP frame start

	 * REG_SET_2(OTG_GLOBAL_CONTROL1, 0,

	 *		MASTER_UPDATE_LOCK_DB_X, 160,

	 *		MASTER_UPDATE_LOCK_DB_Y, 240);

	/* 2 pieces of memory required for up to 5120 displays, 4 for up to 8192,

	 * however, for ODM combine we can simplify by always using 4.

	 * To make sure there's no overlap, each instance "reserves" 2 memories and

	 * they are uniquely combined here.

 Work around VBIOS not updating OPTC_NUM_OF_INPUT_SEGMENT */

 accessing slave OTG registers */

 disable slave OTG */

 wait until disabled */

 assign slave OTG to be controlled by master update lock */

 accessing master OTG registers */

 saving update lock state, not sure if it's needed */

 unlocking master OTG */

 calculate when to enable slave OTG */

	/*

	 * set master OTG to unlock when V/H

	 * counters reach calculated values

 lock master OTG */

 accessing slave OTG registers */

	/*

	 * enable slave OTG, the OTG is locked with

	 * master's update lock, so it will not run

 accessing master OTG registers */

	/*

	 * unlock master OTG. When master H/V counters reach

	 * DB_XY point, slave OTG will start

 accessing slave OTG registers */

 wait for slave OTG to start running*/

 accessing master OTG registers */

 disable the XY point*/

restore master update lock*/

 accessing slave OTG registers */

 restore slave to be controlled by it's own */

 used by enable_timing_synchronization. Not need for FPGA */

 used by enable_timing_synchronization. Not need for FPGA */

	Minimum HSYNC = 8 pixels asked By HW in the first place for no actual reason. Oculus Rift S will not light up with 8 as it's hsyncWidth is 6. Changing it to 4 to fix that issue.

/*

* Copyright 2016 Advanced Micro Devices, Inc.

 * Copyright 2019 Raptor Engineering, LLC

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *







 SRExitTime

todo







 SRExitTime

 Defaults that get patched on driver load from firmware. */

Extra state, no dispclk ramping*/

Extra state, no dispclk ramping*/

/* begin *********************

 DCN */

 TODO awful hack. fixup dcn20_dwb.h */

 NBIO */

 MMHUB */

upto 5K*/

	/* Links supporting dynamically assigned link encoder will be assigned next

	 * available encoder if one not already assigned.

 TODO: un-hardcode*/

 TODO - DP2.0 HW: calculate requested_sym_clk for UHBR rates */

 If this ASSERT fails, dsc was not released properly */

 Always do 1-to-1 mapping when number of DSCs is same as number of pipes */

 Return old DSC to avoid the need for re-programming */

 Find first free DSC */

 Get a DSC if required and available */

 The number of DSCs can be less than the number of pipes */

 Get a DSC if required and available */

 Not supported */

 HACTIVE halved for odm combine */

 Calculate new vp and recout for left pipe */

 Need at least 16 pixels width per side */

 Calculate new vp and recout for right pipe */

 HACTIVE halved for odm combine */

 Need at least 16 pixels width per side */

		/* todo:

		pipes[pipe_cnt].pipe.src.dynamic_metadata_enable = 0;

		pipes[pipe_cnt].pipe.src.dcc = 0;

 todo: rotation?*/

 1/2 vblank */

 36 bytes dp, 32 hdmi */

 Treat 4to1 mpc combine as an mpo of 2 2-to-1 combines */

 In case there is no signal, set dp with 4 lanes to allow max config */

 todo: default max for now, until there is logic reflecting this in dc*/

fill up the audio sample rate (unit in kHz)*/

		/*

		 * For graphic plane, cursor number is 1, nv12 is 0

		 * bw calculations due to cursor on/off

vp_width/hratio*/

vp_height/vratio*/

when is_hsplit != 1*/

when is_hsplit != 1*/

Lb only or Full scl*/

 stereo is not split */

Lb only or Full scl*/

support always scale*/

 populate writeback information */

 two memory piece for luma */

 two memory piece for chroma */

 packed mode */

 p010 */

 there is 4bit fraction */

 Writeback MCIF_WB arbitration parameters */

wb_arb_params = &context->res_ctx.pipe_ctx[i].stream->writeback_info[j].mcif_arb_params;

 4 bit fraction, ms */

 assume 4 watermark sets have the same value */

 Validate DSC config, dsc count validation is already done */

 Only need to validate top pipe */

		/* first check the prev dc state:

		 * if this primary pipe has a bottom pipe in prev. state

		 * and if the bottom pipe is still available (which it should be),

		 * pick that pipe as secondary

		 * Same logic applies for ODM pipes

		/*

		 * if this primary pipe does not have a bottom pipe in prev. state

		 * start backward and find a pipe that did not used to be a bottom pipe in

		 * prev. dc state. This way we make sure we keep the same assignment as

		 * last state and will not have to reprogram every pipe

		/*

		 * We should never hit this assert unless assignments are shuffled around

		 * if this happens we will prob. hit a vsync tdr

		/*

		 * search backwards for the second pipe to keep pipe

		 * assignment more consistent

 merge previously split odm pipes since mode support needs to make the decision */

 Clear plane_res and stream_res */

 merge previously mpc split pipes since mode support needs to make the decision */

 Clear plane_res and stream_res */

		/**

		 * Workaround for avoiding pipe-split in cases where we'd split

		 * planes that are too small, resulting in splits that aren't

		 * valid for the scaler.

 TODO: fix dc bugs and remove this split threshold thing */

 W/A: Mode timing with borders may not work well with pipe split, avoid for this corner case */

 Avoid split loop looks for lowest voltage level that allows most unsplit pipes possible */

 Impossible to not split this pipe */

 Split loop sets which pipe should be split based on dml outputs and dc flags */

420 format workaround*/

If need split for mpc but 2 way split already*/

 2 -> 4 MPC */

 2 -> 2 MPC */

 2 -> 1 MPC */

If need split for mpc but 4 way split already*/

 4 -> 2 MPC */

 4 -> 1 MPC */

 ODM -> MPC transition */

If need split for odm but 2 way split already*/

 2 -> 4 ODM */

 2 -> 2 ODM */

 NOT expected yet */

 exit ODM */

If need split for odm but 4 way split already*/

 NOT expected yet */

 4 -> 2 ODM */

 NOT expected yet */

 exit ODM */

 MPC -> ODM transition */

 NOT expected yet */

 Adjust dppclk when split is forced, do not bother with dispclk */

initialize pipe_just_split_from to invalid idx*/

 Skip 2nd half of already split pipe */

 We do not support mpo + odm at the moment */

 pipe not split previously needs split */

 merge should already have been done */

 Actual dsc count per stream dsc validation*/

 only pipe 0 is read for voltage and dcf/soc clocks */

	/*

	 * Zstate is allowed in following scenarios:

	 * 	1. Single eDP with PSR enabled

	 * 	2. 0 planes (No memory requests)

	 * 	3. Single eDP without PSR but > 5ms stutter period

 Writeback MCIF_WB arbitration parameters */

save a original dppclock copy*/

/*

 * This must be noinline to ensure anything that deals with FP registers

 * is contained within this call; previously our compiling with hard-float

 * would result in fp instructions being emitted outside of the boundaries

 * of the DC_FP_START/END macros, which makes sense as the compiler has no

 * idea about what is wrapped and what is not

 *

 * This is largely just a workaround to avoid breakage introduced with 5.6,

 * ideally all fp-using code should be moved into its own file, only that

 * should be compiled with hard-float, and all code exported from there

 * should be strictly wrapped with DC_FP_START/END

Unsafe due to current pipe merge and split logic*/

 Best case, we support full UCLK switch latency

 Fallback: Try to only support G6 temperature read latency

 ERROR: fallback is supposed to always work.

 First pass - cap all clocks higher than the reported max

 Second pass - remove all duplicate clock states

 Accounting for SOC/DCF relationship, we can go as high as

 506Mhz in Vmin.

 FCLK:UCLK ratio is 1.08

 Duplicate the last state, DML always an extra state identical to max state to work

 NV14 */

 NV12 and NV10 */

			/* SMU cannot set DCF clock to anything equal to or higher than SOC clock

	/*************************************************

	 *  Resource + asic cap harcoding                *

1.4 w/a not applied by default*/

 Color pipeline capabilities */

 no OGAM ROM on DCN2, only MPC ROM

dcn2.0x

 Init the vm_helper

	/*************************************************

	 *  Create resources                             *

 todo: not reuse phy_pll registers */

 Notify PP Lib/SMU which Watermarks to use for which clock ranges */

 mem input -> ipp -> dpp -> opp -> TG */

 IF NV12, set PG function pointer to NULL. It's not that

 PG isn't supported for NV12, it's that we don't want to

 program the registers because that will cause more power

 to be consumed. We could have created dcn20_init_hw to get

 the same effect by checking ASIC rev, but there was a

 request at some point to not check ASIC rev on hw sequencer.

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* wbif programming guide:

 * 1. set up wbif parameter:

 *    unsigned long long   luma_address[4];       //4 frame buffer

 *    unsigned long long   chroma_address[4];

 *    unsigned int	   luma_pitch;

 *    unsigned int	   chroma_pitch;

 *    unsigned int         warmup_pitch=0x10;     //256B align, the page size is 4KB when it is 0x10

 *    unsigned int	   slice_lines;           //slice size

 *    unsigned int         time_per_pixel;        // time per pixel, in ns

 *    unsigned int         arbitration_slice;     // 0: 512 bytes 1: 1024 bytes 2: 2048 Bytes

 *    unsigned int         max_scaled_time;       // used for QOS generation

 *    unsigned int         swlock=0x0;

 *    unsigned int         cli_watermark[4];      //4 group urgent watermark

 *    unsigned int         pstate_watermark[4];   //4 group pstate watermark

 *    unsigned int         sw_int_en;             // Software interrupt enable, frame end and overflow

 *    unsigned int         sw_slice_int_en;       // slice end interrupt enable

 *    unsigned int         sw_overrun_int_en;     // overrun error interrupt enable

 *    unsigned int         vce_int_en;            // VCE interrupt enable, frame end and overflow

 *    unsigned int         vce_slice_int_en;      // VCE slice end interrupt enable, frame end and overflow

 *

 * 2. configure wbif register

 *    a. call mmhubbub_config_wbif()

 *

 * 3. Enable wbif

 *    call set_wbif_bufmgr_enable();

 *

 * 4. wbif_dump_status(), option, for debug purpose

 *    the bufmgr status can show the progress of write back, can be used for debug purpose

 sw lock buffer0~buffer3, default is 0 */

 buffer address for packing mode or Luma in planar mode */

 right eye sub-buffer address offset for packing mode or Luma in planar mode */

 buffer address for Chroma in planar mode (unused in packing mode) */

 right eye offset for packing mode or Luma in planar mode */

 buffer address for packing mode or Luma in planar mode */

 right eye sub-buffer address offset for packing mode or Luma in planar mode */

 buffer address for Chroma in planar mode (unused in packing mode) */

 right eye offset for packing mode or Luma in planar mode */

 buffer address for packing mode or Luma in planar mode */

 right eye sub-buffer address offset for packing mode or Luma in planar mode */

 buffer address for Chroma in planar mode (unused in packing mode) */

 right eye offset for packing mode or Luma in planar mode */

 buffer address for packing mode or Luma in planar mode */

 right eye sub-buffer address offset for packing mode or Luma in planar mode */

 buffer address for Chroma in planar mode (unused in packing mode) */

 right eye offset for packing mode or Luma in planar mode */

	/* setup luma & chroma size

	 * should be enough to contain a whole frame Luma data,

	 * the programmed value is frame buffer size [27:8], 256-byte aligned

 enable address fence */

 setup pitch, the programmed value is [15:8], 256B align */

 Set pitch for MC cache warm up mode */

 Pitch is 256 bytes aligned. The default pitch is 4K */

 default is 0x10 */

 Programmed by the video driver based on the CRTC timing (for DWB) */

 Programming dwb watermark */

 Watermark to generate urgent in MCIF_WB_CLI, value is determined by MCIF_WB_CLI_WATERMARK_MASK. */

 Program in ns. A formula will be provided in the pseudo code to calculate the value. */

 urgent_watermarkA */

 urgent_watermarkB */

 urgent_watermarkC */

 urgent_watermarkD */

 Programming nb pstate watermark */

 nbp_state_change_watermarkA */

 nbp_state_change_watermarkB */

 nbp_state_change_watermarkC */

 nbp_state_change_watermarkD */

 max_scaled_time */

 slice_lines */

 Set arbitration unit for Luma/Chroma */

 arb_unit=2 should be chosen for more efficiency */

 Arbitration size, 0: 512 bytes 1: 1024 bytes 2: 2048 Bytes */

 Set interrupt mask */

 Enable Mcifwb */

 disable buffer manager */

 set which group of pstate watermark to use and set wbif watermark change request */

/*

static void mmhubbub2_wbif_watermark_change_req(struct mcif_wb *mcif_wb, unsigned int wm_set)

{

	struct dcn20_mmhubbub *mcif_wb20 = TO_DCN20_MMHUBBUB(mcif_wb);

	uint32_t change_req;



	REG_GET(SMU_WM_CONTROL, MCIF_WB0_WM_CHG_REQ, &change_req);

	change_req = (change_req == 0) ? 1 : 0;

	REG_UPDATE(SMU_WM_CONTROL, MCIF_WB0_WM_CHG_SEL, wm_set);

	REG_UPDATE(SMU_WM_CONTROL, MCIF_WB0_WM_CHG_REQ, change_req);

}

 Set watermark change interrupt disable bit */

/*

static void mmhubbub2_set_wbif_watermark_change_int_disable(struct mcif_wb *mcif_wb, unsigned int ack_int_dis)

{

	struct dcn20_mmhubbub *mcif_wb20 = TO_DCN20_MMHUBBUB(mcif_wb);



	REG_UPDATE(SMU_WM_CONTROL, MCIF_WB0_WM_CHG_ACK_INT_DIS, ack_int_dis);

}

 Read watermark change interrupt status */

/*

unsigned int mmhubbub2_get_wbif_watermark_change_int_status(struct mcif_wb *mcif_wb)

{

	struct dcn20_mmhubbub *mcif_wb20 = TO_DCN20_MMHUBBUB(mcif_wb);

	uint32_t irq_status;



	REG_GET(SMU_WM_CONTROL, MCIF_WB0_WM_CHG_ACK_INT_STATUS, &irq_status);

	return irq_status;

}

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 RBR

 HBR

HBR2

HBR3

/* this function reads dsc related register fields to be logged later in dcn10_log_hw_state

 * into a dcn_dsc_state struct.

 in usb c dp2 mode, max lane count is 2 */

 if value == 1 alt mode is disabled, otherwise it is enabled */

/*

	00 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__1to2 : 1/2

	01 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__3to4 : 3/4

	02 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__7to8 : 7/8

	03 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__15to16 : 15/16

	04 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__31to32 : 31/32

	05 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__63to64 : 63/64

	06 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__127to128 : 127/128

	07 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__255to256 : 255/256

/*

	AUX_REG_UPDATE_5(AUX_DPHY_RX_CONTROL0,

	AUX_RX_START_WINDOW = 1 [6:4]

	AUX_RX_RECEIVE_WINDOW = 1 default is 2 [10:8]

	AUX_RX_HALF_SYM_DETECT_LEN  = 1 [13:12] default is 1

	AUX_RX_TRANSITION_FILTER_EN = 1 [16] default is 1

	AUX_RX_ALLOW_BELOW_THRESHOLD_PHASE_DETECT [17] is 0  default is 0

	AUX_RX_ALLOW_BELOW_THRESHOLD_START [18] is 1  default is 1

	AUX_RX_ALLOW_BELOW_THRESHOLD_STOP [19] is 1  default is 1

	AUX_RX_PHASE_DETECT_LEN,  [21,20] = 0x3 default is 3

	AUX_RX_DETECTION_THRESHOLD [30:28] = 1

AUX_DPHY_TX_REF_CONTROL'AUX_TX_REF_DIV HW default is 0x32;

 Set AUX_TX_REF_DIV Divider to generate 2 MHz reference from refclk

 27MHz -> 0xd

 100MHz -> 0x32

 48MHz -> 0x18

 Set TMDS_CTL0 to 1.  This is a legacy setting.

	/* set the flag to indicate whether driver poll the I2C data pin

	 * while doing the DP sink detect

/*	if (dal_adapter_service_is_feature_supported(as,

		FEATURE_DP_SINK_DETECT_POLL_DATA_PIN))

		enc10->base.features.flags.bits.

	/* For DCE 8.0 and 8.1, by design, UNIPHY is hardwired to DIG_BE.

	 * SW always assign DIG_FE 1:1 mapped to DIG_FE for non-MST UNIPHY.

	 * SW assign DIG_FE to non-MST UNIPHY first and MST last. So prefer

	 * DIG is per UNIPHY and used by SST DP, eDP, HDMI, DVI and LVDS.

	 * Prefer DIG assignment is decided by board design.

	 * For DCE 8.0, there are only max 6 UNIPHYs, we assume board design

	 * and VBIOS will filter out 7 UNIPHY for DCE 8.0.

	 * By this, adding DIGG should not hurt DCE 8.0.

	 * This will let DCE 8.1 share DCE 8.0 as much as possible

 default to one to mirror Windows behavior */

 Override features with DCE-specific values */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

		/* enable transmission of packet(s) -

 send packet(s) every frame */

 select line number to send packets on */

 DP_SEC_GSP[x]_LINE_REFERENCE - keep default value REFER_TO_DP_SOF */

 choose which generic packet control to use */

 invalid HW packet index */

 for bring up, disable dp double  TODO */

Always add mandatory packets first followed by optional ones*/

 stop generic packets 0,1 on HDMI */

 stop generic packets 2,3 on HDMI */

 stop generic packets 4,5 on HDMI */

 stop generic packets 6,7 on HDMI */

 Update GSP7 SDP 128 byte long */

	/* TODOFPGA Figure out a proper number for max_retries polling for lock

	 * use 50 for now.

 Configure for PPS packet size (128 bytes) */

 We need turn on clock before programming AFMT block*/

	/* Poll dig_update_lock is not locked -> asic internal signal

	 * assumes otg master lock will unlock it

REG_WAIT(AFMT_VBI_PACKET_CONTROL, AFMT_GENERIC_LOCK_STATUS, 0, 10, max_retries);*/

 Wait for HW/SW GSP memory access conflict to go away */

 Clear HW/SW memory access conflict flag */

 write generic packet header */

	/* Write generic packet content 128 bytes long. Four sets are used (indexes 7

	 * through 10) to fit 128 bytes.

/* Set DSC-related configuration.

 *   dsc_mode: 0 disables DSC, other values enable DSC in specified format

 *   sc_bytes_per_pixel: Bytes per pixel in u3.28 format

 *   dsc_slice_width: Slice width in pixels

 Load PPS into infoframe (SDP) registers */

 Enable Generic Stream Packet 7 (GSP) transmission */

REG_UPDATE(DP_SEC_CNTL,

	DP_SEC_GSP7_ENABLE, 1);

		/* SW should make sure VBID[6] update line number is bigger

		 * than PPS transmit line number

		/* Send PPS data at the line number specified above.

		 * DP spec requires PPS to be sent only when it changes, however since

		 * decoder has to be able to handle its change on every frame, we're

		 * sending it always (i.e. on every frame) to reduce the chance it'd be

		 * missed by decoder. If it turns out required to send PPS only when it

		 * changes, we can use DP_SEC_GSP7_SEND register.

 Disable Generic Stream Packet 7 (GSP) transmission */

/* this function read dsc related register fields to be logged later in dcn10_log_hw_state

 * into a dcn_dsc_state struct.

if dsc is enabled, continue to read

/* Set Dynamic Metadata-configuration.

 *   enable_dme:         TRUE: enables Dynamic Metadata Enfine, FALSE: disables DME

 *   hubp_requestor_id:  HUBP physical instance that is the source of dynamic metadata

 *                       only needs to be set when enable_dme is TRUE

 *   dmdata_mode:        dynamic metadata packet type: DP, HDMI, or Dolby Vision

 *

 *   Ensure the OTG master update lock is set when changing DME configuration.

		/* Use default line reference DP_SOF for bringup.

		 * Should use OTG_SOF for DRR cases

 check if dynamic metadata packet transmission is enabled */

 YCbCr 4:2:0 : Computed VID_M will be 2X the input rate */

this logic should be the same in get_pixel_clock_parameters() */

		/* M / N = Fstream / Flink

		 * m_vid / n_vid = pixel rate / link rate

 enable auto measurement */

		/* auto measurement need 1 full 0x8000 symbol cycle to kick in,

		 * therefore program initial value for Mvid and Nvid

 make sure stream is disabled before resetting steer fifo */

 set DIG_START to 0x1 to reset FIFO */

 write 0 to take the FIFO out of reset */

	/* switch DP encoder to CRTC data, but reset it the fifo first. It may happen

	 * that it overflows during mode transition, and sometimes doesn't recover.

	/* wait 100us for DIG/DP logic to prime

	 * (i.e. a few video lines)

	/* the hardware would start sending video at the start of the next DP

	 * frame (i.e. rising edge of the vblank).

	 * NOTE: We used to program DP_VID_STREAM_DIS_DEFER = 2 here, but this

	 * register has no effect on enable transition! HW always guarantees

	 * VID_STREAM enable at start of next frame, and this is not

	 * programmable

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 ?

 ?

 ?

 writeback_line_buffer_buffer_size = 656640

 SRExitTime

 TODO: set this to actual min DCFCLK */

 ?

 ?

 ?

upto 8K*/

 -1 = disable,

 -1 = disable

 6:1 downscaling ratio: 1000/6 = 166.666 */

 NBIO */

 DCN */

 Mapping of VPG, AFMT, DME register blocks to DIO block instance */

 If max DCFCLK is greater than the max DCFCLK STA target, insert into the DCFCLK STA target array */

 If max DCFCLK is less than the max DCFCLK STA target, cap values and remove duplicates */

 Update size of array since we "removed" duplicates */

 Calculate optimal dcfclk for each uclk */

 Calculate optimal uclk for each dcfclk sta target */

 create the final dcfclk and uclk table */

 Fill all states with max values of all other clocks */

 Populate from bw_params for DTBCLK, SOCCLK */

 These clocks cannot come from bw_params, always fill from dcn3_02_soc[1] */

 FCLK, PHYCLK_D18, DSCCLK */

 re-init DML with updated bb */

	/*************************************************

	 *  Resource + asic cap harcoding                *

1.4 w/a applied by derfault*/

 total size = mall per channel * num channels * 1024 * 1024 */

 Color pipeline capabilities */

 must use gamma_corr

 no OGAM ROM on DCN3

3

 Init the vm_helper

	/*************************************************

	 *  Create resources                             *

 Clock Sources for Pixel Clock*/

 todo: not reuse phy_pll registers */

 DCCG */

 PP Lib and SMU interfaces */

 DML */

 IRQ */

 HUBBUB */

 HUBPs, DPPs, OPPs and TGs */

 PSR */

 ABMs */

 MPC and DSC */

 DWB and MMHUBBUB */

 AUX and I2C */

 Audio, Stream Encoders including HPO and virtual, MPC 3D LUTs */

 HW Sequencer and Plane caps */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 DPP0 */

 DPP1 */

 DPP2 */

 DPP3 */

 DPP4 */

 DCHUBP0 */

 DCHUBP1 */

 DCHUBP2 */

 DCHUBP3 */

 DCHUBP4 */

 DSC0 */

 DSC1 */

 DSC2 */

 DSC3 */

 DSC4 */

/*

* Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

* Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* begin *********************

 DCN */

 NBIO */

 MMHUB */

	/*************************************************

	 *  Resource + asic cap harcoding                *

1.5 w/a applied by default*/

 Color pipeline capabilities */

 no OGAM ROM on DCN2

a0 only, remove later*/

	/*************************************************

	 *  Create resources                             *

 todo: not reuse phy_pll registers */

 mem input -> ipp -> dpp -> opp -> TG */

/*

 * Copyright 2012-17 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

TEMP: Need to figure out inheritance model here.*/

	/* Check maximum number of pixels supported by Timing Generator

	 * (Currently will never fail, in order to fail needs display which

	 * needs more than 8192 horizontal and

	 * more than 8192 vertical total pixels)

 used by enable_timing_synchronization. Not need for FPGA */

 used by enable_timing_synchronization. Not need for FPGA */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

limit to combo_phy*/

 if value == 1 alt mode is disabled, otherwise it is enabled

	/* set the flag to indicate whether driver poll the I2C data pin

	 * while doing the DP sink detect

	/* if (dal_adapter_service_is_feature_supported(as,

	 * FEATURE_DP_SINK_DETECT_POLL_DATA_PIN))

	 * enc10->base.features.flags.bits.

	 * DP_SINK_DETECT_POLL_DATA_PIN = true;

	/* For DCE 8.0 and 8.1, by design, UNIPHY is hardwired to DIG_BE.

	 * SW always assign DIG_FE 1:1 mapped to DIG_FE for non-MST UNIPHY.

	 * SW assign DIG_FE to non-MST UNIPHY first and MST last. So prefer

	 * DIG is per UNIPHY and used by SST DP, eDP, HDMI, DVI and LVDS.

	 * Prefer DIG assignment is decided by board design.

	 * For DCE 8.0, there are only max 6 UNIPHYs, we assume board design

	 * and VBIOS will filter out 7 UNIPHY for DCE 8.0.

	 * By this, adding DIGG should not hurt DCE 8.0.

	 * This will let DCE 8.1 share DCE 8.0 as much as possible

 default to one to mirror Windows behavior */

 Override features with DCE-specific values */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

****************************************/

 Constructor, Destructor               */

****************************************/

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 vbios handles it */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Blank pixel data during initialization */

 program opp dpg blank color */

 get the OTG active size */

 get the OPTC source */

 MC_VM_FB_LOCATION_TOP is in pages, actual top should add 1 */

 bit 23:0 in register map to bit 47:24 in address */

			/* Power up AND update implementation according to the

			 * required signal (which may be different from the

			 * default signal on connector).

 Blank pixel data with OPP DPG */

 Reset all MPCC muxes */

 initialize OPP mpc_tree parameter */

To do: number of MPCC != number of opp*/

 initialize DWB pointer to MCIF_WB */

 end of FPGA. Below if real ASIC */

 power AFMT HDMI memory TODO: may move to dis/en output save power*/

 enable all DCN clock gating */

 trigger HW to start disconnect plane from stream on the next vsync */

 check if this plane is being used by an MPCC in the secondary blending chain */

 remove MPCC from secondary if being used */

 check if this MPCC is already being used for this plane (dpp) in the primary blending chain */

Already reset*/

the input to MPCC is RGB*/

	/* DCN1.0 has output CM before MPC which seems to screw with

	 * pre-multiplied alpha. This is a w/a hopefully unnecessary for DCN2.

	/*

	 * TODO: remove hack

	 * Note: currently there is a bug in init_hw such that

	 * on resume from hibernate, BIOS sets up MPCC0, and

	 * we do mpcc_remove but the mpcc cannot go to idle

	 * after remove. This cause us to pick mpcc1 here,

	 * which causes a pstate hang for yet unknown reason.

 If there is no full update, don't need to touch MPC tree*/

 check if this plane is being used by an MPCC in the secondary blending chain */

 remove MPCC from secondary if being used */

 check if this MPCC is already being used for this plane (dpp) in the primary blending chain */

 remove MPCC if being used */

 Call MPC to insert new plane */

	/* use TG master update lock to lock everything on the TG

	 * therefore only top pipe need to lock

 always repeat */

 only 3 items below are used by unblank */

check whether it is half the rate*/

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

/**

 * DOC: DC STAT Interface

 *

 * These interfaces are called without acquiring DAL and DC locks.

 * Hence, there is limitations on whese interfaces can access. Only

 * variables exclusively defined for these interfaces can be modified.

/**

 *****************************************************************************

 *  Function: dc_stat_get_dmub_notification

 *

 *  @brief

 *		Calls dmub layer to retrieve dmub notification

 *

 *  @param

 *		[in] dc: dc structure

 *		[in] notify: dmub notification structure

 *

 *  @return

 *     None

 *****************************************************************************

	/**

	 * This function is called without dal and dc locks, so

	 * we shall not modify any dc, dc_dmub_srv or dmub variables

	 * except variables exclusively accessed by this function

 For HPD/HPD RX, convert dpia port index into link index */

/**

 *****************************************************************************

 *  Function: dc_stat_get_dmub_dataout

 *

 *  @brief

 *		Calls dmub layer to retrieve dmub gpint dataout

 *

 *  @param

 *		[in] dc: dc structure

 *		[in] dataout: dmub gpint dataout

 *

 *  @return

 *     None

 *****************************************************************************

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 DC interface (public) */

 DC core (private) */

/*******************************************************************************

 * Private functions

/*******************************************************************************

 * Public functions

register_flip_interrupt(surface);*/

/*

 *****************************************************************************

 *  Function: dc_plane_get_status

 *

 *  @brief

 *     Looks up the pipe context of plane_state and updates the pending status

 *     of the pipe context. Then returns plane_state->status

 *

 *  @param [in] plane_state: pointer to the plane_state to get the status of

 *****************************************************************************

 remove this if above assert never hit */

 Find the current plane state and set its pending bit to false */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 DP to Dual link DVI converter */

 CV smart dongle slave address for retrieving supported HDTV modes*/

 DVI-HDMI dongle slave address for retrieving dongle signature*/

 "AMD" */

 "6140063500G"*/

 DP-HDMI dongle slave address for retrieving dongle signature*/

 "DP-HDMI ADAPTOR"*/

 end of transmition '\x4' */

 SCDC Address defines (HDMI 2.0)*/

sink has a delay different from an Active Converter*/

 Assume we have no valid DP passive dongle connected */

 Read DP-HDMI dongle I2c (no response interpreted as DP-DVI dongle)*/

 Passive HDMI dongles can sometimes fail here without retrying*/

 Check if Type 2 dongle.*/

 Check EOT */

 Check signature */

		/* If its not the right signature,

 Multiply by 1000 to convert to kHz. */

	/*TODO: len of payload data for i2c and aux is uint8!!!!,

			/* should not set mot (middle of transaction) to 0

			 * if there are pending read payloads

			/* should set mot (middle of transaction) to 0

			 * since it is the last payload to send

 set mot (middle of transaction) to false if it is the last payload */

/* dc_link_aux_transfer_raw() - Attempt to transfer

 * the given aux payload.  This function does not perform

 * retries or handle error states.  The reply is returned

 * in the payload->reply and the result through

 * *operation_result.  Returns the number of bytes transferred,

 * or -1 on a failure.

/* dc_link_aux_transfer_with_retries() - Attempt to submit an

 * aux payload, retrying on timeouts, defers, and busy states

 * as outlined in the DP spec.  Returns true if the request

 * was successful.

 *

 * Unless you want to implement your own retry semantics, this

 * is probably the one you want.

 Do not try to access nonexistent DDC pin. */

test only function*/

Lower than 340 Scramble bit from SCDC caps*/

Source Version = 1*/

Read Request from SCDC caps*/

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Call HWSS to setup HUBBUB for address config */

		/* Pre-init system aperture start/end for all HUBP instances (if not gating?)

		 * or cache system aperture if using power gating

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 used as index in array of black_color_format */

 BlackColorFormat_RGB_FullRange */

 BlackColorFormat_RGB_Limited */

 BlackColorFormat_YUV_TV */

 BlackColorFormat_YUV_CV */

 BlackColorFormat_YUV_SuperAA */

 visual confirm debug */

 TODO: correct values below */

	/**

	 * Remove default and add case for all color space

	 * so when we forget to add new color space

	 * compiler will give a warning

 fefault is sRGB black (full range). */

 default is sRGB black 0. */

 Not applicable if the pipe is not primary, save 300ms of boot time */

 red */

 orange */

 yellow */

 green */

 blue */

 purple */

 set border color to red */

 set border color to pink */

 set border color to blue */

 set border color to cyan */

 set border color to green */

 set border color to yellow */

 set border color to white */

 set border color to orange */

 Determine the overscan color based on the top-most (desktop) plane's context */

 HDR10, ARGB2101010 - set border color to red */

 FreeSync 2 ARGB2101010 - set border color to pink */

 HDR10, FP16 - set border color to blue */

 FreeSync 2 HDR - set border color to green */

 SDR - set border color to Gray */

 Determine the overscan color based on the bottom-most plane's context */

 LINEAR Surface - set border color to red */

 Copyright 2015 Advanced Micro Devices, Inc. */

 1 lttpr repeater

 2 lttpr repeaters

 3 lttpr repeaters

 4 lttpr repeaters

 5 lttpr repeaters

 6 lttpr repeaters

 7 lttpr repeaters

 8 lttpr repeaters

 invalid value

 Link should always be assigned encoder when en-/disabling. */

	/* If the current pixel clock source is not DTO(happens after

	 * switching from HDMI passive dongle to DP on the same connector),

	 * switch the pixel clock source to DTO.

 TODO - DP2.0 HW: notify link rate change here */

 start from eDP version 1.2, SINK_STAUS indicate the sink is ready.*/

MAx T9

 use absolute time stamp to constrain max T7*/

 start from eDP version 1.2, SINK_STAUS indicate the sink is ready.*/

MAx T7 is 50ms

 Link should always be assigned encoder when en-/disabling. */

 Clear current link setting.*/

 MST disable link only when no stream use the link */

 set the sink to SST mode after disabling the link */

 call Encoder to set lane settings */

	/* Access link encoder based on whether it is statically

	 * or dynamically assigned to a link.

 disable any test pattern that might be active */

 Clear current link setting. */

				/* notify audio driver for

 un-mute audio */

				/* TODO: audio should be per stream rather than

	/* 7 fractional digits decimal precision for bytes per pixel is enough because DSC

	 * bits per pixel precision is 1/16th of a pixel, which means bytes per pixel precision is

	 * 1/16/8 = 1/128 of a byte, or 0.0078125 decimal

/* The stream with these settings can be sent (unblanked) only after DSC was enabled on RX first,

 * i.e. after dp_enable_dsc_on_rx() had been called

 Enable DSC hw block */

 Enable DSC in encoder */

 PPS SDP is set elsewhere because it has to be done after DIG FE is connected to DIG BE */

 Enable DSC in OPTC */

 disable DSC in OPTC */

 disable DSC in stream encoder */

 disable DSC block */

/*

 * For dynamic bpp change case, dsc is programmed with MASTER_UPDATE_LOCK enabled;

 * hence PPS info packet update need to use frame update instead of immediate update.

 * Added parameter immediate_update for this purpose.

 * The decision to use frame update is hard-coded in function dp_update_dsc_config(),

 * which is the only place where a "false" would be passed in for param immediate_update.

 *

 * immediate_update is only applicable when DSC is enabled.

 Enable DSC hw block */

 disable DSC PPS in stream encoder */

	/* Enable PHY PLL at target bit rate

	 *   UHBR10 = 10Gbps (SYMCLK32 = 312.5MHz)

	 *   UBR13.5 = 13.5Gbps (SYMCLK32 = 421.875MHz)

	 *   UHBR20 = 20Gbps (SYMCLK32 = 625MHz)

 DP2.0 HW: call transmitter control to enable PHY */

 DCCG muxing and DTBCLK DTO */

 DP2.0 HW: call transmitter control to disable PHY */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * dc_debug.c

 *

 *  Created on: Nov 3, 2016

 *      Author: yonsun

		/* get_position() returns CRTC vertical/horizontal counter

		 * hence not applicable for underlay pipe

/**

 * dc_status_to_str - convert dc_status to a human readable string

 * @status: dc_status to be converted

 *

 * Return:

 * A string describing the DC status.

/* Copyright 2021 Advanced Micro Devices, Inc. All rights reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Check whether stream is supported by DIG link encoders. */

 Loop over created link encoder objects. */

			/* Need to check link signal type rather than stream signal type which may not

			 * yet match.

 DIGs do not support DP2.0 streams with 128b/132b encoding. */

 LINK_ENC_CFG_STEADY */

 Return stream using DIG link encoder resource. NULL if unused. */

		/* stream ptr of stream in dc_state used to update correct entry in

		 * link_enc_assignments table.

				/* Only add link encoder back to availability pool if not being

				 * used by any other stream (i.e. removing SST stream or last MST stream).

		/* stream ptr of stream in dc_state used to update correct entry in

		 * link_enc_assignments table.

 Attempted to add an encoder assignment for a stream not in dc_state. */

 Return first available DIG link encoder. */

 Check for availability of link encoder eng_id. */

 An encoder is available if it is still in the availability pool. */

		/* MST streams share the same link and should share the same encoder.

		 * If a stream that has already been assigned a link encoder uses as the

		 * same link as the stream checking for availability, it is an MST stream

		 * and should use the same link encoder.

 Test for display_endpoint_id equality. */

 Clear all link encoder assignments. */

 Release DIG link encoder resources before running assignment algorithm. */

 (a) Assign DIG link encoders to physical (unmappable) endpoints first. */

 Skip stream if not supported by DIG link encoder. */

 Physical endpoints have a fixed mapping to DIG link encoders. */

 (b) Retain previous assignments for mappable endpoints if encoders still available. */

 Skip stream if not supported by DIG link encoder. */

 (c) Then assign encoders to remaining mappable endpoints. */

 Skip stream if not supported by DIG link encoder. */

 Mappable endpoints have a flexible mapping to DIG link encoders. */

 Skip if encoder assignment retained in step (b) above. */

			/* For MST, multiple streams will share the same link / display

			 * endpoint. These streams should use the same link encoder

			 * assigned to that endpoint.

 Update transient assignments. */

 Current state mode will be set to steady once this state committed. */

 Only DIG link encoders. */

 dm_output_to_console("%s: No link using DIG(%d).\n", __func__, eng_id);

 Add assigned encoders to list. */

 An encoder is not available if it has already been assigned to a different endpoint. */

 (1) No. valid entries same as stream count. */

 (2) Matching stream ptrs. */

 (3) Each endpoint assigned unique encoder. */

 (4) Assigned encoders not in available pool. */

 (5) All streams have valid link encoders. */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*******************************************************************************

 * Private functions

 increment dc_sink_id_count because we don't want two sinks with same ID

 unless they are actually the same

/*******************************************************************************

 * Public functions

/*******************************************************************************

 * Protected functions - visible only inside of DC (not visible in DM)

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*******************************************************************************

 * Private functions

		/* Update link encoder resource tracking variables. These are used for

		 * the dynamic assignment of link encoders to streams. Virtual links

		 * are not assigned encoder resources on creation.

/*

 *  Function: program_hpd_filter

 *

 *  @brief

 *     Programs HPD filter on associated HPD line

 *

 *  @param [in] delay_on_connect_in_ms: Connect filter timeout

 *  @param [in] delay_on_disconnect_in_ms: Disconnect filter timeout

 *

 *  @return

 *     true on success, false otherwise

 Verify feature is supported */

 Program hpd filter */

 Program hpd filter to allow DP signal to settle */

		/* 500:	not able to detect MST <-> SST switch as HPD is low for

		 * only 100ms on DELL U2413

		 * 0: some passive dongle still show aux mode instead of i2c

		 * 20-50: not enough to hide bouncing HPD with passive dongle.

		 * also see intermittent i2c read issues.

 Don't program hpd filter */

 Obtain HPD handle */

 Setup HPD filtering */

 Release HPD handle */

/**

 * dc_link_detect_sink() - Determine if there is a sink connected

 *

 * @link: pointer to the dc link

 * @type: Returned connection type

 * Does not detect downstream devices, such as MST sinks

 * or display connected through active dongles

in case it is not on*/

 Link may not have physical HPD pin. */

 todo: may need to lock gpio access */

 TODO: need to do the actual detection */

		/* MST does not use I2COverAux, but there is the

		 * SPECIAL use case for "immediate dwnstrm device

		 * access" (EPR#370830).

/*

 * dc_link_is_dp_sink_present() - Check if there is a native DP

 * or passive DP-HDMI dongle connected

 Open GPIO and set it to I2C mode */

	/* Note: this GpioMode_Input will be converted

	 * to GpioConfigType_I2cAuxDualMode in GPIO component,

	 * which indicates we need additional delay

	/*

	 * Read GPIO: DP sink is present if both clock and data pins are zero

	 *

	 * [W/A] plug-unplug DP cable, sometimes customer board has

	 * one short pulse on clk_pin(1V, < 1ms). DP will be config to HDMI/DVI

	 * then monitor can't br light up. Add retry 3 times

	 * But in real passive dongle, it need additional 3ms to detect

/*

 * @brief

 * Detect output sink type

 Use basic signal type for link without physical connector. */

	/* Internal digital encoder will detect only dongles

	 * that require digital signal

	/* Detection mechanism is different

	 * for different native connectors.

	 * LVDS connector supports only LVDS signal;

	 * PCIE is a bus slot, the actual connector needs to be detected first;

	 * eDP connector supports only eDP signal;

	 * HDMI should check straps for audio

 PCIE detects the actual connector on add-on board */

 ZAZTODO implement PCIE add-on card detection */

		/* check audio support:

		 * if native HDMI is not supported, switch to DVI

		/* DP HPD short pulse. Passive DP dongle will not

		 * have short pulse

			/* Check whether DP signal detected: if not -

			 * we assume signal is DVI; it could be corrected

			 * to HDMI after dongle detection

link->dpcd_caps.dpcd_rev.raw = 0;

	/* HDMI doesn't tell us its HDCP(1.4) capability, so assume to always be capable,

	 * we can poll for bksv but some displays have an issue with this. Since its so rare

	 * for a display to not be 1.4 capable, this assumtion is ok

 Read DPCD 00101h to find out the number of lanes currently set

		/* First DPCD read after VDD ON can fail if the particular board

		 * does not have HPD pin wired correctly. So if DPCD read fails,

		 * which it should never happen, retry a few times. Target worst

		 * case scenario of 80 ms.

 Read DPCD 00100h to find if standard link rates are set

			/* If standard link rates are not being used,

			 * Read DPCD 00115h to find the edp link rate set used

 edp_supported_link_rates_count = 0 for DP

 Link Rate not found. Seamless boot may not work.

 Read DPCD 00003h to find the max down spread.

			/* In case of fallback to SST when topology discovery below fails

			 * HDCP caps will be querried again later by the upper layer (caller

 DP SST branch */

 DP passive dongles */

	/**

	 * something is terribly wrong if time out is > 200ms. (5Hz)

	 * 500 microseconds * 400 tries us 200 ms

 ask the link if alt mode is enabled, if so return ok */

/*

 * dc_link_detect() - Detect if a sink is attached to a given link

 *

 * link->local_sink is created or destroyed as needed.

 *

 * This does not create remote sinks but will trigger DM

 * to start MST detection if a branch is detected.

 30ms

 need to re-write OUI and brightness in resume case

TODO: use cached

 From Disconnected-to-Connected. */

 wa HPD high coming too early*/

 if alt mode times out, return false */

				/* Need to setup mst link_cap struct here

				 * otherwise dc_link_detect() will leave mst link_cap

				 * empty which leads to allocate_mst_payload() has "0"

				 * pbn_per_slot value leading to exception on dc_fixpt_div()

				/*

				 * This call will initiate MST topology discovery. Which

				 * will detect MST ports and add new DRM connector DRM

				 * framework. Then read EDID via remote i2c over aux. In

				 * the end, will notify DRM detect result and save EDID

				 * into DRM framework.

				 *

				 * .detect is called by .fill_modes.

				 * .fill_modes is called by user mode ioctl

				 * DRM_IOCTL_MODE_GETCONNECTOR.

				 *

				 * .get_modes is called by .fill_modes.

				 *

				 * call .get_modes, AMDGPU DM implementation will create

				 * new dc_sink and add to dc_link. For long HPD plug

				 * in/out, MST has its own handle.

				 *

				 * Therefore, just after dc_create, link->sink is not

				 * created for MST until user mode app calls

				 * DRM_IOCTL_MODE_GETCONNECTOR.

				 *

				 * Need check ->sink usages in case ->sink = NULL

				 * TODO: s3 resume check

 Active SST downstream branch device unplug*/

 Downstream unplug */

 disable audio for non DP to HDMI active sst converter */

 link switch from MST to non-MST stop topology manager

 For seamless boot, to skip verify link cap, we read UEFI settings and set them as verified.

 switch() */

 dc_sink_create returns a new reference */

			/*

			 * Abort detection for non-DP connectors if we have

			 * no EDID

			 *

			 * DP needs to report as connected if HDP is high

			 * even if we have no EDID in order to go to

			 * fail-safe mode

 Check if edid is the same

			/*

			 * TODO debug why Dell 2413 doesn't like

			 *  two link trainings

 verify link cap for SST non-seamless boot

 If edid is the same, then discard new sink and revert back to original sink

 HDMI-DVI Dongle */

 Connectivity log: detection */

 From Connected-to-Disconnected. */

		/* When we unplug a passive DP-HDMI dongle connection, dongle_max_pix_clk

		 *  is not cleared. If we emulate a DP signal on this connection, it thinks

		 *  the dongle is still there and limits the number of modes we can emulate.

		 *  Clear dongle_max_pix_clk on disconnect to fix this

 get out of low power state */

 Go back to power optimized state */

 TODO: #DAL3 Implement id to str function.*/

	/* Update link encoder tracking variables. These are used for the dynamic

	 * assignment of link encoders to streams.

		/* Look for device tag that matches connector signal,

		 * CRT for rgb, LCD for other supported signal tyes

 Look for channel mapping corresponding to connector and device tag */

	/*

	 * TODO check if GPIO programmed correctly

	 *

	 * If GPIO isn't programmed correctly HPD might not rise or drain

	 * fast enough, leading to bounces.

 Initialized irq source for hpd and hpd rx */

 Dummy Init for linkid */

 TODO: Initialize link : funcs->link_init */

 Set indicator for dpia link so that ddc won't be created */

 Set dpia port index : 0 to number of dpia ports */

 TODO: Create link encoder */

 Some docks seem to NAK I2C writes to segment pointer with mot=0. */

 Handle dpia case */

/*******************************************************************************

 * Public functions

	/*

	 * Must use preferred_link_setting, not reported_link_cap or verified_link_cap,

	 * since struct preferred_link_setting won't be reset after S3.

 in ms

 30ms

 Reduce link bandwidth between failed link training attempts. */

 check for seamless boot

 get link settings for video mode timing */

	/* Train with fallback when enabling DPIA link. Conventional links are

	 * trained with fallback during sink detection.

	/*

	 * Temporary w/a to get DP2.0 link rates to work with SST.

	 * TODO DP2.0 - Workaround: Remove w/a if and when the issue is resolved.

in case it is not on*/

 TODO - DP2.0 HW: calculate 32 symbol clock for HPO encoder */

 during mode switch we do DP_SET_POWER off then on, and OUI is lost

 during mode set we do DP_SET_POWER off then on, aux writes are lost

 TODO: use cached if known

	/* sink signal type after MST branch is MST. Multiple MST sinks

	 * share one link. Link DP PHY is enable or training only once.

 clear payload table */

	/* to make sure the pending down rep can be processed

	 * before enabling the link

 set the sink to MST mode before enabling the link */

	/*

	 * Get retimer settings from sbios for passing SI eye test for DCE11

	 * The setting values are varied based on board revision and port id

	 * Therefore the setting values of each ports is passed by sbios.

 Check if current bios contains ext Hdmi settings

 Validate settings from bios integrated info table

 Start Ext-Hdmi programming*/

 Apply 3G settings */

			/* Based on DP159 specs, APPLY_RX_TX_CHANGE bit in 0x0A

			 * needs to be set to 1 on every 0xA-0xC write.

 Query current value from offset 0xA */

 Set APPLY_RX_TX_CHANGE bit to 1 */

 Apply 3G settings */

 Apply 3G settings */

				/* Based on DP159 specs, APPLY_RX_TX_CHANGE bit in 0x0A

				 * needs to be set to 1 on every 0xA-0xC write.

 Query current value from offset 0xA */

 Set APPLY_RX_TX_CHANGE bit to 1 */

 Program additional settings if using 640x480 resolution */

 Write offset 0xFF to 0x01 */

 Write offset 0x00 to 0x23 */

 Write offset 0xff to 0x00 */

 Program Slave Address for tuning single integrity */

 Write offset 0x0A to 0x13 */

 Write offset 0x0A to 0x17 */

 Write offset 0x0B to 0xDA or 0xD8 */

 Write offset 0x0A to 0x17 */

 Write offset 0x0C to 0x1D or 0x91 */

 Write offset 0x0A to 0x17 */

 Program additional settings if using 640x480 resolution */

 Write offset 0xFF to 0x01 */

 Write offset 0x00 to 0x23 */

 Write offset 0xff to 0x00 */

 Program Slave Address for tuning single integrity

	/*

	 * TODO: implement call for dp_set_hw_test_pattern

	 * it is needed for compliance testing

	/* Here we need to specify that encoder output settings

	 * need to be calculated as for the set mode,

	 * it will lead to querying dynamic link capabilities

	 * which should be done before enable output

 SST DP, eDP */

 MST disable link only when no stream use the link */

 DP159, Retimer settings */

 PI3EQX1204, Redriver settings */

***************************enable_link***********************************/

	/* There's some scenarios where driver is unloaded with display

	 * still enabled. When driver is reloaded, it may cause a display

	 * to not light up if there is a mismatch between old and new

	 * link settings. Need to call disable first before enabling at

	 * new link settings.

 Check Pixel Encoding */

 Invalid Pixel Encoding*/

888 and 666 should always be supported*/

 These color depths are currently not supported */

	/* A hack to avoid failing any modes for EDID override feature on

	 * topology change such as lower quality cable for DP or different dongle

 Passive Dongle */

 Active Dongle*/

			/* Disable brightness ramping when the display is blanked

			 * as it can hang the DMCU

 Set power optimization flag */

 Enable or Disable PSR */

 updateSinkPsrDpcdConfig*/

 Check for PSR v2*/

		/* For PSR v2 selective update.

		 * Indicates whether sink should start capturing

		 * immediately following active scan line,

		 * or starting with the 2nd active scan line.

		/*For PSR v2, determines whether Sink should generate

		 * IRQ_HPD when CRC mismatch is detected.

			/* dmcu -1 for all controller id values,

			 * therefore +1 here

 Hardcoded for now.  Can be Pcie or Uniphy (or Unknown)*/

PhyId is associated with the transmitter id*/

 only = 1 in KV */

 2 frames before enter PSR. */

	/* half a frame

	 * (units in 100 lines, i.e. a value of 1 represents 100 lines)

skip power down the single pipe since it blocks the cstate*/

	/* SMU will perform additional powerdown sequence.

	 * For unsupported ASICs, set psr_level flag to skip PSR

	 *  static screen notification to SMU.

	 *  (Always set for DAL2, did not check ASIC)

	/* Complete PSR entry before aborting to prevent intermittent

	 * freezes on certain eDPs

	/* Controls additional delay after remote frame capture before

	 * continuing power down, default = 0

	/* psr_enabled == 0 indicates setup_psr did not succeed, but this

	 * should not happen since firmware should be running at this point

 PSR residency measurements only supported on DMCUB */

 Kbits to MBytes */

	/*

	 * margin 5300ppm + 300ppm ~ 0.6% as per spec, factor is 1.006

	 * The unit of 54/64Mbytes/sec is an arbitrary unit chosen based on

	 * common multiplier to render an integer PBN for all link rate/lane

	 * counts combinations

	 * calculate

	 * peak_kbps *= (1006/1000)

	 * peak_kbps *= (64/54)

	 * peak_kbps *= 8    convert to bytes

 TODO: Rename stream_enc to dio_stream_enc?

 if DRM proposed_table has more than one new payload */

 copy proposed_table to link, add stream encoder */

 exit j loop */

 new vcp_id */

 update link->mst_stream_alloc_table with work_table */

 Add 0.5*(1/VCP_Y_PRECISION) to round up to decimal precision

/*

 * Payload allocation/deallocation for SST introduced in DP2.0

 slot X.Y for SST payload deallocate */

 calculate VC payload and update branch with new payload allocation table*/

TODO - DP2.0 Logging: Instead of hpo_dp_stream_enc pointer, log instance id

 program DP source TX for payload */

 poll for ACT handled */

 Failures will result in blackscreen and errors logged

 slot X.Y for SST payload allocate */

	/* Always return DC_OK.

	 * If part of sequence fails, log failure(s) and show blackscreen

/* convert link_mst_stream_alloc_table to dm dp_mst_stream_alloc_table

 * because stream_encoder is not exposed to dm

 Link encoder may have been dynamically assigned to non-physical display endpoint. */

	/* enable_link_dp_mst already check link->enabled_stream_count

	 * and stream is in link->stream[]. This is called during set mode,

	 * stream_enc is available.

 get calculate VC payload for stream: stream_alloc */

 program DP source TX for payload */

 send down message */

 slot X.Y for only current stream */

 decrease throttled vcp size */

 send ALLOCATE_PAYLOAD sideband message with updated pbn */

 notify immediate branch device table update */

 update mst stream allocation table software state */

 update mst stream allocation table hardware state */

 poll for immediate branch device ACT handled */

 notify immediate branch device table update */

 update mst stream allocation table software state */

 update mst stream allocation table hardware state */

 poll for immediate branch device ACT handled */

 send ALLOCATE_PAYLOAD sideband message with updated pbn */

 increase throttled vcp size */

 Link encoder may have been dynamically assigned to non-physical display endpoint. */

	/* deallocate_mst_payload is called before disable link. When mode or

	 * disable/enable monitor, new stream is created which is not in link

	 * stream[] yet. For this, payload is not allocated yet, so de-alloc

	 * should not done. For new mode set, map_resources will get engine

	 * for new stream, so stream_enc->id should be validated until here.

 slot X.Y */

 TODO: which component is responsible for remove payload table? */

stream_enc_inst*/

 Initialize PHY ID with ABCDE - 01234 mapping except when it is B0

look up the link_enc_assignment for the current pipe_ctx

 Add flag to guard new A0 DIG mapping

 Add flag to guard B0 implementation

 enum ID 1-4 maps to DPIA PHY ID 0-3

 for non DPIA mode over B0, ABCDE maps to 01564

 Clear phy_idx for non-physical display endpoints. */

  Enable clock, Configure lane count, and Enable Link Encoder*/

	/* Workaround for FPGA HPO capture DP link data:

	 * HPO capture will set link to active mode

	 * This workaround is required to get a capture from start of frame

 Set link active */

 Enable DP_STREAM_ENC */

 Set DPS PPS SDP (AKA "info frames") */

 Allocate Payload */

 MST case

 NOTE: This makes assumption that pipe_ctx index is same as stream index */

 SST case

 Enable VPG before building infoframe

 Do not touch link on seamless boot optimization. */

 Still enable stream features & audio on seamless boot for DP external displays */

 eDP lit up by bios already, no need to enable again. */

		/* Have to setup DSC before DIG FE and BE are connected (which happens before the

		 * link training). This is to make sure the bandwidth sent to DIG BE won't be

		 * bigger than what the link and/or DIG BE can handle. VBID[6]/CompressedStream_flag

		 * will be automatically set at a later time when the video is enabled

		 * (DP_VID_STREAM_EN = 1).

			/* Abort stream enable *unless* the failure was due to

			 * DP link training - some DP monitors will recover and

			 * show the stream anyway. But MST displays can't proceed

			 * without link training.

 turn off otg test pattern if enable */

		/* This second call is needed to reconfigure the DIG

		 * as a workaround for the incorrect value being applied

		 * from transmitter control.

 Set DPS PPS SDP (AKA "info frames") */

 if (IS_FPGA_MAXIMUS_DC(dc->ctx->dce_environment))

Need to inform that sink is going to use legacy HDMI mode.

vbios only handles 165Mhz.

 DP159, Retimer settings */

 PI3EQX1204, Redriver settings */

		/* In DP1.x SST mode, our encoder will go to TPS1

		 * when link is on but stream is off.

		 * Disabling link before stream will avoid exposing TPS1 pattern

		 * during the disable sequence as it will confuse some receivers

		 * state machine.

		 * In DP2 or MST mode, our encoder will stay video active

/**

 *  dc_link_enable_hpd_filter:

 *     If enable is true, programs HPD filter on associated HPD line using

 *     delay_on_disconnect/delay_on_connect values dependent on

 *     link->connector_signal

 *

 *     If enable is false, programs HPD filter on associated HPD line with no

 *     delays on connect or disconnect

 *

 *  @link:   pointer to the dc link

 *  @enable: boolean specifying whether to enable hbd

 Obtain HPD handle */

 Setup HPD filtering */

 Release HPD handle */

	/* Retrain with preferred link settings only relevant for

	 * DP signal type

	 * Check for non-DP signal or if passive dongle present

 Stream not found */

 Cannot retrain link if backend is off */

 Retrain now, or wait until next stream update to apply */

		/* For 8b/10b encoding:

		 * link rate is defined in the unit of LINK_RATE_REF_FREQ_IN_KHZ per DP byte per lane.

		 * data bandwidth efficiency is 80% with additional 3% overhead if FEC is supported.

		/* For 128b/132b encoding:

		 * link rate is defined in the unit of 10mbps per lane.

		 * total data bandwidth efficiency is always 96.71%.

 overall effective link bandwidth = link rate per lane * lane count * total data bandwidth efficiency */

 bytes per sec */

 8 bits per byte*/

		/* Account for FEC overhead.

		 * We have to do it based on caps,

		 * and not based on FEC being set ready,

		 * because FEC is set ready too late in

		 * the process to correctly be picked up

		 * by mode enumeration.

		 *

		 * There's enough zeros at the end of 'kbps'

		 * that make the below operation 100% precise

		 * for our purposes.

		 * 'long long' makes it work even for HDMI 2.1

		 * max bandwidth (and much, much bigger bandwidths

		 * than that, actually).

		 *

		 * NOTE: Reducing link BW by 3% may not be precise

		 * because it may be a stream BT that increases by 3%, and so

		 * 1/1.03 = 0.970873 factor should have been used instead,

		 * but the difference is minimal and is in a safe direction,

		 * which all works well around potential ambiguity of DP 1.4a spec.

	/* Links supporting dynamically assigned link encoder will be assigned next

	 * available encoder if one not already assigned.

 CONFIG_DRM_AMD_DC_DCN */

Only YOnly make reduce bandwidth by 1/3 compares to RGB*/

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

Travis*/

Nutmeg*/

 do nothing */

 maximum pre emphasis level allowed for each voltage swing level*/

		/* This link training fallback array is ordered by

		 * link bandwidth from highest to lowest.

		 * DP specs makes it a normative policy to always

		 * choose the next highest link bandwidth during

		 * link training fallback.

 overwrite the delay if rev > 1.1*/

		/* DP 1.2 or later - retrieve delay through

	/* Access link encoder capability based on whether it is statically

	 * or dynamically assigned to a link.

	/* Access link encoder capability based on whether it is statically

	 * or dynamically assigned to a link.

		/* WA for some MUX chips that will power down with eDP and lose supported

		 * link rate set for eDP 1.4. Source reads DPCD 0x010 again to ensure

		 * MUX chip gets link rate set back before link training.

 TODO link_prop.INTERNAL */

	/*****************************************************************

	* DpcdAddress_TrainingPatternSet

 concatenate everything into one buffer*/

 0x00103 - 0x00102

		/* for eDP write in 2 parts because the 5-byte burst is

		* causing issues on some eDP panels (EPR#366724)

 write it all in (1 + number-of-lanes)-byte burst*/

LANEx_CR_DONE bits All 1's?*/

 we find the maximum of the requested settings across all lanes*/

 and set this maximum for all lanes*/

 Determine what the maximum of the requested settings are*/

	/* make sure the requested settings are

 make sure the pre-emphasis matches the voltage swing*/

 Only used for channel equalization */

 Note: also check that TPS4 is a supported feature*/

 2. update DPCD*/

			/* EPR #361076 - write as a 5-byte burst,

			 * but only for the 1-st iteration

 3. wait for receiver to lock-on*/

		/* 4. Read lane status and requested

 5. check CR done*/

 6. check CHEQ done*/

 7. update VS/PE/PC2 in lt_settings*/

	/* najeeb - The synaptics MST hub can put the LT in

	* infinite loop by switching the VS

	/* between level 0 and level 1 continuously, here

 1. call HWSS to set lane settings*/

 2. update DPCD of the receiver*/

			/* EPR #361076 - write as a 5-byte burst,

 3. wait receiver to lock-on*/

		/* 4. Read lane status and requested drive

		* settings as set by the sink

 5. check CR done*/

 6. max VS reached*/

 7. same lane settings*/

		/* Note: settings are the same for all lanes,

 8. update VS/PE/PC2 in lt_settings*/

 4. mainlink output idle pattern*/

	/*

	 * 5. post training adjust if required

	 * If the upstream DPTX and downstream DPRX both support TPS4,

	 * TPS4 must be used instead of POST_LT_ADJ_REQ.

		/* delay 5ms after Main Link output idle pattern and then check

		 * DPCD 0202h.

parse lane status*/

		/*

		 * check lanes status

			/* if one of the channel equalization, clock

			 * recovery or symbol lock is dropped

			 * consider it as (link has been

			 * dropped) dp sink status has changed

 Initialize link settings */

	/* TODO hard coded to SS for now

	 * lt_settings.link_settings.link_spread =

	 * dal_display_path_is_ss_supported(

	 * path_mode->display_path) ?

	 * LINK_SPREAD_05_DOWNSPREAD_30KHZ :

	 * LINK_SPREAD_DISABLED;

 TODO: should decide link spread when populating link_settings */

 Override link spread */

 Override lane settings */

 Override HW lane settings with BIOS forced values if present */

 Initialize training timings */

 1 lttpr repeater

 2 lttpr repeaters

 3 lttpr repeaters

 4 lttpr repeaters

 5 lttpr repeaters

 6 lttpr repeaters

 7 lttpr repeaters

 8 lttpr repeaters

 invalid value

 aux timeout is already set to extended */

 RESET/SET lttpr mode to enable non transparent mode */

			/* Driver does not need to train the first hop. Skip DPCD read and clear

			 * AUX_RD_INTERVAL for DPTX-to-DPIA hop.

 Set training not in progress*/

 Connectivity log: link training */

 TODO - DP2.0 Log: add connectivity log for FFE PRESET */

 program ASIC PHY settings*/

 Notify DP sink the PHY settings from source */

 1. Perform_clock_recovery_sequence. */

 transmit training pattern for clock recovery */

 call HWSS to set lane settings*/

 wait receiver to lock-on*/

 2. Perform_channel_equalization_sequence. */

 transmit training pattern for channel equalization. */

 call HWSS to set lane settings*/

 wait receiver to lock-on. */

 3. Perform_link_training_int. */

 Mainlink output idle pattern. */

 clear training pattern set */

 poll for intra-hop disable */

 0b = 2 ms, 1b = 1 ms */

	/* (128b/132b_TRAINING_AUX_RD_INTERVAL value + 1) *

	 * INTERVAL_UNIT. The maximum is 256 ms

 Transmit 128b/132b_TPS1 over Main-Link */

 Set TRAINING_PATTERN_SET to 01h */

 Adjust TX_FFE_PRESET_VALUE and Transmit 128b/132b_TPS2 over Main-Link */

 Set loop counter to start from 1 */

 Set TRAINING_PATTERN_SET to 02h and TX_FFE_PRESET_VALUE in one AUX transaction */

 poll for channel EQ done */

 pass */

 poll for EQ interlane align done */

 pass */

 Assumption: assume hardware has transmitted eq pattern */

 initiate CDS done sequence */

 poll for CDS interlane align done and symbol lock */

 pass */

 1. set link rate, lane count and spread. */

		/* 2. perform link training (set link training done

		 *  to false is done as well)

 TODO - DP2.0 Link: remove legacy_dp2_lt logic */

 decide training settings */

 reset previous training states */

 configure link prior to entering training mode */

	/* enter training mode:

	 * Per DP specs starting from here, DPTX device shall not issue

	 * Non-LT AUX transactions inside training mode.

 exit training mode and switch to video idle */

 dump debug data */

	/* Dynamically assigned link encoders associated with stream rather than

	 * link.

	/* We need to do this before the link training to ensure the idle pattern in SST

	 * mode will be sent right after the link training

				/* ASSR is bound to fail with unsigned PSP

				 * verstage used during devlopment phase.

				 * Report and continue with eDP panel mode to

				 * perform eDP link training with right settings

* @todo Consolidate USB4 DP and DPx.x training. */

 Transmit idle pattern once training successful. */

		/* latest link training still fail, skip delay and keep PHY on

 Abort link training if failure due to sink being unplugged. */

			/* Fail link training if reduced link bandwidth no longer meets

			 * stream requirements.

		/*

		 * dp clock source is not initialized for some reason.

		 * Should not happen, CLOCK_SOURCE_ID_EXTERNAL will be used

 Disable MST on link. Use only local sink. */

 Re-enable MST on link. */

	/* Begin Sync LT. During this time,

	 * DPCD:600h must not be powered down.

Clear any existing preferred settings.*/

 Setup MST Mode */

 Disable link */

 Enable link */

 Set FEC enable */

 Attempt to train with given link training settings */

 Set link rate, lane count and spread. */

	/* 2. perform link training (set link training done

	 *  to false is done as well)

 3. Sync LT must skip TRAINING_PATTERN_SET:0 (video pattern)*/

 4. print status message*/

	/* If input parameter is set, shut down phy.

	 * Still shouldn't turn off dp_receiver (DPCD:600h)

	/* Links supporting dynamically assigned link encoder will be assigned next

	 * available encoder if one not already assigned.

	/* Links supporting dynamically assigned link encoder will be assigned next

	 * available encoder if one not already assigned.

 get max link encoder capability */

 Lower link settings based on sink's link cap */

	/*

	 * account for lttpr repeaters cap

	 * notes: repeaters do not snoop in the DPRX Capabilities addresses (3.6.3).

	/* The HW reads 16 bytes from 200h on HPD,

	 * but if we get an AUX_DEFER, the HW cannot retry

	 * and this causes the CTS tests 4.3.2.1 - 3.2.4 to

	 * fail, so we now explicitly read 6 bytes which is

	 * the req from the above mentioned test cases.

	 *

	 * For DP 1.4 we need to read those from 2002h range.

		/* Read 14 bytes in a single read and then copy only the required fields.

1. Check that Link Status changed, before re-training.*/

parse lane status*/

		/* check status of lanes 0,1

		 * changed DpcdAddress_Lane01Status (0x202)

			/* if one of the channel equalization, clock

			 * recovery or symbol lock is dropped

			 * consider it as (link has been

			 * dropped) dp sink status has changed

 Check interlane align.*/

		/*2. Check that we can handle interrupt: Not in FS DOS,

		 *  Not in "Display Timeout" state, Link is trained.

	/* link training starts with the maximum common settings

	 * supported by both sink and ASIC.

 Accept reported capabilities if link supports flexible encoder mapping or encoder already in use. */

		/* TODO - should we check link encoder's max link caps here?

		 * How do we know which link encoder to check from?

 Grant extended timeout request */

 TODO implement override and monitor patch later */

	/* try to train the link from high to low to

	 * find the physical link capability

 disable PHY done possible by BIOS, will be done by driver itself */

	/* Temporary Renoir-specific workaround for SWDEV-215184;

	 * PHY will sometimes be in bad state on hotplugging display from certain USB-C dongle,

	 * so add extra cycle of enabling and disabling the PHY before first link training.

		/* always disable the link before trying another

		 * setting or before returning we'll enable it later

		 * based on the actual mode we're driving

	/* Link Training failed for all Link Settings

	 *  (Lane Count is still unknown)

		/* If all LT fails for all settings,

		 * set verified = failed safe (1 lane low)

	/* in DP compliance test, DPR-120 may have

	 * a random value in its MAX_LINK_BW dpcd field.

	 * We map it to the maximum supported link rate that

	 * is smaller than MAX_LINK_BW in this case.

 find current index */

 find next index */

/*

 * function: set link rate and lane count fallback based

 * on current link setting and last link training result

 * return value:

 *			true - link setting could be set

 *			false - has reached minimum setting

 *					and no further fallback could be done

 According to spec, VSC SDP should be used if pixel format is YCbCr420 */

always DP fail safe mode*/

 TODO: DYNAMIC_VALIDATION needs to be implemented */

	/*if (flags.DYNAMIC_VALIDATION == 1 &&

		link->verified_link_cap.lane_count != LANE_COUNT_UNKNOWN)

		link_setting = &link->verified_link_cap;

		/* remember the biggest mode here, during

		 * initial link training (to get

		 * verified_link_cap), LS sends event about

		 * cannot train at reported cap to upper

		 * layer and upper layer will re-enumerate modes.

		 * this is not necessary if the lower

		 * verified_link_cap is enough to drive

 TODO: DYNAMIC_VALIDATION needs to be implemented */

		/* if (flags.DYNAMIC_VALIDATION == 1)

			dpsst->max_req_bw_for_verified_linkcap = dal_max(

	/* search for the minimum link setting that:

	 * 1. is supported according to the link training result

	 * 2. could support the b/w requested by the timing

	/*

	 * edp_supported_link_rates_count is only valid for eDP v1.4 or higher.

	 * Per VESA eDP spec, "The DPCD revision for eDP v1.4 is 13h"

	/* search for the minimum link setting that:

	 * 1. is supported according to the link training result

	 * 2. could support the b/w requested by the timing

	/* if preferred is specified through AMDDP, use it, if it's enough

	 * to drive the mode

	/* MST doesn't perform link training for now

	 * TODO: add MST specific link training routine

************************Short Pulse IRQ***************************/

	/*

	 * Don't handle RX IRQ unless one of following is met:

	 * 1) The link is established (cur_link_settings != unknown)

	 * 2) We know we're dealing with a branch device, SST or MST

DpcdAddress_PSR_Enable_Cfg*/

DpcdAddress_PSR_Error_Status*/

DPCD 2006h   ERROR STATUS*/

DPCD 2008h   SINK PANEL SELF REFRESH STATUS*/

 Acknowledge and clear error bits */

DpcdAddress_PSR_Error_Status*/

 PSR error, disable and re-enable PSR */

			/* No error is detect, PSR is active.

			 * We should return with IRQ_HPD handled without

			 * checking for loss of sync since PSR would have

			 * powered down main link.

 Set preferred link settings */

/* TODO Raven hbr2 compliance eye output is unstable

 * (toggling on and off) with debugger break

 * This caueses intermittent PHY automation failure

 get phy test pattern and pattern parameters from DP receiver */

	/*get post cursor 2 parameters

	 * For DP 1.1a or eariler, this DPCD register's value is 0

	 * For DP 1.2 or later:

	 * Bits 1:0 = POST_CURSOR2_LANE0; Bits 3:2 = POST_CURSOR2_LANE1

	 * Bits 5:4 = POST_CURSOR2_LANE2; Bits 7:6 = POST_CURSOR2_LANE3

 translate request */

 CP2520 pattern is unstable, temporarily use TPS4 instead */

 CP2520 pattern is unstable, temporarily use TPS4 instead */

 Square pattern data is 1 byte (DP spec)

 prepare link training settings */

	/*Usage: Measure DP physical lane signal

	 * by DP SI test equipment automatically.

	 * PHY test pattern request is generated by equipment via HPD interrupt.

	 * HPD needs to be active all the time. HPD should be active

	 * all the time. Do not touch it.

	 * forward request to DS

 get link test pattern and pattern parameters */

 black and white */

 6 bits

 8 bits

 10 bits

 12 bits

 get audio test mode and test pattern parameters

 read pattern periods for requested channels when sawTooth pattern is requested

 read period for each channel

 translate sampling rate

 ACK first to let DP RX test box monitor LT sequence */

 no acknowledge request is needed again */

 send request acknowledgment */

	/* For use cases related to down stream connection status change,

	 * PSR and device auto test, refer to function handle_sst_hpd_irq

	 /* All the "handle_hpd_irq_xxx()" methods

		 * should be called only after

		 * dal_dpsst_ls_read_hpd_irq_data

		 * Order of calls is important too

 PSR-related error was detected and handled */

	/* If PSR-related error handled, Main link may be off,

	 * so do not handle as a normal sink status change interrupt.

 check if we have MST msg and return since we poll for it */

	/* For now we only handle 'Downstream port status' case.

	 * If we got sink count changed it means

	 * Downstream port status changed,

	 * then DM should call DC to do the detection.

 Connectivity log: link loss */

	/* reasons for HPD RX:

	 * 1. Link Loss - ie Re-train the Link

	 * 2. MST sideband message

	 * 3. Automated Test - ie. Internal Commit

	 * 4. CP (copy protection) - (not interesting for DM???)

	 * 5. DRR

	 * 6. Downstream Port status changed

	 * -ie. Detect - this the only one

	 * which is interesting for DM because

	 * it must call dc_link_detect.

query dpcd for version and mst cap addresses*/

 read IEEE branch device id */

 decode converter info*/

 DPCD 0x5 bit 0 = 1, it indicate it's branch device */

		/* At this point we don't know is it DVI or HDMI or DP++,

 CTS 4.2.2.7 expects source to read Detailed Capabilities Info : 00080h-0008F.*/

Handle DP case as DONGLE_NONE*/

Handle DP++ active converter case, process DP++ case as HDMI case according DP1.4 spec*/

YCBCR capability only for HDMI case*/

		/* 0010FA active dongles (DP-VGA, DP-DLDVI converters) power down

		 * all internal circuits including AUX communication preventing

		 * reading DPCD table and EDID (spec violation).

		 * Encoder will skip DP RX power down on disable_output to

 TODO: May need work around for other dongles. */

/* Read additional sink caps defined in source specific DPCD area

 * This function currently only reads from SinkCapability address (DP_SOURCE_SINK_CAP)

	/*

	 * Logic to determine LTTPR mode

 Check DP tunnel LTTPR mode debug option. */

		/* By reading LTTPR capability, RX assumes that we will enable

		 * LTTPR extended aux timeout if LTTPR is present.

 Attempt to train in LTTPR transparent mode if repeater count exceeds 8. */

	/* DP_ADAPTER_CAP - DP_DPCD_REV + 1 == 16 and also DP_DSC_BITS_PER_PIXEL_INC - DP_DSC_SUPPORT + 1 == 16,

	 * which means size 16 will be good for both of those DPCD register block reads

	/*Only need to read 1 byte starting from DP_DPRX_FEATURE_ENUMERATION_LIST.

 30ms

	/* if extended timeout is supported in hardware,

	 * default to LTTPR timeout (3.2ms) first as a W/A for DP link layer

	 * CTS 4.2.1.1 regression introduced by CTS specs requirement update.

 Read DP tunneling information. */

	/* Delay 1 ms if AUX CH is in power down state. Based on spec

	 * section 2.3.1.2, if AUX CH may be powered down due to

	 * write to DPCD 600h = 2. Sink AUX CH is monitoring differential

	 * signal and may need up to 1 ms before being able to reply.

	/* Sink may need to configure internals based on vendor, so allow some

	 * time before proceeding with possibly vendor specific transactions

	/* Error condition checking...

	 * It is impossible for Sink to report Max Lane Count = 0.

	 * It is possible for Sink to report Max Link Rate = 0, if it is

	 * an eDP device that is reporting specialized link rates in the

	 * SUPPORTED_LINK_RATE table.

 read sink count */

 read sink ieee oui */

 Quirk Apple MBP 2017 15" Retina panel: Wrong DP_MAX_LINK_RATE */

 Read DSC and FEC sink capabilities if DP revision is 1.4 and up */

 Connectivity log: detection */

	/* dc init_hw has power encoder using default

	 * signal for connector. For native DP, no

	 * need to power up encoder again. If not native

	 * DP, hw_init may need check signal or power up

	 * encoder here.

 TODO save sink caps in link->sink */

 LinkRate is normally stored as a multiplier of 0.27 Gbps per lane. Do the translation.

 Rate_1 (RBR)		- 1.62 Gbps/Lane

 Rate_2			- 2.16 Gbps/Lane

 Rate_3			- 2.43 Gbps/Lane

 Rate_4 (HBR)		- 2.70 Gbps/Lane

 Rate_5 (RBR2)	- 3.24 Gbps/Lane

 Rate_6			- 4.32 Gbps/Lane

 Rate_7 (HBR2)	- 5.40 Gbps/Lane

 Rate_8 (HBR3)	- 8.10 Gbps/Lane

	/*

	 * edp_supported_link_rates_count is only valid for eDP v1.4 or higher.

	 * Per VESA eDP spec, "The DPCD revision for eDP v1.4 is 13h"

 Read DPCD 00010h - 0001Fh 16 bytes at one shot

 DPCD register reports per-lane link rate = 16-bit link rate capability

 value X 200 kHz. Need multiplier to find link rate in kHz.

 disable bit depth reduction */

 restore bitdepth reduction */

 Reset CRTC Test Pattern if it is currently running and request is VideoMode */

 Set CRTC Test Pattern */

 Unblank Stream */

		/* TODO:m_pHwss->MuteAudioEndpoint

		 * (pPathMode->pDisplayPath, false);

 Reset Test Pattern state */

 Check for PHY Test Patterns */

 Set DPCD Lane Settings before running test pattern */

 Blank stream if running test pattern */

			/*TODO:

			 * m_pHwss->

			 * MuteAudioEndpoint(pPathMode->pDisplayPath, true);

 Blank stream */

 Set Test Pattern state */

TODO:&& !pPathMode->pDisplayPath->IsTargetPoweredOn()*/)

			/* tell receiver that we are sending qualification

			 * pattern DP 1.2 or later - DP receiver's link quality

			 * pattern is set using DPCD LINK_QUAL_LANEx_SET

			 * register (0x10B~0x10E)\

			/* tell receiver that we are sending qualification

			 * pattern DP 1.1a or earlier - DP receiver's link

			 * quality pattern is set using

			 * DPCD TRAINING_PATTERN_SET -> LINK_QUAL_PATTERN_SET

			 * register (0x102). We will use v_1.3 when we are

			 * setting test pattern for DP 1.1.

 update MSA to requested color space */

 sb17 bit 7 Dynamic Range: 0 = VESA range, 1 = CTA range

 CRTC Patterns */

 Set Test Pattern state */

set edp panel mode in receiver*/

	/* We need to explicitly check that connector

	 * is not DP. Some Travis_VGA get reported

	 * by video bios as DP.

			/* alternate scrambler reset is required for Travis

			 * for the case when external chip does not

			 * provide sink device id, alternate scrambler

			 * scheme will  be overriden later by querying

			 * Encoder features

			/* alternate scrambler reset is required for Travis

			 * for the case when external chip does not provide

			 * sink device id, alternate scrambler scheme will

			 * be overriden later by querying Encoder feature

	/* FEC has to be "set ready" before the link training.

	 * The policy is to always train with FEC

	 * if the sink supports it and leave it enabled on link.

	 * If FEC is not supported, disable it.

	/* Access link encoder based on whether it is statically

	 * or dynamically assigned to a link.

	/* Access link encoder based on whether it is statically

	 * or dynamically assigned to a link.

			/* Accord to DP spec, FEC enable sequence can first

			 * be transmitted anytime after 1000 LL codes have

			 * been transmitted on the link after link training

			 * completion. Using 1 lane RBR should have the maximum

			 * time for transmitting 1000 LL codes which is 6.173 us.

			 * So use 7 microseconds delay instead.

 needed? where to get?

 needed? where to get?

 OLEDs have no PWM, they can only use AUX

 On non-supported panels dpcd_read usually succeeds with 0 returned */

 we read default from 0x320 because we expect BIOS wrote it there

 regular get_backlight_nit reads from panel set at 0x326

 if < 5 nits or > 5000, it might be wrong readback



 invalid input

 Read DPCD 00100h to find if standard link rates are set

 Read DPCD 00115h to find the edp link rate set used

 Read DPCD 00101h to find out the number of lanes currently set

 TODO - DP2.0 Link: Fix get_lane_status to handle LTTPR offset (SST and MST)

 TODO - DP2.0 Payload: Read and log the payload table from downstream branch

	/*

	 * wait for ACT handled

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

			/* initialize with firmware data first, no all

			 * ASIC have DCCG SW component. FPGA or

			 * simulation need initialization of

			 * dccg_ref_clock_inKhz, dchub_ref_clock_inKhz

			 * with xtalin_clock_inKhz

 multi streams supported */

 multi streams not supported */

		/* find the total number of streams available via the

		 * AZALIA_F0_CODEC_PIN_CONTROL_RESPONSE_CONFIGURATION_DEFAULT

		 * registers (one for each pin) starting from pin 1

		 * up to the max number of audio pins.

		 * We stop on the first pin where

		 * PORT_CONNECTIVITY == 1 (as instructed by HW team).

 disable refresh rates higher than 60Hz for now */

Check for mpc split*/

Get odm split index*/

/*

 * This is a preliminary vp size calculation to allow us to check taps support.

 * The result is completely overridden afterwards.

	/*

	 * Only the leftmost ODM pipe should be offset by a nonzero distance

 Handle h & v split */

			/* extra pixels in the division remainder need to go to pipes after

			 * the extra pixel index minus one(epimo) defined here as:

 odm */

 rightmost pipe is the remainder recout */

 ODM combine cases with MPO we can get negative widths */

Swap surf_src height and width since scaling ratios are in recout rotation*/

/*

 * We completely calculate vp offset, size and inits here based entirely on scaling

 * ratios and recout for pixel perfect pipe combine.

	/*

	 * First of the taps starts sampling pixel number <init_int_part> corresponding to recout

	 * pixel 1. Next recout pixel samples int part of <init + scaling ratio> and so on.

	 * All following calculations are based on this logic.

	 *

	 * Init calculated according to formula:

	 * 	init = (scaling_ratio + number_of_taps + 1) / 2

	 * 	init_bot = init + scaling_ratio

	 * 	to get pixel perfect combine add the fraction from calculating vp offset

	/*

	 * If viewport has non 0 offset and there are more taps than covered by init then

	 * we should decrease the offset and increase init so we are never sampling

	 * outside of viewport.

	/*

	 * If taps are sampling outside of viewport at end of recout and there are more pixels

	 * available in the surface we should increase the viewport size, regardless set vp to

	 * only what is used.

	/* We did all the math assuming we are scanning same direction as display does,

	 * however mirror/rotation changes how vp scans vs how it is offset. If scan direction

	 * is flipped we simply need to calculate offset from the other side of plane.

	 * Note that outside of viewport all scaling hardware works in recout space.

	/*

	 * recout full is what the recout would have been if we didnt clip

	 * the source plane at all. We only care about left(ro_lb) and top(ro_tb)

	 * offsets of recout within recout full because those are the directions

	 * we scan from and therefore the only ones that affect inits.

	/*

	 * Work in recout rotation since that requires less transformations

	/* Timing borders are part of vactive that we are also supposed to skip in addition

	 * to any stream dst offset. Since dm logic assumes dst is in addressable

	 * space we need to add the left and top borders to dst offsets temporarily.

	 * TODO: fix in DM, stream dst is supposed to be in vactive

 Calculate H and V active size */

 depends on h_active */

 depends on pixel format */

 depends on scaling ratios and recout, does not calculate offset yet */

 Stopgap for validation of ODM + MPO on one side of screen case */

	/*

	 * LB calculations depend on vp size, h/v_active and scaling ratios

	 * Setting line buffer pixel depth to 24bpp yields banding

	 * on certain displays, such as the Sharp 4k. 36bpp is needed

	 * to support SURFACE_PIXEL_FORMAT_GRPH_ARGB16161616 and

	 * SURFACE_PIXEL_FORMAT_GRPH_ABGR16161616 with actual > 10 bpc

	 * precision on at least DCN display engines. However, at least

	 * Carrizo with DCE_VERSION_11_0 does not like 36 bpp lb depth,

	 * so use only 30 bpp on DCE_VERSION_11_0. Testing with DCE 11.2 and 8.3

	 * did not show such problems, so this seems to be the exception.

 Try 24 bpp linebuffer */

	/*

	 * Depends on recout, scaling ratios, h_active and taps

	 * May need to re-check lb size after this in some obscure scenario

	/*

	 * Handle side by side and top bottom 3d recout offsets after vp calculation

	 * since 3d is special and needs to calculate vp as if there is no recout offset

	 * This may break with rotation, good thing we aren't mixing hw rotation and 3d

 Clamp minimum viewport size */

	/*

	 * We add a preferred pipe mapping to avoid the chance that

	 * MPCCs already in use will need to be reassigned to other trees.

	 * For example, if we went with the strict, assign backwards logic:

	 *

	 * (State 1)

	 * Display A on, no surface, top pipe = 0

	 * Display B on, no surface, top pipe = 1

	 *

	 * (State 2)

	 * Display A on, no surface, top pipe = 0

	 * Display B on, surface enable, top pipe = 1, bottom pipe = 5

	 *

	 * (State 3)

	 * Display A on, surface enable, top pipe = 0, bottom pipe = 5

	 * Display B on, surface enable, top pipe = 1, bottom pipe = 4

	 *

	 * The state 2->3 transition requires remapping MPCC 5 from display B

	 * to display A.

	 *

	 * However, with the preferred pipe logic, state 2 would look like:

	 *

	 * (State 2)

	 * Display A on, no surface, top pipe = 0

	 * Display B on, surface enable, top pipe = 1, bottom pipe = 4

	 *

	 * This would then cause 2->3 to not require remapping any MPCCs.

	/*

	 * search backwards for the second pipe to keep pipe

	 * assignment more consistent

/*

 * A free_pipe for a stream is defined here as a pipe

 * that has no surface attached yet

 Re-use pipe already acquired for this stream if available*/

	/*

	 * At this point we have no re-useable pipe for this stream and we need

	 * to acquire an idle one to satisfy the request

 retain new surface, but only once per stream */

 assign new surfaces*/

 release pipe for plane*/

			/* Second condition is to avoid setting NULL to top pipe

			 * of tail pipe making it look like head pipe in subsequent

			 * deletes

			/*

			 * For head pipe detach surfaces from pipe for tail

			 * pipe just zero it out

 Start at the plane we've just released, and move all the planes one index forward to "trim" the array */

 If output color space is changed, need to reprogram info frames */

/*

 * dc_is_stream_unchanged() - Compare two stream states for equivalence.

 *

 * Checks if there a difference between the two states

 * that would require a mode change.

 *

 * Does not compare cursor position or attributes.

/*

 * dc_is_stream_scaling_unchanged() - Compare scaling rectangles of two streams.

 TODO: release audio object */

we have enough audio endpoint, find the matching inst*/

 use engine id to find free audio */

not found the matching one, first come first serve*/

/*

 * dc_add_stream_to_ctx() - Add a new dc_stream_state to a dc_state.

/*

 * dc_remove_stream_from_ctx() - Remove a stream from a dc_state.

 Release primary pipe */

 Release link encoder from stream in new dc_state. */

 Trim back arrays */

 We are looking for non dp, non virtual stream */

 update actual pixel clock on all streams */

 Check for enabled DIG to identify enabled display */

 tg_inst not found

 Read DPP->MPCC->OPP Pipe from HW State

 TODO: Check Linux */

 hw resource was assigned to other stream */

 acquire new resources */

	/* Allocate DP HPO Stream Encoder based on signal, hw capabilities

	 * and link settings

 TODO: Add check if ASIC support and EDID audio */

		/*

		 * Audio assigned in order first come first get.

		 * There are asics which has number of audio

		 * resources less then number of pipes

 Add ABM to the resource if on EDP */

/**

 * dc_resource_state_copy_construct_current() - Creates a new dc_state from existing state

 * Is a shallow copy.  Increments refcounts on existing streams and planes.

 * @dc: copy out of dc->current_state

 * @dst_ctx: copy into this

/**

 * dc_validate_global_state() - Determine if HW can support a given state

 * Checks HW resource availability and bandwidth requirement.

 * @dc: dc struct for this driver

 * @new_ctx: state to be validated

 * @fast_validate: set to true if only yes/no to support matters

 *

 * Return: DC_OK if the result can be programmed.  Otherwise, an error code.

	/*

	 * Update link encoder to stream assignment.

	 * TODO: Split out reason allocation from validation.

			/* Switch to dp clock source only if there is

			 * no non dp stream that shares the same timing

			 * with the dp stream.

 For gamut we recalc checksum */

start of the Gamut data. */

 Initialize header */

	/* InfoFrameVersion_3 is defined by CEA861F (Section 6.4), but shall

	/*

	 * IDO-defined (Y2,Y1,Y0 = 1,1,1) shall not be used by devices built

	 * according to HDMI 2.0 spec (Section 10.1)

 Y0_Y1_Y2 : The pixel encoding */

 H14b AVI InfoFrame has extension on Y-field from 2 bits to 3 bits */

 A0 = 1 Active Format Information valid */

 B0, B1 = 3; Bar info data is valid */

 S0, S1 : Underscan / Overscan */

 TODO: un-hardcode scan type */

 C0, C1 : Colorimetry */

 TODO: un-hardcode aspect ratio */

 Active Format Aspect ratio - same as Picture Aspect Ratio. */

 TODO: un-hardcode cn0_cn1 and itc */

 TODO : We should handle YCC quantization */

 but we do not have matrix calculation */

todo, add 3DStereo support*/

 Based on HDMI specs hdmi vic needs to be converted to cea vic when 3D is enabled

 If VIC >= 128, the Source shall use AVI InfoFrame Version 3*/

	/* If (C1, C0)=(1, 1) and (EC2, EC1, EC0)=(1, 1, 1),

	 * the Source shall use 20 AVI InfoFrame Version 4

	/* pixel repetition

	 * PR0 - PR3 start from 0 whereas pHwPathMode->mode.timing.flags.pixel

	/* Bar Info

	 * barTop:    Line Number of End of Top Bar.

	 * barBottom: Line Number of Start of Bottom Bar.

	 * barLeft:   Pixel Number of End of Left Bar.

    /* Additional Colorimetry Extension

     * Used in conduction with C0-C1 and EC0-EC2

     * 0 = DCI-P3 RGB (D65)

     * 1 = DCI-P3 RGB (theater)

 check_sum - Calculate AFMT_AVI_INFO0 ~ AFMT_AVI_INFO3 */

 one byte complement */

 Store in hw_path_mode */

 SPD info packet for FreeSync */

	/* Check if Freesync is supported. Return if false. If true,

	 * set the corresponding bit in the info packet

 SPD info packet for FreeSync */

	/* Check if Freesync is supported. Return if false. If true,

	 * set the corresponding bit in the info packet

 HDR Static Metadata info packet for HDR10 */

 context refcount should not be overridden */

 default all packets to invalid */

 HDMi and DP have different info packets*/

 acquire new resources */

/*

 * Note: We need to disable output if clock sources change,

 * since bios does optimization and doesn't apply if changing

 * PHY when not already disabled.

 DIG link encoder resource assignment for stream changed. */

	/* special case - Formatter can only reduce by 4 bits at most.

	 * When reducing from 12 to 6 bits,

	 * HW recommends we use trunc with round mode

	 * (if we did nothing, trunc to 10 bits would be used)

	 * note that any 12->10 bit reduction is ignored prior to DCE8,

	 * as the input was 10 bits.

	/* spatial dither

	 * note that spatial modes 1-3 are never used



 temporal dither



 TODO: validate audio ASIC caps, encoder */

 check if surface has invalid dimensions */

 TODO For now validates pixel format only */

original logic when no audio info*/

audio sample packet AP = .25 for layout0, 1 for layout1*/

dts takes the same as type 2: AP = 0.25*/

check which one take more bandwidth*/

AP =1*/

not support*/

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

/**

 * DOC: Overview

 *

 * DC is the OS-agnostic component of the amdgpu DC driver.

 *

 * DC maintains and validates a set of structs representing the state of the

 * driver and writes that state to AMD hardware

 *

 * Main DC HW structs:

 *

 * struct dc - The central struct.  One per driver.  Created on driver load,

 * destroyed on driver unload.

 *

 * struct dc_context - One per driver.

 * Used as a backpointer by most other structs in dc.

 *

 * struct dc_link - One per connector (the physical DP, HDMI, miniDP, or eDP

 * plugpoints).  Created on driver load, destroyed on driver unload.

 *

 * struct dc_sink - One per display.  Created on boot or hotplug.

 * Destroyed on shutdown or hotunplug.  A dc_link can have a local sink

 * (the display directly attached).  It may also have one or more remote

 * sinks (in the Multi-Stream Transport case)

 *

 * struct resource_pool - One per driver.  Represents the hw blocks not in the

 * main pipeline.  Not directly accessible by dm.

 *

 * Main dc state structs:

 *

 * These structs can be created and destroyed as needed.  There is a full set of

 * these structs in dc->current_state representing the currently programmed state.

 *

 * struct dc_state - The global DC state to track global state information,

 * such as bandwidth values.

 *

 * struct dc_stream_state - Represents the hw configuration for the pipeline from

 * a framebuffer to a display.  Maps one-to-one with dc_sink.

 *

 * struct dc_plane_state - Represents a framebuffer.  Each stream has at least one,

 * and may have more in the Multi-Plane Overlay case.

 *

 * struct resource_context - Represents the programmable state of everything in

 * the resource_pool.  Not directly accessible by dm.

 *

 * struct pipe_ctx - A member of struct resource_context.  Represents the

 * internal hardware pipeline components.  Each dc_plane_state has either

 * one or two (in the pipe-split case).

/*******************************************************************************

 * Private functions

 next BIOS object table connector */

 Create a link for each usb4 dpia port */

 FPGA case - Allocate HPO DP link encoder */

/* Create additional DIG link encoder objects if fewer than the platform

 * supports were created during link construction. This can happen if the

 * number of physical connectors is less than the number of DIGs.

	/* A platform without USB4 DPIA endpoints has a fixed mapping between DIG

	 * link encoders and physical display endpoints and does not require

	 * additional link encoder objects.

	/* Create as many link encoder objects as the platform supports. DPIA

	 * endpoints can be programmably mapped to any DIG.

/* Destroy any additional DIG link encoder objects created by

 * create_link_encoders().

 * NB: Must only be called after destroy_links().

	/* A platform without USB4 DPIA endpoints has a fixed mapping between DIG

	 * link encoders and physical display endpoints and does not require

	 * additional link encoder objects.

/**

 *  dc_stream_adjust_vmin_vmax:

 *

 *  Looks up the pipe context of dc_stream_state and updates the

 *  vertical_total_min and vertical_total_max of the DRR, Dynamic Refresh

 *  Rate, which is a power-saving feature that targets reducing panel

 *  refresh rate while the screen is static

 *

 *  @dc:     dc reference

 *  @stream: Initial dc stream state

 *  @adjust: Updated parameters for vertical_total_min and vertical_total_max

/**

 *****************************************************************************

 *  Function: dc_stream_get_last_vrr_vtotal

 *

 *  @brief

 *     Looks up the pipe context of dc_stream_state and gets the

 *     last VTOTAL used by DRR (Dynamic Refresh Rate)

 *

 *  @param [in] dc: dc reference

 *  @param [in] stream: Initial dc stream state

 *  @param [in] adjust: Updated parameters for vertical_total_min and

 *  vertical_total_max

 *****************************************************************************

			/* Only execute if a function pointer has been defined for

			 * the DC version in question

 TODO: Support multiple streams */

crc window can't be null*/

set crc window*/

 Stream not found */

set mux routing info*/

 Stream not found */

set mux routing info*/

/**

 * dc_stream_configure_crc() - Configure CRC capture for the given stream.

 * @dc: DC Object

 * @stream: The stream to configure CRC on.

 * @enable: Enable CRC if true, disable otherwise.

 * @crc_window: CRC window (x/y start/end) information

 * @continuous: Capture CRC on every frame if true. Otherwise, only capture

 *              once.

 *

 * By default, only CRC0 is configured, and the entire frame is used to

 * calculate the crc.

 Stream not found */

 By default, capture the full frame */

 Default to the union of both windows */

 Only call if supported */

/**

 * dc_stream_get_crc() - Get CRC values for the given stream.

 * @dc: DC object

 * @stream: The DC stream state of the stream to get CRCs from.

 * @r_cr: CRC value for the first of the 3 channels stored here.

 * @g_y:  CRC value for the second of the 3 channels stored here.

 * @b_cb: CRC value for the third of the 3 channels stored here.

 *

 * dc_stream_configure_crc needs to be called beforehand to enable CRCs.

 * Return false if stream is not found, or if CRCs are not enabled.

 Stream not found */

 OPP FMT dyn expansion updates*/

 Create logger */

 Allocate memory for the vm_helper

	/* Resource should construct all asic specific resources.

	 * This should be the only place where we need to parse the asic id

 Create BIOS parser */

 Create GPIO service */

 set i2c speed if not done by the respective dcnxxx__resource.c */

	/* Creation of current_state must occur after dc->dml

	 * is initialized in dc_create_resource_pool because

	 * on creation it copies the contents of dc->dml

	/* Create additional DIG link encoder objects if fewer than the platform

	 * supports were created during link construction.

 Initialise DIG link encoder resource tracking variables. */

 Checks if interdependent update function pointer is NULL or not, takes care of DCE110 case */

 Copied conditions that were previously in dce110_apply_ctx_for_surface

 check if timing_changed, disable stream*/

 only looking for first odm pipe

 Timeout 100 ms */

 Must set to false to start with, due to OR in update function */

/*******************************************************************************

 * Public functions

 Populate versioning information */

		/* Add tg to the set, search rest of the tg's for ones with

		 * same timing, add all tgs with same timing to the group

 set first unblanked pipe as master */

 remove any other unblanked pipes as they have already been synced */

 Support seamless boot on EDP displays only */

 Check for enabled DIG to identify enabled display */

 tg_inst not found

 block DSC for now, as VBIOS does not currently support DSC timings */

/*

 * Applies given context to HW and copy it into current context.

 * It's up to the user to release the src context afterwards.

	/* re-program planes for existing stream, in case we need to

	 * free up plane resource for later use

 use new pipe config in new context */

 Program hardware */

 Program all planes within new context*/

		/*

		 * enable stereo

		 * TODO rework dc_enable_stereo call to work with validation sets?

 Must wait for no flips to be pending before doing optimize bw */

 pplib is notified if disp_num changed */

find pipe idx for the given stream*/

for release pipe_idx is not required*/

 Must set to false to start with, due to OR in update function */

/* Perform updates here which need to be deferred until next vupdate

 *

 * i.e. blnd lut, 3dlut, and shaper lut bypass regs are double buffered

 * but forcing lut memory to shutdown state is immediate. This causes

 * single frame corruption as lut gets disabled mid-frame unless shutdown

 * is deferred until after entering bypass.

 CONFIG_DRM_AMD_DC_DCN */

	/* Each context must have their own instance of VBA and in order to

	 * initialize and obtain IP and SOC the base DML instance from DC is

	 * initially copied into every context

		/* During DCC on/off, stutter period is calculated before

		 * DCC has fully transitioned. This results in incorrect

		 * stutter period calculation. Triggering a full update will

		 * recalculate stutter period.

		/* different bytes per element will require full bandwidth

		 * and DML calculation

		/* todo: below are HW dependent, we should add a hook to

		 * DCE/N resource and validated there.

			/* swizzled mode requires RQ to be setup properly,

			 * thus need to run DML to calculate RQ settings

 This should be UPDATE_TYPE_FAST if nothing has changed. */

 Making dst rect smaller requires a bandwidth change */

 Making src rect bigger requires a bandwidth change */

 Reset all flags

 some stream updates require passive update */

/*

 * dc_check_update_surfaces_for_stream() - Determine update type (fast, med, or full)

 *

 * See :c:type:`enum surface_update_type <surface_update_type>` for explanation of update types

 If there's an available clock comparator, we use that.

 Else we fallback to mem compare.

	/* Note: this being updated after mode set is currently not a use case

	 * however if it arises OCSC would need to be reprogrammed at the

	 * minimum

 update current stream with writeback info */

 Use temporarry context for validating new DSC config */

 Stream updates

 Full fe update*/

 for dpms, keep acquired resources*/

 if otg funcs defined check if blanked before programming

		/* Optimize seamless boot flag keeps clocks and watermarks high until

		 * first flip. After first flip, optimization is required to lower

		 * bandwidth. Important to note that it is expected UEFI will

		 * only light up a single display on POST, therefore we only expect

		 * one stream with seamless boot flag set.

		/* Lock the top pipe while updating plane addrs, since freesync requires

		 *  plane addr update event triggers to be synchronized.

		 *  top_pipe_to_program is expected to never be NULL

 Stream updates

		/*

		 * In case of turning off screen, no need to program front end a second time.

		 * just return after program blank.

set logical flag for lock/unlock use*/

triple buffer for VUpdate  only*/

 force vsync flip when reconfiguring pipes to prevent underflow */

 Update Type FULL, Surface updates

 Full fe update*/

turn off triple buffer for full update*/

 Update Type FAST, Surface updates

 GSL has to be used for flip immediate

 Perform requested Updates */

program triple buffer after lock based on flip type*/

only enable triplebuffer for  fast_update*/

 Fire manual trigger only when bottom plane is flipped

 initialize scratch memory for building context */

		/*

		 * Previous frame finished and HW is ready for optimization.

		 *

		 * Only relevant for DCN behavior where we can guarantee the optimization

		 * is safe to apply - retain the legacy behavior for DCE.

update current_State*/

 Legacy optimization path for DCE. */

/*

 * dc_interrupt_set() - Enable/disable an AMD hw interrupt source

		/* Zero out the current context so that on resume we start with

		 * clean state, and dc hw programming optimizations will not

		 * cause any trouble.

 Preserve refcount */

 Preserve display mode lib */

/*

 * dc_link_add_remote_sink() - Create a sink and attach it to an existing link

 *

 * EDID length is in bytes

	/*

	 * Treat device as no EDID device if EDID

	 * parsing fails

/*

 * dc_link_remove_remote_sink() - Remove a remote sink from a dc_link

 *

 * Note that this just removes the struct dc_sink - it doesn't

 * program hardware or alter other members of dc_link

 shrink array to remove empty place */

 enable/disable eDP PSR without specify stream for eDP */

/*

 * blank all streams, and set min and max memory clock to

 * lowest and highest DPM level, respectively

/*

 * set min memory clock to the min required for current mode,

 * max to maxDPM, and unblank streams

 cleanup on driver unload */

/**

 * dc_enable_dmub_notifications - Returns whether dmub notification can be enabled

 * @dc: dc structure

 *

 * Returns: True to enable dmub notifications, False otherwise

 YELLOW_CARP B0 USB4 DPIA needs dmub notifications for interrupts */

 dmub aux needs dmub notifications to be enabled */

/**

 * dc_process_dmub_aux_transfer_async - Submits aux command to dmub via inbox message

 *                                      Sets port index appropriately for legacy DDC

 * @dc: dc structure

 * @link_index: link index

 * @payload: aux payload

 *

 * Returns: True if successful, False if failure

 For dpia, ddc_pin is set to NULL */

 set aux action */

		/* ddc_hw_inst has dpia port index for dpia links

		 * and ddc instance for legacy links

/**

 *****************************************************************************

 *  Function: dc_process_dmub_set_config_async

 *

 *  @brief

 *		Submits set_config command to dmub via inbox message

 *

 *  @param

 *		[in] dc: dc structure

 *		[in] link_index: link index

 *		[in] payload: aux payload

 *		[out] notify: set_config immediate reply

 *

 *	@return

 *		True if successful, False if failure

 *****************************************************************************

 prepare SET_CONFIG command */

 command is not processed by dmub */

 command processed by dmub, if ret_status is 1, it is completed instantly */

 cmd pending, will receive notification via outbox */

/**

 *****************************************************************************

 *  Function: dc_process_dmub_set_mst_slots

 *

 *  @brief

 *		Submits mst slot allocation command to dmub via inbox message

 *

 *  @param

 *		[in] dc: dc structure

 *		[in] link_index: link index

 *		[in] mst_alloc_slots: mst slots to be allotted

 *		[out] mst_slots_in_use: mst slots in use returned in failure case

 *

 *	@return

 *		DC_OK if successful, DC_ERROR if failure

 *****************************************************************************

 prepare MST_ALLOC_SLOTS command */

 command is not processed by dmub */

 command processed by dmub, if ret_status is 1 */

 command processing error */

 command processed and we have a status of 2, mst not enabled in dpia */

 previously configured mst alloc and used slots did not match */

/**

 * dc_disable_accelerated_mode - disable accelerated mode

 * @dc: dc structure

/**

 *****************************************************************************

 *  dc_notify_vsync_int_state() - notifies vsync enable/disable state

 *  @dc: dc structure

 *	@stream: stream where vsync int state changed

 *	@enable: whether vsync is enabled or disabled

 *

 *  Called when vsync is enabled/disabled

 *	Will notify DMUB to start/stop ABM interrupts after steady state is reached

 *

 *****************************************************************************

find primary pipe associated with stream*/

 Determine panel inst */

 SPDX-License-Identifier: MIT

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* Configure link as prescribed in link_setting; set LTTPR mode; and

 * Initialize link training settings.

 * Abort link training if sink unplug detected.

 *

 * @param link DPIA link being trained.

 * @param[in] link_setting Lane count, link rate and downspread control.

 * @param[out] lt_settings Link settings and drive settings (voltage swing and pre-emphasis).

 Configure lttpr mode */

 Set link rate, lane count and spread. */

 prepare set_config payload */

 set_config should return ACK if successful */

 Build SET_CONFIG message data payload for specified message type. */

 Assume all lanes have same drive settings. */

 Message type not supported by helper function. */

 Convert DC training pattern to DPIA training stage. */

 TPS not supported by helper function. */

 Write training pattern to DPCD. */

 DpcdAddress_TrainingPatternSet */

/* Execute clock recovery phase of link training for specified hop in display

 * path.in non-transparent mode:

 * - Driver issues both DPCD and SET_CONFIG transactions.

 * - TPS1 is transmitted for any hops downstream of DPOA.

 * - Drive (VS/PE) only transmitted for the hop immediately downstream of DPOA.

 * - CR for the first hop (DPTX-to-DPIA) is assumed to be successful.

 *

 * @param link DPIA link being trained.

 * @param lt_settings link_setting and drive settings (voltage swing and pre-emphasis).

 * @param hop The Hop in display path. DPRX = 0.

 Number of hops/repeaters in display path. */

 Number of consecutive attempts with same VS or PE. */

 From DP spec, CR read interval is always 100us. */

	/* Cap of LINK_TRAINING_MAX_CR_RETRY attempts at clock recovery.

	 * Fix inherited from perform_clock_recovery_sequence() -

	 * the DP equivalent of this function:

	 * Required for Synaptics MST hub which can put the LT in

	 * infinite loop by switching the VS between level 0 and level 1

	 * continuously.

 DPTX-to-DPIA */

			/* Send SET_CONFIG(SET_LINK:LC,LR,LTTPR) to notify DPOA that

			 * non-transparent link training has started.

			 * This also enables the transmission of clk_sync packets.

			/* CR for this hop is considered successful as long as

			 * SET_CONFIG message is acknowledged by DPOA.

 DPOA-to-x */

 Instruct DPOA to transmit TPS1 then update DPCD. */

		/* Update DPOA drive settings then DPCD. DPOA does only adjusts

		 * drive settings for hops immediately downstream.

 Read status and adjustment requests from DPCD. */

 Check if clock recovery successful. */

		/* Count number of attempts with same drive settings.

		 * Note: settings are the same for all lanes,

		 * so comparing first lane is sufficient.

 Update VS/PE. */

 Abort link training if clock recovery failed due to HPD unplug. */

/* Execute clock recovery phase of link training in transparent LTTPR mode:

 * - Driver only issues DPCD transactions and leaves USB4 tunneling (SET_CONFIG) messages to DPIA.

 * - Driver writes TPS1 to DPCD to kick off training.

 * - Clock recovery (CR) for link is handled by DPOA, which reports result to DPIA on completion.

 * - DPIA communicates result to driver by updating CR status when driver reads DPCD.

 *

 * @param link DPIA link being trained.

 * @param lt_settings link_setting and drive settings (voltage swing and pre-emphasis).

 Number of consecutive attempts with same VS or PE. */

	/* Cap of LINK_TRAINING_MAX_CR_RETRY attempts at clock recovery.

	 * Fix inherited from perform_clock_recovery_sequence() -

	 * the DP equivalent of this function:

	 * Required for Synaptics MST hub which can put the LT in

	 * infinite loop by switching the VS between level 0 and level 1

	 * continuously.

		/* Write TPS1 (not VS or PE) to DPCD to start CR phase.

		 * DPIA sends SET_CONFIG(SET_LINK) to notify DPOA to

		 * start link training.

 Read status and adjustment requests from DPCD. */

 Check if clock recovery successful. */

		/* Count number of attempts with same drive settings.

		 * Note: settings are the same for all lanes,

		 * so comparing first lane is sufficient.

 Update VS/PE. */

 Abort link training if clock recovery failed due to HPD unplug. */

/* Execute clock recovery phase of link training for specified hop in display

 * path.

 *

 * @param link DPIA link being trained.

 * @param lt_settings link_setting and drive settings (voltage swing and pre-emphasis).

 * @param hop The Hop in display path. DPRX = 0.

 Return status read interval during equalization phase. */

 Check debug option for extending aux read interval. */

/* Execute equalization phase of link training for specified hop in display

 * path in non-transparent mode:

 * - driver issues both DPCD and SET_CONFIG transactions.

 * - TPSx is transmitted for any hops downstream of DPOA.

 * - Drive (VS/PE) only transmitted for the hop immediately downstream of DPOA.

 * - EQ for the first hop (DPTX-to-DPIA) is assumed to be successful.

 * - DPRX EQ only reported successful when both DPRX and DPIA requirements

 * (clk sync packets sent) fulfilled.

 *

 * @param link DPIA link being trained.

 * @param lt_settings link_setting and drive settings (voltage swing and pre-emphasis).

 * @param hop The Hop in display path. DPRX = 0.

 Number of hops/repeaters in display path. */

	/* Training pattern is TPS4 for repeater;

	 * TPS2/3/4 for DPRX depending on what it supports.

 DPTX-to-DPIA equalization always successful. */

 Instruct DPOA to transmit TPSn then update DPCD. */

		/* Update DPOA drive settings then DPCD. DPOA only adjusts

		 * drive settings for hop immediately downstream.

		/* Extend wait time on second equalisation attempt on final hop to

		 * ensure clock sync packets have been sent.

 Read status and adjustment requests from DPCD. */

 CR can still fail during EQ phase. Fail training if CR fails. */

 Update VS/PE. */

 Abort link training if equalization failed due to HPD unplug. */

/* Execute equalization phase of link training for specified hop in display

 * path in transparent LTTPR mode:

 * - driver only issues DPCD transactions leaves USB4 tunneling (SET_CONFIG) messages to DPIA.

 * - driver writes TPSx to DPCD to notify DPIA that is in equalization phase.

 * - equalization (EQ) for link is handled by DPOA, which reports result to DPIA on completion.

 * - DPIA communicates result to driver by updating EQ status when driver reads DPCD.

 *

 * @param link DPIA link being trained.

 * @param lt_settings link_setting and drive settings (voltage swing and pre-emphasis).

 * @param hop The Hop in display path. DPRX = 0.

 Read status and adjustment requests from DPCD. */

 CR can still fail during EQ phase. Fail training if CR fails. */

 Update VS/PE. */

 Abort link training if equalization failed due to HPD unplug. */

/* Execute equalization phase of link training for specified hop in display

 * path.

 *

 * @param link DPIA link being trained.

 * @param lt_settings link_setting and drive settings (voltage swing and pre-emphasis).

 * @param hop The Hop in display path. DPRX = 0.

 End training of specified hop in display path. */

/* End training of specified hop in display path.

 *

 * In transparent LTTPR mode:

 * - driver clears training pattern for the specified hop in DPCD.

 * In non-transparent LTTPR mode:

 * - in addition to clearing training pattern, driver issues USB4 tunneling

 * (SET_CONFIG) messages to notify DPOA when training is done for first hop

 * (DPTX-to-DPIA) and last hop (DPRX).

 *

 * @param link DPIA link being trained.

 * @param hop The Hop in display path. DPRX = 0.

 Number of hops/repeaters in display path. */

 DPTX-to-DPIA */

			/* Send SET_CONFIG(SET_TRAINING:0xff) to notify DPOA that

			 * DPTX-to-DPIA hop trained. No DPCD write needed for first hop.

 DPOA-to-x */

 Write 0x0 to TRAINING_PATTERN_SET */

 Notify DPOA that non-transparent link training of DPRX done. */

 non-LTTPR or transparent LTTPR. */

 Write 0x0 to TRAINING_PATTERN_SET */

/* When aborting training of specified hop in display path, clean up by:

 * - Attempting to clear DPCD TRAINING_PATTERN_SET, LINK_BW_SET and LANE_COUNT_SET.

 * - Sending SET_CONFIG(SET_LINK) with lane count and link rate set to 0.

 *

 * @param link DPIA link being trained.

 * @param hop The Hop in display path. DPRX = 0.

 Abandon clean-up if sink unplugged. */

 Number of hops/repeaters in display path. */

 Current hop. */

 Configure link as prescribed in link_setting and set LTTPR mode. */

	/* Train each hop in turn starting with the one closest to DPTX.

	 * In transparent or non-LTTPR mode, train only the final hop (DPRX).

 Clock recovery. */

 Equalization. */

 Stop training hop. */

	/* Double-check link status if training successful; gracefully abort

	 * training of current hop if training failed due to message tunneling

	 * failure; end training of hop if training ended conventionally and

	 * falling back to lower bandwidth settings possible.

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*******************************************************************************

 * Private functions

 Copy audio modes */

 TODO - Remove this translation */

		/* TODO - WindowDM has implemented,

 EDID CAP translation for HDMI 2.0 */

 If using dynamic encoder assignment, wait till stream committed to assign encoder. */

/**

 * dc_stream_get_status_from_state - Get stream status from given dc state

 * @state: DC state to find the stream status in

 * @stream: The stream to get the stream status for

 *

 * The given stream is expected to exist in the given dc state. Otherwise, NULL

 * will be returned.

/**

 * dc_stream_get_status() - Get current stream status of the given stream state

 * @stream: The stream to get the stream status for.

 *

 * The given stream is expected to exist in dc->current_state. Otherwise, NULL

 * will be returned.

/*

 * dc_optimize_timing_for_fsft() - dc to optimize timing

/*

 * dc_stream_set_cursor_attributes() - Update cursor attributes and set cursor surface address

 disable idle optimizations while updating cursor */

 re-enable idle optimizations if necessary */

 disable idle optimizations if enabling cursor */

 re-enable idle optimizations if necessary */

 recalculate and apply DML parameters */

dynamic update*/

 enable writeback */

 writeback pipe already enabled, only need to update */

 Enable writeback pipe from scratch*/

	stream->writeback_info[dwb_pipe_inst].wb_enabled = false;

dynamic update*/

 remove writeback info for disabled writeback pipes from stream */

 trim the array */

 recalculate and apply DML parameters */

 disable writeback */

 Stream not found, by default we'll assume HUBP fetched dm data */

 Dynamic metadata is only supported on HDMI or DP */

 Check hardware support */

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Partition the entire DPCD address space

 * XXX: This partitioning must cover the entire DPCD address space,

 * and must contain no gaps or overlapping address ranges.

	/*

	 * The FEC registers are contiguous

 all remaining DPCD addresses */

	/*

	 * find current partition

	 * this loop spins forever if partition map above is not surjective

/*

 * Ranges of DPCD addresses that must be read in a single transaction

 * XXX: Do not allow any two address ranges in this array to overlap

/*

 * extend addresses to read all mandatory blocks together

/*

 * Reduce the AUX reply down to the values the caller requested

	/*

	 * If the address is same, address was not extended.

	 * So we do not need to free any memory.

	 * The data is in original buffer(reduced_data).

 size of the remaining partitioned address space */

 size of the next partition to be read from */

/*

 * Copyright 2012-17 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Truncate 8-bit signed value to 6-bit signed value */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Author: AMD

 This module's internal functions */

 default DSC policy target bitrate limit is 16bpp */

 default DSC policy enables DSC only when needed */

 Forward Declerations */

 Mask bpp increment dpcd field to avoid reading other fields

		/* dsc_bpp_increment_div should onl be 1, 2, 4, 8 or 16, but rather than rejecting invalid values,

		 * we'll accept all and get it into range. This also makes the above check against 0 redundant,

		 * but that one stresses out the override will be only used if it's not 0.

 Extended caps */

 branch decoder DPCD DSC data can be null for non branch device

/* If DSC is possbile, get DSC bandwidth range based on [min_bpp, max_bpp] target bitrate range and

 * timing's pixel clock and uncompressed bandwidth.

 * If DSC is not possible, leave '*range' untouched.

 This is a static HW query, so we can use any DSC

/* Returns 'false' if no intersection was found for at least one capability.

 * It also implicitly validates some sink caps against invalid value of zero.

 TODO DSC: Remove this workaround for N422 and 420 once it's fixed, or move it to get_dsc_encoder_caps()

/* Decide DSC bandwidth range based on signal, timing, specs specific and input min and max

 * requirements.

 * The range output includes decided min/max target bpp, the respective bandwidth requirements

 * and native timing bandwidth requirement when DSC is not used.

 apply signal, timing, specs and explicitly specified DSC range requirements */

 populate output structure */

 native stream bandwidth */

 max dsc target bpp */

 min dsc target bpp */

/* Decides if DSC should be used and calculates target bpp if it should, applying DSC policy.

 *

 * Returns:

 *     - 'true' if target bpp is decided

 *     - 'false' if target bpp cannot be decided (e.g. cannot fit even with min DSC bpp),

 enable max bpp even dsc is not needed */

 use max target bpp allowed */

 use target bpp that can take entire target bandwidth */

 Increment sice number in available sice numbers stops if possible, or just increment if not

 Get next bigger num slices available in common caps

 No available slices found

 Numbers of slices found - get the next bigger number

 No biger number of slices found

 Decrement sice number in available sice numbers stops if possible, or just decrement if not. Stop at zero.

 Get next bigger num slices available in common caps

 No numbers of slices found

 Numbers of slices found - get the next smaller number

 No smaller number of slices found

 Choose next bigger number of slices if the requested number of slices is not available

 Get next bigger num slices available in common caps

 No available slices found

 Numbers of slices found - get the equal or next bigger number

/* Attempts to set DSC configuration for the stream, applying DSC policy.

 * Returns 'true' if successful or 'false' if not.

 *

 * Parameters:

 *

 * dsc_sink_caps       - DSC sink decoder capabilities (from DPCD)

 *

 * dsc_enc_caps        - DSC encoder capabilities

 *

 * target_bandwidth_kbps  - Target bandwidth to fit the stream into.

 *                          If 0, do not calculate target bpp.

 *

 * timing              - The stream timing to fit into 'target_bandwidth_kbps' or apply

 *                       maximum compression to, if 'target_badwidth == 0'

 *

 * dsc_cfg             - DSC configuration to use if it was possible to come up with

 *                       one for the given inputs.

 *                       The target bitrate after DSC can be calculated by multiplying

 *                       dsc_cfg.bits_per_pixel (in U6.4 format) by pixel rate, e.g.

 *

 *                       dsc_stream_bitrate_kbps = (int)ceil(timing->pix_clk_khz * dsc_cfg.bits_per_pixel / 16.0);

 Intersect decoder with encoder DSC caps and validate DSC settings

 Validate available DSC settings against the mode timing

 Validate color format (and pick up the throughput values)

 Validate branch's maximum throughput

 Color depth

 Slice width (i.e. number of slices per line)

 DSC TODO: Maybe try increasing the number of slices first?

 Fall back to max slices if min slices is not working out

 Fall back to min slices if max slices is not possible

 Slice height (i.e. number of slices per column): start with policy and pick the first one that height is divisible by.

 For 4:2:0 make sure the slice height is divisible by 2 as well.

 For the case when pic_height < dsc_policy.min_sice_height

 Final decission: can we do DSC or not?

 Fill out the rest of DSC settings

 use target bpp that can take entire target bandwidth */

 DSC Policy: Use minimum number of slices that fits the pixel clock */

	/* DSC Policy: Use max available slices

	 * (in our case 4 for or 8, depending on the mode)

	/* DSC Policy: Use slice height recommended

	 * by VESA DSC Spreadsheet user guide

	/* DSC Policy: follow DP specs with an internal upper limit to 16 bpp

	 * for better interoperability

 assume no YCbCr422 native support */

 DP specs limits to 8 */

 DP specs limits to 3 x bpc */

 DP specs limits to 6 */

 DP specs limits to 1.5 x bpc assume bpc is an even number */

 internal upper limit, default 16 bpp */

 apply override */

 enable DSC when not needed, default false */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/**

 * calc_rc_params - reads the user's cmdline mode

 * @rc: DC internal DSC parameters

 * @pps: DRM struct with all required DSC values

 *

 * This function expects a drm_dsc_config data struct with all the required DSC

 * values previously filled out by our driver and based on this information it

 * computes some of the DSC values.

 *

 * @note This calculation requires float point operation, most of it executes

 * under kernel_fpu_{begin,end}.

/**

 * calc_dsc_bytes_per_pixel - calculate bytes per pixel

 * @pps: DRM struct with all required DSC values

 *

 * Based on the information inside drm_dsc_config, this function calculates the

 * total of bytes per pixel.

 *

 * @note This calculation requires float point operation, most of it executes

 * under kernel_fpu_{begin,end}.

 *

 * Return:

 * Return the number of bytes per pixel

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

			/*

			 * program DPP DTO phase and modulo as below

			 * phase = ceiling(dpp_pipe_clk_mhz / 10)

			 * module = trunc(dpp_global_clk_mhz / 10)

			 *

			 * storing frequencies in registers allow dmcub fw

			 * to run time lower clocks when possible for power saving

			 *

			 * ceiling phase and truncate modulo guarentees the divided

			 * down per pipe dpp clock has high enough frequency

				/* phase > modulo result in screen corruption

				 * ie phase = 30, mod = 29 for 4k@60 HDMI

				 * in these case we don't want pipe clock to be divided

			/*

			 *  set phase to 10 if dpp isn't used to

			 *  prevent hard hang if access dpp register

			 *  on unused pipe

			 *

			 *  DTO should be on to divide down un-used

			 *  pipe clock for power saving

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 RBR

 HBR

HBR2

HBR3

TODO: need to implement a proper lane mapping for Renoir.

	/* set the flag to indicate whether driver poll the I2C data pin

	 * while doing the DP sink detect

/*	if (dal_adapter_service_is_feature_supported(as,

		FEATURE_DP_SINK_DETECT_POLL_DATA_PIN))

		enc10->base.features.flags.bits.

	/* For DCE 8.0 and 8.1, by design, UNIPHY is hardwired to DIG_BE.

	 * SW always assign DIG_FE 1:1 mapped to DIG_FE for non-MST UNIPHY.

	 * SW assign DIG_FE to non-MST UNIPHY first and MST last. So prefer

	 * DIG is per UNIPHY and used by SST DP, eDP, HDMI, DVI and LVDS.

	 * Prefer DIG assignment is decided by board design.

	 * For DCE 8.0, there are only max 6 UNIPHYs, we assume board design

	 * and VBIOS will filter out 7 UNIPHY for DCE 8.0.

	 * By this, adding DIGG should not hurt DCE 8.0.

	 * This will let DCE 8.1 share DCE 8.0 as much as possible

 default to one to mirror Windows behavior */

 Override features with DCE-specific values */

/*

 * Copyright 2016-2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

* Copyright 2018 Advanced Micro Devices, Inc.

 * Copyright 2019 Raptor Engineering, LLC

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

todo







 SRExitTime

Extra state, no dispclk ramping*/

/* begin *********************

 DCN */

 TODO awful hack. fixup dcn20_dwb.h */

 NBIO */

 MMHUB */

 4 audio endpoints.  4 audio streams

 maybe 3 because the last two used for USB-c

 only pipe 0 is read for voltage and dcf/soc clocks */

 WM Set D */

 WM Set C */

 WM Set B */

 WM Set A */

	/*

	 * DML favors voltage over p-state, but we're more interested in

	 * supporting p-state over voltage. We can't support p-state in

	 * prefetch mode > 0 so try capping the prefetch mode to start.

		/*

		 * If mode is unsupported or there's still no p-state support then

		 * fall back to favoring voltage.

		 *

		 * We don't actually support prefetch mode 2, so require that we

		 * at least support prefetch mode 1.

 We only support full screen mpo with ODM */

initialize pipe_just_split_from to invalid idx*/

 Skip 2nd half of already split pipe */

 pipe not split previously needs split */

 merge should already have been done */

 Actual dsc count per stream dsc validation*/

Unsafe due to current pipe merge and split logic*/

/*

 * Some of the functions further below use the FPU, so we need to wrap this

 * with DC_FP_START()/DC_FP_END(). Use the same approach as for

 * dcn20_validate_bandwidth in dcn20_resource.c.

 Copy dcn2_1_soc.clock_limits to clock_limits to avoid copying over null states later */

 loop backwards*/

 clk_table[1] is reserved for min DF PState.  skip here to fill in later. */

 fill in min DF PState */

 duplicate last level */

 RV1 support max 4 pipes */

 align to our worst case block width */

pool->base.res_cap = &res_cap_nv10_FPGA_2pipe_dsc;

	/*************************************************

	 *  Resource + asic cap harcoding                *

 max pipe num for ASIC before check pipe fuses */

1.4 w/a applied by default*/

 Color pipeline capabilities */

 no OGAM ROM on DCN2

 Init the vm_helper

	/*************************************************

	 *  Create resources                             *

 todo: not reuse phy_pll registers */

 mem input -> ipp -> dpp -> opp -> TG */

		/* if pipe is disabled, skip instance of HW pipe,

		 * i.e, skip ASIC register instance

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Temporary read settings, future will get values from kmd directly */

 work around for Renoir s0i3, if register is programmed, bypass golden init.

/* If user hotplug a HDMI monitor while in monitor off,

 * OS will do a mode set (with output timing) but keep output off.

 * In this case DAL will ask vbios to power up the pll in the PHY.

 * If user unplug the monitor (while we are on monitor off) or

 * system attempt to enter modern standby (which we will disable PLL),

 * PHY will hang on the next mode set attempt.

 * if enable PLL follow by disable PLL (without executing lane enable/disable),

 * RDPCS_PHY_DP_MPLLB_STATE remains 1,

 * which indicate that PLL disable attempt actually didn't go through.

 * As a workaround, insert PHY lane enable/disable before PLL disable.

/*

* Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * In DCN2.1, the non-double buffered version of the following 4 DLG registers are used in RTL.

 * As a result, if S/W updates any of these registers during a mode change,

 * the current frame before the mode change will use the new value right away

 * and can lead to generating incorrect request deadlines and incorrect TTU/QoS behavior.

 *

 * REFCYC_PER_VM_GROUP_FLIP[22:0]

 * REFCYC_PER_VM_GROUP_VBLANK[22:0]

 * REFCYC_PER_VM_REQ_FLIP[22:0]

 * REFCYC_PER_VM_REQ_VBLANK[22:0]

 *

 * REFCYC_PER_VM_*_FLIP affects the deadline of the VM requests generated

 * when flipping to a new surface

 *

 * REFCYC_PER_VM_*_VBLANK affects the deadline of the VM requests generated

 * during prefetch  period of a frame. The prefetch starts at a pre-determined

 * number of lines before the display active per frame

 *

 * DCN may underflow due to incorrectly programming these registers

 * during VM stage of prefetch/iflip. First lines of display active

 * or a sub-region of active using a new surface will be corrupted

 * until the VM data returns at flip/mode change transitions

 *

 * Work around:

 * workaround is always opt to use the more aggressive settings.

 * On any mode switch, if the new reg values are smaller than the current values,

 * then update the regs with the new values.

 *

 * Link to the ticket: http://ontrack-internal.amd.com/browse/DEDCN21-142

 *

	/* otg is locked when this func is called. Register are double buffered.

	 * disable the requestors is not needed

for stereo*/

 DC supports NV12 only at the moment */

 The format of high/low are 48:18 of the 48 bit addr

 Requester - Per hubp */

 DLG - Per hubp */

 DLG - Per luma/chroma */

 TTU - per hubp */

 TTU - per luma/chroma */

 Assumed surf0 is luma and 1 is chroma */

 Host VM deadline regs */

 TODO: remove after performance is stable.

 TODO: remove after performance is stable.

 TODO: remove after performance is stable.

 TODO: remove after performance is stable.

 DEDCN21-133: Inconsistent row starting line for flip between DPTE and Meta

 This is a chicken bit to enable the ECO fix.

hubp[i].HUBPREQ_DEBUG.HUBPREQ_DEBUG[26] = 1;

/*

* Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

Init DCHVM block

Poll until RIOMMU_ACTIVE = 1

Reflect the power status of DCHUBBUB

Start rIOMMU prefetching

 Enable dynamic clock gating

Poll until HOSTVM_PREFETCH_DONE = 1

Note: hack

 Init VMID 0 based on PA config

 Repeat for water mark set A, B, C and D. */

 clock state A */

 determine the transfer time for a quantity of data for a particular requestor.*/

 clock state B */

 determine the transfer time for a quantity of data for a particular requestor.*/

 clock state C */

 determine the transfer time for a quantity of data for a particular requestor.*/

 clock state D */

 determine the transfer time for a quantity of data for a particular requestor.*/

 clock state A */

 clock state B */

 clock state C */

 clock state D */

 clock state A */

 clock state B */

 clock state C */

 clock state D */

	/*

	 * The DCHub arbiter has a mechanism to dynamically rate limit the DCHub request stream to the fabric.

	 * If the memory controller is fully utilized and the DCHub requestors are

	 * well ahead of their amortized schedule, then it is safe to prevent the next winner

	 * from being committed and sent to the fabric.

	 * The utilization of the memory controller is approximated by ensuring that

	 * the number of outstanding requests is greater than a threshold specified

	 * by the ARB_MIN_REQ_OUTSTANDING. To determine that the DCHub requestors are well ahead of the amortized schedule,

	 * the slack of the next winner is compared with the ARB_SAT_LEVEL in DLG RefClk cycles.

	 *

	 * TODO: Revisit request limit after figure out right number. request limit for Renoir isn't decided yet, set maximum value (0x1FF)

	 * to turn off it for now.

 164KB for DCN2.0 */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * @brief

 * Trigger Source Select

 * ASIC-dependent, actual values for register programming

	/* This register resides in DP back end block;

	/* This register resides in DP back end block;

	/* This register resides in DP back end block;

	/* This register resides in DP back end block;

	/* This register resides in DP back end block;

 Disable PHY Bypass mode to setup the test pattern */

	/* For 10-bit PRBS or debug symbols

 Enable debug symbols on the lanes */

 Disable PRBS mode */

 Program debug symbols to be output */

 Enable phy bypass mode to enable the test pattern */

	/* This register resides in DP back end block;

 invalid source select DIG

 Write Training Pattern */

 Set HW Register Training Complete to false */

 Disable PHY Bypass mode to output Training Pattern */

 Disable PRBS mode */

 if psp set panel mode, dal should be program it */

 Disable PHY Bypass mode to setup the test pattern */

 program correct panel mode*/

 A PRBS23 pattern is used for most DP electrical measurements. */

 Enable PRBS symbols on the lanes */

 For PRBS23 Set bit DPHY_PRBS_SEL=1 and Set bit DPHY_PRBS_EN=1 */

 Enable phy bypass mode to enable the test pattern */

 Disable PHY Bypass mode to setup the test pattern */

 A PRBS7 pattern is used for most DP electrical measurements. */

 Enable PRBS symbols on the lanes */

 For PRBS7 Set bit DPHY_PRBS_SEL=0 and Set bit DPHY_PRBS_EN=1 */

 Enable phy bypass mode to enable the test pattern */

 Disable PHY Bypass mode to setup the test pattern */

 Enable debug symbols on the lanes */

 Enable PHY bypass mode to enable the test pattern */

 TODO is it really needed ? */

 Program 80 bit custom pattern */

 Enable phy bypass mode to enable the test pattern */

	/* previously there is a register DP_HBR2_EYE_PATTERN

	 * that is enabled to get the pattern.

	 * But it does not work with the latest spec change,

	 * so we are programming the following registers manually.

	 *

	 * The following settings have been confirmed

 Disable PHY Bypass mode to setup the test pattern */

 Setup DIG encoder in DP SST mode */

 ensure normal panel mode. */

	/* no vbid after BS (SR)

	 * DP_LINK_FRAMING_CNTL changed history Sandra Liu

 swap every BS with SR */

 select cp2520 patterns */

 pre-DCE11 can only generate CP2520 pattern 2 */

 set link training complete */

 disable video stream */

 Disable PHY Bypass mode to setup the test pattern */

	/* previously there is a register DP_HBR2_EYE_PATTERN

	 * that is enabled to get the pattern.

	 * But it does not work with the latest spec change,

	 * so we are programming the following registers manually.

	 *

	 * The following settings have been confirmed

 Disable PHY Bypass mode to setup the test pattern */

 Setup DIG encoder in DP SST mode */

 ensure normal panel mode. */

	/* no vbid after BS (SR)

	 * DP_LINK_FRAMING_CNTL changed history Sandra Liu

 DCE6 has no DP_DPHY_SCRAM_CNTL register, skip swap BS with SR */

 select cp2520 patterns */

 pre-DCE11 can only generate CP2520 pattern 2 */

 set link training complete */

 disable video stream */

 Disable PHY Bypass mode to setup the test pattern */

 program correct panel mode */

	/* restore LINK_FRAMING_CNTL and DPHY_SCRAMBLER_BS_COUNT

	 * in case we were doing HBR2 compliance pattern before

 set link training complete */

 Disable PHY Bypass mode to setup the test pattern */

 Disable PRBS mode */

 program correct panel mode */

	/* restore LINK_FRAMING_CNTL

	 * in case we were doing HBR2 compliance pattern before

 DCE6 has no DP_DPHY_SCRAM_CNTL register, skip DPHY_SCRAMBLER_BS_COUNT restore */

 set link training complete */

 Disable PHY Bypass mode to setup the test pattern */

 Disable PRBS mode */

 return value is bit-vector */

 set number of lanes */

 setup scrambler */

 set number of lanes */

 DCE6 has no DP_DPHY_SCRAM_CNTL register, skip setup scrambler */

 1/4 window (the maximum allowed) */

		/*In DCE 11, we are able to pre-program a Force SR register

		 * to be able to trigger SR symbol after 5 idle patterns

		 * transmitted. Upon PSR Exit, DMCU can trigger

		 * DPHY_LOAD_BS_COUNT_START = 1. Upon writing 1 to

		 * DPHY_LOAD_BS_COUNT_START and the internal counter

		 * reaches DPHY_LOAD_BS_COUNT, the next BS symbol will be

		 * replaced by SR symbol once.

 reset training pattern */

 reset training complete */

 reset panel mode */

 Associate HPD with DIG_BE */

	/* This handles the case of HDMI downgrade to DVI we don't want to

	 * we don't want to cap the pixel clock if the DDI is not DVI.

 DVI only support RGB pixel encoding */

connect DVI via adpater's HDMI connector*/

 DVI supports 6/8bpp single-link and 10/16bpp dual-link */

 DCE11 HW does not support 420 */

	/* set the flag to indicate whether driver poll the I2C data pin

	 * while doing the DP sink detect

/*	if (dal_adapter_service_is_feature_supported(as,

		FEATURE_DP_SINK_DETECT_POLL_DATA_PIN))

		enc110->base.features.flags.bits.

	/* For DCE 8.0 and 8.1, by design, UNIPHY is hardwired to DIG_BE.

	 * SW always assign DIG_FE 1:1 mapped to DIG_FE for non-MST UNIPHY.

	 * SW assign DIG_FE to non-MST UNIPHY first and MST last. So prefer

	 * DIG is per UNIPHY and used by SST DP, eDP, HDMI, DVI and LVDS.

	 * Prefer DIG assignment is decided by board design.

	 * For DCE 8.0, there are only max 6 UNIPHYs, we assume board design

	 * and VBIOS will filter out 7 UNIPHY for DCE 8.0.

	 * By this, adding DIGG should not hurt DCE 8.0.

	 * This will let DCE 8.1 share DCE 8.0 as much as possible

 default to one to mirror Windows behavior */

 Override features with DCE-specific values */

	/* reinitialize HPD.

	 * hpd_initialize() will pass DIG_FE id to HW context.

	 * All other routine within HW context will use fe_engine_offset

	 * as DIG_FE id even caller pass DIG_FE id.

 DP SST */

 LVDS */

 TMDS-DVI */

 TMDS-HDMI */

 DP MST */

 invalid mode ! */

 TODO: still need depth or just pass in adjusted pixel clock? */

 Enable the PHY */

 TODO: still need depth or just pass in adjusted pixel clock? */

 Enable the PHY */

 enables DP PHY output */

 Enable the PHY */

	/* number_of_lanes is used for pixel clock adjust,

	 * but it's not passed to asic_control.

	 * We need to set number of lanes manually.

 TODO: check if undefined works */

 enables DP PHY output in MST mode */

 Enable the PHY */

	/* number_of_lanes is used for pixel clock adjust,

	 * but it's not passed to asic_control.

	 * We need to set number of lanes manually.

 TODO: check if undefined works */

 enables DP PHY output */

 Enable the PHY */

	/* number_of_lanes is used for pixel clock adjust,

	 * but it's not passed to asic_control.

	 * We need to set number of lanes manually.

 TODO: check if undefined works */

 enables DP PHY output in MST mode */

 Enable the PHY */

	/* number_of_lanes is used for pixel clock adjust,

	 * but it's not passed to asic_control.

	 * We need to set number of lanes manually.

 TODO: check if undefined works */

/*

 * @brief

 * Disable transmitter and its encoder

 OF_SKIP_POWER_DOWN_INACTIVE_ENCODER */

	/* Power-down RX and disable GPU PHY should be paired.

	 * Disabling PHY without powering down RX may cause

	/* There is a case for the DP active dongles

	 * where we want to disable the PHY but keep RX powered,

	 * for those we need to ignore DP Sink interrupt

	 * by checking lane count that has been set

 disable transmitter */

 disable encoder */

 translate lane settings */

 post cursor 2 setting only applies to HBR2 link rate */

			/* this is passed to VBIOS

 call VBIOS table to set voltage swing and pre-emphasis */

 set DP PHY test and training patterns */

 invalid phy pattern */

 set DP PHY test and training patterns */

 invalid phy pattern */

 programs DP MST VC payload allocation */

 For CZ, there are only 3 pipes. So Virtual channel is up 3.*/

	/* --- Set MSE Stream Attribute -

	 * Setup VC Payload Table on Tx Side,

	 * Issue allocation change trigger

 we should clean-up table each time */

 --- wait for transaction finish */

	/* send allocation change trigger (ACT) ?

	 * this step first sends the ACT,

	 * then double buffers the SAT into the hardware

	/* DP_MSE_SAT_UPDATE:

	 * 0 - No Action

	 * 1 - Update SAT with trigger

	/* wait for update to complete

	 * (i.e. DP_MSE_SAT_UPDATE field is reset to 0)

	 * then wait for the transmission

	 * of at least 16 MTP headers on immediate local link.

	 * i.e. DP_MSE_16_MTP_KEEPOUT field (read only) is reset to 0

	 * a value of 1 indicates that DP MST mode

	 * is in the 16 MTP keepout region after a VC has been added.

	 * MST stream bandwidth (VC rate) can be configured

 bit field DP_MSE_SAT_UPDATE is set to 1 already */

 Set Default link settings */

 Higher link settings based on feature supported */

	/* set the flag to indicate whether driver poll the I2C data pin

	 * while doing the DP sink detect

/*	if (dal_adapter_service_is_feature_supported(as,

		FEATURE_DP_SINK_DETECT_POLL_DATA_PIN))

		enc110->base.features.flags.bits.

	/* For DCE 8.0 and 8.1, by design, UNIPHY is hardwired to DIG_BE.

	 * SW always assign DIG_FE 1:1 mapped to DIG_FE for non-MST UNIPHY.

	 * SW assign DIG_FE to non-MST UNIPHY first and MST last. So prefer

	 * DIG is per UNIPHY and used by SST DP, eDP, HDMI, DVI and LVDS.

	 * Prefer DIG assignment is decided by board design.

	 * For DCE 8.0, there are only max 6 UNIPHYs, we assume board design

	 * and VBIOS will filter out 7 UNIPHY for DCE 8.0.

	 * By this, adding DIGG should not hurt DCE 8.0.

	 * This will let DCE 8.1 share DCE 8.0 as much as possible

 default to one to mirror Windows behavior */

 Override features with DCE-specific values */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

=========================================

 <num_taps>    = 2

 <num_phases>  = 16

 <scale_ratio> = 0.833333 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = s1.10

 <CoefOut>     = s1.12

=========================================

=========================================

 <num_taps>    = 3

 <num_phases>  = 16

 <scale_ratio> = 0.83333 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 3

 <num_phases>  = 16

 <scale_ratio> = 1.16666 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 3

 <num_phases>  = 16

 <scale_ratio> = 1.49999 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 3

 <num_phases>  = 16

 <scale_ratio> = 1.83332 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 4

 <num_phases>  = 16

 <scale_ratio> = 0.83333 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 4

 <num_phases>  = 16

 <scale_ratio> = 1.16666 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 4

 <num_phases>  = 16

 <scale_ratio> = 1.49999 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 4

 <num_phases>  = 16

 <scale_ratio> = 1.83332 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 2

 <num_phases>  = 64

 <scale_ratio> = 0.833333 (input/output)

 <sharpness>   = 0

 <CoefType> = ModifiedLanczos

 <CoefQuant> = s1.10

 <CoefOut> = s1.12

=========================================

=========================================

 <num_taps>    = 3

 <num_phases>  = 64

 <scale_ratio> = 0.83333 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 3

 <num_phases>  = 64

 <scale_ratio> = 1.16666 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 3

 <num_phases>  = 64

 <scale_ratio> = 1.49999 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 3

 <num_phases>  = 64

 <scale_ratio> = 1.83332 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 4

 <num_phases>  = 64

 <scale_ratio> = 0.83333 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 4

 <num_phases>  = 64

 <scale_ratio> = 1.16666 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 4

 <num_phases>  = 64

 <scale_ratio> = 1.49999 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 4

 <num_phases>  = 64

 <scale_ratio> = 1.83332 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 5

 <num_phases>  = 64

 <scale_ratio> = 0.83333 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 5

 <num_phases>  = 64

 <scale_ratio> = 1.16666 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 5

 <num_phases>  = 64

 <scale_ratio> = 1.49999 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 5

 <num_phases>  = 64

 <scale_ratio> = 1.83332 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 6

 <num_phases>  = 64

 <scale_ratio> = 0.83333 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 6

 <num_phases>  = 64

 <scale_ratio> = 1.16666 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 6

 <num_phases>  = 64

 <scale_ratio> = 1.49999 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 6

 <num_phases>  = 64

 <scale_ratio> = 1.83332 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 7

 <num_phases>  = 64

 <scale_ratio> = 0.83333 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 7

 <num_phases>  = 64

 <scale_ratio> = 1.16666 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 7

 <num_phases>  = 64

 <scale_ratio> = 1.49999 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 7

 <num_phases>  = 64

 <scale_ratio> = 1.83332 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 8

 <num_phases>  = 64

 <scale_ratio> = 0.83333 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 8

 <num_phases>  = 64

 <scale_ratio> = 1.16666 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 8

 <num_phases>  = 64

 <scale_ratio> = 1.49999 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

=========================================

 <num_taps>    = 8

 <num_phases>  = 64

 <scale_ratio> = 1.83332 (input/output)

 <sharpness>   = 0

 <CoefType>    = ModifiedLanczos

 <CoefQuant>   = 1.10

 <CoefOut>     = 1.12

=========================================

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 bits are transmitted serially, starting from MSB */

	/* The display sends ACK by preventing the SDA from going high

	 * after the SCL pulse we use to send our last data bit.

	 * If the SDA goes high after that bit, it's a NACK

 read ACK bit */

	/* The data bits are read from MSB to LSB;

	 * bit is read while SCL is high

 read only whole byte */

	/* send the acknowledge bit:

	 * SDA low means ACK, SDA high means NACK

	/* The I2C communications stop signal is:

	 * the SDA going high from low, while the SCL is high.

	/* The I2C communications start signal is:

	 * the SDA going low from high, while the SCL is high.

 i2c_engine is busy by VBios, lets wait and retry */

 send sync (start / repeated start) */

 process payload */

 send stop if not 'mot' or operation failed */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set ramping boundary */

 setDMCUParam_Pipe */

 notifyDMCUMsg */

 Check for max backlight condition

 Take MSB of fractional part since backlight is not max

 waitDMCUReadyForCmd */

 setDMCUParam_BL */

 write ramp */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 UpdateRequestedBacklightLevel */

 waitDMCUReadyForCmd */

	/* return backlight in hardware format which is unsigned 17 bits, with

	 * 1 bit integer and 16 bit fractional

	/* return backlight in hardware format which is unsigned 17 bits, with

	 * 1 bit integer and 16 bit fractional

 setDMCUParam_ABMLevel */

 notifyDMCUMsg */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 PSR related commands */

 Enable or disable Fractional PWM */

 PSP FW version

Register access policy version

 Do nothing

 Enable write access to IRAM */

 Disable write access to IRAM to allow dynamic sleep state */

 Enable write access to IRAM */

 Write address to IRAM_RD_ADDR in DMCU_IRAM_RD_CTRL */

 Read data from IRAM_RD_DATA in DMCU_IRAM_RD_DATA*/

	/* Disable write access to IRAM after finished using IRAM

	 * in order to allow dynamic sleep state

 waitDMCUReadyForCmd */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 Enable static screen interrupts for PSR supported display */

 Disable the interrupt coming from other displays. */

 Driver uses case 1 for unconfigured */

		/* CZ/NL only has 4 CRTC!!

		 * really valid.

		 * There is no interrupt enable mask for these instances.

		/* CZ/NL only has 4 CRTC!!

		 * These are here because they are defined in HW regspec,

		 * but not really valid. There is no interrupt enable mask

		 * for these instances.

 waitDMCUReadyForCmd */

 setDMCUParam_PSRHostConfigData */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 microcontroller is not running */

 DMCU is not running */

 DMCU is not running */

 waitDMCUReadyForCmd */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 Enable write access to IRAM */

 Write address to IRAM_RD_ADDR and read from DATA register */

 Disable write access to IRAM to allow dynamic sleep state */

 Wait until microcontroller is ready to process interrupt */

 Set PWM fractional enable/disable */

 Set command to enable or disable fractional PWM microcontroller */

 Notify microcontroller of new command */

 Ensure command has been executed before continuing */

  5 4 3 2 1 0

  F E D C B A - bit 0 is A, bit 5 is F

	/*  Definition of DC_DMCU_SCRATCH

	 *  0 : firmare not loaded

	 *  1 : PSP load DMCU FW but not initialized

	 *  2 : Firmware already initialized

 Wait until microcontroller is ready to process interrupt */

 Set initialized ramping boundary value */

 Set backlight ramping stepsize */

 Set command to initialize microcontroller */

 Notify microcontroller of new command */

 Ensure command has been executed before continuing */

 Check state is initialized

 If microcontroller is not in running state, fail

 Retrieve and cache the DMCU firmware version. */

 Initialize DMCU to use fractional PWM or not */

 If microcontroller is not running, do nothing */

 Enable write access to IRAM */

 Disable write access to IRAM to allow dynamic sleep state */

 Wait until microcontroller is ready to process interrupt */

 Set command to signal IRAM is loaded and to initialize IRAM */

 Notify microcontroller of new command */

 Ensure command has been executed before continuing */

 If microcontroller is not running, do nothing */

 Enable write access to IRAM */

 Write address to IRAM_RD_ADDR in DMCU_IRAM_RD_CTRL */

 Read data from IRAM_RD_DATA in DMCU_IRAM_RD_DATA*/

	/* Disable write access to IRAM after finished using IRAM

	 * in order to allow dynamic sleep state

 If microcontroller is not running, do nothing */

 waitDMCUReadyForCmd */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

	/* Below loops 1000 x 500us = 500 ms.

	 *  Exit PSR may need to wait 1-2 frames to power up. Timeout after at

	 *  least a few frames. Should never hit the max retry assert below.

 assert if max retry hit */

 If microcontroller is not running, do nothing */

 Enable static screen interrupts for PSR supported display */

 Disable the interrupt coming from other displays. */

 Driver uses case 1 for unconfigured */

		/* CZ/NL only has 4 CRTC!!

		 * really valid.

		 * There is no interrupt enable mask for these instances.

		/* CZ/NL only has 4 CRTC!!

		 * These are here because they are defined in HW regspec,

		 * but not really valid. There is no interrupt enable mask

		 * for these instances.

 waitDMCUReadyForCmd */

 setDMCUParam_PSRHostConfigData */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 waitDMCUReadyForCmd */

 If microcontroller is not running, do nothing */

 waitDMCUReadyForCmd */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 microcontroller is not running */

 If microcontroller is not running, do nothing */

 waitDMCUReadyForCmd */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 waitDMCUReadyForCmd */

 If microcontroller is not running, do nothing */

 waitDMCUReadyForCmd */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 waitDMCUReadyForCmd */

 If microcontroller is not running, do nothing */

 waitDMCUReadyForCmd */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 waitDMCUReadyForCmd */

 If microcontroller is not running, do nothing */

 clear SCP interrupt */

 nack */

(CONFIG_DRM_AMD_DC_DCN)

 If microcontroller is not running, do nothing */

 waitDMCUReadyForCmd */

 build up nitification data */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

 If microcontroller is not running, do nothing */

 waitDMCUReadyForCmd */

 build up nitification data */

 setDMCUParam_Cmd */

 notifyDMCUMsg */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/**

 * calculate_fb_and_fractional_fb_divider - Calculates feedback and fractional

 *                                          feedback dividers values

 *

 * @calc_pll_cs:	    Pointer to clock source information

 * @target_pix_clk_100hz:   Desired frequency in 100 Hz

 * @ref_divider:            Reference divider (already known)

 * @post_divider:           Post Divider (already known)

 * @feedback_divider_param: Pointer where to store

 *			    calculated feedback divider value

 * @fract_feedback_divider_param: Pointer where to store

 *			    calculated fract feedback divider value

 *

 * return:

 * It fills the locations pointed by feedback_divider_param

 *					and fract_feedback_divider_param

 * It returns	- true if feedback divider not 0

 *		- false should never happen)

 additional factor, since we divide by 10 afterwards */

/*Round to the number of precision

 * The following code replace the old code (ullfeedbackDivider + 5)/10

 * for example if the difference between the number

 * of fractional feedback decimal point and the fractional FB Divider precision

/**

 * calc_fb_divider_checking_tolerance - Calculates Feedback and

 *                                      Fractional Feedback divider values

 *		                        for passed Reference and Post divider,

 *                                      checking for tolerance.

 * @calc_pll_cs:	Pointer to clock source information

 * @pll_settings:	Pointer to PLL settings

 * @ref_divider:	Reference divider (already known)

 * @post_divider:	Post Divider (already known)

 * @tolerance:		Tolerance for Calculated Pixel Clock to be within

 *

 * return:

 *  It fills the PLLSettings structure with PLL Dividers values

 *  if calculated values are within required tolerance

 *  It returns	- true if error is within tolerance

 *		- false if error is not within tolerance

Actual calculated value*/

found good values*/

/* This is err_tolerance / 10000 = 0.0025 - acceptable error of 0.25%

 1) Find Post divider ranges */

/* 2) Find Reference divider ranges

 * When SS is enabled, or for Display Port even without SS,

 * pll_settings->referenceDivider is not zero.

 * So calculate PPLL FB and fractional FB divider

/* If some parameters are invalid we could have scenario when  "min">"max"

 * which produced endless loop later.

 * We should investigate why we get the wrong parameters.

 * But to follow the similar logic when "adjustedPixelClock" is set to be 0

 * it is better to return here than cause system hang/watchdog timeout later.

/* 3) Try to find PLL dividers given ranges

 * starting with minimal error tolerance.

 x1.25*/

 x1.5*/

 x2.0*/

/*

 * Calculate PLL Dividers for given Clock Value.

 * First will call VBIOS Adjust Exec table to check if requested Pixel clock

 * will be Adjusted based on usage.

 * Then it will calculate PLL Dividers for this Adjusted clock using preferred

 * method (Maximum VCO frequency).

 *

 * \return

 *     Calculation error in units of 0.01%

	/* Check if reference clock is external (not pcie/xtalin)

	* HW Dce80 spec:

	* 00 - PCIE_REFCLK, 01 - XTALIN,    02 - GENERICA,    03 - GENERICB

	/* VBIOS by default enables DP SS (spread on IDCLK) for DCE 8.0 always

	 * (we do not care any more from SI for some older DP Sink which

 Check VBIOS AdjustPixelClock Exec table */

		/* Should never happen, ASSERT and fill up values to be able

 Calculate Dividers */

Calculate Dividers by HDMI object, no SS case or SS case */

Calculate Dividers by default object, no SS case or SS case */

 Calculate Dividers */

Call ASICControl to process ATOMBIOS Exec table*/

 compute SS_AMOUNT_FBDIV & SS_AMOUNT_NFRAC_SLIP & SS_AMOUNT_DSFRAC*/

 6 decimal point support in fractional feedback divider */

	/*spreadSpectrumPercentage is in the unit of .01%,

 compute SS_STEP_SIZE_DSFRAC */

 SS_STEP_SIZE_DSFRAC_DEC = Int(SS_STEP_SIZE * 2 ^ 16 * 10)*/

/* Pixel clock PLL has been programmed to generate desired pixel clock,

 TODO is it OK to return true not doing anything ??*/

	/*

	 24 bit mode: TMDS clock = 1.0 x pixel clock  (1:1)

	 30 bit mode: TMDS clock = 1.25 x pixel clock (5:4)

	 36 bit mode: TMDS clock = 1.5 x pixel clock  (3:2)

	 48 bit mode: TMDS clock = 2 x pixel clock    (2:1)

	/*

	 24 bit mode: TMDS clock = 1.0 x pixel clock  (1:1)

	 30 bit mode: TMDS clock = 1.25 x pixel clock (5:4)

	 36 bit mode: TMDS clock = 1.5 x pixel clock  (3:2)

	 48 bit mode: TMDS clock = 2 x pixel clock    (2:1)

	/* First disable SS

	 * ATOMBIOS will enable by default SS on PLL for DP,

	 * do not disable it here

ATOMBIOS expects pixel rate adjusted by deep color ratio)*/

	/* Enable SS

	 * ATOMBIOS will enable by default SS for DP on PLL ( DP ID clock),

	 * based on HW display PLL team, SS control settings should be programmed

	 * during PLL Reset, but they do not have effect

 Resync deep color DTO */

 Set DTO values: phase = target clock, modulo = reference clock */

 Enable DTO */

	/* First disable SS

	 * ATOMBIOS will enable by default SS on PLL for DP,

	 * do not disable it here

ATOMBIOS expects pixel rate adjusted by deep color ratio)*/

 Resync deep color DTO */

 If Pixel Clock is 0 it means Power Down Pll*/

Call ASICControl to process ATOMBIOS Exec table*/

			/* NOTE: In case VBLANK syncronization is enabled, MODULO may

			 * not be programmed equal to DPREFCLK

			/* NOTE: There is agreement with VBIOS here that MODULO is

			 * programmed equal to DPREFCLK, in which case PHASE will be

			 * equivalent to pixel clock.

 this table is use to find *1.001 and /1.001 pixel rates from non-precise pixel rate */

 /1.001 rates

25.2MHz   ->   25.17

59.4Mhz   ->   59.340

74.25Mhz  ->   74.1758

126Mhz    ->  125.87

148.5Mhz  ->  148.3516

168Mhz    ->  167.83

222.75Mhz ->  222.527

257.4Mhz  ->  257.1429

297Mhz    ->  296.7033

343.2Mhz  ->  342.857

396Mhz    ->  395.6

409.5Mhz  ->  409.091

445.5Mhz  ->  445.055

468Mhz    ->  467.5325

519.75Mhz ->  519.231

526.5Mhz  ->  525.974

546Mhz    ->  545.455

594Mhz    ->  593.4066

624Mhz    ->  623.377

693Mhz    ->  692.308

702Mhz    ->  701.2987

792Mhz    ->  791.209

891Mhz    ->  890.1099

1188Mhz   -> 1186.8131

 *1.001 rates

27Mhz

54Mhz

108Mhz

		/* NOTE: In case VBLANK syncronization is enabled,

		 * we need to set modulo to default DPREFCLK first

		 * dce112_program_pix_clk does not set default DPREFCLK

 For these signal types Driver to program DP_DTO without calling VBIOS Command table

 Set DTO values: phase = target clock, modulo = reference clock*/

 Set DTO values: phase = target clock, modulo = reference clock*/

 For other signal types(HDMI_TYPE_A, DVI) Driver still to call VBIOS Command table

 Adjust for HDMI Type A deep color */

****************************************/

 Constructor                           */

****************************************/

		/* for HDMI check SS percentage,

 invalid input, do nothing */

			/* Keep previous precision from ATOMBIOS for these

			* in case new precision set by ATOMBIOS for these

			* (otherwise all code in DCE specific classes

			* for all previous ASICs would need

			* to be updated for SS calculations,

			* Audio SS compensation and DP DTO SS compensation

 structure normally used with PLL ranges from ATOMBIOS; DS on by default */

 when 0 use minInputPxlClkPLLFrequencyInKHz from firmwareInfo*/

 when 0 use maxInputPxlClkPLLFrequencyInKHz from firmwareInfo*/

numberOfFractFBDividerDecimalPoints*/

number of decimal point to round off for fractional feedback divider value*/

structure for HDMI, no SS or SS% <= 0.06% for 27 MHz Ref clock */

 when 0 use minInputPxlClkPLLFrequencyInKHz from firmwareInfo*/

 when 0 use maxInputPxlClkPLLFrequencyInKHz from firmwareInfo*/

numberOfFractFBDividerDecimalPoints*/

number of decimal point to round off for fractional feedback divider value*/

 PLL only from here on */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 *****************************************************************************

 *  Function: regamma_config_regions_and_segments

 *

 *     build regamma curve by using predefined hw points

 *     uses interface parameters ,like EDID coeff.

 *

 * @param   : parameters   interface parameters

 *  @return void

 *

 *  @note

 *

 *  @see

 *

 *****************************************************************************

/*

 *	set_truncation

 *	1) set truncation depth: 0 for 18 bpp or 1 for 24 bpp

 *	2) enable truncation

 *	3) HW remove 12bit FMT support for DCE11 power saving reason.

Disable truncation*/

  8bpc trunc on YCbCr422*/

  10bpc trunc on YCbCr422*/

 on other format-to do */

Set truncation depth and Enable truncation*/

/*

 *	dce60_set_truncation

 *	1) set truncation depth: 0 for 18 bpp or 1 for 24 bpp

 *	2) enable truncation

 *	3) HW remove 12bit FMT support for DCE11 power saving reason.

 DCE6 has no FMT_TRUNCATE_MODE bit in FMT_BIT_DEPTH_CONTROL reg */

Disable truncation*/

  8bpc trunc on YCbCr422*/

  10bpc trunc on YCbCr422*/

 on other format-to do */

Set truncation depth and Enable truncation*/

/*

 *	set_spatial_dither

 *	1) set spatial dithering mode: pattern of seed

 *	2) set spatial dithering depth: 0 for 18bpp or 1 for 24bpp

 *	3) set random seed

 *	4) set random mode

 *		lfsr is reset every frame or not reset

 *		RGB dithering method

 *		0: RGB data are all dithered with x^28+x^3+1

 *		1: R data is dithered with x^28+x^3+1

 *		G data is dithered with x^28+X^9+1

 *		B data is dithered with x^28+x^13+1

 *		enable high pass filter or not

 *	5) enable spatical dithering

Disable spatial (random) dithering*/

 only use FRAME_COUNTER_MAX if frameRandom == 1*/

	/* Set seed for random values for

	 * spatial dithering for R,G,B channels

	/* FMT_OFFSET_R_Cr  31:16 0x0 Setting the zero

	 * offset for the R/Cr channel, lower 4LSB

	 * is forced to zeros. Typically set to 0

	 * RGB and 0x80000 YCbCr.

	/* FMT_OFFSET_G_Y   31:16 0x0 Setting the zero

	 * offset for the G/Y  channel, lower 4LSB is

	 * forced to zeros. Typically set to 0 RGB

	 * and 0x80000 YCbCr.

	/* FMT_OFFSET_B_Cb  31:16 0x0 Setting the zero

	 * offset for the B/Cb channel, lower 4LSB is

	 * forced to zeros. Typically set to 0 RGB and

	 * 0x80000 YCbCr.

	/* Disable High pass filter

	 * Reset only at startup

	 * Set RGB data dithered with x^28+x^3+1

	/* Set spatial dithering bit depth

	 * Set spatial dithering mode

	 * (default is Seed patterrn AAAA...)

	 * Enable spatial dithering

/*

 *	SetTemporalDither (Frame Modulation)

 *	1) set temporal dither depth

 *	2) select pattern: from hard-coded pattern or programmable pattern

 *	3) select optimized strips for BGR or RGB LCD sub-pixel

 *	4) set s matrix

 *	5) set t matrix

 *	6) set grey level for 0.25, 0.5, 0.75

 *	7) enable temporal dithering

Disable temporal (frame modulation) dithering first*/

 no 10bpc dither on DCE11*/

 Set temporal dithering depth*/

Select legacy pattern based on FRC and Temporal level*/

Set s matrix*/

Set t matrix*/

Select patterns for 0.25, 0.5 and 0.75 grey level*/

Enable bit reduction by temporal (frame modulation) dithering*/

/*

 *	Set Clamping

 *	1) Set clamping format based on bpc - 0 for 6bpc (No clamping)

 *		1 for 8 bpc

 *		2 for 10 bpc

 *		3 for 12 bpc

 *		7 for programable

 *	2) Enable clamp if Limited range requested

Set clamp control*/

set the defaults*/

/*

 *	Set Clamping for DCE6 parts

 *	1) Set clamping format based on bpc - 0 for 6bpc (No clamping)

 *		1 for 8 bpc

 *		2 for 10 bpc

 *		3 for 12 bpc

 *		7 for programable

 *	2) Enable clamp if Limited range requested

Set clamp control*/

 DCE6 does have FMT_CLAMP_COMPONENT_{R,G,B} registers */

/*

 *	set_pixel_encoding

 *

 *	Set Pixel Encoding

 *		0: RGB 4:4:4 or YCbCr 4:4:4 or YOnly

 *		1: YCbCr 4:2:2

/*

 *	dce60_set_pixel_encoding

 *	DCE6 has no FMT_SUBSAMPLING_{MODE,ORDER} bits in FMT_CONTROL reg

 *	Set Pixel Encoding

 *		0: RGB 4:4:4 or YCbCr 4:4:4 or YOnly

 *		1: YCbCr 4:2:2

 Program source select*/

 Use HW default source select for FMT_MEMORYx_CONTROL */

 Use that value for FMT_SRC_SELECT as well*/

 Turn on the memory */

00 - 10-bit -> 12-bit dynamic expansion*/

01 - 8-bit  -> 12-bit dynamic expansion*/

otherwise last two bits are zero*/

 clear previous phase lock status*/

 poll until FMT_420_PIXEL_PHASE_LOCKED become 1*/

	/* dithering is affected by <CrtcSourceSelect>, hence should be

	/* dithering is affected by <CrtcSourceSelect>, hence should be

****************************************/

 Constructor, Destructor               */

****************************************/

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 AZALIA_F0_CODEC_ENDPOINT_INDEX  endpoint index  */

 AZALIA_F0_CODEC_ENDPOINT_DATA  endpoint data  */

 AZALIA_F0_CODEC_ENDPOINT_INDEX  endpoint index  */

 AZALIA_F0_CODEC_ENDPOINT_DATA  endpoint data  */

 pass through whole array */

				/* format has multiply entries, choose one with

 format found, save it's index */

 return index */

For HDMI, calculate if specified sample rates can fit into a given timing */

 For two channels supported return whatever sink support,unmodified*/

 Based on HDMI spec 1.3 Table 7.5 */

	/* Also do some calculation for the available Audio Bandwidth for the

	 * 8 ch (i.e. for the Layout 1 => ch > 2)

based on HDMI spec 1.3 Table 7.5 */

for Control Period */

	/* Number of Audio Packets (multiplied by 10) per Line (for 8 ch number

	 * of Audio samples per line multiplied by 10 - Layout 1)

Number of samples multiplied by 10, per second */

Number of Audio samples per second */

	/* @todo do it after deep color is implemented

	 * 8xx - deep color bandwidth scaling

	 * Extra bandwidth is avaliable in deep color b/c link runs faster than

	 * pixel rate. This has the effect of allowing more tmds characters to

	 * be transmitted during blank

check limitation*/

 limit frequencies */

For DP SST, calculate if specified sample rates can fit into a given timing */

 do nothing */

For DP MST, calculate if specified sample rates can fit into a given timing */

 do nothing  */

 expose/not expose HBR capability to Audio driver */

 set high bit rate audio capable*/

 set video latency in in ms/2+1 */

 set audio latency in in ms/2+1 */

 Speaker Allocation */

	/*

	uint32_t value;

	/* LFE_PLAYBACK_LEVEL = LFEPBL

	 * LFEPBL = 0 : Unknown or refer to other information

	 * LFEPBL = 1 : 0dB playback

	 * LFEPBL = 2 : +10dB playback

	 * LFE_BL = 3 : Reserved

	/* todo: according to reg spec LFE_PLAYBACK_LEVEL is read only.

 set audio for output signal */

  Audio Descriptors   */

 pass through all formats */

 those are unsupported, skip programming */

 check if supported */

 adjust specific properties */

 fill audio format data */

 if */

 for */

 todo: this reg global.  why program global register? */

 check for 192khz/8-Ch support for HBR requirements */

 Audio and Video Lipsync */

get display name string length */

	/*

	*write the port ID:

	*PORT_ID0 = display index

	*PORT_ID1 = 16bit BDF

	*(format MSB->LSB: 8bit Bus, 5bit Device, 3bit Function)

write the 18 char monitor string */

/*

* todo: wall clk related functionality probably belong to clock_src.

 search pixel clock value for Azalia HDMI Audio */

	/* audio_dto_phase= 24 * 10,000;

	/* audio_dto_module = PCLKFrequency * 10,000;

	/* Reported dpDtoSourceClockInkhz value for

	 * DCE8 already adjusted for SS, do not need any

	 * adjustment here anymore

	/*audio_dto_phase = 24 * 10,000;

	/*audio_dto_module = dpDtoSourceClockInkhz * 10,000;

		/*DTO0 Programming goal:

		-generate 24MHz, 128*Fs from 24MHz

		-use DTO0 when an active HDMI port is connected

 calculate DTO settings */

		/* On TN/SI, Program DTO source select and DTO select before

		programming DTO modulo and DTO phase. These bits must be

		programmed first, otherwise there will be no HDMI audio at boot

		up. This is a HW sequence change (different from old ASICs).

		Caution when changing this programming sequence.



		HDMI enabled, using DTO0

 module */

 phase */

		/*DTO1 Programming goal:

		-generate 24MHz, 512*Fs, 128*Fs from 24MHz

		-default is to used DTO1, and switch to DTO0 when an audio

		master HDMI port is connected

		-use as default for DP



		/* Program DTO select before programming DTO modulo and DTO

			/* DCCG_AUDIO_DTO2_USE_512FBR_DTO, 1)

			 * Select 512fs for DP TODO: web register definition

			 * does not match register header file

			 * DCE11 version it's commented out while DCE8 it's set to 1

 module */

 phase */

		/*DTO0 Programming goal:

		-generate 24MHz, 128*Fs from 24MHz

		-use DTO0 when an active HDMI port is connected

 calculate DTO settings */

		/* On TN/SI, Program DTO source select and DTO select before

		programming DTO modulo and DTO phase. These bits must be

		programmed first, otherwise there will be no HDMI audio at boot

		up. This is a HW sequence change (different from old ASICs).

		Caution when changing this programming sequence.



		HDMI enabled, using DTO0

 module */

 phase */

		/*DTO1 Programming goal:

		-generate 24MHz, 128*Fs from 24MHz (DCE6 does not support 512*Fs)

		-default is to used DTO1, and switch to DTO0 when an audio

		master HDMI port is connected

		-use as default for DP



		/* Program DTO select before programming DTO modulo and DTO

			/* DCCG_AUDIO_DTO2_USE_512FBR_DTO, 1)

			 * Cannot select 512fs for DP

			 *

			 * DCE6 has no DCCG_AUDIO_DTO2_USE_512FBR_DTO mask

 module */

 phase */

 DCE6 has no DCCG_AUDIO_DTO2_USE_512FBR_DTO mask in DCCG_AUDIO_DTO_SOURCE reg */

 initialize HW state */

	/* we only need to program the following registers once, so we only do

	/* Suport R5 - 32khz

	 * Suport R6 - 44.1khz

	 * Suport R7 - 48khz

disable clock gating before write to endpoint register*/

Keep alive bit to verify HW block in BU. */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Max clock values for each state indexed by "enum clocks_state": */

 ClocksStateInvalid - should not be used */

 ClocksStateUltraLow - not expected to be used for DCE 8.0 */

 ClocksStateLow */

 ClocksStateNominal */

 ClocksStatePerformance */

ClocksStateInvalid - should not be used*/

ClocksStateUltraLow - currently by HW design team not supposed to be used*/

ClocksStateLow*/

ClocksStateNominal*/

ClocksStatePerformance*/

ClocksStateInvalid - should not be used*/

ClocksStateUltraLow - currently by HW design team not supposed to be used*/

ClocksStateLow*/

ClocksStateNominal*/

ClocksStatePerformance*/

ClocksStateInvalid - should not be used*/

ClocksStateUltraLow - currently by HW design team not supposed to be used*/

ClocksStateLow*/

ClocksStateNominal*/

ClocksStatePerformance*/

/* SW will adjust DP REF Clock average value for all purposes

 * (DP DTO / DP Audio DTO and DP GTC)

 if clock is spread for all cases:

 -if SS enabled on DP Ref clock and HW de-spreading enabled with SW

 calculations for DS_INCR/DS_MODULO (this is planned to be default case)

 -if SS enabled on DP Ref clock and HW de-spreading enabled with HW

 calculations (not planned to be used, but average clock should still

 be valid)

 -if SS enabled on DP Ref clock and HW de-spreading disabled

 (should not be case with CIK) then SW should program all rates

 generated according to average value (case as with previous ASICs)

 ASSERT DP Reference Clock source is from DFS*/

	/* Read the mmDENTIST_DISPCLK_CNTL to get the currently

 Convert DENTIST_DPREFCLK_WDIVIDERto actual divider*/

 Calculate the current DFS clock, in kHz.*/

/* unit: in_khz before mode set, get pixel clock from context. ASIC register

 * may not be programmed yet

 do not check under lay */

		/* raise clock state for HBR3/2 if required. Confirmed with HW DCE/DPCS

		 * logic for HBR3 still needs Nominal (0.8V) on VDDC rail

	/* Iterate from highest supported to lowest valid state, and update

	 * lowest RequiredState with the lowest state that satisfies

	 * all required clocks

 set max clock state for high phyclock, invalid on exceeding display clock */

 Make sure requested clock isn't lower than minimum threshold*/

 Prepare to program display clock*/

 Cache the fixed display clock*/

	/* from power down, we need mark the clock state as ClocksStateNominal

 Prepare to program display clock*/

 Make sure requested clock isn't lower than minimum threshold*/

	/* from power down, we need mark the clock state as ClocksStateNominal

Program DP ref Clock*/

VBIOS will determine DPREFCLK frequency, so we don't set it*/

update the maximum display clock for each power state*/

		/*Do not allow bad VBIOS/SBIOS to override with invalid values,

		/* Based on VBIOS, VBIOS will keep entry for GPU PLL SS

		 * even if SS not enabled and in that case

		 * SSInfo.spreadSpectrumPercentage !=0 would be sign

		 * that SS is enabled

				/* TODO: Currently for DP Reference clock we

				 * need only SS percentage for

		/* Based on VBIOS, VBIOS will keep entry for DPREFCLK SS

		 * even if SS not enabled and in that case

		 * SSInfo.spreadSpectrumPercentage !=0 would be sign

		 * that SS is enabled

				/* Currently for DP Reference clock we

				 * need only SS percentage for

/**

 * dce121_clock_patch_xgmi_ss_info() - Save XGMI spread spectrum info

 * @clk_mgr: clock manager base structure

 *

 * Reads from VBIOS the XGMI spread spectrum info and saves it within

 * the dce clock manager. This operation will overwrite the existing dprefclk

 * SS values if the vBIOS query succeeds. Otherwise, it does nothing. It also

 * sets the ->xgmi_enabled flag.

			/* Currently for DP Reference clock we

			 * need only SS percentage for

 only notify active stream */

 Round v_refresh*/

	/*

	 * Some asics do not give us sclk levels, so we just report the actual

	 * required sclk

	/*

	 * even maximum level could not satisfy requirement, this

	 * is unexpected at this stage, should have been caught at

	 * validation time

	/*

	 * As workaround for >4x4K lightup set dcfclock to min_engine_clock value.

	 * This is not required for less than 5 displays,

	 * thus don't request decfclk in dc to avoid impact

	 * on power saving.

	 *

 TODO: dce11.2*/

 TODO: is this still applicable?*/

TODO: W/A for dal3 linux, investigate why this works */

 get max clock state from PPLIB */

TODO: W/A for dal3 linux, investigate why this works */

 get max clock state from PPLIB */

TODO: W/A for dal3 linux, investigate why this works */

 get max clock state from PPLIB */

TODO: W/A for dal3 linux, investigate why this works */

		/*

		 * When xGMI is enabled, the display clk needs to be adjusted

		 * with the WAFL link's SS percentage.

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 lock cursor registers */

 Flag passed in structure differentiates cursor enable/disable. */

 Update if it differs from cached state. */

 unlock cursor registers */

 Lock cursor registers */

 Program cursor control */

 unsupported */

	/*

	 * Program cursor size -- NOTE: HW spec specifies that HW register

	 * stores size as (height - 1, width - 1)

 Program cursor surface address */

	/* SURFACE_ADDRESS_HIGH: Higher order bits (39:32) of hardware cursor

	 * surface base address in byte. It is 4K byte aligned.

	 * The correct way to program cursor surface address is to first write

	 * to CUR_SURFACE_ADDRESS_HIGH, and then write to CUR_SURFACE_ADDRESS

 Unlock Cursor registers. */

 set to bypass mode first before change */

 If prescale is in use, then legacy lut should be bypassed */

 power on LUT memory */

 enable all */

 256 entry mode */

 LUT-256, unsigned, integer, new u0.12 format */

 start from index 0 */

 power off LUT memory */

 bypass prescale, enable legacy LUT */

 DCE6 does not have CURSOR2_DEGAMMA_MODE bit in DEGAMMA_CONTROL reg */

****************************************/

 Constructor, Destructor               */

****************************************/

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* return backlight in hardware format which is unsigned 17 bits, with

	 * 1 bit integer and 16 bit fractional

	/* return backlight in hardware format which is unsigned 17 bits, with

	 * 1 bit integer and 16 bit fractional

 TODO: Optimize by only reading back final 4 bytes

 Copy iramtable into cw7

 Fw will copy from cw7 to fw_state

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* It must not be 0, so we have to restore them

	 * Bios bug w/a - period resets to zero,

	 * restoring to cache values which is always correct

		/* TODO: Note: This should not really happen since VBIOS

		 * should have initialized PWM registers on boot.

 Have driver take backlight control

 TakeBacklightControl(true)

 Enable the backlight output

 Unlock group 2 backlight registers

	/*

	 * 1. Find  16 bit backlight active duty cycle, where 0 <= backlight

	 * active duty cycle <= backlight period

	/* 1.1 Apply bitmask for backlight period value based on value of BITCNT

 e.g. maskedPwmPeriod = 0x24 when bitCount is 6 */

	/* 1.2 Calculate integer active duty cycle required upper 16 bits

	 * contain integer component, lower 16 bits contain fractional component

	 * of active duty cycle e.g. 0x21BDC0 = 0xEFF0 * 0x24

	/* 1.3 Calculate 16 bit active duty cycle from integer and fractional

	 * components shift by bitCount then mask 16 bits and add rounding bit

	 * from MSB of fraction e.g. 0x86F7 = ((0x21BDC0 >> 6) & 0xFFF) + 0

	/*

	 * 2. Program register with updated value

 2.1 Lock group 2 backlight registers */

 2.2 Write new active duty cycle

 2.3 Unlock group 2 backlight registers */

 3 Wait for pending bit to be cleared */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 do nothing */

/*

 * Convert dmcub psr state to dmcu psr state.

/*

 * Get PSR state from firmware.

 Send gpint command and wait for ack

 GPINT was executed, get response

 Return invalid state when GPINT times out

 Assert if max retry hit

/*

 * Set PSR version.

/*

 * Enable/Disable PSR.

 Send header only

	/* Below loops 1000 x 500us = 500 ms.

	 *  Exit PSR may need to wait 1-2 frames to power up. Timeout after at

	 *  least a few frames. Should never hit the max retry assert below.

 assert if max retry hit */

/*

 * Set PSR level.

/**

 * Set PSR power optimization flags.

/*

 * Setup PSR by programming phy registers and sending psr hw context values to firmware.

TODO: refactor for multi edp support

 First, set the psr version

 Program DP DPHY fast training registers

 Program DP_SEC_CNTL1 register to set transmission GPS0 line num and priority to high

 Hw insts

 Misc

/*

 * Send command to PSR to force static ENTER and ignore all state changes until exit

/*

 * Get PSR residency from firmware.

 Send gpint command and wait for ack */

/*

 * Construct PSR object.

/*

 * Allocate and initialize PSR object.

/*

 * Deallocate PSR object.

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* TODOFPGA Figure out a proper number for max_retries polling for lock

	 * use 50 for now.

we need turn on clock before programming AFMT block*/

		/* poll dig_update_lock is not locked -> asic internal signal

		 * assume otg master lock will unlock it

/*		REG_WAIT(AFMT_VBI_PACKET_CONTROL, AFMT_GENERIC_LOCK_STATUS,

 check if HW reading GSP memory */

		/* HW does is not reading GSP memory not reading too long ->

		 * something wrong. clear GPS memory access and notify?

		 * hw SW is writing to GSP memory

 choose which generic packet to use */

	/* write generic packet header

	/* write generic packet contents

	 * (we never use last 4 bytes)

 force double-buffered packet update */

		/* enable transmission of packet(s) -

 send packet(s) every frame */

 select line number to send packets on */

 choose which generic packet control to use */

 invalid HW packet index */

 setup stream encoder in dp mode */

 asynchronous mode */

full range*/

bt709*/

the input timing is in VESA spec format with Interlace flag =1*/

 set pixel encoding */

				/* HW testing only, no use case yet.

				 * Color depth of Y-only could be

		/* Note: DP_MSA_MISC1 bit 7 is the indicator

		 * of Y-only mode.

		 * This bit is set in HW if register

 set color depth */

 set dynamic range and YCbCr range */

 bit7 = 0*/

full range*/

 bit3=1 */

 bit7 = 0*/

limited range*/

 bit3=1, bit4=0 */

 bit7 = 0*/

bt601*/

 bit2=0, bit1=1 */

 bit2=1, bit1=0 */

 bit3=1, bit4=1 */

 bit7 = 0*/

bt709*/

 bit2=0, bit1=1 */

 bit2=1, bit1=0 */

limited range*/

 do nothing */

 MSA_MISC1 */

	/* dcn new register

	 * dc_crtc_timing is vesa dmt struct. data from edid

		/* calcuate from vesa timing parameters

		 * h_active_start related to leading edge of sync

 start at begining of left border */

 start at begining of left border */

 HWDITH include border or overscan */

 setup stream encoder in hdmi mode */

 setup HDMI engine */

			/* enable HDMI data scrambler

			 * HDMI_CLOCK_CHANNEL_RATE_MORE_340M

			 * Clock channel frequency is 1/4 of character rate.

 TODO: New feature for DCE11, still need to implement */

			/* enable HDMI data scrambler

			 * HDMI_CLOCK_CHANNEL_FREQ_EQUAL_TO_CHAR_RATE

			 * Clock channel frequency is the same

			 * as character rate

 following belongs to audio */

 setup stream encoder in dvi mode */

 setup stream encoder in LVDS mode */

 wait for update to be completed on the link */

 i.e. DP_MSE_RATE_UPDATE_PENDING field (read only) */

 is reset to 0 (not pending) */

we need turn on clock before programming AFMT block*/

 for bring up, disable dp double  TODO */

 stop generic packets 0 & 1 on HDMI */

 stop generic packets 2 & 3 on HDMI */

 stop generic packets 2 & 3 on HDMI */

 packetIndex */

 packetIndex */

 packetIndex */

	/* enable/disable transmission of packet(s).

	*  If enabled, packet transmission begins on the next frame

	/* This bit is the master enable bit.

	* When enabling secondary stream engine,

	* this master bit must also be set.

	* This register shared with audio info frame.

	* Therefore we need to enable master bit

	* if at least on of the fields is not 0

 stop generic packets on DP */

	/* this register shared with audio info frame.

	 * therefore we need to keep master enabled

	/* Note: For CZ, we are changing driver default to disable

	 * stream deferred to next VBLANK. If results are positive, we

	 * will make the same change to all DCE versions. There are a

	 * handful of panels that cannot handle disable stream at

	 * HBLANK and will result in a white line flash across the

stream not enabled*/

	/* Specify the video stream disable point

	/* Larger delay to wait until VBLANK - use max retry of

	 * 10us*3000=30ms. This covers 16.6ms of typical 60 Hz mode +

	 * a little more because we may not trust delay accuracy.

 disable DP stream */

	/* the encoder stops sending the video stream

	 * at the start of the vertical blanking.

	 * Poll for DP_VID_STREAM_STATUS == 0

	/* Tell the DP encoder to ignore timing from CRTC, must be done after

	 * the polling. If we set DP_STEER_FIFO_RESET before DP stream blank is

	 * complete, stream status will be stuck in video stream enabled state,

	 * i.e. DP_VID_STREAM_STATUS stuck at 1.

 output video stream to link encoder */

		/* M / N = Fstream / Flink

		* m_vid / n_vid = pixel rate / link rate

 enable auto measurement */

		/* auto measurement need 1 full 0x8000 symbol cycle to kick in,

		 * therefore program initial value for Mvid and Nvid

 set DIG_START to 0x1 to resync FIFO */

 switch DP encoder to CRTC data */

	/* wait 100us for DIG/DP logic to prime

	* (i.e. a few video lines)

	/* the hardware would start sending video at the start of the next DP

	* frame (i.e. rising edge of the vblank).

	* NOTE: We used to program DP_VID_STREAM_DIS_DEFER = 2 here, but this

	* register has no effect on enable transition! HW always guarantees

	* VID_STREAM enable at start of next frame, and this is not

	* programmable

 25.2MHz/1.001*/

 25.2MHz/1.001*/

 25.2MHz*/

 27MHz */

 27MHz*1.001*/

 27MHz*1.001*/

 54MHz*/

 54MHz*1.001*/

 74.25MHz/1.001*/

 74.25MHz*/

 148.5MHz/1.001*/

 148.5MHz*/

 these are one to one */

	/* if Rear Left and Right exist move RC speaker to channel 7

	 * otherwise to channel 5

 FRONT Left Right Center and REAR Left Right Center are exclusive */

 for other hdmi features */

 for Control Period */

 Number of Audio Packets per Line */

 search for exact pixel clock in table */

 not match */

 match found */

 not found */

	/* See HDMI spec  the table entry under

 This should not happen.it does so we don't get BSOD*/

 setup the audio stream source select (audio -> dig mapping) */

 Channel allocation */

	/* For now still do calculation, although this field is ignored when

 HDMI_AUDIO_PACKET_CONTROL */

 AFMT_AUDIO_PACKET_CONTROL */

 AFMT_AUDIO_PACKET_CONTROL2 */

 HDMI_ACR_PACKET_CONTROL */

 Program audio clock sample/regeneration parameters */

 HDMI_ACR_32_0__HDMI_ACR_CTS_32_MASK */

 HDMI_ACR_32_1__HDMI_ACR_N_32_MASK */

 HDMI_ACR_44_0__HDMI_ACR_CTS_44_MASK */

 HDMI_ACR_44_1__HDMI_ACR_N_44_MASK */

 HDMI_ACR_48_0__HDMI_ACR_CTS_48_MASK */

 HDMI_ACR_48_1__HDMI_ACR_N_48_MASK */

	/* Video driver cannot know in advance which sample rate will

	   be used by HD Audio driver

	   HDMI_ACR_PACKET_CONTROL__HDMI_ACR_N_MULTIPLE field is

	/* AFMT_60958_0__AFMT_60958_CS_CHANNEL_NUMBER_L_MASK &

 AFMT_60958_1 AFMT_60958_CS_CHALNNEL_NUMBER_R */

	/*AFMT_60958_2 now keep this settings until

 --- DP Audio packet configurations --- */

 ATP Configuration */

 Async/auto-calc timestamp mode */

	/* --- The following are the registers

 AFMT_AUDIO_PACKET_CONTROL */

 AFMT_AUDIO_PACKET_CONTROL2 */

 Program the ATP and AIP next */

 AFMT_INFOFRAME_CONTROL0 */

 AFMT_60958_0__AFMT_60958_CS_CLOCK_ACCURACY_MASK */

 DCE8/10 does not have this register */

	/* wait for AFMT clock to turn on,

	 * expectation: this should complete in 1-2 reads

	 *

	 * REG_WAIT(AFMT_CNTL, AFMT_AUDIO_CLOCK_ON, !!enable, 1, 10);

	 *

	 * TODO: wait for clock_on does not work well. May need HW

	 * program sequence. But audio seems work normally even without wait

	 * for clock_on status change

 Enable Audio packets */

 Program the ATP and AIP next */

 Program STREAM_ENABLE after all the other enables. */

 Disable Audio packets */

	/* This register shared with encoder info frame. Therefore we need to

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 start I2C transfer */

	/* all transactions were executed and HW buffer became empty

	 * (even though it actually happens when status becomes DONE)

	/*

	 * this is the case when HW used for communication, I2C_SW_STATUS

	 * could be zero

		/* after reading the status,

		 * if the I2C operation executed successfully

		 * (i.e. DC_I2C_STATUS_DONE = 1) then the I2C controller

		 * should read data bytes from I2C circular data buffer

 TODO Warning ? */

	/* Write the I2C address and I2C data

	 * into the hardware circular buffer, one byte per entry.

	 * As an example, the 7-bit I2C slave address for CRT monitor

	 * for reading DDC/EDID information is 0b1010001.

	 * For an I2C send operation, the LSB must be programmed to 0;

	 * for I2C receive operation, the LSB must be programmed to 1.

 we have checked I2c not used by DMCU, set SW use I2C REQ to 1 to indicate SW using it*/

 we have checked I2c not used by DMCU, set SW use I2C REQ to 1 to indicate SW using it*/

set SW requested I2c speed to default, if API calls in it will be override later*/

 Program pin select */

 Program time limit */

pre-dcn*/

	/* Program HW priority

	 * set to High - interrupt software I2C at any time

	 * Enable restart of SW I2C that was interrupted by HW

	 * disable queuing of software while I2C is in use by HW

 Reset HW engine */

 if used by SW, safe to reset */

 HW I2c engine - clock gating feature */

for HW HDCP Ri polling failure w/a test*/

 Release I2C after reset, so HW or DMCU could use it */

 i2c_engine is busy by VBios, lets wait and retry */

	/* We need following:

	 * transaction length will not exceed

	 * the number of free bytes in HW buffer (minus one for address)

 obtain timeout value before submitting request */

 wait until transaction proceed */

 update transaction status */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

  defines the various methods of bit reduction available for use */

 00 - BITS2:0 Bypass */

 01 - hard coded coefficient TV RGB */

 04 - programmable OUTPUT CSC coefficient */

 TODO: correct values below */

 Set bypass */

 1 - Replace out of bound pixels with edge */

 Set bypass */

 DCE6 has no SCL_MODE register, skip scale mode programming */

 DCE6 has no SCL_MODE register, skip scale mode programming */

 DCE6 has no SCL_BOUNDARY_MODE bit, skip replace out of bound pixels */

We need to disable power gating on coeff memory to do programming*/

		/*we always program N/2 + 1 phases, total phases N, but N/2-1 are just mirror

We need to restore power gating on coeff memory to initial state*/

 TODO: add stereo support */

 DCE6 h_init_luma setting inspired by DCE110 */

 DCE6 h_init_chroma setting inspired by DCE110 */

 DCE6 has SCL_HORZ_FILTER_INIT_RGB_LUMA register */

 DCE6 has SCL_HORZ_FILTER_INIT_CHROMA register */

 should never happen, bug */

Use all three pieces of memory always*/

 Clear SCL_F_SHARP_CONTROL value to 0 */

 1. Program overscan */

 2. Program taps and configuration */

 3. Calculate and program ratio, filter initialization */

 4. Program vertical filters */

 5. Program horizontal filters */

 6. Program the viewport */

 7. Set bit to flip to new coefficient memory */

Use whole line buffer memory always*/

 Clear SCL_F_SHARP_CONTROL value to 0 */

 1. Program overscan */

 2. Program taps and configuration */

 3. Calculate and program ratio, DCE6 filter initialization */

 DCE6 has specific calculate_inits() function */

 DCE6 has specific program_scl_ratios_inits() function */

 4. Program vertical filters */

 5. Program horizontal filters */

 6. Program the viewport */

 DCE6 has no SCL_COEF_UPDATE_COMPLETE bit to flip to new coefficient memory */

 DCE6 DATA_FORMAT register does not support ALPHA_EN */

/*****************************************************************************

 * set_clamp

 *

 * @param depth : bit depth to set the clamp to (should match denorm)

 *

 * @brief

 *     Programs clamp according to panel bit depth.

 *

	/* At the clamp block the data will be MSB aligned, so we set the max

	 * clamp accordingly.

	 * For example, the max value for 6 bits MSB aligned (14 bit bus) would

	 * be "11 1111 0000 0000" in binary, so 0x3F00.

 6bit MSB aligned on 14 bit bus '11 1111 0000 0000' */

 8bit MSB aligned on 14 bit bus '11 1111 1100 0000' */

 10bit MSB aligned on 14 bit bus '11 1111 1111 0000' */

 12bit MSB aligned on 14 bit bus '11 1111 1111 1100' */

 Invalid clamp bit depth */

/*******************************************************************************

 * set_round

 *

 * @brief

 *     Programs Round/Truncate

 *

 * @param [in] mode  :round or truncate

 * @param [in] depth :bit depth to round/truncate to

 OUT_ROUND_TRUNC_MODE 3:0 0xA Output data round or truncate mode

 POSSIBLE VALUES:

      00 - truncate to u0.12

      01 - truncate to u0.11

      02 - truncate to u0.10

      03 - truncate to u0.9

      04 - truncate to u0.8

      05 - reserved

      06 - truncate to u0.14

      07 - truncate to u0.13		set_reg_field_value(

			value,

			clamp_max,

			OUT_CLAMP_CONTROL_R_CR,

			OUT_CLAMP_MAX_R_CR);

      08 - round to u0.12

      09 - round to u0.11

      10 - round to u0.10

      11 - round to u0.9

      12 - round to u0.8

      13 - reserved

      14 - round to u0.14

      15 - round to u0.13



  set up bit depth */

 Invalid dcp_out_trunc_round_depth */

  set up round or truncate */

 Invalid dcp_out_trunc_round_mode */

/*****************************************************************************

 * set_dither

 *

 * @brief

 *     Programs Dither

 *

 * @param [in] dither_enable        : enable dither

 * @param [in] dither_mode           : dither mode to set

 * @param [in] dither_depth          : bit depth to dither to

 * @param [in] frame_random_enable    : enable frame random

 * @param [in] rgb_random_enable      : enable rgb random

 * @param [in] highpass_random_enable : enable highpass random

 *

 Invalid dcp_spatial_dither_mode */

 Invalid dcp_spatial_dither_depth */

  write the register */

/*****************************************************************************

 * dce_transform_bit_depth_reduction_program

 *

 * @brief

 *     Programs the DCP bit depth reduction registers (Clamp, Round/Truncate,

 *      Dither) for dce

 *

 * @param depth : bit depth to set the clamp to (should match denorm)

 *

 Invalid clamp bit depth */

 Default to 12 bit truncation without rounding */

 Don't enable dithering if truncation is enabled */

			/*

			 * Invalid truncate/round depth. Setting here to 12bit

			 * to prevent use-before-initialize errors.

/*****************************************************************************

 * dce60_transform_bit_depth_reduction program

 *

 * @brief

 *     Programs the DCP bit depth reduction registers (Clamp, Round/Truncate,

 *      Dither) for dce

 *

 * @param depth : bit depth to set the clamp to (should match denorm)

 *

 Invalid clamp bit depth */

 Default to 12 bit truncation without rounding */

 Don't enable dithering if truncation is enabled */

			/*

			 * Invalid truncate/round depth. Setting here to 12bit

			 * to prevent use-before-initialize errors.

 DCE6 has no OUT_CLAMP_CONTROL_* registers - set_clamp() is skipped */

	/* Find number of pixels that can fit into a single LB entry and

	 * take floor of the value since we cannot store a single pixel

 63/64 for 6 bit output color depth */

		/* Unity for 8 bit output color depth

 1023/1024 for 10 bit output color depth */

 4095/4096 for 12 bit output color depth */

 not valid used case! */

		/*we should use unsupported capabilities

 DATA_FORMAT in DCE6 does not have PIXEL_DEPTH and PIXEL_EXPAN_MODE masks */

		/*we should use unsupported capabilities

/*

 *****************************************************************************

 *  Function: dal_transform_wide_gamut_set_gamut_remap

 *

 *  @param [in] const struct xfm_grph_csc_adjustment *adjust

 *

 *  @return

 *     void

 *

 *  @note calculate and apply color temperature adjustment to in Rgb color space

 *

 *  @see

 *

 *****************************************************************************

 Bypass if type is bypass or hw */

 Fail if in_taps are impossible */

	/*

	 * Set taps according to this policy (in this order)

	 * - Use 1 for no scaling

	 * - Use input taps

	 * - Use 4 and reduce as required by line buffer size

	 * - Decide chroma taps if chroma is scaled

	 *

	 * Ignore input chroma taps. Decide based on non-chroma

 reduce v_taps if needed but ensure we have at least two */

 reduce chroma v_taps if needed but ensure we have at least two */

 we've got valid taps */

 by pass */

 TV RGB */

 YCbCr601 */

 YCbCr709 */

 by pass */

 TV RGB */

 YCbCr601 */

 YCbCr709 */

 by pass */

  We did everything ,now program DxOUTPUT_CSC_CONTROL */

 currently parameter not in use */

		/*

		 * HW default false we program locally defined matrix

		 * HW default true  we use predefined hw matrix and we

		 * do not need to program matrix

		 * OEM wants the HW default via runtime parameter.

			/* program the matrix with default values from this

	/* configure the what we programmed :

	 * 1. Default values from this file

	 * 2. Use hardware default from ROM_A and we do not need to program

 Power on LUT memory */

 Program REGAMMA_LUT_DATA */

  we are done with DCP LUT memory; re-enable low power mode */

 Setup regions */

 Program PWL */

****************************************/

 Constructor, Destructor               */

****************************************/

0x6B0*/

0x6B0*/

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 new for 64bpp from HW */

 0 for invalid */

 fake */

 fake */

 set a */

 set d */

 set a */

 set d */

 set a */

 set d */

 set a */

 set d */

 set a */

 set d */

 set a */

 set d */

 set a */

 set b */

 set c */

 set d */

 set a */

 set b */

 set c */

 set d */

 set a */

 set b */

 set c */

 set d */

 set a */

 set b */

 set c */

 set d */

 set a */

 set b */

 set c */

 set d */

 set a */

 set b */

 set c */

 set d */

 GFX9 */

		/* TODO: DCP0_GRPH_CONTROL__GRPH_SE_ENABLE where to get info

		GRPH_SE_ENABLE, 1,

		GRPH_Z, 0);

 GFX8 */

 01 - DCP_GRPH_COLOR_EXPANSION_MODE_ZEXP: zero expansion for YCbCr */

		/*

				GRPH_Z, 0);

 GFX6 but reuses gfx8 struct */

 DCE6 has no GRPH_MICRO_TILE_MODE mask */

 01 - DCP_GRPH_COLOR_EXPANSION_MODE_ZEXP: zero expansion for YCbCr */

		/*

				GRPH_Z, 0);

 not used in DCE6 */

 DCE6 has no HW rotation, skip rotation_angles declaration */

 DCE6 has no HW rotation, skip ROTATION_ANGLE_* processing */

 DCE6 has no HW_ROTATION register, skip setting rotation_angles */

 no swap */

			/*todo: doesn't look like we handle BGRA here,

 ABGR formats */

 shouldn't this get float too? */

 not used in DCE6 */

return double of frame time*/

TODO: should we use pixel format normalized pixel clock here?*/

 avoid division by zero */

 avoid division by zero*/

high register MUST be programmed first*/

high register MUST be programmed first*/

 not supported */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Not lock pipe when blank */

 DCE6 has no BLND_V_UPDATE_LOCK register */

 todo: why do we need this at boot? is dce_enable_fe_clock enough? */

 TODO: implement */

 TODO: implement */

 Only use LUT for 8 bit formats */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

/**

 *  dmub_enable_outbox_notification - Sends inbox cmd to dmub to enable outbox1

 *                                    messages with interrupt. Dmub sends outbox1

 *                                    message and triggers outbox1 interrupt.

 * @dc: dc structure

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 enable AUX before request SW to access AUX */

DP_AUX block as part of the enable sequence*/

poll HW to make sure reset it done*/

if (field)*/

 request SW to access AUX */

 clear_aux_error */

 force_default_calibrate */

 bug? why AUXN update EN and OVERRIDE_EN 1 by 1 while AUX P toggles OVERRIDE? */

 set the delay and the number of bytes to write */

	/* The length include

	 * the 4 bit header and the 20 bit address

	 * (that is 3 byte).

	 * If the requested length is non zero this means

	 * an addition byte specifying the length is required.

 program action and address and payload data (if 'is_write') */

		/* Load the HW buffer with the Data to be sent.

		 * This is relevant for write operation.

		 * For read, the data recived data will be

		 * processed in process_channel_reply().

 In case HPD is LOW, exit AUX transaction */

 Need at least the status byte */

 ACK */

 First byte was already used to get the command status */

 Do not overflow buffer */

caller pass NULL pointer*/

 poll to make sure that SW_DONE is asserted */

 in case HPD is LOW, exit AUX transaction */

	/* Note that the following bits are set in 'status.bits'

	 * during CTS 4.2.1.2 (FW 3.3.1):

	 * AUX_SW_RX_MIN_COUNT_VIOL, AUX_SW_RX_INVALID_STOP,

	 * AUX_SW_RX_RECV_NO_DET, AUX_SW_RX_RECV_INVALID_H.

	 *

	 * AUX_SW_RX_MIN_COUNT_VIOL is an internal,

	 * HW debugging bit and should be ignored.

		/*time_elapsed >= aux_engine->timeout_period

		 *  AUX_SW_STATUS__AUX_SW_HPD_DISCON = at this point

 1-Update polling timeout period */

 2-Update aux timeout period length and multiplier */

 XXX: Workaround to configure ddc channels for aux transactions */

ms*/

 sink requested more time to complete the write via AUX_ACKM */

					/* retry reading the write status until complete

					 * NOTE: payload is modified here

 polling_timeout_period is in us */

 Check whether a DEFER had occurred before the timeout.

 If so, treat timeout as a DEFER.

					/*

					 * DP 1.4, 2.8.2:  AUX Transaction Response/Reply Timeouts

					 * According to the DP spec there should be 3 retries total

					 * with a 400us wait inbetween each. Hardware already waits

					 * for 550us therefore no wait is required here.

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE10 register header files */

/*******************************************************************************

 * Private definitions

**************************PIPE_CONTROL***********************************/

		/* Revert MASTER_UPDATE_MODE to 0 because bios sets it 2

		 * by default when command table is called

*************************************************************************/

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set register offset */

 set register offset with instance */

 TODO implement when needed but for now hardcode max value*/

			/* Store first available for MST second display

			 * in daisy chain use case

	/*

	 * below can happen in cases when stream encoder is acquired:

	 * 1) for second MST display in chain, so preferred engine already

	 * acquired;

	 * 2) for another link, which preferred engine already acquired by any

	 * MST configuration.

	 *

	 * If signal is of DP type and preferred engine not found, return last available

	 *

	 * TODO - This is just a patch up and a generic solution is

	 * required for non DP connectors.

	/*************************************************

	*  Resource + asic cap harcoding                *

 Create hardware sequencer */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*******************************************************************************

 ********************************************************************************

 **

 **                  D I G E N C O D E R C O N T R O L

 **

 ********************************************************************************

 dual link 2.7GHz */

 single link 1.62GHz */

 We need to convert from KHz units into 10KHz units */

 dual link 2.7GHz */

 single link 1.62GHz */

 We need to convert from KHz units into 10KHz units */

/*******************************************************************************

 ********************************************************************************

 **

 **                  TRANSMITTER CONTROL

 **

 ********************************************************************************

			/* on INIT this bit should be set according to the

			 * phisycal connector

			 * Bit0: dual link connector flag

			 * =0 connector is single link connector

			 * =1 connector is dual link connector

 connector object id */

 votage swing and pre-emphsis */

 if dual-link */

			/* on ENABLE/DISABLE this bit should be set according to

			 * actual timing (number of lanes)

			 * Bit0: dual link connector flag

			 * =0 connector is single link connector

			 * =1 connector is dual link connector

			/* link rate, half for dual link

			 * We need to convert from KHz units into 20KHz units

			/* link rate, half for dual link

			 * We need to convert from KHz units into 10KHz units

	/* 00 - coherent mode

	 * 01 - incoherent mode

		/* Bit2: Transmitter Link selection

		 * =0 when bit0=0, single link A/C/E, when bit0=1,

		 * master link A/C/E

		 * =1 when bit0=0, single link B/D/F, when bit0=1,

		 * master link B/D/F

		/* Bit3: Transmitter data source selection

		 * =0 DIGA is data source.

		 * =1 DIGB is data source.

		 * This bit is only useful when ucAction= ATOM_ENABLE

		/* Bit4: DP connector flag

		 * =0 connector is none-DP connector

		 * =1 connector is DP connector

	/* Bit[7:6]: Transmitter selection

	 * =0 UNIPHY_ENCODER: UNIPHYA/B

	 * =1 UNIPHY1_ENCODER: UNIPHYC/D

	 * =2 UNIPHY2_ENCODER: UNIPHYE/F

	 * =3 reserved

 fill information based on the action */

			/* on INIT this bit should be set according to the

			 * phisycal connector

			 * Bit0: dual link connector flag

			 * =0 connector is single link connector

			 * =1 connector is dual link connector

 connector object id */

 votage swing and pre-emphsis */

			/* on ENABLE/DISABLE this bit should be set according to

			 * actual timing (number of lanes)

			 * Bit0: dual link connector flag

			 * =0 connector is single link connector

			 * =1 connector is dual link connector

 if dual-link */

			/* on ENABLE/DISABLE this bit should be set according to

			 * actual timing (number of lanes)

			 * Bit0: dual link connector flag

			 * =0 connector is single link connector

			 * =1 connector is dual link connector

			/* link rate, half for dual link

			 * We need to convert from KHz units into 20KHz units

			/* link rate, half for dual link

			 * We need to convert from KHz units into 10KHz units

	/* 00 - coherent mode

	 * 01 - incoherent mode

		/* Bit2: Transmitter Link selection

		 * =0 when bit0=0, single link A/C/E, when bit0=1,

		 * master link A/C/E

		 * =1 when bit0=0, single link B/D/F, when bit0=1,

		 * master link B/D/F

		/* Bit3: Transmitter data source selection

		 * =0 DIGA is data source.

		 * =1 DIGB is data source.

		 * This bit is only useful when ucAction= ATOM_ENABLE

	/* Bit[7:6]: Transmitter selection

	 * =0 UNIPHY_ENCODER: UNIPHYA/B

	 * =1 UNIPHY1_ENCODER: UNIPHYC/D

	 * =2 UNIPHY2_ENCODER: UNIPHYE/F

	 * =3 reserved

			/* on INIT this bit should be set according to the

			 * phisycal connector

			 * Bit0: dual link connector flag

			 * =0 connector is single link connector

			 * =1 connector is dual link connector

 connector object id */

 votage swing and pre-emphsis */

			/* on ENABLE/DISABLE this bit should be set according to

			 * actual timing (number of lanes)

			 * Bit0: dual link connector flag

			 * =0 connector is single link connector

			 * =1 connector is dual link connector

 if dual-link */

			/* link rate, half for dual link

			 * We need to convert from KHz units into 20KHz units

			/* link rate, half for dual link

			 * We need to convert from KHz units into 10KHz units

	/* 00 - coherent mode

	 * 01 - incoherent mode

		/* Bit2: Transmitter Link selection

		 * =0 when bit0=0, single link A/C/E, when bit0=1,

		 * master link A/C/E

		 * =1 when bit0=0, single link B/D/F, when bit0=1,

		 * master link B/D/F

		/* Bit3: Transmitter data source selection

		 * =0 DIGA is data source.

		 * =1 DIGB is data source.

		 * This bit is only useful when ucAction= ATOM_ENABLE

	/* Bit[7:6]: Transmitter selection

	 * =0 UNIPHY_ENCODER: UNIPHYA/B

	 * =1 UNIPHY1_ENCODER: UNIPHYC/D

	 * =2 UNIPHY2_ENCODER: UNIPHYE/F

	 * =3 reserved

 00 - coherent mode */

	/*

	 * In SI/TN case, caller have to set usPixelClock as following:

	 * DP mode: usPixelClock = DP_LINK_CLOCK/10

	 * (DP_LINK_CLOCK = 1.62GHz, 2.7GHz, 5.4GHz)

	 * DVI single link mode: usPixelClock = pixel clock

	 * DVI dual link mode: usPixelClock = pixel clock

	 * HDMI mode: usPixelClock = pixel clock * deep_color_ratio

	 * (=1: 8bpp, =1.25: 10bpp, =1.5:12bpp, =2: 16bpp)

	 * LVDS mode: usPixelClock = pixel clock

	/*

	 * In SI/TN case, caller have to set usPixelClock as following:

	 * DP mode: usPixelClock = DP_LINK_CLOCK/10

	 * (DP_LINK_CLOCK = 1.62GHz, 2.7GHz, 5.4GHz)

	 * DVI single link mode: usPixelClock = pixel clock

	 * DVI dual link mode: usPixelClock = pixel clock

	 * HDMI mode: usPixelClock = pixel clock * deep_color_ratio

	 * (=1: 8bpp, =1.25: 10bpp, =1.5:12bpp, =2: 16bpp)

	 * LVDS mode: usPixelClock = pixel clock

/*******************************************************************************

 ********************************************************************************

 **

 **                  SET PIXEL CLOCK

 **

 ********************************************************************************

 We need to convert from 100Hz units into 10KHz units */

 video bios did not define this: */

 Caller doesn't need to init this portion */

 video bios did not define this: */

 Caller doesn't need to init this portion */

 We need to convert from 100Hz units into 10KHz units */

		/* clkV5.ucMiscInfo bit[3:2]= HDMI panel bit depth: =0: 24bpp

		 * =1:30bpp, =2:32bpp

		 * driver choose program it itself, i.e. here we program it

		 * to 888 by default.

 yes this is correct, the atom define is wrong */

 yes this is correct, the atom define is wrong */

		/* Note: VBIOS still wants to use ucCRTC name which is now

		 * 1 byte in ULONG

		 *typedef struct _CRTC_PIXEL_CLOCK_FREQ

		 *{

		 * target the pixel clock to drive the CRTC timing.

		 * ULONG ulPixelClock:24;

		 * 0 means disable PPLL/DCPLL. Expanded to 24 bits comparing to

		 * previous version.

		 * ATOM_CRTC1~6, indicate the CRTC controller to

		 * ULONG ucCRTC:8;

		 * drive the pixel clock. not used for DCPLL case.

		 *}CRTC_PIXEL_CLOCK_FREQ;

		 *union

		 *{

		 * pixel clock and CRTC id frequency

		 * CRTC_PIXEL_CLOCK_FREQ ulCrtcPclkFreq;

		 * ULONG ulDispEngClkFreq; dispclk frequency

		 *};

 We need to convert from 100 Hz units into 10KHz units */

		/* clkV6.ucMiscInfo bit[3:2]= HDMI panel bit depth: =0:

		 * 24bpp =1:30bpp, =2:32bpp

		 * driver choose program it itself, i.e. here we pass required

		 * target rate that includes deep color.

		/* Note: VBIOS still wants to use ucCRTC name which is now

		 * 1 byte in ULONG

		 *typedef struct _CRTC_PIXEL_CLOCK_FREQ

		 *{

		 * target the pixel clock to drive the CRTC timing.

		 * ULONG ulPixelClock:24;

		 * 0 means disable PPLL/DCPLL. Expanded to 24 bits comparing to

		 * previous version.

		 * ATOM_CRTC1~6, indicate the CRTC controller to

		 * ULONG ucCRTC:8;

		 * drive the pixel clock. not used for DCPLL case.

		 *}CRTC_PIXEL_CLOCK_FREQ;

		 *union

		 *{

		 * pixel clock and CRTC id frequency

		 * CRTC_PIXEL_CLOCK_FREQ ulCrtcPclkFreq;

		 * ULONG ulDispEngClkFreq; dispclk frequency

		 *};

/*******************************************************************************

 ********************************************************************************

 **

 **                  ENABLE PIXEL CLOCK SS

 **

 ********************************************************************************

 convert back to unit of 10KHz */

 Unexpected PLL value!! */

 Unexpected PLL value!! */

		/* Both amounts need to be left shifted first before bit

		 * comparison. Otherwise, the result will always be zero here

		/* ATOM_PPLL_SS_TYPE_V3_P0PLL; this is pixel clock only,

		 * not for SI display clock.

 Unexpected PLL value!! */

		/* Both amounts need to be left shifted first before bit

		 * comparison. Otherwise, the result will always be zero here

/*******************************************************************************

 ********************************************************************************

 **

 **                  ADJUST DISPLAY PLL

 **

 ********************************************************************************

	/* We need to convert from KHz units into 10KHz units and then convert

		/* Convert output pixel clock back 10KHz-->KHz: multiply

		 * original pixel clock in KHz by ratio

	/* We need to convert from KHz units into 10KHz units and then convert

		/* Convert output pixel clock back 10KHz-->KHz: multiply

		 * original pixel clock in KHz by ratio

/*******************************************************************************

 ********************************************************************************

 **

 **                  DAC ENCODER CONTROL

 **

 ********************************************************************************

	/* We need to convert from KHz units into 10KHz units

	 * it looks as if the TvControl do not care about pixel clock

/*******************************************************************************

 ********************************************************************************

 **

 **                  DAC OUTPUT CONTROL

 **

 ********************************************************************************

/*******************************************************************************

 ********************************************************************************

 **

 **                  SET CRTC TIMING

 **

 ********************************************************************************

	/* VBIOS does not expect any value except zero into this call, for

	 * underscan use another entry ProgramOverscan call but when mode

	 * 1776x1000 with the overscan 72x44 .e.i. 1920x1080 @30 DAL2 is ok,

	 * but when same ,but 60 Hz there is corruption

	 * DAL1 does not allow the mode 1776x1000@60

		/* original DAL code has this condition to apply tis for

		 * non-TV/CV only due to complex MV testing for possible

		 * impact

		 * if (pACParameters->signal != SignalType_YPbPr &&

		 *  pACParameters->signal != SignalType_Composite &&

		 *  pACParameters->signal != SignalType_SVideo)

		/* HW will deduct 0.5 line from 2nd feild.

		 * i.e. for 1080i, it is 2 lines for 1st field, 2.5

		 * lines for the 2nd feild. we need input as 5 instead

		 * of 4, but it is 4 either from Edid data

		 * (spec CEA 861) or CEA timing table.

 bios usH_Size wants h addressable size */

 bios usH_Blanking_Time wants borders included in blanking */

 bios usV_Size wants v addressable size */

 bios usV_Blanking_Time wants borders included in blanking */

	/* bios usHSyncOffset is the offset from the end of h addressable,

	 * our horizontalSyncStart is the offset from the beginning

	/* bios usHSyncOffset is the offset from the end of v addressable,

	 * our verticalSyncStart is the offset from the beginning of

	/* we assume that overscan from original timing does not get bigger

	 * than 255

	 * we will program all the borders in the Set CRTC Overscan call below

		/* original DAL code has this condition to apply this

		 * for non-TV/CV only

		 * due to complex MV testing for possible impact

		 * if ( pACParameters->signal != SignalType_YPbPr &&

		 *  pACParameters->signal != SignalType_Composite &&

		 *  pACParameters->signal != SignalType_SVideo)

			/* HW will deduct 0.5 line from 2nd feild.

			 * i.e. for 1080i, it is 2 lines for 1st field,

			 * 2.5 lines for the 2nd feild. we need input as 5

			 * instead of 4.

			 * but it is 4 either from Edid data (spec CEA 861)

			 * or CEA timing table.

/*******************************************************************************

 ********************************************************************************

 **

 **                  ENABLE CRTC

 **

 ********************************************************************************

/*******************************************************************************

 ********************************************************************************

 **

 **                  ENABLE CRTC MEM REQ

 **

 ********************************************************************************

/*******************************************************************************

 ********************************************************************************

 **

 **                  DISPLAY PLL

 **

 ********************************************************************************

 Invalid Inpute!! */

 We need to convert from KHz units into 10KHz units */

Invalid Input!!*/

 We need to convert from KHz units into 10KHz units */

		/* True display clock is returned by VBIOS if DFS bypass

/*******************************************************************************

 ********************************************************************************

 **

 **                  EXTERNAL ENCODER CONTROL

 **

 ********************************************************************************

 we need use _PS_Alloc struct */

 check if encoder supports external encoder control table */

	/* Fill information based on the action

	 *

	 * Bit[6:4]: indicate external encoder, applied to all functions.

	 * =0: external encoder1, mapped to external encoder enum id1

	 * =1: external encoder2, mapped to external encoder enum id2

	 *

	 * enum ObjectEnumId

	 * {

	 *  EnumId_Unknown = 0,

	 *  EnumId_1,

	 *  EnumId_2,

	 * };

		/* output display connector type. Only valid in encoder

		/* EXTERNAL_ENCODER_CONTROL_PARAMETERS_V3 pixel clock unit in

		 * 10KHz

		 * output display device pixel clock frequency in unit of 10KHz.

		 * Only valid in setup and enableoutput

		/* Indicate display output signal type drive by external

			/* Bit[0]: indicate link rate, =1: 2.7Ghz, =0: 1.62Ghz,

			/* output color depth Indicate encoder data bpc format

			 * in DP mode, only valid in encoder setup in DP mode.

		/* Indicate how many lanes used by external encoder, only valid

/*******************************************************************************

 ********************************************************************************

 **

 **                  ENABLE DISPLAY POWER GATING

 **

 ********************************************************************************

/*******************************************************************************

 ********************************************************************************

 **

 **                  SET DCE CLOCK

 **

 ********************************************************************************

 only program clock frequency if display clock is used; VBIOS will program DPREFCLK */

 We need to convert from KHz units into 10KHz units */

 Convert from 10KHz units back to KHz */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

****************************************************************************/

****************************************************************************/

 Invalid object id */

 get the I2C info */

 getBiosObject will return MXM object */

 Invalid object id */

	/* Pixel clock pll information. We need to convert from 10KHz units into

		/* Since there is no information on the SS, report conservative

 unit of 0.01% */

		/* Since there is no information on the SS,report conservative

 unit of 0.01% */

	/* Pixel clock pll information. We need to convert from 10KHz units into

	/* There should be only one entry in the SS info table for Memory Clock

		/* Since there is no information for external SS, report

 unit of 0.01% */

				/* if it is centermode, the exact SS Percentage

				 * will be round up of half of the percentage

	/* There should be only one entry in the SS info table for Engine Clock

		/* Since there is no information for external SS, report

 unit of 0.01% */

				/* if it is centermode, the exact SS Percentage

				 * will be round up of half of the percentage

	/* Pixel clock pll information. We need to convert from 10KHz units into

	/* There should be only one entry in the SS info table for Memory Clock

		/* Since there is no information for external SS, report

 unit of 0.01% */

				/* if it is centermode, the exact SS Percentage

				 * will be round up of half of the percentage

	/* There should be only one entry in the SS info table for Engine Clock

		/* Since there is no information for external SS, report

 unit of 0.01% */

				/* if it is centermode, the exact SS Percentage

				 * will be round up of half of the percentage

 Remote Display */

 Is allowed minimum BL level */

 Used starting from CI */

		/* VBIOS introduced new defines for Version 3, same values as

		 *  before, so now use these new ones for Version 3.

		 * Shouldn't affect field VBIOS's V3 as define values are still

		 *  same.

		 * #define SS_MODE_V3_CENTRE_SPREAD_MASK                0x01

		 * #define SS_MODE_V3_EXTERNAL_SS_MASK                  0x02



		 * Old VBIOS defines:

		 * #define ATOM_SS_CENTRE_SPREAD_MODE_MASK        0x00000001

		 * #define ATOM_EXTERNAL_SS_MASK                  0x00000002

		/* Older VBIOS (in field) always provides SS percentage in 0.01%

 #define SS_MODE_V3_PERCENTAGE_DIV_BY_1000_MASK 0x10 */

 convert [10KHz] into [KHz] */

 Invalid object */

/**

 * bios_parser_get_spread_spectrum_info

 * Get spread spectrum information from the ASIC_InternalSS_Info(ver 2.1 or

 * ver 3.1) or SS_Info table from the VBIOS. Currently ASIC_InternalSS_Info

 * ver 2.1 can co-exist with SS_Info table. Expect ASIC_InternalSS_Info ver 3.1,

 * there is only one entry for each signal /ss id.  However, there is

 * no planning of supporting multiple spread Sprectum entry for EverGreen

 * @dcb:     pointer to the DC BIOS

 * @signal:  ASSignalType to be converted to info index

 * @index:   number of entries that match the converted info index

 * @ss_info: sprectrum information structure,

 * return:   Bios parser result code

 check for bad input */

 signal translation */

			/* there can not be more then one entry for Internal

 there can not be more then one entry for SS Info table */

/**

 * get_ss_info_from_tbl

 * Get spread sprectrum information from the ASIC_InternalSS_Info Ver 2.1 or

 * SS_Info table from the VBIOS

 * There can not be more than 1 entry for  ASIC_InternalSS_Info Ver 2.1 or

 * SS_Info.

 *

 * @bp:      pointer to the BIOS parser

 * @id:      spread sprectrum info index

 * @ss_info: sprectrum information structure,

 * return:   BIOS parser result code

 check for bad input, if ss_info is not NULL */

 for SS_Info table only support DP and LVDS */

/**

 * get_ss_info_from_internal_ss_info_tbl_V2_1

 * Get spread sprectrum information from the ASIC_InternalSS_Info table Ver 2.1

 * from the VBIOS

 * There will not be multiple entry for Ver 2.1

 *

 * @bp:    pointer to the Bios parser

 * @id:    spread sprectrum info index

 * @info:  sprectrum information structure,

 * return: Bios parser result code

 convert [10KHz] into [KHz] */

/**

 * get_ss_info_from_ss_info_table

 * Get spread sprectrum information from the SS_Info table from the VBIOS

 * if the pointer to info is NULL, indicate the caller what to know the number

 * of entries that matches the id

 * for, the SS_Info table, there should not be more than 1 entry match.

 *

 * @bp:      pointer to the Bios parser

 * @id:      spread sprectrum id

 * @ss_info: sprectrum information structure,

 * return:   Bios parser result code

 exist of the SS_Info table */

 check for bad input, pSSinfo can not be NULL */

 have to convert from Internal_SS format to SS_Info format */

		/* there will be only one entry for each display type in SS_info

 We need to convert from 10KHz units into KHz units*/

 usHActive does not include borders, according to VBIOS team*/

	/* usHBlanking_Time includes borders, so we should really be subtracting

	/* doesn't have borders, so we should be okay leaving this as is for

 usVActive does not include borders, according to VBIOS team*/

	/* usVBlanking_Time includes borders, so we should really be subtracting

	/* doesn't have borders, so we should be okay leaving this as is for

 Get minimum supported refresh rate*/

Drr panel support can be reported by VBIOS*/

 We need to convert from 10KHz units into KHz units */

 usHActive does not include borders, according to VBIOS team */

	/* usHBlanking_Time includes borders, so we should really be subtracting

	/* doesn't have borders, so we should be okay leaving this as is for

 usVActive does not include borders, according to VBIOS team*/

	/* usVBlanking_Time includes borders, so we should really be subtracting

	/* doesn't have borders, so we should be okay leaving this as is for

 Drr panel support can be reported by VBIOS*/

 Get supported refresh rate*/

/**

 * bios_parser_get_encoder_cap_info - get encoder capability

 *                                    information of input object id

 *

 * @dcb:       pointer to the DC BIOS

 * @object_id: object id

 * @info:      encoder cap information structure

 *

 * return: Bios parser result code

/**

 * get_encoder_cap_record - Get encoder cap record for the object

 *

 * @bp:      pointer to the BIOS parser

 * @object:  ATOM object

 * return:   atom encoder cap record

 * note:     search all records to find the ATOM_ENCODER_CAP_RECORD_V2 record

 Invalid object */

/**

 * bios_parser_get_ss_entry_number

 * Get Number of SpreadSpectrum Entry from the ASIC_InternalSS_Info table from

 * the VBIOS that match the SSid (to be converted from signal)

 *

 * @dcb:    pointer to the DC BIOS

 * @signal: ASSignalType to be converted to SSid

 * return: number of SS Entry that match the signal

/**

 * get_ss_entry_number_from_ss_info_tbl

 * Get Number of spread spectrum entry from the SS_Info table from the VBIOS.

 *

 * @bp:  pointer to the BIOS parser

 * @id:  spread spectrum id

 * return: number of SS Entry that match the id

 * note: There can only be one entry for each id for SS_Info Table

 SS_Info table exist */

 have to convert from Internal_SS format to SS_Info format */

/**

 * get_ss_entry_number

 * Get spread sprectrum information from the ASIC_InternalSS_Info Ver 2.1 or

 * SS_Info table from the VBIOS

 * There can not be more than 1 entry for  ASIC_InternalSS_Info Ver 2.1 or

 * SS_Info.

 *

 * @bp:    pointer to the BIOS parser

 * @id:    spread sprectrum info index

 * return: Bios parser result code

/**

 * get_ss_entry_number_from_internal_ss_info_tbl_v2_1

 * Get NUmber of spread sprectrum entry from the ASIC_InternalSS_Info table

 * Ver 2.1 from the VBIOS

 * There will not be multiple entry for Ver 2.1

 *

 * @bp:    pointer to the BIOS parser

 * @id:    spread sprectrum info index

 * return: number of SS Entry that match the id

/**

 * get_ss_entry_number_from_internal_ss_info_tbl_V3_1

 * Get Number of SpreadSpectrum Entry from the ASIC_InternalSS_Info table of

 * the VBIOS that matches id

 *

 * @bp:    pointer to the BIOS parser

 * @id:    spread sprectrum id

 * return: number of SS Entry that match the id

/**

 * bios_parser_get_gpio_pin_info

 * Get GpioPin information of input gpio id

 *

 * @dcb:     pointer to the DC BIOS

 * @gpio_id: GPIO ID

 * @info:    GpioPin information structure

 * return:   Bios parser result code

 * note:

 *  to get the GPIO PIN INFO, we need:

 *  1. get the GPIO_ID from other object table, see GetHPDInfo()

 *  2. in DATA_TABLE.GPIO_Pin_LUT, search all records, to get the registerA

 *  offset/mask

 get the GPIO_I2C info */

 get data count */

 get the GPIO_I2C_INFO */

 do NOT check for id.id == 0 */

 Invalid object id */

 Invalid device Id */

 initialize the revision to 0 which is invalid revision */

 Unidentified device ID, return empty support mask. */

/**

 * bios_parser_set_scratch_critical_state - update critical state

 *                                          bit in VBIOS scratch register

 * @dcb:    pointer to the DC BIOS

 * @state:  set or reset state

/*

 * get_integrated_info_v8

 *

 * @brief

 * Get V8 integrated BIOS information

 *

 * @param

 * bios_parser *bp - [in]BIOS parser handler to get master data table

 * integrated_info *info - [out] store and output integrated info

 *

 * return:

 * enum bp_result - BP_RESULT_OK if information is available,

 *                  BP_RESULT_BADBIOSTABLE otherwise.

 Convert [10KHz] into [KHz] */

	/*

	 * system_config: Bit[0] = 0 : PCIE power gating disabled

	 *                       = 1 : PCIE power gating enabled

	 *                Bit[1] = 0 : DDR-PLL shut down disabled

	 *                       = 1 : DDR-PLL shut down enabled

	 *                Bit[2] = 0 : DDR-PLL power down disabled

	 *                       = 1 : DDR-PLL power down enabled

 Convert [10KHz] into [KHz] */

/*

 * get_integrated_info_v8

 *

 * @brief

 * Get V8 integrated BIOS information

 *

 * @param

 * bios_parser *bp - [in]BIOS parser handler to get master data table

 * integrated_info *info - [out] store and output integrated info

 *

 * return:

 * enum bp_result - BP_RESULT_OK if information is available,

 *                  BP_RESULT_BADBIOSTABLE otherwise.

 Convert [10KHz] into [KHz] */

	/*

	 * system_config: Bit[0] = 0 : PCIE power gating disabled

	 *                       = 1 : PCIE power gating enabled

	 *                Bit[1] = 0 : DDR-PLL shut down disabled

	 *                       = 1 : DDR-PLL shut down enabled

	 *                Bit[2] = 0 : DDR-PLL power down disabled

	 *                       = 1 : DDR-PLL power down enabled

 Convert [10KHz] into [KHz] */

/*

 * construct_integrated_info

 *

 * @brief

 * Get integrated BIOS information based on table revision

 *

 * @param

 * bios_parser *bp - [in]BIOS parser handler to get master data table

 * integrated_info *info - [out] store and output integrated info

 *

 * return:

 * enum bp_result - BP_RESULT_OK if information is available,

 *                  BP_RESULT_BADBIOSTABLE otherwise.

 Don't need to check major revision as they are all 1 */

 Sort voltage table from low to high*/

 swap j and j - 1*/

 the end of the list */

 return if the record not found */

 get slot sizes */

 get info for each connector in the slot */

 no more slots present in bios */

 fail */

 all data is valid */

*****************************************************************************/

 bios scratch register communication */

 COMMANDS */

 still use.  should probably retire and program directly */

 SW init and patch */

*****************************************************************************/

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Fall back to old bios parser for older asics */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Temporarily add in defines until ObjectID.h patch is updated in a few days */

 GENERIC_OBJECT_ID_BRACKET_LAYOUT */

 GENERICOBJECT_BRACKET_LAYOUT_ENUM_ID1 */

 GENERICOBJECT_BRACKET_LAYOUT_ENUM_ID2 */

 initialize the revision to 0 which is invalid revision */

/* BIOS oject table displaypath is per connector.

 * There is extra path not for connector. BIOS fill its encoderid as 0

		/* If display_objid is generic object id,  the encoderObj

		 * /extencoderobjId should be 0

	/* Encoder's Source is GPU.  BIOS does not provide GPU, since all

	 * displaypaths point to same GPU (0x1100).  Hardcode GPU object type

		/* TODO: since num of src must be less than 2.

		 * If found in for loop, should break.

		 * DAL2 implementation may be changed too

 break; */

 break; */

 from graphics_object_id, find display path which includes the object_id */

		/* Both Generic and Connector Object ID

		 * will be stored on display_objid

 get the I2C info */

 get the GPIO_I2C info */

 TODO: is version change? */

 get data count */

 still valid */

	/* If we don't find the entry that we are looking for then

	 *  we will return BP_Result_BadBiosTable.

 get the GPIO_I2C_INFO */

 TODO: check how to get register offset for en, Y, etc. */

 Invalid object */

/**

 * bios_parser_get_gpio_pin_info

 * Get GpioPin information of input gpio id

 *

 * @dcb:     pointer to the DC BIOS

 * @gpio_id: GPIO ID

 * @info:    GpioPin information structure

 * return: Bios parser result code

 * note:

 *  to get the GPIO PIN INFO, we need:

 *  1. get the GPIO_ID from other object table, see GetHPDInfo()

 *  2. in DATA_TABLE.GPIO_Pin_LUT, search all records,

 *	to get the registerA  offset/mask

 Temporary hard code gpio pin info */

 Invalid device Id */

 getBiosObject will return MXM object */

 Invalid object id */

 BIOS no longer provides this */

 BIOS no longer uses target clock.  Always enable for now */

 TODO LVDS not support anymore? */

		/* atom_firmware: DAL only get data from dce_info table.

		 * if data within smu_info is needed for DAL, VBIOS should

		 * copy it into dce_info

 BIOS no longer uses target clock.  Always enable for now */

 TODO LVDS not support anymore? */

		/* atom_firmware: DAL only get data from dce_info table.

		 * if data within smu_info is needed for DAL, VBIOS should

		 * copy it into dce_info

/**

 * bios_parser_get_spread_spectrum_info

 * Get spread spectrum information from the ASIC_InternalSS_Info(ver 2.1 or

 * ver 3.1) or SS_Info table from the VBIOS. Currently ASIC_InternalSS_Info

 * ver 2.1 can co-exist with SS_Info table. Expect ASIC_InternalSS_Info

 * ver 3.1,

 * there is only one entry for each signal /ss id.  However, there is

 * no planning of supporting multiple spread Sprectum entry for EverGreen

 * @dcb:     pointer to the DC BIOS

 * @signal:  ASSignalType to be converted to info index

 * @index:   number of entries that match the converted info index

 * @ss_info: sprectrum information structure,

 * return: Bios parser result code

 check for bad input */

 there can not be more then one entry for SS Info table */

 check for bad input */

 TODO: previous vv1_3, should v2_1 */

 We need to convert from 10KHz units into KHz units */

 usHActive does not include borders, according to VBIOS team */

	/* usHBlanking_Time includes borders, so we should really be

	 * subtractingborders duing this translation, but LVDS generally

	 * doesn't have borders, so we should be okay leaving this as is for

	 * now.  May need to revisit if we ever have LVDS with borders

 usVActive does not include borders, according to VBIOS team*/

	/* usVBlanking_Time includes borders, so we should really be

	 * subtracting borders duing this translation, but LVDS generally

	 * doesn't have borders, so we should be okay leaving this as is for

	 * now. May need to revisit if we ever have LVDS with borders

 not provided by VBIOS */

 not provided by VBIOS */

 not provided by VBIOS*/

 not provided by VBIOS*/

 Unidentified device ID, return empty support mask. */

	/* TODO: DAL2 atomfirmware implementation does not need this.

	 * why DAL3 need this?

/**

 * bios_parser_set_scratch_critical_state - update critical state bit

 *                                          in VBIOS scratch register

 *

 * @dcb:   pointer to the DC BIO

 * @state: set or reset state

 Pixel clock pll information. */

 We need to convert from 10KHz units into KHz units */

 27MHz for Vega10: */

 Hardcode frequency if BIOS gives no DCE Ref Clk */

dp_phy_ref_clk is not correct for atom_display_controller_info_v4_2, but we don't use it*/

 Get GPU PLL VCO Clock */

 VBIOS gives in 10KHz */

 Vega12 */

 Vega20 */

 We need to convert from 10KHz units into KHz units.

 27MHz for Vega10 & Vega12; 100MHz for Vega20 */

 Hardcode frequency if BIOS gives no DCE Ref Clk */

dp_phy_ref_clk is not correct for atom_display_controller_info_v4_2, but we don't use it*/

 Get GPU PLL VCO Clock */

 100MHz expected */

 50MHz expected */

 Get SMU Display PLL VCO Frequency in KHz*/

 should not come here, keep as backup, as was before */

 We need to convert from 10KHz units into KHz units.

 Invalid object */

 Invalid object */

/*

 * get_integrated_info_v11

 *

 * @brief

 * Get V8 integrated BIOS information

 *

 * @param

 * bios_parser *bp - [in]BIOS parser handler to get master data table

 * integrated_info *info - [out] store and output integrated info

 *

 * @return

 * enum bp_result - BP_RESULT_OK if information is available,

 *                  BP_RESULT_BADBIOSTABLE otherwise.

	/*

	* system_config: Bit[0] = 0 : PCIE power gating disabled

	*                       = 1 : PCIE power gating enabled

	*                Bit[1] = 0 : DDR-PLL shut down disabled

	*                       = 1 : DDR-PLL shut down enabled

	*                Bit[2] = 0 : DDR-PLL power down disabled

	*                       = 1 : DDR-PLL power down enabled

* TODO - review **/

 Convert [10KHz] into [KHz] */

 Convert [10KHz] into [KHz] */

 TODO*/

	/*

	* system_config: Bit[0] = 0 : PCIE power gating disabled

	*                       = 1 : PCIE power gating enabled

	*                Bit[1] = 0 : DDR-PLL shut down disabled

	*                       = 1 : DDR-PLL shut down enabled

	*                Bit[2] = 0 : DDR-PLL power down disabled

	*                       = 1 : DDR-PLL power down enabled

	/*

	* system_config: Bit[0] = 0 : PCIE power gating disabled

	*                       = 1 : PCIE power gating enabled

	*                Bit[1] = 0 : DDR-PLL shut down disabled

	*                       = 1 : DDR-PLL shut down enabled

	*                Bit[2] = 0 : DDR-PLL power down disabled

	*                       = 1 : DDR-PLL power down enabled

/*

 * construct_integrated_info

 *

 * @brief

 * Get integrated BIOS information based on table revision

 *

 * @param

 * bios_parser *bp - [in]BIOS parser handler to get master data table

 * integrated_info *info - [out] store and output integrated info

 *

 * @return

 * enum bp_result - BP_RESULT_OK if information is available,

 *                  BP_RESULT_BADBIOSTABLE otherwise.

 Sort voltage table from low to high*/

 swap j and j - 1*/

 the end of the list */

 return if the record not found */

 get slot sizes */

 get info for each connector in the slot */

 no more slots present in bios */

 fail */

 all data is valid */

	/* Each data table offset in data table list is 2 bytes,

	 * we can use that to iterate through listOfdatatables

	 * without knowing the name of each member.

 TODO: There is data bytes alignment issue, disable it for now.

 ver.4.4 or higher */

	 COMMANDS */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 ENCODER_OBJECT_ID_NUTMEG */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Unsupported DCE */

 real implementations */

 Wrong controller id */

/**

 * dal_cmd_table_helper_transmitter_bp_to_atom - Translate the Transmitter to the

 *                                    corresponding ATOM BIOS value

 * @t: transmitter

 * returns: output digitalTransmitter

 *    // =00: Digital Transmitter1 ( UNIPHY linkAB )

 *    // =01: Digital Transmitter2 ( UNIPHY linkCD )

 *    // =02: Digital Transmitter3 ( UNIPHY linkEF )

 Invalid Transmitter Type! */

	/* there are three transmitter blocks, each one has two links 4-lanes

	 * each, A+B, C+D, E+F, Uniphy A, C and E are enumerated as link 0 in

	 * each transmitter block B, D and F as link 1, third transmitter block

	 * has non splitable links (UniphyE and UniphyF can not be configured

	 * separately to drive two different streams)

		/* Bit2: Link Select

		 * =0: PHY linkA/C/E

		 * =1: PHY linkB/D/F

	/* Bit[4:3]: Transmitter Selection

	 * =00: Digital Transmitter1 ( UNIPHY linkAB )

	 * =01: Digital Transmitter2 ( UNIPHY linkCD )

	 * =02: Digital Transmitter3 ( UNIPHY linkEF )

	 * =03: Reserved

 We need to convert from KHz units into 10KHz units */

 Unsupported clock source id */

 Invalid encoder id */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Unsupported DCE */

 real implementations */

	/* TODO :case CONTROLLER_ID_UNDERLAY0:

		*atom_id = ATOM_UNDERLAY_PIPE0;

		return true;

 Wrong controller id */

/**

 * dal_cmd_table_helper_transmitter_bp_to_atom2 - Translate the Transmitter to the

 *                                     corresponding ATOM BIOS value

 *  @t: transmitter

 *  returns: digitalTransmitter

 *    // =00: Digital Transmitter1 ( UNIPHY linkAB )

 *    // =01: Digital Transmitter2 ( UNIPHY linkCD )

 *    // =02: Digital Transmitter3 ( UNIPHY linkEF )

 Invalid Transmitter Type! */

	/*TODO:case CLOCK_SOURCE_ID_DCPLL:

		*ref_clk_src_id = ENCODER_REFCLK_SRC_DCPLL;

		return true;

 Unsupported clock source id */

 Invalid encoder id */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/******************************************************************************

 ******************************************************************************

 **

 **                  D I G E N C O D E R C O N T R O L

 **

 ******************************************************************************

/*****************************************************************************

 ******************************************************************************

 **

 **                  TRANSMITTER CONTROL

 **

 ******************************************************************************

color_depth not used any more, driver has deep color factor in the Phyclk*/

color_depth not used any more, driver has deep color factor in the Phyclk*/

/******************************************************************************

 ******************************************************************************

 **

 **                  SET PIXEL CLOCK

 **

 ******************************************************************************

		/* Note: VBIOS still wants to use ucCRTC name which is now

		 * 1 byte in ULONG

		 *typedef struct _CRTC_PIXEL_CLOCK_FREQ

		 *{

		 * target the pixel clock to drive the CRTC timing.

		 * ULONG ulPixelClock:24;

		 * 0 means disable PPLL/DCPLL. Expanded to 24 bits comparing to

		 * previous version.

		 * ATOM_CRTC1~6, indicate the CRTC controller to

		 * ULONG ucCRTC:8;

		 * drive the pixel clock. not used for DCPLL case.

		 *}CRTC_PIXEL_CLOCK_FREQ;

		 *union

		 *{

		 * pixel clock and CRTC id frequency

		 * CRTC_PIXEL_CLOCK_FREQ ulCrtcPclkFreq;

		 * ULONG ulDispEngClkFreq; dispclk frequency

		 *};

/******************************************************************************

 ******************************************************************************

 **

 **                  SET CRTC TIMING

 **

 ******************************************************************************

 bios usH_Size wants h addressable size */

 bios usH_Blanking_Time wants borders included in blanking */

 bios usV_Size wants v addressable size */

 bios usV_Blanking_Time wants borders included in blanking */

	/* bios usHSyncOffset is the offset from the end of h addressable,

	 * our horizontalSyncStart is the offset from the beginning

	 * of h addressable

	/* bios usHSyncOffset is the offset from the end of v addressable,

	 * our verticalSyncStart is the offset from the beginning of

	 * v addressable

	/* we assume that overscan from original timing does not get bigger

	 * than 255

	 * we will program all the borders in the Set CRTC Overscan call below

		/* original DAL code has this condition to apply this

		 * for non-TV/CV only

		 * due to complex MV testing for possible impact

		 * if ( pACParameters->signal != SignalType_YPbPr &&

		 *  pACParameters->signal != SignalType_Composite &&

		 *  pACParameters->signal != SignalType_SVideo)

			/* HW will deduct 0.5 line from 2nd feild.

			 * i.e. for 1080i, it is 2 lines for 1st field,

			 * 2.5 lines for the 2nd feild. we need input as 5

			 * instead of 4.

			 * but it is 4 either from Edid data (spec CEA 861)

			 * or CEA timing table.

 ATOM_DOUBLE_CLOCK_MODE */

/******************************************************************************

 ******************************************************************************

 **

 **                  ENABLE CRTC

 **

 ******************************************************************************

/******************************************************************************

 ******************************************************************************

 **

 **                  DISPLAY PLL

 **

 ******************************************************************************

/******************************************************************************

 ******************************************************************************

 **

 **                  EXTERNAL ENCODER CONTROL

 **

 ******************************************************************************

 TODO */

/******************************************************************************

 ******************************************************************************

 **

 **                  ENABLE DISPLAY POWER GATING

 **

 ******************************************************************************

/******************************************************************************

*******************************************************************************

 **

 **                  SET DCE CLOCK

 **

*******************************************************************************

		/* only program clock frequency if display clock is used;

		 * VBIOS will program DPREFCLK

		 * We need to convert from KHz units into 10KHz units

 Convert from 10KHz units back to KHz */

/******************************************************************************

 ******************************************************************************

 **

 **                  GET SMU CLOCK INFO

 **

 ******************************************************************************

 TODO add switch for table vrsion */

 Get Specific Clock */

/******************************************************************************

 ******************************************************************************

 **

 **                  LVTMA CONTROL

 **

 ******************************************************************************

 TODO add switch for table vrsion */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* On any ASIC after DCE80, we manually program the DIG_FE

	 * selection (see connect_dig_be_to_fe function of the link

	 * encoder), so translation should always return 0 (no FE).

 Should not happen */

 Unhandle action in driver.!! */

 Unhandle action in driver! */

 Unhandle action in driver! */

 Unhandle action in driver! */

 function table */

/*

 * dal_cmd_tbl_helper_dce110_get_table

 *

 * @brief

 * Initialize command table helper functions

 *

 * @param

 * const struct command_table_helper **h - [out] struct of functions

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* On any ASIC after DCE80, we manually program the DIG_FE

	 * selection (see connect_dig_be_to_fe function of the link

	 * encoder), so translation should always return 0 (no FE).

 Should not happen */

 Unhandle action in driver.!! */

 Unhandle action in driver! */

 Unhandle action in driver! */

 Unhandle action in driver! */

 function table */

/*

 * dal_cmd_tbl_helper_dce110_get_table

 *

 * @brief

 * Initialize command table helper functions

 *

 * @param

 * const struct command_table_helper **h - [out] struct of functions

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Unhandle action in driver.!! */

			/* for VCE encoding,

			 * we need to pass in ATOM_PPLL_INVALID

 When programming DP DTO PLL ID should be invalid */

 check when this will happen! */

 Unhandle action in driver! */

/*

 * Copyright 2020 Mauro Rossi <issor.oruam@gmail.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Unhandle action in driver.!! */

			/* for VCE encoding,

			 * we need to pass in ATOM_PPLL_INVALID

 When programming DP DTO PLL ID should be invalid */

 check when this will happen! */

 Unhandle action in driver! */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* On any ASIC after DCE80, we manually program the DIG_FE

	 * selection (see connect_dig_be_to_fe function of the link

	 * encoder), so translation should always return 0 (no FE).

			/* for VCE encoding,

			 * we need to pass in ATOM_PPLL_INVALID

 When programming DP DTO PLL ID should be invalid */

 Should not happen */

 Unhandle action in driver.!! */

 Unhandle action in driver! */

 function table */

/*

 * dal_cmd_tbl_helper_dce110_get_table

 *

 * @brief

 * Initialize command table helper functions

 *

 * @param

 * const struct command_table_helper **h - [out] struct of functions

 *

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* TODOFPGA Figure out a proper number for max_retries polling for lock

	 * use 50 for now.

	/* poll dig_update_lock is not locked -> asic internal signal

	 * assume otg master lock will unlock it

	/* REG_WAIT(AFMT_VBI_PACKET_CONTROL, AFMT_GENERIC_LOCK_STATUS,

	 * 		0, 10, max_retries);

 TODO: Check if this is required */

 check if HW reading GSP memory */

	/* HW does is not reading GSP memory not reading too long ->

	 * something wrong. clear GPS memory access and notify?

	 * hw SW is writing to GSP memory

 choose which generic packet to use */

	/* write generic packet header

	 * (4th byte is for GENERIC0 only)

	/* write generic packet contents

	 * (we never use last 4 bytes)

	 * there are 8 (0-7) mmDIG0_AFMT_GENERIC0_x registers

	/* atomically update double-buffered GENERIC0 registers in immediate mode

	 * (update at next block_update when block_update_lock == 0).

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Init VMID 0 based on PA config

	/*

	 * The DCHub arbiter has a mechanism to dynamically rate limit the DCHub request stream to the fabric.

	 * If the memory controller is fully utilized and the DCHub requestors are

	 * well ahead of their amortized schedule, then it is safe to prevent the next winner

	 * from being committed and sent to the fabric.

	 * The utilization of the memory controller is approximated by ensuring that

	 * the number of outstanding requests is greater than a threshold specified

	 * by the ARB_MIN_REQ_OUTSTANDING. To determine that the DCHub requestors are well ahead of the amortized schedule,

	 * the slack of the next winner is compared with the ARB_SAT_LEVEL in DLG RefClk cycles.

	 *

	 * TODO: Revisit request limit after figure out right number. request limit for Renoir isn't decided yet, set maximum value (0x1FF)

	 * to turn off it for now.

 copied from DML.  might want to refactor DML to leverage from DML */

 DML : get_blk256_size */

 full 256B request */

 half 128b request */

 full 256B request */

 half 128b request */

 implement section 1.6.2.1 of DCN1_Programming_Guide.docx */

 access_dir not known, must use most constraining */

			/* reg128 is true for either horz and vert

			 * but segment_order is contiguous

 Exception for 64KB_R_X */

 Copy values from WM set A to all other sets */

 184KB for DCN3 */

/*

 * Copyright 2016-2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 debug option: put CM in bypass mode

Programmable RAM LUT

	/*fill in the LUT with all base values to be used by pwl module

	 * HW auto increments the LUT index: back-to-back write

bypass if we have no pwl data

New registers in DCN3AG/DCN GAMCOR block

New registers in DCN3AG/DCN GAMCOR block

get register fields

program register set for LUTA/LUTB

select Gamma LUT to use for next frame

		/*this corresponds to GAMUT_REMAP coefficients set B

		 *we don't have common coefficient sets in dcn3ag/dcn3

select coefficient set to use

 Bypass if type is bypass or hw */

current coefficient set in use

use coefficient set A

follow dcn2 approach for now - using only coefficient set A

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 we only support 1 adapter currently */

 Set DWB source size */

 source size is not equal the source size, then enable cropping. */

 Set CAPTURE_RATE */

 Set WB_ENABLE (not double buffered; capture not enabled) */

 Set FC parameters */

 Program color processing unit */

 Program output denorm */

 Enable DWB capture enable (double buffered) */

 First pixel count */

 disable FC */

 disable WB */

	/*

	 * Check if the caller has already locked DWB registers.

	 * If so: assume the caller will unlock, so don't touch the lock.

	 * If not: lock them for this update, then unlock after the

	 * update is complete.

 Lock DWB registers */

 Set FC parameters */

 Program color processing unit */

 Program output denorm */

 Unlock DWB registers */

 Set output format*/

 Set output denorm */

TODO: rename

	/*

	 * Set maximum delay of host read access to DWBSCL LUT or OGAM LUT if there are no

	 * idle cycles in HW pipeline (in number of clock cycles times 4)

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

program dwb ogam RAM A*/

todo*/

program dwb ogam RAM B*/

 Reserved value

 should never happen, bug */

 Bypass if type is bypass or hw */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

dpp->base.ctx

linear slope at start of curve

 driver uses 32 regions or less, but DCN HW has 34, extra 2 are set to 0 */

		/* 32 segments

		 * segments are from 2^-25 to 2^7

		/* 11 segments

		 * segment is from 2^-10 to 2^0

		 * There are less than 256 points, for optimization

 last point */

 All 3 color channels have same x

	/* see comment above, m_arrPoints[1].y should be the Y value for the

	 * region end (m_numOfHwPoints), not last HW point(m_numOfHwPoints - 1)

		/* for PQ/HLG, we want to have a straight line from last HW X point,

		 * and the slope to be such that we hit 1.0 at 10000/1000 nits.

	/* 12 segments

	 * segments are from 2^-12 to 0

 last point */

	/* see comment above, m_arrPoints[1].y should be the Y value for the

	 * region end (m_numOfHwPoints), not last HW point(m_numOfHwPoints - 1)

		/* for PQ, we want to have a straight line from last HW X point,

		 * and the slope to be such that we hit 1.0 at 10000 nits.

	/* corner_points[0] - beginning base, slope offset for R,G,B

	 * corner_points[1] - end base, slope offset for R,G,B

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 TODO: Implement for DCN3

program post scaler scs block in dpp CM*/

	/* determine which CSC matrix (icsc or coma) we are using

	 * currently.  select the alternate set to double buffer

	 * the CSC update so CSC is updated on frame boundary

CNVC degam unit has read only LUTs*/

bypass

 ARGB16161616_UNORM */

 If input adjustment exists, program the ICSC with those values. */

 todo: clarify what to program these to */

	/*

	 * Set default taps if none are provided

	 * From programming guide: taps = min{ ceil(2*H_RATIO,1), 8} for downscaling

	 * taps = 4 for upscaling

 Only 1 and even h_taps_c are supported by hw */

Ensure we can support the requested number of vtaps*/

 Use LB_MEMORY_CONFIG_3 for 4:2:0 */

 MAX_V_TAPS = MIN (NUM_LINES - MAX(CEILING(V_RATIO,1)-2, 0), 8) */

 only program if bypass was latched

 LUT select was updated again before vupdate

 only program if bypass was latched

 LUT select was updated again before vupdate

 only program if bypass was latched

 LUT select was updated again before vupdate

 only program if bypass was latched

 LUT select was updated again before vupdate

program blnd lut RAM A*/

program blnd lut RAM B*/

program shaper RAM A*/

program shaper RAM B*/

/*

 * select ramA or ramB, or bypass

 * select color channel size 10 or 12 bits

 * select 3dlut size 17x17x17 or 9x9x9

/*

 * load selected lut with 10 bits color channels

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 ?

 ?

 ?

 writeback_line_buffer_buffer_size = 656640

 SRExitTime

 TODO: set this to actual min DCFCLK */

 ?

 ?

 ?

/* begin *********************

 * macros to expend register list macro defined in HW object header file

 DCN */

 TODO awful hack. fixup dcn20_dwb.h */

 NBIO */

 MMHUB */

 CLOCK */

 6:1 downscaling ratio: 1000/6 = 166.666 */

No DMCU on DCN30

upto 8K*/

 -1 = disable,

No dmcu on DCN30

 -1 = disable

 Mapping of VPG, AFMT, DME register blocks to DIO block instance */

 Set writeback information */

 For IP that doesn't support WB scaling, set h/v taps to 1 to avoid DML validation failure */

				/* Workaround for cases where multiple writebacks are connected to same plane

				 * In which case, need to compute worst case and set the associated writeback parameters

				 * This workaround is necessary due to DML computation assuming only 1 set of writeback

				 * parameters per pipe

 packed mode 32 bpp */

 packed mode 64 bpp */

 time_per_byte is in u6.6*/

 Writeback MCIF_WB arbitration parameters */

wb_arb_params = &context->res_ctx.pipe_ctx[i].stream->writeback_info[j].mcif_arb_params;

 time_per_pixel should be in u6.6 format */

 irrelevant since there is no YUV output */

 assume 4 watermark sets have the same value */

 num_clock_cycles = us * MHz */

	/*

	 * May need to fix pipes getting tossed from 1 opp to another on flip

	 * Add for debugging transient underflow during topology updates:

	 * ASSERT(pipe);

		/*

		 * DML favors voltage over p-state, but we're more interested in

		 * supporting p-state over voltage. We can't support p-state in

		 * prefetch mode > 0 so try capping the prefetch mode to start.

 This may adjust vlevel and maxMpcComb */

		/*

		 * If mode is unsupported or there's still no p-state support then

		 * fall back to favoring voltage.

		 *

		 * We don't actually support prefetch mode 2, so require that we

		 * at least support prefetch mode 1.

 We only support full screen mpo with ODM */

 merge pipes if necessary */

skip pipes that don't need merging*/

 if ODM merge we ignore mpc tree, mpo pipes will have their own flags */

split off odm pipe*/

 Should never try to merge master pipe */

 Actual dsc count per stream dsc validation*/

/*

 * This must be noinline to ensure anything that deals with FP registers

 * is contained within this call; previously our compiling with hard-float

 * would result in fp instructions being emitted outside of the boundaries

 * of the DC_FP_START/END macros, which makes sense as the compiler has no

 * idea about what is wrapped and what is not

 *

 * This is largely just a workaround to avoid breakage introduced with 5.6,

 * ideally all fp-using code should be moved into its own file, only that

 * should be compiled with hard-float, and all code exported from there

 * should be strictly wrapped with DC_FP_START/END

	/* Set B:

	 * DCFCLK: 1GHz or min required above 1GHz

	 * FCLK/UCLK: Max

	/* Set D:

	 * DCFCLK: Min Required

	 * FCLK(proportional to UCLK): 1GHz or Max

	 * MALL stutter, sr_enter_exit = 4, sr_exit = 2us

	/*

	if (dc->clk_mgr->bw_params->wm_table.nv_entries[WM_D].valid) {

		context->bw_ctx.dml.soc.dram_clock_change_latency_us = dc->clk_mgr->bw_params->wm_table.nv_entries[WM_D].dml_input.pstate_latency_us;

		context->bw_ctx.dml.soc.sr_enter_plus_exit_time_us = dc->clk_mgr->bw_params->wm_table.nv_entries[WM_D].dml_input.sr_enter_plus_exit_time_us;

		context->bw_ctx.dml.soc.sr_exit_time_us = dc->clk_mgr->bw_params->wm_table.nv_entries[WM_D].dml_input.sr_exit_time_us;

	}

	context->bw_ctx.bw.dcn.watermarks.d.urgent_ns = get_wm_urgent(&context->bw_ctx.dml, pipes, pipe_cnt) * 1000;

	context->bw_ctx.bw.dcn.watermarks.d.cstate_pstate.cstate_enter_plus_exit_ns = get_wm_stutter_enter_exit(&context->bw_ctx.dml, pipes, pipe_cnt) * 1000;

	context->bw_ctx.bw.dcn.watermarks.d.cstate_pstate.cstate_exit_ns = get_wm_stutter_exit(&context->bw_ctx.dml, pipes, pipe_cnt) * 1000;

	context->bw_ctx.bw.dcn.watermarks.d.cstate_pstate.pstate_change_ns = get_wm_dram_clock_change(&context->bw_ctx.dml, pipes, pipe_cnt) * 1000;

	context->bw_ctx.bw.dcn.watermarks.d.pte_meta_urgent_ns = get_wm_memory_trip(&context->bw_ctx.dml, pipes, pipe_cnt) * 1000;

	context->bw_ctx.bw.dcn.watermarks.d.frac_urg_bw_nom = get_fraction_of_urgent_bandwidth(&context->bw_ctx.dml, pipes, pipe_cnt) * 1000;

	context->bw_ctx.bw.dcn.watermarks.d.frac_urg_bw_flip = get_fraction_of_urgent_bandwidth_imm_flip(&context->bw_ctx.dml, pipes, pipe_cnt) * 1000;

	context->bw_ctx.bw.dcn.watermarks.d.urgent_latency_ns = get_urgent_latency(&context->bw_ctx.dml, pipes, pipe_cnt) * 1000;

	/* Set C:

	 * DCFCLK: Min Required

	 * FCLK(proportional to UCLK): 1GHz or Max

	 * pstate latency overridden to 5us

 find largest table entry that is lower than dram speed, but lower than DPM0 still uses DPM0 */

		/* The only difference between A and C is p-state latency, if p-state is not supported we want to

		 * calculate DLG based on dummy p-state latency, and max out the set A p-state watermark

		/* Set A:

		 * DCFCLK: Min Required

		 * FCLK(proportional to UCLK): 1GHz or Max

		 *

		 * Set A calculated last so that following calculations are based on Set A

 Make set D = set A until set D is enabled */

 Restore full p-state latency */

/*

 * This must be noinline to ensure anything that deals with FP registers

 * is contained within this call; previously our compiling with hard-float

 * would result in fp instructions being emitted outside of the boundaries

 * of the DC_FP_START/END macros, which makes sense as the compiler has no

 * idea about what is wrapped and what is not

 *

 * This is largely just a workaround to avoid breakage introduced with 5.6,

 * ideally all fp-using code should be moved into its own file, only that

 * should be compiled with hard-float, and all code exported from there

 * should be strictly wrapped with DC_FP_START/END

 If max DCFCLK is greater than the max DCFCLK STA target, insert into the DCFCLK STA target array

 If max DCFCLK is less than the max DCFCLK STA target, cap values and remove duplicates

 Update size of array since we "removed" duplicates

 Calculate optimal dcfclk for each uclk

 Calculate optimal uclk for each dcfclk sta target

 create the final dcfclk and uclk table

 Fill all states with max values of all other clocks */

 These clocks cannot come from bw_params, always fill from dcn3_0_soc[1] */

 FCLK, PHYCLK_D18, SOCCLK, DSCCLK */

 re-init DML with updated bb */

 Support for max 6 pipes */

 fault to single pipe */

	/*************************************************

	 *  Resource + asic cap harcoding                *

1.4 w/a not applied by default*/

 total size = mall per channel * num channels * 1024 * 1024 */

 Color pipeline capabilities */

 must use gamma_corr

 no OGAM ROM on DCN3

3

 read VBIOS LTTPR caps */

 Init the vm_helper

	/*************************************************

	 *  Create resources                             *

 Clock Sources for Pixel Clock*/

 todo: not reuse phy_pll registers */

 DCCG */

 PP Lib and SMU interfaces */

 IRQ */

 HUBBUB */

 HUBPs, DPPs, OPPs and TGs */

 PSR */

 ABM */

 MPC and DSC */

 DWB and MMHUBBUB */

 AUX and I2C */

 Audio, Stream Encoders including DIG and virtual, MPC 3D LUTs */

 HW Sequencer and Plane caps */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/*Contrary to DCN2 and DCN1 wherein a single status register field holds this info;

	 *in DCN3/3AG, we need to read two separate fields to retrieve the same info

	/*

	 * Powering on: force memory active so the LUT can be updated.

	 * Powering off: allow entering memory low power mode

	 *

	 * Memory low power mode is controlled during MPC OGAM LUT init.

 Wait for memory to be powered on - we won't be able to write to it otherwise. */

New registers in DCN3AG/DCN OGAM block

New registers in DCN3AG/DCN OGAM block

	/*the entries of DCN3AG gamma LUTs take 18bit base values as opposed to

	 *38 base+delta values per entry in earlier DCN architectures

	 *last base value for our lut is compute by adding the last base value

	 *in our data + last delta

disable OGAM

enable OGAM

we need to program 2 fields here as apposed to 1*/

 De-normalize Fixed U1.13 color data to different target bit depths. 0 is bypass*/

 not valid used case! */

program min and max clamp values for the pixel components*/

 wait for memory to fully power up */

read status is not mandatory, it is just for debugging*/

TODO Add rmu_idx == 2 for SIENNA_CICHLID */

should we shift red 22bit and green 12? ask Nvenko

		/*this corresponds to GAMUT_REMAP coefficients set B

		 * we don't have common coefficient sets in dcn3ag/dcn3

select coefficient set to use

current coefficient set in use

use coefficient set A

determine if this mpcc is already multiplexed to an RMU unit

return rmu_idx of pre_acquired rmu unit

rmu unit is disabled

no vacant RMU units or invalid parameters acquire_post_bldn_3dlut

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

		/* enable transmission of packet(s) -

 send packet(s) every frame */

 select line number to send packets on */

 DP_SEC_GSP[x]_LINE_REFERENCE - keep default value REFER_TO_DP_SOF */

 choose which generic packet control to use */

 invalid HW packet index */

 for bring up, disable dp double  TODO */

Always add mandatory packets first followed by optional ones*/

 stop generic packets 0,1 on HDMI */

 stop generic packets 2,3 on HDMI */

 stop generic packets 4,5 on HDMI */

 stop generic packets 6,7 on HDMI */

 stop generic packets 8,9 on HDMI */

 stop generic packets 10,11 on HDMI */

 stop generic packets 12,13 on HDMI */

 stop generic packet 14 on HDMI */

/* Set DSC-related configuration.

 *   dsc_mode: 0 disables DSC, other values enable DSC in specified format

 *   sc_bytes_per_pixel: Bytes per pixel in u3.28 format

 *   dsc_slice_width: Slice width in pixels

 Configure for PPS packet size (128 bytes) */

		/* We need turn on clock before programming AFMT block

		 *

		 * TODO: We may not need this here anymore since update_generic_info_packet

		 * no longer touches AFMT

 Load PPS into infoframe (SDP) registers */

		/* SW should make sure VBID[6] update line number is bigger

		 * than PPS transmit line number

		/* Send PPS data at the line number specified above.

		 * DP spec requires PPS to be sent only when it changes, however since

		 * decoder has to be able to handle its change on every frame, we're

		 * sending it always (i.e. on every frame) to reduce the chance it'd be

		 * missed by decoder. If it turns out required to send PPS only when it

		 * changes, we can use DP_SEC_GSP11_SEND register.

 Disable Generic Stream Packet 11 (GSP) transmission */

/* this function read dsc related register fields to be logged later in dcn10_log_hw_state

 * into a dcn_dsc_state struct.

if dsc is enabled, continue to read

 packetIndex */

 packetIndex */

 packetIndex */

	/* packetIndex 4 is used for send immediate sdp message, and please

	 * use other packetIndex (such as 5,6) for other info packet

	/* enable/disable transmission of packet(s).

	 * If enabled, packet transmission begins on the next frame

	/* This bit is the master enable bit.

	 * When enabling secondary stream engine,

	 * this master bit must also be set.

	 * This register shared with audio info frame.

	 * Therefore we need to enable master bit

	 * if at least on of the fields is not 0

 check if dynamic metadata packet transmission is enabled */

 setup stream encoder in dvi mode */

Set pattern for clock channel, default vlue 0x63 does not work

DIG_BE_TMDS_DVI_MODE : TMDS-DVI mode is already set in link_encoder_setup

DIG_SOURCE_SELECT is already set in dig_connect_to_otg

 set DIG_START to 0x1 to reset FIFO */

 write 0 to take the FIFO out of reset */

 setup stream encoder in hdmi mode */

Set pattern for clock channel, default vlue 0x63 does not work

DIG_BE_TMDS_HDMI_MODE : TMDS-HDMI mode is already set in link_encoder_setup

DIG_SOURCE_SELECT is already set in dig_connect_to_otg

 set DIG_START to 0x1 to reset FIFO */

 write 0 to take the FIFO out of reset */

 Configure pixel encoding */

 setup HDMI engine */

 Configure color depth */

		/* enable HDMI data scrambler

		 * HDMI_CLOCK_CHANNEL_RATE_MORE_340M

		 * Clock channel frequency is 1/4 of character rate.

 TODO: New feature for DCE11, still need to implement */

		/* enable HDMI data scrambler

		 * HDMI_CLOCK_CHANNEL_FREQ_EQUAL_TO_CHAR_RATE

		 * Clock channel frequency is the same

		 * as character rate

 Enable transmission of General Control packet on every frame */

 following belongs to audio */

 Enable Audio InfoFrame packet transmission. */

 update double-buffered AUDIO_INFO registers immediately */

 Select line number on which to send Audio InfoFrame packets */

 set HDMI GC AVMUTE */

 --- DP Audio packet configurations --- */

 ATP Configuration */

 Async/auto-calc timestamp mode */

 Setup audio in AFMT - program AFMT block associated with DIO */

 HDMI_AUDIO_PACKET_CONTROL */

 HDMI_ACR_PACKET_CONTROL */

 Program audio clock sample/regeneration parameters */

 HDMI_ACR_32_0__HDMI_ACR_CTS_32_MASK */

 HDMI_ACR_32_1__HDMI_ACR_N_32_MASK */

 HDMI_ACR_44_0__HDMI_ACR_CTS_44_MASK */

 HDMI_ACR_44_1__HDMI_ACR_N_44_MASK */

 HDMI_ACR_48_0__HDMI_ACR_CTS_48_MASK */

 HDMI_ACR_48_1__HDMI_ACR_N_48_MASK */

	/* Video driver cannot know in advance which sample rate will

	 * be used by HD Audio driver

	 * HDMI_ACR_PACKET_CONTROL__HDMI_ACR_N_MULTIPLE field is

	 * programmed below in interruppt callback

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 The format of default addr is 48:12 of the 48 bit addr

 The format of high/low are 48:18 of the 48 bit addr

program flip type

 Program VMID reg

 turn off stereo if not in stereo

	/* HW automatically latch rest of address register on write to

	 * DCSURF_PRIMARY_SURFACE_ADDRESS if SURFACE_UPDATE_LOCK is not used

	 *

	 * program high first and then the low addr, order matters!

		/* DCN1.0 does not support const color

		 * TODO: program DCHUBBUB_RET_PATH_DCC_CFGx_0/1

		 * base on address->grph.dcc_const_color

		 * x = 0, 2, 4, 6 for pipe 0, 1, 2, 3 for rgb and luma

		 * x = 1, 3, 5, 7 for pipe 0, 1, 2, 3 for chroma

always HW mode */

 for DMDATA flip, need to use SURFACE_UPDATE_LOCK */

 toggle DMDATA_UPDATED and set repeat and size */

 set DMDATA address */

	/* otg is locked when this func is called. Register are double buffered.

	 * disable the requestors is not needed

 DEDCN21-133: Inconsistent row starting line for flip between DPTE and Meta

 This is a chicken bit to enable the ECO fix.

hubp[i].HUBPREQ_DEBUG.HUBPREQ_DEBUG[26] = 1;

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* wbif programming guide:

 * 1. set up wbif parameter:

 *    unsigned long long   luma_address[4];       //4 frame buffer

 *    unsigned long long   chroma_address[4];

 *    unsigned int	   luma_pitch;

 *    unsigned int	   chroma_pitch;

 *    unsigned int         warmup_pitch=0x10;     //256B align, the page size is 4KB when it is 0x10

 *    unsigned int	   slice_lines;           //slice size

 *    unsigned int         time_per_pixel;        // time per pixel, in ns

 *    unsigned int         arbitration_slice;     // 0: 2048 bytes 1: 4096 bytes 2: 8192 Bytes

 *    unsigned int         max_scaled_time;       // used for QOS generation

 *    unsigned int         swlock=0x0;

 *    unsigned int         cli_watermark[4];      //4 group urgent watermark

 *    unsigned int         pstate_watermark[4];   //4 group pstate watermark

 *    unsigned int         sw_int_en;             // Software interrupt enable, frame end and overflow

 *    unsigned int         sw_slice_int_en;       // slice end interrupt enable

 *    unsigned int         sw_overrun_int_en;     // overrun error interrupt enable

 *    unsigned int         vce_int_en;            // VCE interrupt enable, frame end and overflow

 *    unsigned int         vce_slice_int_en;      // VCE slice end interrupt enable, frame end and overflow

 *

 * 2. configure wbif register

 *    a. call mmhubbub_config_wbif()

 *

 * 3. Enable wbif

 *    call set_wbif_bufmgr_enable();

 *

 * 4. wbif_dump_status(), option, for debug purpose

 *    the bufmgr status can show the progress of write back, can be used for debug purpose

 Set base address and region size for warmup */

	REG_SET(MMHUBBUB_WARMUP_P_VMID, 0, MMHUBBUB_WARMUP_P_VMID, params->p_vmid);

 Set address increment and enable warmup */

 Wait for an interrupt to signal warmup is completed */

 Acknowledge interrupt */

 Disable warmup */

 buffer address for packing mode or Luma in planar mode */

 buffer address for Chroma in planar mode (unused in packing mode) */

 buffer address for packing mode or Luma in planar mode */

 buffer address for Chroma in planar mode (unused in packing mode) */

 buffer address for packing mode or Luma in planar mode */

 buffer address for Chroma in planar mode (unused in packing mode) */

 buffer address for packing mode or Luma in planar mode */

 buffer address for Chroma in planar mode (unused in packing mode) */

	/* setup luma & chroma size

	 * should be enough to contain a whole frame Luma data,

	 * the programmed value is frame buffer size [27:8], 256-byte aligned

 enable address fence */

 setup pitch, the programmed value is [15:8], 256B align */

 Programmed by the video driver based on the CRTC timing (for DWB) */

 Programming dwb watermark */

 Watermark to generate urgent in MCIF_WB_CLI, value is determined by MCIF_WB_CLI_WATERMARK_MASK. */

 Program in ns. A formula will be provided in the pseudo code to calculate the value. */

 urgent_watermarkA */

 urgent_watermarkB */

 urgent_watermarkC */

 urgent_watermarkD */

 Programming nb pstate watermark */

 nbp_state_change_watermarkA */

 nbp_state_change_watermarkB */

 nbp_state_change_watermarkC */

 nbp_state_change_watermarkD */

 dram_speed_change_duration */

 max_scaled_time */

 slice_lines */

 Set arbitration unit for Luma/Chroma */

 arb_unit=2 should be chosen for more efficiency */

 Arbitration size, 0: 2048 bytes 1: 4096 bytes 2: 8192 Bytes */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

get the shaper lut params

find the reason why logical layer assigned a differant mpcc_id into acquire_post_bldn_3dlut*/

loop through the available mux and release the requested mpcc_id*/

 program OGAM or 3DLUT only for the top pipe*/

program rmu shaper and 3dlut in MPC*/

 there are no ROM LUTs in OUTGAM */

 set DWB MPC mux */

 set MCIF_WB buffer and arbitration configuration */

 update DWB */

make sure there is no active DWB eanbled */

can not do warmup while any dwb enabled*/

check whether this is new interface: warmup big buffer once*/

mmhubbub is shared, so it does not matter which MCIF*/

warmup a big chunk of VM buffer at once*/

following is the original: warmup each DWB's mcif buffer*/

warmup is for VM mode only*/

 Warmup MCIF_WB */

 set the OPTC source mux */

till diags switch to warmup interface*/

 Update writeback pipe */

 Enable MCIF_WB */

 Enable DWB */

 disable DWB */

 disable MCIF */

 disable MPC DWB mux */

 For each writeback pipe */

 copy writeback info to local non-const so mpcc_inst can be set */

 get the MPCC instance for writeback_source_plane */

				/* Disable writeback pipe and disconnect from MPCC

				 * if source plane has been removed

 writeback pipe already enabled, only need to update */

 Enable writeback pipe and connect to MPCC */

 Disable writeback pipe and disconnect from MPCC */

 Initialize the dccg

 enable all DCN clock gating */

Enable ability to power gate / don't force power on permanently

 Force ERAM to shutdown if DMCU is not enabled

 Set default OPTC memory power states

 Shutdown when unassigned and light sleep in VBLANK

 Not all ASICs have DCCG sw component

		/* Power up AND update implementation according to the

		 * required signal (which may be different from the

		 * default signal on connector).

 Check for enabled DIG to identify enabled display */

 Power gate DSCs */

 we want to turn off all dp displays before doing detection */

 DP 2.0 states that LTTPR regs must be read first */

 if any of the displays are lit up turn them off */

 blank dp stream before power off receiver*/

	/* If taking control over from VBIOS, we may want to optimize our first

	 * mode set, so we need to skip powering down pipes until we know which

	 * pipes we want to use.

	 * Otherwise, if taking control is not possible, we need to power

	 * everything down.

	/* In headless boot cases, DIG may be turned

	 * on which causes HW/SW discrepancies.

	 * To avoid this, power down hardware on boot

	 * if DIG is turned on and seamless boot not enabled

 power AFMT HDMI memory TODO: may move to dis/en output save power*/

 enable all DCN clock gating */

 this is not root pipe */

 if using dynamic meta, don't set up generic infopackets */

 First, check no-memory-requests case */

 Fail eligibility on a visible stream */

 Enable no-memory-requests case */

			/*

			 * Second, check MALL eligibility

			 *

			 * single display only, single surface only, 8 and 16 bit formats only, no VM,

			 * do not use MALL for displays that support PSR as they use D0i3.2 in DMCUB FW

			 *

			 * TODO: When we implement multi-display, PSR displays will be allowed if there is

			 * a non-PSR display present, since in that case we can't do D0i3.2

				/*

				 * one frame time in microsec:

				 * Delay_Us = 1000000 / refresh

				 * dynamic_delay_us = 1000000 / refresh + 2 * stutter_period

				 *

				 * one frame time modified by 'additional timer percent' (p):

				 * Delay_Us_modified = dynamic_delay_us + dynamic_delay_us * p / 100

				 *                   = dynamic_delay_us * (1 + p / 100)

				 *                   = (1000000 / refresh + 2 * stutter_period) * (100 + p) / 100

				 *                   = (1000000 + 2 * stutter_period * refresh) * (100 + p) / (100 * refresh)

				 *

				 * formula for timer duration based on parameters, from regspec:

				 * dynamic_delay_us = 65.28 * (64 + MallFrameCacheTmrDly) * 2^MallFrameCacheTmrScale

				 *

				 * dynamic_delay_us / 65.28 = (64 + MallFrameCacheTmrDly) * 2^MallFrameCacheTmrScale

				 * (dynamic_delay_us / 65.28) / 2^MallFrameCacheTmrScale = 64 + MallFrameCacheTmrDly

				 * MallFrameCacheTmrDly = ((dynamic_delay_us / 65.28) / 2^MallFrameCacheTmrScale) - 64

				 *                      = (1000000 + 2 * stutter_period * refresh) * (100 + p) / (100 * refresh) / 65.28 / 2^MallFrameCacheTmrScale - 64

				 *                      = (1000000 + 2 * stutter_period * refresh) * (100 + p) / (refresh * 6528 * 2^MallFrameCacheTmrScale) - 64

				 *

				 * need to round up the result of the division before the subtraction

				/* In some cases the stutter period is really big (tiny modes) in these

				 * cases MALL cant be enabled, So skip these cases to avoid a ASSERT()

				 *

				 * We can check if stutter_period is more than 1/10th the frame time to

				 * consider if we can actually meet the range of hysteresis timer

 scale should be increased until it fits into 6 bits */

 Delay exceeds range of hysteresis timer */

 Copy HW cursor */

 Use copied cursor, and it's okay to not switch back */

 Enable MALL */

 No applicable optimizations */

 Disable MALL */

 add meta size?

 if pstate unsupported, force it supported */

 turning on DPG */

 Defer hubp blank if tg is locked */

 Blank HUBP to allow p-state during blank on all timings */

 turning off DPG */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 #include "dcn3ag/dcn3ag_phy_fw.h" */

	/* set the flag to indicate whether driver poll the I2C data pin

	 * while doing the DP sink detect

/*	if (dal_adapter_service_is_feature_supported(as,

		FEATURE_DP_SINK_DETECT_POLL_DATA_PIN))

		enc10->base.features.flags.bits.

	/* For DCE 8.0 and 8.1, by design, UNIPHY is hardwired to DIG_BE.

	 * SW always assign DIG_FE 1:1 mapped to DIG_FE for non-MST UNIPHY.

	 * SW assign DIG_FE to non-MST UNIPHY first and MST last. So prefer

	 * DIG is per UNIPHY and used by SST DP, eDP, HDMI, DVI and LVDS.

	 * Prefer DIG assignment is decided by board design.

	 * For DCE 8.0, there are only max 6 UNIPHYs, we assume board design

	 * and VBIOS will filter out 7 UNIPHY for DCE 8.0.

	 * By this, adding DIGG should not hurt DCE 8.0.

	 * This will let DCE 8.1 share DCE 8.0 as much as possible

 default to one to mirror Windows behavior */

 Override features with DCE-specific values */

/*

	00 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__1to2 : 1/2

	01 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__3to4 : 3/4

	02 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__7to8 : 7/8

	03 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__15to16 : 15/16

	04 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__31to32 : 31/32

	05 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__63to64 : 63/64

	06 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__127to128 : 127/128

	07 - DP_AUX_DPHY_RX_DETECTION_THRESHOLD__255to256 : 255/256

/*

	AUX_REG_UPDATE_5(AUX_DPHY_RX_CONTROL0,

	AUX_RX_START_WINDOW = 1 [6:4]

	AUX_RX_RECEIVE_WINDOW = 1 default is 2 [10:8]

	AUX_RX_HALF_SYM_DETECT_LEN  = 1 [13:12] default is 1

	AUX_RX_TRANSITION_FILTER_EN = 1 [16] default is 1

	AUX_RX_ALLOW_BELOW_THRESHOLD_PHASE_DETECT [17] is 0  default is 0

	AUX_RX_ALLOW_BELOW_THRESHOLD_START [18] is 1  default is 1

	AUX_RX_ALLOW_BELOW_THRESHOLD_STOP [19] is 1  default is 1

	AUX_RX_PHASE_DETECT_LEN,  [21,20] = 0x3 default is 3

	AUX_RX_DETECTION_THRESHOLD [30:28] = 1

AUX_DPHY_TX_REF_CONTROL'AUX_TX_REF_DIV HW default is 0x32;

 Set AUX_TX_REF_DIV Divider to generate 2 MHz reference from refclk

 27MHz -> 0xd

 100MHz -> 0x32

 48MHz -> 0x18

 Set TMDS_CTL0 to 1.  This is a legacy setting.

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 there is a DIG_UPDATE_VCOUNT_MODE and it is 0.

/* Set DSC-related configuration.

 *   dsc_mode: 0 disables DSC, other values enable DSC in specified format

 *   sc_bytes_per_pixel: Bytes per pixel in u3.28 format

 *   dsc_slice_width: Slice width in pixels

	/* TODO: In pseudocode but does not affect maximus, delete comment if we dont need on asic

	 * REG_SET(OTG_GLOBAL_CONTROL2, 0, GLOBAL_UPDATE_LOCK_EN, 1);

	 * Program OTG register MASTER_UPDATE_LOCK_DB_X/Y to the position before DP frame start

	 * REG_SET_2(OTG_GLOBAL_CONTROL1, 0,

	 *		MASTER_UPDATE_LOCK_DB_X, 160,

	 *		MASTER_UPDATE_LOCK_DB_Y, 240);

	/* 2 pieces of memory required for up to 5120 displays, 4 for up to 8192,

	 * however, for ODM combine we can simplify by always using 4.

		/* To make sure there's no memory overlap, each instance "reserves" 2

		 * memories and they are uniquely combined here.

		/* To make sure there's no memory overlap, each instance "reserves" 1

		 * memory and they are uniquely combined here.

/**

 * optc3_set_timing_double_buffer() - DRR double buffering control

 *

 * Sets double buffer point for V_TOTAL, H_TOTAL, VTOTAL_MIN,

 * VTOTAL_MAX, VTOTAL_MIN_SEL and VTOTAL_MAX_SEL registers.

 *

 * Options: any time,  start of frame, dp start of frame (range timing)

 used by enable_timing_synchronization. Not need for FPGA */

 used by enable_timing_synchronization. Not need for FPGA */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 AFMT_AUDIO_PACKET_CONTROL */

 AFMT_AUDIO_PACKET_CONTROL2 */

	/* AFMT_60958_0__AFMT_60958_CS_CHANNEL_NUMBER_L_MASK &

	 * AFMT_60958_0__AFMT_60958_CS_CLOCK_ACCURACY_MASK

 AFMT_60958_1 AFMT_60958_CS_CHALNNEL_NUMBER_R */

	/* AFMT_60958_2 now keep this settings until

	 * Programming guide comes out

 these are one to one */

	/* if Rear Left and Right exist move RC speaker to channel 7

	 * otherwise to channel 5

 FRONT Left Right Center and REAR Left Right Center are exclusive */

 This should not happen.it does so we don't get BSOD*/

 setup the audio stream source select (audio -> dig mapping) */

 Channel allocation */

 Disable forced mem power off */

 enable/disable transmission of audio packets */

 update double-buffered AUDIO_INFO registers immediately */

 AFMT_AUDIO_PACKET_CONTROL */

 AFMT_AUDIO_PACKET_CONTROL2 */

 Program the ATP and AIP next */

 AFMT_INFOFRAME_CONTROL0 */

 AFMT_60958_0__AFMT_60958_CS_CLOCK_ACCURACY_MASK */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* set the flag to indicate whether driver poll the I2C data pin

	 * while doing the DP sink detect

/*	if (dal_adapter_service_is_feature_supported(as,

		FEATURE_DP_SINK_DETECT_POLL_DATA_PIN))

		enc10->base.features.flags.bits.

	/* For DCE 8.0 and 8.1, by design, UNIPHY is hardwired to DIG_BE.

	 * SW always assign DIG_FE 1:1 mapped to DIG_FE for non-MST UNIPHY.

	 * SW assign DIG_FE to non-MST UNIPHY first and MST last. So prefer

	 * DIG is per UNIPHY and used by SST DP, eDP, HDMI, DVI and LVDS.

	 * Prefer DIG assignment is decided by board design.

	 * For DCE 8.0, there are only max 6 UNIPHYs, we assume board design

	 * and VBIOS will filter out 7 UNIPHY for DCE 8.0.

	 * By this, adding DIGG should not hurt DCE 8.0.

	 * This will let DCE 8.1 share DCE 8.0 as much as possible

 default to one to mirror Windows behavior */

 Override features with DCE-specific values */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2019-2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* begin *********************

 * macros to expend register list macro defined in HW object header file

 DCN */

 TODO awful hack. fixup dcn20_dwb.h */

 NBIO */

 MMHUB */

 CLOCK */

 6:1 downscaling ratio: 1000/6 = 166.666 */

upto 8K*/

 -1 = disable

 -1 = disable

 RV1 support max 4 pipes */

 Mapping of VPG, AFMT, DME register blocks to DIO block instance */

 Notify PP Lib/SMU which Watermarks to use for which clock ranges */

	/*************************************************

	 *  Resource + asic cap harcoding                *

1.4 w/a enabled by default*/

 Color pipeline capabilities */

 must use gamma_corr

 no OGAM ROM on DCN301

2

 Init the vm_helper

	/*************************************************

	 *  Create resources                             *

 Clock Sources for Pixel Clock*/

 todo: not reuse phy_pll registers */

 DCCG */

 IRQ */

 HUBBUB */

 HUBPs, DPPs, OPPs and TGs */

		/* if pipe is disabled, skip instance of HW pipe,

		 * i.e, skip ASIC register instance

 ABM (or ABMs for NV2x) */

 TODO: */

 MPC and DSC */

 DWB and MMHUBBUB */

 AUX and I2C */

 Audio, Stream Encoders including HPO and virtual, MPC 3D LUTs */

 HW Sequencer and Plane caps */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* It must not be 0, so we have to restore them

	 * Bios bug w/a - period resets to zero,

	 * restoring to cache values which is always correct

			/* TODO: Note: This should not really happen since VBIOS

			 * should have initialized PWM registers on boot.

 Enable the backlight output

 Unlock group 2 backlight registers

/*

* Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 184KB for DCN3 */

/*

 * Copyright 2016-2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

			/* init sequence workaround: in case HUBP is

			 * power gated, this wait would timeout.

			 *

			 * we just wrote reg_val to non-0, if it stay 0

			 * it means HUBP is gated

 set HBUBREQ_DEBUG_DB[12] = 1 */

 hack mode disable */

		/* if (eco_fix_needed(otg_global_sync_timing)

	/* Program data and meta surface pitch (calculation from addrlib)

	 * 444 or 420 luma

 Chroma pitch zero can cause system hang! */

 Program rotation angle and horz mirror - no mirror */

 swap for ABGR format */

 Mapping is same as ipp programming (cnvc) */

we use crossbar already*/

 ARGB16161616_UNORM */

we use crossbar already*/

 don't see the need of program the xbar in DCN 1.0 */

program flip type

 turn off stereo if not in stereo

	/* HW automatically latch rest of address register on write to

	 * DCSURF_PRIMARY_SURFACE_ADDRESS if SURFACE_UPDATE_LOCK is not used

	 *

	 * program high first and then the low addr, order matters!

		/* DCN1.0 does not support const color

		 * TODO: program DCHUBBUB_RET_PATH_DCC_CFGx_0/1

		 * base on address->grph.dcc_const_color

		 * x = 0, 2, 4, 6 for pipe 0, 1, 2, 3 for rgb and luma

		 * x = 1, 3, 5, 7 for pipe 0, 1, 2, 3 for chroma

 DLG - Per hubp */

 DLG - Per luma/chroma */

 TTU - per hubp */

 TTU - per luma/chroma */

 Assumed surf0 is luma and 1 is chroma */

	/* otg is locked when this func is called. Register are double buffered.

	 * disable the requestors is not needed

 = 0;*/

 1 = system physical memory */

 pte base */

 pte start */

 pte end */

 fault handling */

 control: enable VM PTE*/

for stereo*/

 DC supports NV12 only at the moment */

 Requester */

 On DCN1, aperture is broken down into MSB and LSB; only keep bits [47:18] to match later DCN format

 DLG - Per hubp */

 DLG - Per luma/chroma */

 TTU - per hubp */

 TTU - per luma/chroma */

 Assumed surf0 is luma and 1 is chroma */

 Rest of hubp */

 impl B. expansion in CUR Buffer reader */

 no shift of the cursor HDL schedule */

 used to shift the cursor chunk request deadline */

	/*

	 * Guard aganst cursor_set_position() from being called with invalid

	 * attributes

	 *

	 * TODO: Look at combining cursor_set_position() and

	 * cursor_set_attributes() into cursor_update()

 Rotated cursor width/height and hotspots tweaks for offset calculation

 not visible beyond right edge*/

 not visible beyond left edge*/

 not visible beyond bottom edge*/

 not visible beyond top edge*/

 TODO Handle surface pixel formats other than 4:4:4 */

/**

 * hubp1_clk_cntl - Disable or enable clocks for DCHUBP

 *

 * @hubp: hubp struct reference.

 * @enable: Set true for enabling gate clock.

 *

 * When enabling/disabling DCHUBP clock, we affect dcfclk/dppclk.

/**

 * hubp1_set_flip_int - Enable surface flip interrupt

 *

 * @hubp: hubp struct reference.

do nothing

****************************************/

 Constructor, Destructor               */

****************************************/

/*

 * Copyright 2016-2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

print is 17 wide, first two characters are spaces*/

		/*

		 * Only lock the top pipe's tg to prevent redundant

		 * (un)locking. Also skip if pipe is disabled.

 Read shared OTG state registers for all DCNx */

		/*

		 * For DCN2 and greater, a register on the OPP is used to

		 * determine if the CRTC is blanked instead of the OTG. So use

		 * dpg_is_blanked() if exists, otherwise fallback on otg.

		 *

		 * TODO: Implement DCN-specific read_otg_state hooks.

only print if OTG master is enabled

 Clear underflow for debug purposes

 We want to keep underflow sticky bit on for the longevity tests outside of test environment.

 This function is called only from Windows or Diags test environment, hence it's safe to clear

 it from here without affecting the original intent.

 dcn_dsc_state struct field bytes_per_pixel was renamed to bits_per_pixel

 TODO: Update golden log header to reflect this name change

 log DP HPO L_ENC section if any hpo_dp_link_enc exists */

 disable power gating */

 DCHUBP0/1/2/3 */

 DPP0/1/2/3 */

	/* HW Engineer's Notes:

	 *  During switch from vga->extended, if we set the VGA_TEST_ENABLE and

	 *  then hit the VGA_TEST_RENDER_START, then the DCHUBP timing gets updated correctly.

	 *

	 *  Then vBIOS will have it poll for the VGA_TEST_RENDER_DONE and unset

	 *  VGA_TEST_ENABLE, to leave it in the same state as before.

/**

 * dcn10_dpp_pg_control - DPP power gate control.

 *

 * @hws: dce_hwseq reference.

 * @dpp_inst: DPP instance reference.

 * @power_on: true if we want to enable power gate, false otherwise.

 *

 * Enable or disable power gate in the specific DPP instance.

 DPP0 */

 DPP1 */

 DPP2 */

 DPP3 */

/**

 * dcn10_hubp_pg_control - HUBP power gate control.

 *

 * @hws: dce_hwseq reference.

 * @hubp_inst: DPP instance reference.

 * @power_on: true if we want to enable power gate, false otherwise.

 *

 * Enable or disable power gate in the specific HUBP instance.

 DCHUBP0 */

 DCHUBP1 */

 DCHUBP2 */

 DCHUBP3 */

 all pipe power gated, apply work around to enable stutter. */

	/* WA for making DF sleep when idle after resume from S0i3.

	 * DCHUBBUB_ARB_ALLOW_SELF_REFRESH_FORCE_ENABLE is set to 1 by

	 * command table, if DCHUBBUB_ARB_ALLOW_SELF_REFRESH_FORCE_ENABLE = 0

	 * before calling command table and it changed to 1 after,

	 * it should be set back to 0.

 initialize dcn global */

 initialize dcn per pipe */

	/* by upper caller loop, pipe0 is parent pipe and be called first.

	 * back end is set up by for pipe0. Other children pipe share back end

	 * with pipe 0. No program is needed.

 TODO check if timing_changed, disable stream if timing changed */

	/* HW program guide assume display already disable

	 * by unplug sequence. OTG assume stop.

 move to after enable_crtc */

 TODO: OPP FMT, ABM. etc. should be done here. */

 or FPGA now. instance 0 only. TODO: move to opp.c */

 program otg blank color */

	/*

	 * The way 420 is packed, 2 channels carry Y component, 1 channel

	 * alternate between Cb and Cr, so both channels need the pixel

	 * value for Y

 VTG is  within DCHUB command block. DCFCLK is always on */

 TODO program crtc source select for non-virtual signal*/

 TODO program FMT */

 TODO setup link_enc */

 TODO set stream attributes */

 TODO program audio */

 TODO enable stream if timing changed */

 TODO unblank stream if DP */

 DPMS may already disable or */

		/* dpms_off status is incorrect due to fastboot

		 * feature. When system resume from S4 with second

		 * screen only, the dpms_off would be true but

		 * VBIOS lit up eDP, so check link status too.

disable az_endpoint*/

free audio*/

we have to dynamic arbitrate the audio endpoints*/

we free the resource, need reset is_audio_acquired*/

	/* by upper caller loop, parent pipe: pipe0, will be reset last.

	 * back end share by all pipes and will be disable only when disable

	 * parent pipe.

 one pipe underflow, we will reset all the pipes*/

	/*

	DCHUBP_CNTL:HUBP_BLANK_EN=1

	DCHUBBUB_SOFT_RESET:DCHUBBUB_GLOBAL_SOFT_RESET=1

	DCHUBP_CNTL:HUBP_DISABLE=1

	DCHUBP_CNTL:HUBP_DISABLE=0

	DCHUBBUB_SOFT_RESET:DCHUBBUB_GLOBAL_SOFT_RESET=0

	DCSURF_PRIMARY_SURFACE_ADDRESS

	DCHUBP_CNTL:HUBP_BLANK_EN=0

DCHUBP_CNTL:HUBP_BLANK_EN=1*/

DCHUBBUB_SOFT_RESET:DCHUBBUB_GLOBAL_SOFT_RESET=1*/

DCHUBP_CNTL:HUBP_DISABLE=1*/

DCHUBP_CNTL:HUBP_DISABLE=0*/

DCHUBBUB_SOFT_RESET:DCHUBBUB_GLOBAL_SOFT_RESET=0*/

DCHUBP_CNTL:HUBP_BLANK_EN=0*/

 prevent hw state log by default */

check again*/

 trigger HW to start disconnect plane from stream on the next vsync */

Already reset*/

/**

 * dcn10_plane_atomic_power_down - Power down plane components.

 *

 * @dc: dc struct reference. used for grab hwseq.

 * @dpp: dpp struct reference.

 * @hubp: hubp struct reference.

 *

 * Keep in mind that this operation requires a power gate configuration;

 * however, requests for switch power gate are precisely controlled to avoid

 * problems. For this reason, power gate request is usually disabled. This

 * function first needs to enable the power gate request before disabling DPP

 * and HUBP. Finally, it disables the power gate request again.

/* disable HW used by plane.

 * note:  cannot disable until disconnect is complete

 We're powering off, no need to optimize */

		/* There is assumption that pipe_ctx is not mapping irregularly

		 * to non-preferred front end. If pipe_ctx->stream is not NULL,

		 * we will use the pipe, so don't disable

		/* Blank controller using driver code instead of

		 * command table.

 num_opp will be equal to number of mpcc */

 Cannot reset the MPC mux if seamless boot */

		/* There is assumption that pipe_ctx is not mapping irregularly

		 * to non-preferred front end. If pipe_ctx->stream is not NULL,

		 * we will use the pipe, so don't disable

 Enable double buffering for OTG_BLANK no matter if

 seamless boot is enabled or not to suppress global sync

 signals when OTG blanked. This is to prevent pipe from

 requesting data while in PSR.

 Disable on the current state so the new one isn't cleared. */

 Align bw context with hw config when system resume. */

 Initialize the dccg

 enable all DCN clock gating */

Enable ability to power gate / don't force power on permanently

 Not all ASICs have DCCG sw component

		/* Power up AND update implementation according to the

		 * required signal (which may be different from the

		 * default signal on connector).

 Check for enabled DIG to identify enabled display */

 Power gate DSCs */

 Enable outbox notification feature of dmub */

 we want to turn off all dp displays before doing detection */

 DP 2.0 requires that LTTPR Caps be read first */

			/*

			 * If any of the displays are lit up turn them off.

			 * The reason is that some MST hubs cannot be turned off

			 * completely until we tell them to do so.

			 * If not turned off, then displays connected to MST hub

			 * won't light up.

 blank dp stream before power off receiver*/

	/* If taking control over from VBIOS, we may want to optimize our first

	 * mode set, so we need to skip powering down pipes until we know which

	 * pipes we want to use.

	 * Otherwise, if taking control is not possible, we need to power

	 * everything down.

 power AFMT HDMI memory TODO: may move to dis/en output save power*/

 enable all DCN clock gating */

/* In headless boot cases, DIG may be turned

 * on which causes HW/SW discrepancies.

 * To avoid this, power down hardware on boot

 * if DIG is turned on

	/*

	 * Call update_clocks with empty context

	 * to send DISPLAY_OFF

	 * Otherwise DISPLAY_OFF may not be asserted

 Reset Back End*/

 DC_LOG_GAMMA is default logging of all hw points

 DC_LOG_ALL_GAMMA logs all points, not only hw points

 DC_LOG_ALL_TF_POINTS logs all channels of the tf

	/* dcn10_translate_regamma_to_hw_format takes 750us, only do it when full

	 * update.

	/* use TG master update lock to lock everything on the TG

	 * therefore only top pipe need to lock

/**

 * delay_cursor_until_vupdate() - Delay cursor update if too close to VUPDATE.

 *

 * Software keepout workaround to prevent cursor update locking from stalling

 * out cursor updates indefinitely or from old values from being retained in

 * the case where the viewport changes in the same frame as the cursor.

 *

 * The idea is to calculate the remaining time from VPOS to VUPDATE. If it's

 * too close to VUPDATE, then stall out until VUPDATE finishes.

 *

 * TODO: Optimize cursor programming to be once per frame before VUPDATE

 *       to avoid the need for this workaround.

 Avoid wraparound calculation issues */

 VPOS is in VACTIVE or back porch. */

 VPOS is in the front porch. */

 VPOS is in VUPDATE. */

 Calculate time until VUPDATE in microseconds. */

 70 us is a conservative estimate of cursor update time*/

 Stall out until the cursor update completes. */

 cursor lock is per MPCC tree, so only need to lock one pipe per stream */

 Prevent cursor lock from stalling out cursor updates. */

	/* To avoid endless loop we wait at most

 usually occurs at i=1 */

 Wait for one frame. */

					/*

					 * this will help to stop reporting

					 * this timing synchronizable

	/* Need to get only check 1 pipe for having reset as all the others are

	 * synchronized. Look at last pipe programmed to reset.

 Temporary read settings, future will get values from kmd directly */

	/*

	 * The values in VM_CONTEXT0_PAGE_TABLE_BASE_ADDR is in UMA space.

	 * Therefore we need to do

	 * DCN_VM_CONTEXT0_PAGE_TABLE_BASE_ADDR = VM_CONTEXT0_PAGE_TABLE_BASE_ADDR

	 * - DCHUBBUB_SDPIF_FB_OFFSET + DCHUBBUB_SDPIF_FB_BASE

 enable DCFCLK current DCHUB */

 make sure OPP_PIPE_CLOCK_EN = 1 */

 Traverse to top pipe_ctx

 Front MPO plane not hidden

 Override rear plane RGB bias to fix MPO brightness

			/* MPO is broken with RGB colorspaces when OCSC matrix

			 * brightness offset >= 0 on DCN1 due to OCSC before MPC

			 * Blending adds offsets from front + rear to rear plane

			 *

			 * Fix is to set RGB bias to 0 on rear plane, top plane

			 * black value pixels add offset instead of rear + front

 matrix[3/7/11] are all the same offset value

 program the input csc

set scale and bias registers

	/* DCN1.0 has output CM before MPC which seems to screw with

	 * pre-multiplied alpha.

	/*

	 * TODO: remove hack

	 * Note: currently there is a bug in init_hw such that

	 * on resume from hibernate, BIOS sets up MPCC0, and

	 * we do mpcc_remove but the mpcc cannot go to idle

	 * after remove. This cause us to pick mpcc1 here,

	 * which causes a pstate hang for yet unknown reason.

 If there is no full update, don't need to touch MPC tree*/

 check if this MPCC is already being used */

 remove MPCC if being used */

 Call MPC to insert new plane */

 scaler configuration */

 depends on DML calculation, DPP clock value may change dynamically */

	/* If request max dpp clk is lower than current dispclk, no need to

	 * divided by 2

		/* new calculated dispclk, dppclk are stored in

		 * context->bw_ctx.bw.dcn.clk.dispclk_khz / dppclk_khz. current

		 * dispclk, dppclk are from dc->clk_mgr->clks.dispclk_khz.

		 * dcn_validate_bandwidth compute new dispclk, dppclk.

		 * dispclk will put in use after optimize_bandwidth when

		 * ramp_up_dispclk_with_dpp is called.

		 * there are two places for dppclk be put in use. One location

		 * is the same as the location as dispclk. Another is within

		 * update_dchubp_dpp which happens between pre_bandwidth and

		 * optimize_bandwidth.

		 * dppclk updated within update_dchubp_dpp will cause new

		 * clock values of dispclk and dppclk not be in use at the same

		 * time. when clocks are decreased, this may cause dppclk is

		 * lower than previous configuration and let pipe stuck.

		 * for example, eDP + external dp,  change resolution of DP from

		 * 1920x1080x144hz to 1280x960x60hz.

		 * before change: dispclk = 337889 dppclk = 337889

		 * change mode, dcn_validate_bandwidth calculate

		 *                dispclk = 143122 dppclk = 143122

		 * update_dchubp_dpp be executed before dispclk be updated,

		 * dispclk = 337889, but dppclk use new value dispclk /2 =

		 * 168944. this will cause pipe pstate warning issue.

		 * solution: between pre_bandwidth and optimize_bandwidth, while

		 * dispclk is going to be decreased, keep dppclk = dispclk

	/* TODO: Need input parameter to tell current DCHUB pipe tie to which OTG

	 * VTG is within DCHUBBUB which is commond block share by each pipe HUBP.

	 * VTG is 1:1 mapping with OTG. Each pipe HUBP will select which VTG

gamut remap*/

 program otg blank color */

	/*

	 * The way 420 is packed, 2 channels carry Y component, 1 channel

	 * alternate between Cb and Cr, so both channels need the pixel

	 * value for Y

 1.0 default multiplier

 check != 0

	/* dcn10_translate_regamma_to_hw_format takes 750us to finish

	 * only do gamma programming for full update.

	 * TODO: This can be further optimized/cleaned up

	 * Always call this for now since it does memcmp inside before

	 * doing heavy calculation and programming

			/*

			 * Only wait for top pipe's tg penindg bit

			 * Also skip if pipe is disabled.

			/*

			 * Wait for VBLANK then VACTIVE to ensure we get VUPDATE.

			 * For some reason waiting for OTG_UPDATE_PENDING cleared

			 * seems to not trigger the update right away, and if we

			 * lock again before VUPDATE then we don't get a separated

			 * operation.

			/*

			 * Disable stutter

 DRR set trigger event mapped to OTG_TRIG_A (bit 11) for manual control flow

 Note DRR trigger events are generated regardless of whether num frames met.

	/* TODO: If multiple pipes are to be supported, you need

	 * some GSL stuff. Static screen triggers may be programmed differently

	 * as well.

	/* TODO: handle pipes > 1

 In DCN, this programming sequence is owned by the hubbub */

	/**

	 * Disable the cursor if there's another pipe above this with a

	 * plane that contains this pipe's viewport to prevent double cursor

	 * and incorrect scaling artifacts.

 Skip invisible layer and pipe-split plane on same layer

		/**

		 * There is another half plane on same layer because of

		 * pipe-split, merge together per same height.

	/**

	 * DC cursor is stream space, HW cursor is plane space and drawn

	 * as part of the framebuffer.

	 *

	 * Cursor position can't be negative, but hotspot can be used to

	 * shift cursor out of the plane bounds. Hotspot must be smaller

	 * than the cursor size.

	/**

	 * Translate cursor from stream space to plane space.

	 *

	 * If the cursor is scaled then we need to scale the position

	 * to be in the approximately correct place. We can't do anything

	 * about the actual size being incorrect, that's a limitation of

	 * the hardware.

	/**

	 * If the cursor's source viewport is clipped then we need to

	 * translate the cursor to appear in the correct position on

	 * the screen.

	 *

	 * This translation isn't affected by scaling so it needs to be

	 * done *after* we adjust the position for the scale factor.

	 *

	 * This is only done by opt-in for now since there are still

	 * some usecases like tiled display that might enable the

	 * cursor on both streams while expecting dc to clip it.

	/**

	 * If the position is negative then we need to add to the hotspot

	 * to shift the cursor outside the plane.

 Swap axis and mirror horizontally

 Swap axis and mirror vertically

		/**

		 * Display groups that are 1xnY, have pos_cpy.x > 2 * viewport.height

		 * For pipe split cases:

		 * - apply offset of viewport.y to normalize pos_cpy.x

		 * - calculate the pos_cpy.y as before

		 * - shift pos_cpy.y back by same offset to get final value

		 * - since we iterate through both pipes, use the lower

		 *   viewport.y for offset

		 * For non pipe split cases, use the same calculation for

		 *  pos_cpy.y as the 180 degree rotation case below,

		 *  but use pos_cpy.x as our input because we are rotating

		 *  270 degrees

 Mirror horizontally and vertically

		/**

		 * Display groups that are 1xnY, have pos_cpy.y > viewport.height

		 * Calculation:

		 *   delta_from_bottom = viewport.y + viewport.height - pos_cpy.y

		 *   pos_cpy.y_new = viewport.y + delta_from_bottom

		 * Simplify it as:

		 *   pos_cpy.y = viewport.y * 2 + viewport.height - pos_cpy.y

 1.0 default multiplier

/*

 * apply_front_porch_workaround  TODO FPGA still need?

 *

 * This is a workaround for a bug that has existed since R5xx and has not been

 * fixed keep Front porch at minimum 2 for Interlaced mode or 1 for progressive.

 Suppose to do nothing because vsync is 0;

 only 3 items below are used by unblank */

update internal request clock for update clock use*/

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/**

* apply_front_porch_workaround  TODO FPGA still need?

*

* This is a workaround for a bug that has existed since R5xx and has not been

* fixed keep Front porch at minimum 2 for Interlaced mode or 1 for progressive.

/**

 * Vupdate keepout can be set to a window to block the update lock for that pipe from changing.

 * Start offset begins with vstartup and goes for x number of clocks,

 * end offset starts from end of vupdate to x number of clocks.

/**

 * program_timing_generator   used by mode timing set

 * Program CRTC Timing Registers - OTG_H_*, OTG_V_*, Pixel repetition.

 * Including SYNC. Call BIOS command table to program Timings.

 Load horizontal timing */

 CRTC_H_TOTAL = vesa.h_total - 1 */

 h_sync_start = 0, h_sync_end = vesa.h_sync_width */

 blank_start = line end - front porch */

 blank_end = blank_start - active */

 h_sync polarity */

	/* In case of V_TOTAL_CONTROL is on, make sure OTG_V_TOTAL_MAX and

	 * OTG_V_TOTAL_MIN are equal to V_TOTAL.

 v_sync_start = 0, v_sync_end = v_sync_width */

 blank_start = frame end - front porch */

 blank_end = blank_start - active */

 v_sync polarity */

 Interlace */

 VTG enable set to 0 first VInit */

 original code is using VTG offset to address OTG reg, seems wrong */

	/* TODO

	 * patched_crtc_timing.flags.HORZ_COUNT_BY_TWO == 1

	 * program_horz_count_by_2

	 * for DVI 30bpp mode, 0 otherwise

	 * program_horz_count_by_2(optc, &patched_crtc_timing);

	/* Enable stereo - only when we need to pack 3D frame. Other types

	 * of stereo handled in explicit call

 VCOUNT_INIT is the start of blank */

 end of blank = v_init - active */

 if VSTARTUP is before VSYNC, FP2 is the offset, otherwise 0 */

 Interlace */

/**

 * optc1_set_timing_double_buffer() - DRR double buffering control

 *

 * Sets double buffer point for V_TOTAL, H_TOTAL, VTOTAL_MIN,

 * VTOTAL_MAX, VTOTAL_MIN_SEL and VTOTAL_MAX_SEL registers.

 *

 * Options: any time,  start of frame, dp start of frame (range timing)

/**

 * unblank_crtc

 * Call ASIC Control Object to UnBlank CRTC.

	/* W/A for automated testing

	 * Automated testing will fail underflow test as there

	 * sporadic underflows which occur during the optc blank

	 * sequence.  As a w/a, clear underflow on unblank.

	 * This prevents the failure, but will not mask actual

	 * underflow that affect real use cases.

/**

 * blank_crtc

 * Call ASIC Control Object to Blank CRTC.

 Enable clock */

/**

 * Enable CRTC

 * Enable CRTC - call ASIC Control Object to enable Timing generator.

	/* TODO FPGA wait for answer

	 * OTG_MASTER_UPDATE_MODE != CRTC_MASTER_UPDATE_MODE

	 * OTG_MASTER_UPDATE_LOCK != CRTC_MASTER_UPDATE_LOCK

	/* opp instance for OTG. For DCN1.0, ODM is remoed.

	 * OPP and OPTC should 1:1 mapping

 VTG enable first is for HW workaround */

 Enable CRTC */

 disable_crtc - call ASIC Control Object to disable Timing generator. */

	/* disable otg request until end of the first line

	 * in the vertical blank region

 CRTC disabled, so disable  clock. */

 Temporarily blocking interlacing mode until it's supported */

	/* Check maximum number of pixels supported by Timing Generator

	 * (Currently will never fail, in order to fail needs display which

	 * needs more than 8192 horizontal and

	 * more than 8192 vertical total pixels)

/*

 * get_vblank_counter

 *

 * @brief

 * Get counter for vertical blanks. use register CRTC_STATUS_FRAME_COUNT which

 * holds the counter of frames.

 *

 * @param

 * struct timing_generator *optc - [in] timing generator which controls the

 * desired CRTC

 *

 * @return

 * Counter of frames, which should equal to number of vblanks.

 otg is not running, do not need to be locked */

 Should be fast, status does not update on maximus */

				/* vsync signal from selected OTG pipe based

				 * on OTG_TRIG_SOURCE_PIPE_SELECT setting

 always detect falling edge */

				/* vsync signal from selected OTG pipe based

				 * on OTG_TRIG_SOURCE_PIPE_SELECT setting

 always detect rising edge */

			/* force H count to H_TOTAL and V count to V_TOTAL in

			 * progressive mode and V_TOTAL-1 in interlaced mode

		 /* vsync signal from selected OTG pipe based

		  * on OTG_TRIG_SOURCE_PIPE_SELECT setting

 always detect falling edge */

			/* force H count to H_TOTAL and V count to V_TOTAL in

			 * progressive mode and V_TOTAL-1 in interlaced mode

 1 vupdate at 10hz */

 1 vupdate at 10hz */

	/* asic design change, do not need this control

	 * empty for share caller logic

 By register spec, it only takes 8 bit value

	/* Bit 8 is no longer applicable in RV for PSR case,

	 * set bit 8 to 0 if given

/**

 *****************************************************************************

 *  Function: set_drr

 *

 *  @brief

 *     Program dynamic refresh rate registers m_OTGx_OTG_V_TOTAL_*.

 *

 *****************************************************************************

 Setup manual flow control for EOF via TRIG_A

	/* TODO: replace 'controller_dp_test_pattern' by 'test_pattern_mode'

	 * because this is not DP-specific (which is probably somewhere in DP

 color ramp generator mixes 16-bits color */

 requested bpc */

	/* RGB values of the color bars.

	 * Produce two RGB colors: RGB0 - white (all Fs)

	 * and RGB1 - black (all 0s)

	 * (three RGB components for two colors)

 dest color (converted to the specified color format) */

 translate to bit depth */

 adjust color to the required colorFormat */

			/* dst = 2^dstBpc * src / 2^srcBpc = src >>

			 * (srcBpc - dstBpc);

		/* CRTC_TEST_PATTERN_DATA has 16 bits,

		 * lowest 6 are hardwired to ZERO

		 * color bits should be left aligned aligned to MSB

		 * XXXXXXXXXX000000 for 10 bit,

		 * XXXXXXXX00000000 for 8 bit and XXXXXX0000000000 for 6

		/* We have to write the mask before data, similar to pipeline.

		 * For example, for 8 bpc, if we want RGB0 to be magenta,

		 * and RGB1 to be cyan,

		 * we need to make 7 writes:

		 * MASK   DATA

		 * 000001 00000000 00000000                     set mask to R0

		 * 000010 11111111 00000000     R0 255, 0xFF00, set mask to G0

		 * 000100 00000000 00000000     G0 0,   0x0000, set mask to B0

		 * 001000 11111111 00000000     B0 255, 0xFF00, set mask to R1

		 * 010000 00000000 00000000     R1 0,   0x0000, set mask to G1

		 * 100000 11111111 00000000     G1 255, 0xFF00, set mask to B1

		 * 100000 11111111 00000000     B1 255, 0xFF00

		 *

		 * we will make a loop of 6 in which we prepare the mask,

		 * then write, then prepare the color for next write.

		 * first iteration will write mask only,

		 * but each next iteration color prepared in

		 * previous iteration will be written within new mask,

		 * the last component will written separately,

		 * mask is not changing between 6th and 7th write

		 * and color will be prepared by last iteration

		/* write color, color values mask in CRTC_TEST_PATTERN_MASK

		 * is B1, G1, R1, B0, G0, R0

			/* prepare color mask, first write PATTERN_DATA

			 * will have all zeros

 write color component */

			/* prepare next color component,

			 * will be written in the next iteration

		/* write last color component,

		 * it's been already prepared in the loop

 enable test pattern */

		/* increment for the first ramp for one color gradation

		 * 1 gradation for 6-bit color is 2^10

		 * gradations in 16-bit color

 enable test pattern */

 Cannot configure crc on a CRTC that is disabled */

 Program frame boundaries */

 Window A x axis start and end. */

 Window A y axis start and end. */

 Window B x axis start and end. */

 Window B y axis start and end. */

 Set crc mode and selection, and enable. Only using CRC0*/

 Early return if CRC is not enabled for this CRTC */

 used by enable_timing_synchronization. Not need for FPGA */

 used by enable_timing_synchronization. Not need for FPGA */

/* "Containter" vs. "pixel" is a concept within HW blocks, mostly those closer to the back-end. It works like this:

 *

 * - In most of the formats (RGB or YCbCr 4:4:4, 4:2:2 uncompressed and DSC 4:2:2 Simple) pixel rate is the same as

 *   containter rate.

 *

 * - In 4:2:0 (DSC or uncompressed) there are two pixels per container, hence the target container rate has to be

 *   halved to maintain the correct pixel rate.

 *

 * - Unlike 4:2:2 uncompressed, DSC 4:2:2 Native also has two pixels per container (this happens when DSC is applied

 *   to it) and has to be treated the same as 4:2:0, i.e. target containter rate has to be halved in this case as well.

 *

/*

* Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* begin *********************

 DCN */

 set field/register/bitfield name */

 NBIO */

 MMHUB */

/* macros to expend register list macro defined in HW object header file

		/* raven smu dones't allow 0 disp clk,

		 * smu min disp clk limit is 50Mhz

		 * keep min disp clk 100Mhz avoid smu hang

enable this by default after testing.*/

 TODO: un-hardcode*/

 Disable MPO in multi-display configurations. */

	/*

	 * Workaround: On DCN10 there is UMC issue that causes underflow when

	 * playing 4k video on 4k desktop with video downscaled and single channel

	 * memory

			/* Store first available for MST second display

			 * in daisy chain use case

	/*

	 * For CZ and later, we can allow DIG FE and BE to differ for all display types

 RV1 support max 4 pipes */

/*

 * Some architectures don't support soft-float (e.g. aarch64), on those

 * this function has to be called with hardfloat enabled, make sure not

 * to inline it so whatever fp stuff is done stays inside

 TODO how to handle 23.84? */

old sbios bug*/

	/*

	 * TODO fill in from actual raven resource when we create

	 * more than virtual encoder

	/*************************************************

	 *  Resource + asic cap harcoding                *

 max pipe num for ASIC before check pipe fuses */

1.4 w/a not applied by default*/

 Raven DP PHY HBR2 eye diagram pattern is not stable. Use TP4 */

 Color pipeline capabilities */

 RGAM on DCN1

 no post-blend color operations */

	/*************************************************

	 *  Create resources                             *

 todo: not reuse phy_pll registers */

 Other architectures we build for build this with soft-float */

	/*

	 * Right now SMU/PPLIB and DAL all have the AZ D3 force PME notification *

	 * implemented. So AZ D3 should work.For issue 197007.                   *

 index to valid pipe resource  */

 mem input -> ipp -> dpp -> opp -> TG */

		/* if pipe is disabled, skip instance of HW pipe,

		 * i.e, skip ASIC register instance

 check next valid pipe */

 valid pipe num */

	/* within dml lib, it is hard code to 4. If ASIC pipe is fused,

	 * the value may be changed

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

only print if OTG master is enabled

	/*

	 *  Mask Format

	 *  Bit 0 - 31: Status bit to clear

	 *

	 *  Mask = 0x0 means clear all status bits

	/*

	 *  Mask Format

	 *  Bit 0 - 15: Hardware block mask

	 *  Bit 15: 1 = Invariant Only, 0 = All

 Default, capture all, invariant only

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

****************************************/

 Constructor, Destructor               */

****************************************/

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* Autocal calculate the scaling ratio and initial phase and the

	 * DSCL_MODE_SEL must be set to 1

	/* Autocal perform auto centering without replication and the

	 * DSCL_MODE_SEL must be set to 0

	/* Autocal perform auto centering and auto replication and the

	 * DSCL_MODE_SEL must be set to 0

 10 bpc */

 8 bpc */

 6 bpc */

 12 bpc */

 Unsupported */

 DSCL is processing data in fixed format */

 Currently hardcoded on all ASICs before DCN 3.2 */

 LB */

 DSCL caps: pixel data processed in fixed format */

 Pixel depth stored in LB */

 Pixel expansion mode */

 Pixel reduction mode: Rounding */

 Dynamic expansion pixel depth */

 Dithering enable: Disabled */

 Interleave source enable */

 Alpha enable */

 DSCL caps: pixel data processed in float format */

 Interleave source enable */

 Alpha enable */

 should never happen, bug */

 Even tap coefficient (bits 1:0 fixed to 0) */

 Write/read control for even coefficient */

 Odd tap coefficient (bits 1:0 fixed to 0) */

 Write/read control for odd coefficient */

 Swap coefficient RAM and set chroma coefficient mode */

 Unsupported */

 +71 to ceil */

 +71 to ceil */

 +5 to ceil */

 420 mode: using 3rd mem from Y, Cr and Cb */

find first match configuration which meets the min required lb size*/

Ensure we can support the requested number of vtaps*/

 TODO: v_min */

 Black offsets */

	/*

	 * 0.24 format for fraction, first five bits zeroed

/**

 * dpp1_dscl_set_recout - Set the first pixel of RECOUT in the OTG active area

 *

 * @dpp: DPP data struct

 * @recount: Rectangle information

 *

 * This function sets the MPC RECOUT_START and RECOUT_SIZE registers based on

 * the values specified in the recount parameter.

 *

 * Note: This function only have effect if AutoCal is disabled.

 First pixel of RECOUT in the active OTG area */

 First line of RECOUT in the active OTG area */

 Number of RECOUT horizontal pixels */

 Number of RECOUT vertical lines */

/**

 * dpp1_dscl_set_scaler_manual_scale - Manually program scaler and line buffer

 *

 * @dpp_base: High level DPP struct

 * @scl_data: scalaer_data info

 *

 * This is the primary function to program scaler and line buffer in manual

 * scaling mode. To execute the required operations for manual scale, we need

 * to disable AutoCal first.

 Autocal off */

 Recout */

 MPC Size */

 Number of horizontal pixels of MPC */

 Number of vertical lines of MPC */

 SCL mode */

 LB */

 Black offsets */

 Manually calculate scale ratio and init values */

 HTaps/VTaps */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* TODOFPGA Figure out a proper number for max_retries polling for lock

	 * use 50 for now.

we need turn on clock before programming AFMT block*/

	/* poll dig_update_lock is not locked -> asic internal signal

	 * assume otg master lock will unlock it

/*		REG_WAIT(AFMT_VBI_PACKET_CONTROL, AFMT_GENERIC_LOCK_STATUS,

 check if HW reading GSP memory */

	/* HW does is not reading GSP memory not reading too long ->

	 * something wrong. clear GPS memory access and notify?

	 * hw SW is writing to GSP memory

 choose which generic packet to use */

	/* write generic packet header

	 * (4th byte is for GENERIC0 only)

	/* write generic packet contents

	 * (we never use last 4 bytes)

	 * there are 8 (0-7) mmDIG0_AFMT_GENERIC0_x registers

		/* enable transmission of packet(s) -

		 * packet transmission begins on the next frame

 send packet(s) every frame */

 select line number to send packets on */

 choose which generic packet control to use */

 invalid HW packet index */

 setup stream encoder in dp mode */

 asynchronous mode */

full range*/

bt709*/

the input timing is in VESA spec format with Interlace flag =1*/

 set pixel encoding */

				/* HW testing only, no use case yet.

				 * Color depth of Y-only could be

				 * 8, 10, 12, 16 bits

		/* Note: DP_MSA_MISC1 bit 7 is the indicator

		 * of Y-only mode.

		 * This bit is set in HW if register

		 * DP_PIXEL_ENCODING is programmed to 0x4

	/* For YCbCr420 and BT2020 Colorimetry Formats, VSC SDP shall be used.

	 * When MISC1, bit 6, is Set to 1, a Source device uses a VSC SDP to indicate the

	 * Pixel Encoding/Colorimetry Format and that a Sink device shall ignore MISC1, bit 7,

	 * and MISC0, bits 7:1 (MISC1, bit 7, and MISC0, bits 7:1, become "don't care").

 set color depth */

 Set DP pixel encoding and component depth */

 set dynamic range and YCbCr range */

 bit7 = 0*/

full range*/

 bit3=1 */

 bit7 = 0*/

limited range*/

 bit3=1, bit4=0 */

 bit7 = 0*/

bt601*/

 bit2=0, bit1=1 */

 bit2=1, bit1=0 */

 bit3=1, bit4=1 */

 bit7 = 0*/

bt709*/

 bit2=0, bit1=1 */

 bit2=1, bit1=0 */

limited range*/

 do nothing */

 MSA_MISC1 */

	/* dcn new register

	 * dc_crtc_timing is vesa dmt struct. data from edid

	/* calculate from vesa timing parameters

	 * h_active_start related to leading edge of sync

 start at beginning of left border */

 start at beginning of left border */

 HWDITH include border or overscan */

 setup stream encoder in hdmi mode */

 setup HDMI engine */

		/* enable HDMI data scrambler

		 * HDMI_CLOCK_CHANNEL_RATE_MORE_340M

		 * Clock channel frequency is 1/4 of character rate.

 TODO: New feature for DCE11, still need to implement */

		/* enable HDMI data scrambler

		 * HDMI_CLOCK_CHANNEL_FREQ_EQUAL_TO_CHAR_RATE

		 * Clock channel frequency is the same

		 * as character rate

 following belongs to audio */

 setup stream encoder in dvi mode */

 If y rounds up to integer, carry it over to x.

 wait for update to be completed on the link */

 i.e. DP_MSE_RATE_UPDATE_PENDING field (read only) */

 is reset to 0 (not pending) */

 for bring up, disable dp double  TODO */

 stop generic packets 0 & 1 on HDMI */

 stop generic packets 2 & 3 on HDMI */

 stop generic packets 2 & 3 on HDMI */

 packetIndex */

	/* VSC SDP at packetIndex 1 is used by PSR in DMCUB FW.

	 * Note that the enablement of GSP1 is not done below,

	 * it's done in FW.

 packetIndex */

 packetIndex */

 packetIndex */

	/* packetIndex 4 is used for send immediate sdp message, and please

	 * use other packetIndex (such as 5,6) for other info packet

	/* enable/disable transmission of packet(s).

	 * If enabled, packet transmission begins on the next frame

	/* This bit is the master enable bit.

	 * When enabling secondary stream engine,

	 * this master bit must also be set.

	 * This register shared with audio info frame.

	 * Therefore we need to enable master bit

	 * if at least on of the fields is not 0

	/* TODOFPGA Figure out a proper number for max_retries polling for lock

	 * use 50 for now.

 check if GSP4 is transmitted */

 disable GSP4 transmitting */

 transmit GSP4 at the earliest time in a frame */

we need turn on clock before programming AFMT block*/

 check if HW reading GSP memory */

	/* HW does is not reading GSP memory not reading too long ->

	 * something wrong. clear GPS memory access and notify?

	 * hw SW is writing to GSP memory

 use generic packet 4 for immediate sdp message */

	/* write generic packet header

	 * (4th byte is for GENERIC0 only)

	/* write generic packet contents

	 * (we never use last 4 bytes)

	 * there are 8 (0-7) mmDIG0_AFMT_GENERIC0_x registers

	/* check whether GENERIC4 registers double buffer update in immediate mode

	 * is pending

	/* atomically update double-buffered GENERIC4 registers in immediate mode

	 * (update immediately)

 enable GSP4 transmitting */

	/* This bit is the master enable bit.

	 * When enabling secondary stream engine,

	 * this master bit must also be set.

	 * This register shared with audio info frame.

	 * Therefore we need to enable master bit

	 * if at least on of the fields is not 0

 stop generic packets on DP */

	/* this register shared with audio info frame.

	 * therefore we need to keep master enabled

	/* Note: For CZ, we are changing driver default to disable

	 * stream deferred to next VBLANK. If results are positive, we

	 * will make the same change to all DCE versions. There are a

	 * handful of panels that cannot handle disable stream at

	 * HBLANK and will result in a white line flash across the

	 * screen on stream disable.

stream not enabled*/

	/* Specify the video stream disable point

	 * (2 = start of the next vertical blank)

	/* Larger delay to wait until VBLANK - use max retry of

	 * 10us*10200=102ms. This covers 100.0ms of minimum 10 Hz mode +

	 * a little more because we may not trust delay accuracy.

 disable DP stream */

	/* the encoder stops sending the video stream

	 * at the start of the vertical blanking.

	 * Poll for DP_VID_STREAM_STATUS == 0

	/* Tell the DP encoder to ignore timing from CRTC, must be done after

	 * the polling. If we set DP_STEER_FIFO_RESET before DP stream blank is

	 * complete, stream status will be stuck in video stream enabled state,

	 * i.e. DP_VID_STREAM_STATUS stuck at 1.

 output video stream to link encoder */

 YCbCr 4:2:0 : Computed VID_M will be 2X the input rate */

this param->pixel_clk_khz is half of 444 rate for 420 already*/

		/* M / N = Fstream / Flink

		 * m_vid / n_vid = pixel rate / link rate

 enable auto measurement */

		/* auto measurement need 1 full 0x8000 symbol cycle to kick in,

		 * therefore program initial value for Mvid and Nvid

 set DIG_START to 0x1 to resync FIFO */

 switch DP encoder to CRTC data */

	/* wait 100us for DIG/DP logic to prime

	 * (i.e. a few video lines)

	/* the hardware would start sending video at the start of the next DP

	 * frame (i.e. rising edge of the vblank).

	 * NOTE: We used to program DP_VID_STREAM_DIS_DEFER = 2 here, but this

	 * register has no effect on enable transition! HW always guarantees

	 * VID_STREAM enable at start of next frame, and this is not

	 * programmable

 25.2MHz/1.001*/

 25.2MHz/1.001*/

 25.2MHz*/

 27MHz */

 27MHz*1.001*/

 27MHz*1.001*/

 54MHz*/

 54MHz*1.001*/

 74.25MHz/1.001*/

 74.25MHz*/

 148.5MHz/1.001*/

 148.5MHz*/

 these are one to one */

	/* if Rear Left and Right exist move RC speaker to channel 7

	 * otherwise to channel 5

 FRONT Left Right Center and REAR Left Right Center are exclusive */

 search for exact pixel clock in table */

 not match */

 match found */

 not found */

	/* See HDMI spec  the table entry under

 This should not happen.it does so we don't get BSOD*/

 setup the audio stream source select (audio -> dig mapping) */

 Channel allocation */

 HDMI_AUDIO_PACKET_CONTROL */

 AFMT_AUDIO_PACKET_CONTROL */

 AFMT_AUDIO_PACKET_CONTROL2 */

 HDMI_ACR_PACKET_CONTROL */

 Program audio clock sample/regeneration parameters */

 HDMI_ACR_32_0__HDMI_ACR_CTS_32_MASK */

 HDMI_ACR_32_1__HDMI_ACR_N_32_MASK */

 HDMI_ACR_44_0__HDMI_ACR_CTS_44_MASK */

 HDMI_ACR_44_1__HDMI_ACR_N_44_MASK */

 HDMI_ACR_48_0__HDMI_ACR_CTS_48_MASK */

 HDMI_ACR_48_1__HDMI_ACR_N_48_MASK */

	/* Video driver cannot know in advance which sample rate will

	 * be used by HD Audio driver

	 * HDMI_ACR_PACKET_CONTROL__HDMI_ACR_N_MULTIPLE field is

	 * programmed below in interruppt callback

	/* AFMT_60958_0__AFMT_60958_CS_CHANNEL_NUMBER_L_MASK &

	 * AFMT_60958_0__AFMT_60958_CS_CLOCK_ACCURACY_MASK

 AFMT_60958_1 AFMT_60958_CS_CHALNNEL_NUMBER_R */

	/* AFMT_60958_2 now keep this settings until

	 * Programming guide comes out

 --- DP Audio packet configurations --- */

 ATP Configuration */

 Async/auto-calc timestamp mode */

	/* --- The following are the registers

	 *  copied from the SetupHDMI ---

 AFMT_AUDIO_PACKET_CONTROL */

 AFMT_AUDIO_PACKET_CONTROL2 */

 Program the ATP and AIP next */

 AFMT_INFOFRAME_CONTROL0 */

 AFMT_60958_0__AFMT_60958_CS_CLOCK_ACCURACY_MASK */

 DCE8/10 does not have this register */

	/* wait for AFMT clock to turn on,

	 * expectation: this should complete in 1-2 reads

	 *

	 * REG_WAIT(AFMT_CNTL, AFMT_AUDIO_CLOCK_ON, !!enable, 1, 10);

	 *

	 * TODO: wait for clock_on does not work well. May need HW

	 * program sequence. But audio seems work normally even without wait

	 * for clock_on status change

 Enable Audio packets */

 Program the ATP and AIP next */

 Program STREAM_ENABLE after all the other enables. */

 Disable Audio packets */

	/* This register shared with encoder info frame. Therefore we need to

	 * keep master enabled if at least on of the fields is not 0

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* Autocal calculate the scaling ratio and initial phase and the

	 * DSCL_MODE_SEL must be set to 1

	/* Autocal perform auto centering without replication and the

	 * DSCL_MODE_SEL must be set to 0

	/* Autocal perform auto centering and auto replication and the

	 * DSCL_MODE_SEL must be set to 0

 Bypass if type is bypass or hw */

	/* determine which CSC matrix (ocsc or comb) we are using

	 * currently.  select the alternate set to double buffer

	 * the CSC update so CSC is updated on frame boundary

program re gamma RAM A*/

program re gamma RAM B*/

	/* determine which CSC matrix (icsc or coma) we are using

	 * currently.  select the alternate set to double buffer

	 * the CSC update so CSC is updated on frame boundary

keep here for now, decide multi dce support later

program de gamma RAM B*/

program de gamma RAM A*/

 Setting de gamma bypass for now */

 Input pixel format: ARGB8888 */

 Zero expansion */

 COLOR_KEYER_CONTROL.COLOR_KEYER_EN = 0 this should be default */

 Setting degamma bypass for now */

 1 => IGAM_RAMA, 3 => IGAM_RAMA & DGAM_ROMA, 4 => IGAM_RAMA & DGAM_ROMB

 2 => IGAM_RAMB, 5 => IGAM_RAMB & DGAM_ROMA, 6 => IGAM_RAMB & DGAM_ROMB

/*

 * Input gamma LUT currently supports 256 values only. This means input color

 * can have a maximum of 8 bits per channel (= 256 possible values) in order to

 * have a one-to-one mapping with the LUT. Truncation will occur with color

 * values greater than 8 bits.

 *

 * In the future, this function should support additional input gamma methods,

 * such as piecewise linear mapping, and input gamma bypass.

 Power on LUT memory.

 Determine whether to use RAM A or RAM B

 RW mode is 256-entry LUT

 IGAM Input format should be 8 bits per channel.

 Do not mask any R,G,B values

 LUT-256, unsigned, integer, new u0.12 format

 Start at index 0 of IGAM LUT

 Power off LUT memory

 Enable IGAM LUT on ram we just wrote to. 2 => RAMA, 3 => RAMB

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* corner_points[0] - beginning base, slope offset for R,G,B

	 * corner_points[1] - end base, slope offset for R,G,B

 driver uses 32 regions or less, but DCN HW has 34, extra 2 are set to 0 */

		/* 32 segments

		 * segments are from 2^-25 to 2^7

		/* 11 segments

		 * segment is from 2^-10 to 2^1

		 * There are less than 256 points, for optimization

 last point */

 All 3 color channels have same x

	/* see comment above, m_arrPoints[1].y should be the Y value for the

	 * region end (m_numOfHwPoints), not last HW point(m_numOfHwPoints - 1)

		/* for PQ, we want to have a straight line from last HW X point,

		 * and the slope to be such that we hit 1.0 at 10000 nits.

	/* 12 segments

	 * segments are from 2^-12 to 0

 last point */

	/* see comment above, m_arrPoints[1].y should be the Y value for the

	 * region end (m_numOfHwPoints), not last HW point(m_numOfHwPoints - 1)

		/* for PQ, we want to have a straight line from last HW X point,

		 * and the slope to be such that we hit 1.0 at 10000 nits.

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

************ FORMATTER ************/

/**

 *	set_truncation

 *	1) set truncation depth: 0 for 18 bpp or 1 for 24 bpp

 *	2) enable truncation

 *	3) HW remove 12bit FMT support for DCE11 power saving reason.

Disable spatial (random) dithering*/

 only use FRAME_COUNTER_MAX if frameRandom == 1*/

	/*Set seed for random values for

	/* FMT_OFFSET_R_Cr  31:16 0x0 Setting the zero

	 * offset for the R/Cr channel, lower 4LSB

	 * is forced to zeros. Typically set to 0

	 * RGB and 0x80000 YCbCr.

	/* FMT_OFFSET_G_Y   31:16 0x0 Setting the zero

	 * offset for the G/Y  channel, lower 4LSB is

	 * forced to zeros. Typically set to 0 RGB

	 * and 0x80000 YCbCr.

	/* FMT_OFFSET_B_Cb  31:16 0x0 Setting the zero

	 * offset for the B/Cb channel, lower 4LSB is

	 * forced to zeros. Typically set to 0 RGB and

	 * 0x80000 YCbCr.

Enable spatial dithering*/

			/* Set spatial dithering mode

			 * (default is Seed patterrn AAAA...)

Set spatial dithering bit depth*/

Disable High pass filter*/

Reset only at startup*/

Set RGB data dithered with x^28+x^3+1*/

	/* TODO

	 * set_temporal_dither(oppn10, params);

/**

 *	set_pixel_encoding

 *

 *	Set Pixel Encoding

 *		0: RGB 4:4:4 or YCbCr 4:4:4 or YOnly

 *		1: YCbCr 4:2:2

/**

 *	Set Clamping

 *	1) Set clamping format based on bpc - 0 for 6bpc (No clamping)

 *		1 for 8 bpc

 *		2 for 10 bpc

 *		3 for 12 bpc

 *		7 for programable

 *	2) Enable clamp if Limited range requested

 TODO */

00 - 10-bit -> 12-bit dynamic expansion*/

01 - 8-bit  -> 12-bit dynamic expansion*/

otherwise last two bits are zero*/

	/* dithering is affected by <CrtcSourceSelect>, hence should be

 TODO: confirm computation of space2_size */

 TODO: for which cases should FMT_STEREOSYNC_OVERRIDE be set? */

	/* Program OPPBUF_3D_VACT_SPACE1_SIZE and OPPBUF_VACT_SPACE2_SIZE registers

	 * In 3D progressive frames, Vactive space happens only in between the 2 frames,

	 * so only need to program OPPBUF_3D_VACT_SPACE1_SIZE

	 * In 3D alternative frames, left and right frames, top and bottom field.

 TODO: Is programming of OPPBUF_DUMMY_DATA_R/G/B needed? */

	/*

	REG_UPDATE(OPPBUF_3D_PARAMETERS_0,

			OPPBUF_DUMMY_DATA_R, data_r);

	REG_UPDATE(OPPBUF_3D_PARAMETERS_1,

			OPPBUF_DUMMY_DATA_G, data_g);

	REG_UPDATE(OPPBUF_3D_PARAMETERS_1,

			OPPBUF_DUMMY_DATA_B, _data_b);

 Program the oppbuf active width to be the frame width from mpc */

	/* Specifies the number of segments in multi-segment mode (DP-MSO operation)

	 * description  "In 1/2/4 segment mode, specifies the horizontal active width in pixels of the display panel.

	 * In 4 segment split left/right mode, specifies the horizontal 1/2 active width in pixels of the display panel.

	 * Used to determine segment boundaries in multi-segment mode. Used to determine the width of the vertical active space in 3D frame packed modes.

	 * OPPBUF_ACTIVE_WIDTH must be integer divisible by the total number of segments."

 description  "Specifies the number of overlap pixels (1-8 overlapping pixels supported), used in multi-segment mode (DP-MSO operation)" */

	/* description  "Specifies the number of times a pixel is replicated (0-15 pixel replications supported).

	 * A value of 0 disables replication. The total number of times a pixel is output is OPPBUF_PIXEL_REPETITION + 1."

 Controls the number of padded pixels at the end of a segment */

****************************************/

 Constructor, Destructor               */

****************************************/

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* Autocal calculate the scaling ratio and initial phase and the

	 * DSCL_MODE_SEL must be set to 1

	/* Autocal perform auto centering without replication and the

	 * DSCL_MODE_SEL must be set to 0

	/* Autocal perform auto centering and auto replication and the

	 * DSCL_MODE_SEL must be set to 0

 Program gamut remap in bypass mode */

 Gamut remap in bypass */

 Some ASICs does not support  FP16 scaling, so we reject modes require this*/

 TODO: add lb check */

 No support for programming ratio of 4, drop to 3.99999.. */

 Set default taps if none are provided */

 Only 1 and even h_taps_c are supported by hw */

when output is float then FORMAT_CONTROL__OUTPUT_FP=1*/

 ARGB16161616_UNORM */

 Set default color space based on format if none is given. */

 if input adjustments exist, program icsc with those values

 todo: clarify what to program these to */

 Cursor width/height and hotspots need to be rotated for offset calculation

 not visible beyond right edge*/

 not visible beyond left edge*/

 not visible beyond bottom edge*/

 not visible beyond top edge*/

****************************************/

 Constructor, Destructor               */

****************************************/

0x1404*/

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/*

	 * DCHUBBUB_ARB_ALLOW_SELF_REFRESH_FORCE_ENABLE = 1 means do not allow stutter

	 * DCHUBBUB_ARB_ALLOW_SELF_REFRESH_FORCE_ENABLE = 0 means allow stutter

	/* pstate latency is ~20us so if we wait over 40us and pstate allow

	 * still not asserted, we are probably stuck and going to hang

	 *

	 * TODO: Figure out why it takes ~100us on linux

	 * pstate takes around ~100us (up to 200us) on linux. Unknown currently

	 * as to why it takes that long on linux

 data collection */

 help with revert wa */

		/* we hacked to force pstate allow to prevent hang last time

		 * we verify_allow_pstate_change_high.  so disable force

		 * here so we can check status

	/* The following table only applies to DCN1 and DCN2,

	 * for newer DCNs, need to consult with HW IP folks to read RTL

	 * HUBBUB:DCHUBBUB_TEST_ARB_DEBUG10 DCHUBBUBDEBUGIND:0xB

	 * description

	 * 0:     Pipe0 Plane0 Allow Pstate Change

	 * 1:     Pipe0 Plane1 Allow Pstate Change

	 * 2:     Pipe0 Cursor0 Allow Pstate Change

	 * 3:     Pipe0 Cursor1 Allow Pstate Change

	 * 4:     Pipe1 Plane0 Allow Pstate Change

	 * 5:     Pipe1 Plane1 Allow Pstate Change

	 * 6:     Pipe1 Cursor0 Allow Pstate Change

	 * 7:     Pipe1 Cursor1 Allow Pstate Change

	 * 8:     Pipe2 Plane0 Allow Pstate Change

	 * 9:     Pipe2 Plane1 Allow Pstate Change

	 * 10:    Pipe2 Cursor0 Allow Pstate Change

	 * 11:    Pipe2 Cursor1 Allow Pstate Change

	 * 12:    Pipe3 Plane0 Allow Pstate Change

	 * 13:    Pipe3 Plane1 Allow Pstate Change

	 * 14:    Pipe3 Cursor0 Allow Pstate Change

	 * 15:    Pipe3 Cursor1 Allow Pstate Change

	 * 16:    Pipe4 Plane0 Allow Pstate Change

	 * 17:    Pipe4 Plane1 Allow Pstate Change

	 * 18:    Pipe4 Cursor0 Allow Pstate Change

	 * 19:    Pipe4 Cursor1 Allow Pstate Change

	 * 20:    Pipe5 Plane0 Allow Pstate Change

	 * 21:    Pipe5 Plane1 Allow Pstate Change

	 * 22:    Pipe5 Cursor0 Allow Pstate Change

	 * 23:    Pipe5 Cursor1 Allow Pstate Change

	 * 24:    Pipe6 Plane0 Allow Pstate Change

	 * 25:    Pipe6 Plane1 Allow Pstate Change

	 * 26:    Pipe6 Cursor0 Allow Pstate Change

	 * 27:    Pipe6 Cursor1 Allow Pstate Change

	 * 28:    WB0 Allow Pstate Change

	 * 29:    WB1 Allow Pstate Change

	 * 30:    Arbiter's allow_pstate_change

	 * 31:    SOC pstate change request

	/* force pstate allow to prevent system hang

	 * and break to debugger to investigate

 Repeat for water mark set A, B, C and D. */

 clock state A */

 clock state B */

 clock state C */

 clock state D */

 clock state A */

 clock state B */

 clock state C */

 clock state D */

 clock state A */

 clock state B */

 clock state C */

 clock state D */

	/*

	 * Need to clamp to max of the register values (i.e. no wrap)

	 * for dcn1, all wm registers are 21-bit wide

should not come here*/

 TODO: port code from dal2 */

For ZFB case need to put DCHUB FB BASE and TOP upside down to indicate ZFB mode*/

Should not touch FB LOCATION (done by VBIOS on AsicInit table)*/

Should not touch FB LOCATION (done by VBIOS on AsicInit table)*/

 DML: get_bytes_per_element */

 copied from DML.  might want to refactor DML to leverage from DML */

 DML : get_blk256_size */

 164KB for DCN1.0 */

 full 256B request */

 half 128b request */

 full 256B request */

 half 128b request */

 implement section 1.6.2.1 of DCN1_Programming_Guide.docx */

 access_dir not known, must use most constraining */

			/* reg128 is true for either horz and vert

			 * but segment_order is contiguous

/*

 * Copyright 2012-17 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 we only support 1 adapter currently */

 disable first. */

 disable power gating */

 disable CNV */

 disable WB */

 soft reset */

 enable power gating */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 find bottommost mpcc. */

 mpc color is 12 bit.  tg_color is 10 bit */

	/* todo: might want to use 16 bit to represent color and have each

	 * hw block translate to correct color depth.

/*

 * Insert DPP into MPC tree based on specified blending position.

 * Only used for planes that are part of blending chain for OPP output

 *

 * Parameters:

 * [in/out] mpc		- MPC context.

 * [in/out] tree	- MPC tree structure that plane will be added to.

 * [in]	blnd_cfg	- MPCC blending configuration for the new blending layer.

 * [in]	sm_cfg		- MPCC stereo mix configuration for the new blending layer.

 *			  stereo mix must disable for the very bottom layer of the tree config.

 * [in]	insert_above_mpcc - Insert new plane above this MPCC.  If NULL, insert as bottom plane.

 * [in]	dpp_id		- DPP instance for the plane to be added.

 * [in]	mpcc_id		- The MPCC physical instance to use for blending.

 *

 * Return:  struct mpcc* - MPCC that was added.

 sanity check parameters */

 check insert_above_mpcc exist in tree->opp_list */

 Get and update MPCC struct parameters */

 program mux and MPCC_MODE */

 Configure VUPDATE lock set for this MPCC to map to the OPP */

 update mpc tree mux setting */

 insert the toppest mpcc */

 find insert position */

 update the blending configuration */

 update the stereo mix settings, if provided */

 mark this mpcc as in use */

/*

 * Remove a specified MPCC from the MPC tree.

 *

 * Parameters:

 * [in/out] mpc		- MPC context.

 * [in/out] tree	- MPC tree structure that plane will be removed from.

 * [in/out] mpcc	- MPCC to be removed from tree.

 *

 * Return:  void

 remove MPCC from top of tree */

 set the next MPCC in list to be the top MPCC */

 there are no other MPCC is list */

 find mpcc to remove MPCC list */

 remove MPCC in middle of list */

 remove MPCC from bottom of list */

 turn off MPCC mux registers */

 mark this mpcc as not in use */

 In case of resume from S3/S4, remove mpcc from bios left over */

/*

 * Reset the MPCC HW status by disconnecting all muxes.

 *

 * Parameters:

 * [in/out] mpc		- MPC context.

 *

 * Return:  void

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * @brief

 * Trigger Source Select

 * ASIC-dependent, actual values for register programming

	/* This register resides in DP back end block;

	 * transmitter is used for the offset

	/* This register resides in DP back end block;

	 * transmitter is used for the offset

	/* This register resides in DP back end block;

	 * transmitter is used for the offset

	/* This register resides in DP back end block;

	 * transmitter is used for the offset

	/* This register resides in DP back end block;

	 * transmitter is used for the offset

 Disable PHY Bypass mode to setup the test pattern */

	/* For 10-bit PRBS or debug symbols

	 * please use the following sequence:

	 *

	 * Enable debug symbols on the lanes

 Disable PRBS mode */

 Program debug symbols to be output */

 Enable phy bypass mode to enable the test pattern */

	/* This register resides in DP back end block;

	 * transmitter is used for the offset

 Write Training Pattern */

 Set HW Register Training Complete to false */

 Disable PHY Bypass mode to output Training Pattern */

 Disable PRBS mode */

 Disable PHY Bypass mode to setup the test pattern */

 program correct panel mode*/

 A PRBS23 pattern is used for most DP electrical measurements. */

 Enable PRBS symbols on the lanes */

 For PRBS23 Set bit DPHY_PRBS_SEL=1 and Set bit DPHY_PRBS_EN=1 */

 Enable phy bypass mode to enable the test pattern */

 Disable PHY Bypass mode to setup the test pattern */

 A PRBS7 pattern is used for most DP electrical measurements. */

 Enable PRBS symbols on the lanes */

 For PRBS7 Set bit DPHY_PRBS_SEL=0 and Set bit DPHY_PRBS_EN=1 */

 Enable phy bypass mode to enable the test pattern */

 Disable PHY Bypass mode to setup the test pattern */

 Enable debug symbols on the lanes */

 Enable PHY bypass mode to enable the test pattern */

 TODO is it really needed ? */

 Program 80 bit custom pattern */

 Enable phy bypass mode to enable the test pattern */

	/* previously there is a register DP_HBR2_EYE_PATTERN

	 * that is enabled to get the pattern.

	 * But it does not work with the latest spec change,

	 * so we are programming the following registers manually.

	 *

	 * The following settings have been confirmed

	 * by Nick Chorney and Sandra Liu

 Disable PHY Bypass mode to setup the test pattern */

 Setup DIG encoder in DP SST mode */

 ensure normal panel mode. */

	/* no vbid after BS (SR)

	 * DP_LINK_FRAMING_CNTL changed history Sandra Liu

	 * 11000260 / 11000104 / 110000FC

 swap every BS with SR */

 select cp2520 patterns */

 pre-DCE11 can only generate CP2520 pattern 2 */

 set link training complete */

 disable video stream */

 Disable PHY Bypass mode to setup the test pattern */

 program correct panel mode */

	/* restore LINK_FRAMING_CNTL and DPHY_SCRAMBLER_BS_COUNT

	 * in case we were doing HBR2 compliance pattern before

 set link training complete */

 Disable PHY Bypass mode to setup the test pattern */

 Disable PRBS mode */

 return value is bit-vector */

 invalid source select DIG

 set number of lanes */

 setup scrambler */

		/*In DCE 11, we are able to pre-program a Force SR register

		 * to be able to trigger SR symbol after 5 idle patterns

		 * transmitted. Upon PSR Exit, DMCU can trigger

		 * DPHY_LOAD_BS_COUNT_START = 1. Upon writing 1 to

		 * DPHY_LOAD_BS_COUNT_START and the internal counter

		 * reaches DPHY_LOAD_BS_COUNT, the next BS symbol will be

		 * replaced by SR symbol once.

 reset training pattern */

 reset training complete */

 reset panel mode */

 Associate HPD with DIG_BE */

	/* This handles the case of HDMI downgrade to DVI we don't want to

	 * we don't want to cap the pixel clock if the DDI is not DVI.

 DVI only support RGB pixel encoding */

connect DVI via adpater's HDMI connector*/

 DVI supports 6/8bpp single-link and 10/16bpp dual-link */

 check pixel clock against edid specified max TMDS clk

 DCE11 HW does not support 420 */

	/* set the flag to indicate whether driver poll the I2C data pin

	 * while doing the DP sink detect

/*	if (dal_adapter_service_is_feature_supported(as,

		FEATURE_DP_SINK_DETECT_POLL_DATA_PIN))

		enc10->base.features.flags.bits.

	/* For DCE 8.0 and 8.1, by design, UNIPHY is hardwired to DIG_BE.

	 * SW always assign DIG_FE 1:1 mapped to DIG_FE for non-MST UNIPHY.

	 * SW assign DIG_FE to non-MST UNIPHY first and MST last. So prefer

	 * DIG is per UNIPHY and used by SST DP, eDP, HDMI, DVI and LVDS.

	 * Prefer DIG assignment is decided by board design.

	 * For DCE 8.0, there are only max 6 UNIPHYs, we assume board design

	 * and VBIOS will filter out 7 UNIPHY for DCE 8.0.

	 * By this, adding DIGG should not hurt DCE 8.0.

	 * This will let DCE 8.1 share DCE 8.0 as much as possible

 default to one to mirror Windows behavior */

 Override features with DCE-specific values */

if SCDC (340-600MHz) is disabled, set to HDMI 1.4 timing limit

	/* reinitialize HPD.

	 * hpd_initialize() will pass DIG_FE id to HW context.

	 * All other routine within HW context will use fe_engine_offset

	 * as DIG_FE id even caller pass DIG_FE id.

	 * So this routine must be called first.

 DP SST */

 LVDS */

 TMDS-DVI */

 TMDS-HDMI */

 DP MST */

 invalid mode ! */

 TODO: still need depth or just pass in adjusted pixel clock? */

 Enable the PHY */

 enables DP PHY output */

 Enable the PHY */

	/* number_of_lanes is used for pixel clock adjust,

	 * but it's not passed to asic_control.

	 * We need to set number of lanes manually.

 TODO: check if undefined works */

 enables DP PHY output in MST mode */

 Enable the PHY */

	/* number_of_lanes is used for pixel clock adjust,

	 * but it's not passed to asic_control.

	 * We need to set number of lanes manually.

 TODO: check if undefined works */

/*

 * @brief

 * Disable transmitter and its encoder

 OF_SKIP_POWER_DOWN_INACTIVE_ENCODER */

	/*in DP_Alt_No_Connect case, we turn off the dig already,

	/* Power-down RX and disable GPU PHY should be paired.

	 * Disabling PHY without powering down RX may cause

	 * symbol lock loss, on which we will get DP Sink interrupt.

	/* There is a case for the DP active dongles

	 * where we want to disable the PHY but keep RX powered,

	 * for those we need to ignore DP Sink interrupt

	 * by checking lane count that has been set

	 * on the last do_enable_output().

 disable transmitter */

 disable encoder */

 translate lane settings */

 post cursor 2 setting only applies to HBR2 link rate */

			/* this is passed to VBIOS

			 * to program post cursor 2 level

 call VBIOS table to set voltage swing and pre-emphasis */

 set DP PHY test and training patterns */

 invalid phy pattern */

 programs DP MST VC payload allocation */

 For CZ, there are only 3 pipes. So Virtual channel is up 3.*/

	/* --- Set MSE Stream Attribute -

	 * Setup VC Payload Table on Tx Side,

	 * Issue allocation change trigger

	 * to commit payload on both tx and rx side

 we should clean-up table each time */

 --- wait for transaction finish */

	/* send allocation change trigger (ACT) ?

	 * this step first sends the ACT,

	 * then double buffers the SAT into the hardware

	 * making the new allocation active on the DP MST mode link

	/* DP_MSE_SAT_UPDATE:

	 * 0 - No Action

	 * 1 - Update SAT with trigger

	 * 2 - Update SAT without trigger

	/* wait for update to complete

	 * (i.e. DP_MSE_SAT_UPDATE field is reset to 0)

	 * then wait for the transmission

	 * of at least 16 MTP headers on immediate local link.

	 * i.e. DP_MSE_16_MTP_KEEPOUT field (read only) is reset to 0

	 * a value of 1 indicates that DP MST mode

	 * is in the 16 MTP keepout region after a VC has been added.

	 * MST stream bandwidth (VC rate) can be configured

	 * after this bit is cleared

 bit field DP_MSE_SAT_UPDATE is set to 1 already */

 1/4 window (the maximum allowed) */

 Set Default link settings */

 Higher link settings based on feature supported */

 SPDX-License-Identifier: MIT

/*

 * Copyright (C) 2021 Advanced Micro Devices, Inc.

 *

 * Authors: AMD

 SPDX-License-Identifier: MIT

/*

 * Copyright (C) 2021 Advanced Micro Devices, Inc.

 *

 * Authors: AMD

DCN303 removes PG registers*/

DCN303 removes PG registers*/

DCN303 removes PG registers*/

DCN303 removes PG registers*/

 SPDX-License-Identifier: MIT

/*

 * Copyright (C) 2021 Advanced Micro Devices, Inc.

 *

 * Authors: AMD

 ?

 ?

 ?

 writeback_line_buffer_buffer_size = 656640

 SRExitTime

 TODO: set this to actual min DCFCLK */

 ?

 ?

 ?

upto 8K*/

 -1 = disable,

 -1 = disable

 NBIO */

 DCN */

 Mapping of VPG, AFMT, DME register blocks to DIO block instance */

 Update size of array since we "removed" duplicates */

 Calculate optimal dcfclk for each uclk */

 Calculate optimal uclk for each dcfclk sta target */

 create the final dcfclk and uclk table */

 Fill all states with max values of all other clocks */

 Populate from bw_params for DTBCLK, SOCCLK */

 These clocks cannot come from bw_params, always fill from dcn3_03_soc[1] */

 FCLK, PHYCLK_D18, DSCCLK */

 WA: patch strobe modes to compensate for DCN303 BW issue

 re-init DML with updated bb */

	/*************************************************

	 *  Resource + asic cap harcoding                *

1.4 w/a applied by derfault*/

 total size = mall per channel * num channels * 1024 * 1024 */

 Color pipeline capabilities */

 must use gamma_corr

 no OGAM ROM on DCN3

3

 Init the vm_helper

	/*************************************************

	 *  Create resources                             *

 Clock Sources for Pixel Clock*/

 todo: not reuse phy_pll registers */

 DCCG */

 PP Lib and SMU interfaces */

 DML */

 IRQ */

 HUBBUB */

 HUBPs, DPPs, OPPs and TGs */

 PSR */

 ABM */

 MPC and DSC */

 DWB and MMHUBBUB */

 AUX and I2C */

 Audio, Stream Encoders including HPO and virtual, MPC 3D LUTs */

 HW Sequencer and Plane caps */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 S2D13 value in [-3.00...0.9999] */

/*

 * convert_float_matrix - This converts a double into HW register spec defined format S2D13.

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Add a case to switch */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Container must be non-zero size*/

 Container must be non-zero size*/

	/* If caller didn't supply initial value then the default

	 * of all zeros is expected, which is exactly what dal_alloc()

 create new vector */

		/* when count is 0 we still want to create clone of the vector

		/* Call "presized create" version, independently of how the

		 * original vector was created.

		 * The owner of original vector must know how to treat the new

		 * vector - as "presized" or as "regular".

 no initial value */

 copy vector's data */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * @brief

 * result = dividend / divisor

 * *remainder = dividend % divisor

 determine integer part */

 determine fractional part */

 round up LSB */

	/*

	 * @note

	 * Good idea to use Newton's method

 TODO implement argument normalization */

/*

 * @brief

 * result = exp(arg),

 * where abs(arg) < 1

 *

 * Calculated as Taylor series.

 TODO find correct res */

	/*

	 * @brief

	 * Main equation is:

	 * exp(x) = exp(r + m * ln(2)) = (1 << m) * exp(r),

	 * where m = round(x / ln(2)), r = x - m * ln(2)

 TODO improve 1st estimation */

 TODO if arg is negative, return NaN */

 TODO if arg is zero, return -INF */

 TODO determine max_allowed_error based on quality of exp() */

/* this function is a generic helper to translate fixed point value to

 * specified integer format that will consist of integer_bits integer part and

 * fractional_bits fractional part. For example it is used in

 * dc_fixpt_u2d19 to receive 2 bits integer part and 19 bits fractional

 * part in 32 bits. It is used in hw programming (scaler)

 1. create mask of integer part */

 2. mask out fractional part */

 3. shrink fixed point integer part to be of integer_bits width*/

 4. make space for fractional part to be filled in after integer */

 5. shrink fixed point fractional part to of fractional_bits width*/

 6. merge the result */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Only if CRTC is enabled and counter is moving we wait for one frame. */

 Resetting LB on VBlank */

 Resetting LB on VBlank */

 HW needs to do power measurement comparison. */

FBC_MIN_COMPRESSION 0 ==> 2:1 */

                    1 ==> 4:1 */

                    2 ==> 8:1 */

                  0xF ==> 1:1 */

 params->inst is valid HW CRTC instance start from 0 */

 Keep track of enum controller_id FBC is attached to */

		/* attached_inst is SW CRTC instance start from 1

		 * 0 = CONTROLLER_ID_UNDEFINED means not attached crtc

 Toggle it as there is bug in HW */

 FBC usage with scatter & gather for dce110 */

 Enable FBC */

 Turn off compression */

 Reset enum controller_id to undefined */

 Sync line buffer which fbc was attached to dce100/110 only */

 Check the hardware register */

 Clear content first. */

 Write address, HIGH has to be first. */

 Clear content first. */

 Write FBC Pitch. */

	/* Disable region hit event, FBC_MEMORY_REGION_MASK = 0 (bits 16-19)

	 * for DCE 11 regions cannot be used - does not work with S/G

	/* Setup events when to clear all CSM entries (effectively marking

	 * current compressed data invalid)

	 * For DCE 11 CSM metadata 11111 means - "Not Compressed"

	 * Used as the initial value of the metadata sent to the compressor

	 * after invalidation, to indicate that the compressor should attempt

	 * to compress all chunks on the current pass.  Also used when the chunk

	 * is not successfully written to memory.

	 * When this CSM value is detected, FBC reads from the uncompressed

	 * buffer. Set events according to passed in value, these events are

	 * valid for DCE11:

	 *     - bit  0 - display register updated

	 *     - bit 28 - memory write from any client except from MCIF

	 *     - bit 29 - CG static screen signal is inactive

	 * In addition, DCE11.1 also needs to set new DCE11.1 specific events

	 * that are used to trigger invalidation on certain register changes,

	 * for example enabling of Alpha Compression may trigger invalidation of

	 * FBC once bit is set. These events are as follows:

	 *      - Bit 2 - FBC_GRPH_COMP_EN register updated

	 *      - Bit 3 - FBC_SRC_SEL register updated

	 *      - Bit 4 - FBC_MIN_COMPRESSION register updated

	 *      - Bit 5 - FBC_ALPHA_COMP_EN register updated

	 *      - Bit 6 - FBC_ZERO_ALPHA_CHUNK_SKIP_EN register updated

	 *      - Bit 7 - FBC_FORCE_COPY_TO_COMP_BUF register updated

	/* if (m_smallLocalFrameBufferMemory == 1)

	 * {

	 *	*max_x = FBC_MAX_X_SG;

	 *	*max_y = FBC_MAX_Y_SG;

	 * }

 for dce 11 always use one dram channel for lpt */

	/*

	 * check if this system has more than 1 dram channel; if only 1 then lpt

	 * should not be supported

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE11 register header files */

/*

 *****************************************************************************

 *  Function: regamma_config_regions_and_segments

 *

 *     build regamma curve by using predefined hw points

 *     uses interface parameters ,like EDID coeff.

 *

 * @param   : parameters   interface parameters

 *  @return void

 *

 *  @note

 *

 *  @see

 *

 *****************************************************************************

 Program REGAMMA_LUT_DATA */

 Setup regions */

 Power on gamma LUT memory */

 Program PWL */

 program regamma config */

 Power return to auto back */

 TODO: need to implement the function

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 TODO: this needs to be looked at, used by Stella's workaround*/

 chroma part */

high register MUST be programmed first*/

 luma part */

high register MUST be programmed first*/

 not supported */

 VIDEO FORMAT 0 */

 Video 422 and 420 needs UNP_GRPH_CONTROL_EXP programmed */

 Scatter Gather param tables */

 fake */

 0 for invalid */

 fake */

 new for 64bpp from HW */

 Helper to get table entry from surface info */

 TODO: un-hardcode requestlimit */

 register value */

Write mask to enable reading/writing of watermark set A*/

Write mask to enable reading/writing of watermark set B*/

 register value */

Write mask to enable reading/writing of watermark set A*/

Write watermark set A*/

Write mask to enable reading/writing of watermark set B*/

Write watermark set B*/

 Write mask to enable reading/writing of watermark set A */

 Write watermark set A */

 Write mask to enable reading/writing of watermark set B */

 Write watermark set B */

 for current stream */

 for current stream */

 for current stream */

****************************************/

 Constructor, Destructor               */

****************************************/

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

Do not set chroma vp for rgb444 pixel format*/

		/*for 420 video chroma is 1/4 the area of luma, scaled

		 *vertically and horizontally

/*

 * Function:

 * void setup_scaling_configuration

 *

 * Purpose: setup scaling mode : bypass, RGb, YCbCr and nummber of taps

 * Input:   data

 *

 * Output:

 *  void

	/*

	 * 0 - Replaced out of bound pixels with black pixel

	 * (or any other required color)

	 * 1 - Replaced out of bound pixels with the edge pixel

/*

 * Function:

 * void program_overscan

 *

 * Purpose: Programs overscan border

 * Input:   overscan

 *

 * Output: void

We need to disable power gating on coeff memory to do programming*/

Wait to disable gating:*/

		/*we always program N/2 + 1 phases, total phases N, but N/2-1 are just mirror

We need to restore power gating on coeff memory to initial state*/

 should never happen, bug */

Use all three pieces of memory always*/

hard coded number DCE11 1712(0x6B0) Partitions: 720/960/1712*/

	/* 1. Calculate viewport, viewport programming should happen after init

	 * calculations as they may require an adjustment in the viewport.

 2. Program overscan */

 3. Program taps and configuration */

 4. Calculate and program ratio, filter initialization */

 5. Program vertical filters */

 6. Program horizontal filters */

 7. Program the viewport */

 8. Set bit to flip to new coefficient memory */

 DO NOTHING*/

		/*we should use unsupported capabilities

****************************************/

 Constructor, Destructor               */

****************************************/

0x6B0*/

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE11 register header files */

/*

 * All values are in milliseconds;

 * For eDP, after power-up/power/down,

 * 300/500 msec max. delay from LCDVCC to black video generation

/*******************************************************************************

 * Private definitions

**************************PIPE_CONTROL***********************************/

*************************************************************************/

TODO*/

		/* Revert MASTER_UPDATE_MODE to 0 because bios sets it 2

		 * by default when command table is called

		 *

		 * Bios parser accepts controller_id = 6 as indicative of

		 * underlay pipe in dce110. But we do not support more

		 * than 3.

 Default case if no input transfer function specified */

TF_TYPE_DISTRIBUTED_POINTS - Not supported in DCE 11*/

		/* 16 segments

		 * segments are from 2^-11 to 2^5

		/* 10 segments

		 * segment is from 2^-10 to 2^1

		 * We include an extra segment for range [2^0, 2^1). This is to

		 * ensure that colors with normalized values of 1 don't miss the

		 * LUT.

 last point */

	/* see comment above, m_arrPoints[1].y should be the Y value for the

	 * region end (m_numOfHwPoints), not last HW point(m_numOfHwPoints - 1)

		/* for PQ, we want to have a straight line from last HW X point,

		 * and the slope to be such that we hit 1.0 at 10000 nits.

 this is not root pipe */

	/* For MST, there are multiply stream go to only one link.

	 * connect DIG back_end to front_end while enable_stream and

	 * disconnect them during disable_stream

 enable early control to avoid corruption on DP monitor*/

 enable audio only within mode set */

/*

 * @brief

 * eDP only.

		/*

		 * From KV, we will not HPD low after turning off VCC -

		 * instead, we will check the SW timer in power_up().

	/*

	 * When we power on/off the eDP panel,

	 * we need to wait until SENSE bit is high/low.

 obtain HPD */

 TODO what to do with this? */

 wait until timeout or panel detected */

 Send VBIOS command to prompt eDP panel power */

 edp requires a min of 500ms from LCDVDD off to on */

 add time defined by a patch, if any (usually patch extra_t12_ms is 0) */

 Adjust remaining_min_edp_poweroff_time_ms if this is not the first time. */

save driver power off time stamp*/

 Default T12 as per spec

 Add extra T12

todo: cloned in stream enc, fix*/

/*

 * @brief

 * eDP only. Control the backlight of the eDP panel

 Send VBIOS command to control eDP panel backlight */

cntl.engine_id = ctx->engine;*/

todo: unhardcode*/

	/* For eDP, the following delays might need to be considered

	 * after link training completed:

	 * idle period - min. accounts for required BS-Idle pattern,

	 * max. allows for source frame synchronization);

	 * 50 msec max. delay from valid video data from source

	 * to video on dislpay or backlight enable.

	 *

	 * Disable the delay for now.

	 * Enable it in the future if necessary.

 dc_service_sleep_in_milliseconds(50); */

edp 1.2*/

		/*

		 * Sometimes, DP receiver chip power-controlled externally by an

		 * Embedded Controller could be treated and used as eDP,

		 * if it drives mobile display. In this case,

		 * we shouldn't be doing power-sequencing, hence we can skip

		 * waiting for T7-ready.

edp 1.2*/

		/*

		 * Sometimes, DP receiver chip power-controlled externally by an

		 * Embedded Controller could be treated and used as eDP,

		 * if it drives mobile display. In this case,

		 * we shouldn't be doing power-sequencing, hence we can skip

		 * waiting for T9-ready.

 notify audio driver for audio modes of monitor */

current_state not updated yet*/

this is the first audio. apply the PME w/a in order to wake AZ from D3*/

 un-mute audio */

 TODO: audio should be per stream rather than per link */

this is the first audio. apply the PME w/a in order to wake AZ from D3*/

		/* TODO: notify audio driver for if audio modes list changed

		/* dal_audio_disable_azalia_audio_jack_presence(stream->audio,

		 * stream->stream_engine_id);

 Link encoder may have been dynamically assigned to non-physical display endpoint. */

 TODO - DP2.0 HW: unmap stream from link encoder here */

 only 3 items below are used by unblank */

 TODO - DP2.0 HW: Set ODM mode in dp hpo encoder here */

			/*

			 * After output is idle pattern some sinks need time to recognize the stream

			 * has changed or they enter protection state and hang.

 audio_crtc_info  */

	/*

	 * Audio packets are sent during actual CRTC blank physical signal, we

	 * need to specify actual active signal portion

for HDMI, audio ACR is with deep color ratio factor*/

 TODO hard code to enable for now. Need get from stream */

 TOFPGA */

		/*

		 * The way 420 is packed, 2 channels carry Y component, 1 channel

		 * alternate between Cb and Cr, so both channels need the pixel

		 * value for Y

 program blank color */

		/*

		 * Must blank CRTC after disabling power gating and before any

		 * programming, otherwise CRTC will be hung in bad state

	/* DCN3.1 FPGA Workaround

	 * Need to enable HPO DP Stream Encoder before setting OTG master enable.

	 * To do so, move calling function enable_stream_timing to only be done AFTER calling

	 * function core_link_enable_stream

  */

 Do not touch stream timing on seamless boot optimization. */

 DRR should set trigger event to monitor surface update event

	/* Event triggers and num frames initialized for DRR, but can be

	 * later updated for PSR use. Note DRR trigger events are generated

	 * regardless of whether num frames met.

	/* DCN3.1 FPGA Workaround

	 * Need to enable HPO DP Stream Encoder before setting OTG master enable.

	 * To do so, move calling function enable_stream_timing to only be done AFTER calling

	 * function core_link_enable_stream

*****************************************************************************/

		/* Enable CLOCK gating for each pipe BEFORE controller

 check if there is an eDP panel not in use */

/*

 * When ASIC goes from VBIOS/VGA mode to driver/accelerated mode we need:

 *  1. Power down all DC HW blocks

 *  2. Disable VGA engine on all controllers

 *  3. Enable power gating for controller

 *  4. Set acc_mode_change bit (VBIOS will clear this bit when going to FSDOS)

 Check fastboot support, disable on DCE8 because of blank screens

 enable fastboot if backend is enabled on eDP

 Set optimization flag on eDP stream*/

 We are trying to enable eDP, don't power down VDD

 Check seamless boot support

	/* eDP should not have stream in resume from S4 and so even with VBios post

	 * it should get turned off

turn off backlight before DP_blank and encoder powered down*/

resume from S3, no vbios posting, no need to power down again*/

/*******************************************************************************

 * Public functions

 DRR should set trigger event to monitor surface update event

 Note DRR trigger events are generated regardless of whether num frames met.

	/* TODO: If multiple pipes are to be supported, you need

	 * some GSL stuff. Static screen triggers may be programmed differently

	 * as well.

	/* TODO: handle pipes > 1

/*

 *  Check if FBC can be enabled

 FBC memory should be allocated */

 Only supports single display */

 fbc not applicable on underlay pipe */

 Only supports eDP */

 PSR should not be enabled */

 Nothing to compress */

 Only for non-linear tiling */

/*

 *  Enable FBC

 Program GRPH COMPRESSED ADDRESS and PITCH */

 Reset old context */

 look up the targets that have been removed since last commit */

		/* Note: We need to disable output if clock sources change,

		 * since bios does optimization and doesn't apply if changing

		 * PHY when not already disabled.

 Skip underlay pipe since it will be handled in commit surface*/

			/* Disable if new stream is null. O/w, if stream is

			 * disabled already, no need to disable again.

 free acquired resources*/

disable az_endpoint*/

free audio*/

we have to dynamic arbitrate the audio endpoints*/

we free the resource, need reset is_audio_acquired*/

	/* program audio wall clock. use HDMI as clock source if HDMI

	 * audio active. Otherwise, use DP as clock source

	 * first, loop to find any HDMI audio, if not, loop find DP audio

 Setup audio rate clock source */

	/* Issue:

	* Audio lag happened on DP monitor when unplug a HDMI monitor

	*

	* Cause:

	* In case of DP and HDMI connected or HDMI only, DCCG_AUDIO_DTO_SEL

	* is set to either dto0 or dto1, audio should work fine.

	* In case of DP connected only, DCCG_AUDIO_DTO_SEL should be dto1,

	* set to dto0 will cause audio lag.

	*

	* Solution:

	* Not optimized audio wall dto setup. When mode set, iterate pipe_ctx,

	* find first available pipe with audio, setup audio wall DTO per topology

	* instead of per pipe.

 For DCN3.1, audio to HPO FRL encoder is using audio DTBCLK DTO */

 disable audio DTBCLK DTO */

 no HDMI audio is found, try DP audio */

 Reset old context */

 look up the targets that have been removed since last commit */

 Skip applying if no targets */

 Apply new context */

 below is for real asic only */

/*******************************************************************************

 * Front End programming

 display color depth */

 Lb color depth */

/*******************************************************************************

 * In order to turn on/off specific surface we will program

 * Blender + CRTC

 *

 * In case that we have two surfaces and they have a different visibility

 * we can't turn off the CRTC since it will turn off the entire display

 *

 * |----------------------------------------------- |

 * |bottom pipe|curr pipe  |              |         |

 * |Surface    |Surface    | Blender      |  CRCT   |

 * |visibility |visibility | Configuration|         |

 * |------------------------------------------------|

 * |   off     |    off    | CURRENT_PIPE | blank   |

 * |   off     |    on     | CURRENT_PIPE | unblank |

 * |   on      |    off    | OTHER_PIPE   | unblank |

 * |   on      |    on     | BLENDING     | unblank |

 * -------------------------------------------------|

 *

 For now we are supporting only two pipes */

	/* To avoid endless loop we wait at most

 usually occurs at i=1 */

 Wait for one frame. */

 Enable timing synchronization for a group of Timing Generators. */

	/* Designate a single TG in the group as a master.

	 * Since HW doesn't care which one, we always assign

 Reset slave controllers on master VSync */

 skip the master */; i < group_size; i++)

 skip the master */; i < group_size; i++) {

	/* GSL Vblank synchronization is a one time sync mechanism, assumption

 Do nothing

**************************************/

***************************************/

		/* Power up AND update implementation according to the

		 * required signal (which may be different from the

		/* Blank controller using driver code instead of

 Moved programming gamma from dc to hwss */

 Need to allocate mem before program front end for Fiji */

 Do not power down fe when stream is active on dce*/

 do nothing*/

	/**

	 * If the cursor's source viewport is clipped then we need to

	 * translate the cursor to appear in the correct position on

	 * the screen.

	 *

	 * This translation isn't affected by scaling so it needs to be

	 * done *after* we adjust the position for the scale factor.

	 *

	 * This is only done by opt-in for now since there are still

	 * some usecases like tiled display that might enable the

	 * cursor on both streams while expecting dc to clip it.

	/* DMCU -1 for all controller id values,

	 * therefore +1 here

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set register offset */

 set register offset with instance */

 AG TBD Needs to be reduced back to 3 pipes once dce10 hw sequencer implemented. */

	/*TODO: is this halved for YCbCr 420? in that case we might want to move

	 * the pixel clock normalization for hdmi up to here instead of doing it

	 * in pll_adjust_pix_clk

 TODO: un-hardcode*/

 TODO: validate audio ASIC caps, encoder */

 underlay validation */

				/* we don't have the logic to support underlay

				 * only yet so block the use case where we get

				 * NV12 plane as top layer

				/* irrespective of plane format,

				 * stream should be RGB encoded

pipe_ctx->plane_res.ipp = res_ctx->pool->ipps[underlay_idx];*/

		/*

		 * This is for powering on underlay, so crtc does not

		 * need to be enabled

			/* Store first available for MST second display

			 * in daisy chain use case

	/*

	 * For CZ and later, we can allow DIG FE and BE to differ for all display types

 update the public caps to indicate an underlay is available */

do system clock*/

 convert all the clock fro kHz to fix point mHz */

do display clock*/

do memory clock*/

	/*************************************************

	 *  Resource + asic cap harcoding                *

	/*************************************************

	 *  Create resources                             *

 TODO: find out if CZ support 3 PLLs */

 Create hardware sequencer */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE11 register header files */

****************************************/

 Constructor, Destructor               */

****************************************/

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 *  and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE11 register header files */

 constrast:0 - 2.0, default 1.0 */

 Saturation: 0 - 2.0; default 1.0 */

1.00*/

 2.00 */

 0.01 */

/*actual max overlay saturation

 * value = UNDERLAY_SATURATION_MAX /UNDERLAY_SATURATION_DIVIDER

 Hue */

 HW range: -30 ~ +30 */

/* Brightness: in DAL usually -.25 ~ .25.

 * In MMD is -100 to +100 in 16-235 range; which when scaled to full range is

 *  ~-116 to +116. When normalized this is about 0.4566.

 * With 100 divider this becomes 46, but we may use another for better precision

 * The ideal one is 100/219 ((100/255)*(255/219)),

 * i.e. min/max = +-100, divider = 219

 * default 0.0

 ~116/255 */

  .01 */

 TODO: correct values below */

 00 - BITS2:0 Bypass */

 01 - hard coded coefficient TV RGB */

 04 - programmable OUTPUT CSC coefficient */

 fixed S2.13 format */

 fixed S2.13 format */

 fixed S0.13 format */

 fixed S2.13 format */

 fixed S2.13 format */

 fixed S2.13 format */

 fixed S0.13 format */

 fixed S2.13 format */

 fixed S0.13 format */

 fixed S2.13 format */

 fixed S0.13 format */

 fixed S2.13 format */

 fixed S2.13 format */

 fixed S0.13 format */

 fixed S2.13 format */

 fixed S2.13 format */

 fixed S2.13 format */

 fixed S0.13 format */

 fixed S2.13 format */

 fixed S0.13 format */

 fixed S2.13 format */

 fixed S0.13 format */

 by pass */

 not supported for underlay on CZ */

 YCbCr601 */

 YCbCr709 */

 by pass */

 not supported for underlay on CZ */

 YCbCr601 */

 YCbCr709 */

 by pass */

TODO: color depth is not correct when this is called*/

 255/256 for 8 bit output color depth */

 1023/1024 for 10 bit output color depth */

 4095/4096 for 12 bit output color depth */

 not valid case */

1_1   1_2   1_3   1_4   2_1   2_2   2_3   2_4   3_1   3_2   3_3   3_4 */

	/*

	 * 1 == set A, the logic is 'if currently we're not using set A,

	 * then use set A, otherwise use set B'

 fixed S2.13 format */

 fixed S2.13 format */

 KK: leave INPUT_CSC_CONVERSION_MODE at default */

	/*

	 * select 8.4 input type instead of default 12.0. From the discussion

	 * with HW team, this format depends on the UNP surface format, so for

	 * 8-bit we should select 8.4 (4 bits truncated). For 10 it should be

	 * 10.2. For Carrizo we only support 8-bit surfaces on underlay pipe

	 * so we can always keep this at 8.4 (input_type=2). If the later asics

	 * start supporting 10+ bits, we will have a problem: surface

	 * programming including UNP_GRPH* is being done in DalISR after this,

	 * so either we pass surface format to here, or move this logic to ISR

 currently parameter not in use */

		/*

		 * HW default false we program locally defined matrix

		 * HW default true  we use predefined hw matrix and we

		 * do not need to program matrix

		 * OEM wants the HW default via runtime parameter.

			/* program the matrix with default values from this

			 * file

	/* configure the what we programmed :

	 * 1. Default values from this file

	 * 2. Use hardware default from ROM_A and we do not need to program

	 * matrix

  We did everything ,now program DxOUTPUT_CSC_CONTROL */

TODO: Check if denormalization is needed*/

set_Denormalization(opp, adjust->color_depth);*/

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 include DCE11 register header files */

/** ********************************************************************************

 *

 * DCE11 Timing Generator Implementation

 *

/*

 * Enable CRTCV

/*

 * Set MASTER_UPDATE_MODE to 0

 * This is needed for DRR, and also suggested to be default value by Syed.

 TODO: may want this on for looking for underflow */

	/*

	 * TODO: call this when adding stereo support

	 * tg->funcs->disable_stereo(tg);

	/* We want to catch beginning of VBlank here, so if the first try are

	 * in VBlank, we might be very close to Active, in this case wait for

	 * another frame

 error - no point to wait if counter is not moving */

 error - no point to wait if counter is not moving */

/*

 * Wait till we are in VActive (anywhere in VActive)

 error - no point to wait if counter is not moving */

	/* This is desirable to have a constant DAC output voltage during the

	 * blank time that is higher than the 0 volt reference level that the

	 * DAC outputs when the NBLANK signal

	/* TO DO we have to program EXT registers and we need to know LB DATA

	 * format because it is used when more 10 , i.e. 12 bits per color

	 *

	 * m_mmDxCRTC_OVERSCAN_COLOR_EXT

	 * m_mmDxCRTC_BLACK_COLOR_EXT

	 * m_mmDxCRTC_BLANK_DATA_COLOR_EXT

/** ********************************************************************************************

 *

 * DCE11 Timing Generator Constructor / Destructor

 *

 Not to be implemented for underlay*/

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 include DCE11 register header files */

/* Flowing register offsets are same in files of

 * dce/dce_11_0_d.h

 * dce/vi_polaris10_p/vi_polaris10_d.h

 *

 * So we can create dce110 timing generator to use it.

/*

* apply_front_porch_workaround

*

* This is a workaround for a bug that has existed since R5xx and has not been

* fixed keep Front porch at minimum 2 for Interlaced mode or 1 for progressive.

/*

 *****************************************************************************

 *  Function: is_in_vertical_blank

 *

 *  @brief

 *     check the current status of CRTC to check if we are in Vertical Blank

 *     regioneased" state

 *

 *  @return

 *     true if currently in blank region, false otherwise

 *

 *****************************************************************************

/*

 * Enable CRTC

 * Enable CRTC - call ASIC Control Object to enable Timing generator.

	/*

	 * 3 is used to make sure V_UPDATE occurs at the beginning of the first

	 * line of vertical front porch

 TODO: may want this on to catch underflow */

/*

 *****************************************************************************

 *  Function: disable_stereo

 *

 *  @brief

 *     Disables active stereo on controller

 *     Frame Packing need to be disabled in vBlank or when CRTC not running

 *****************************************************************************

	/*

	 * When disabling Frame Packing in 2 step mode, we need to program both

	 * registers at the same frame

	 * Programming it in the beginning of VActive makes sure we are ok

/*

 * disable_crtc - call ASIC Control Object to disable Timing generator.

 Need to make sure stereo is disabled according to the DCE5.0 spec */

	/*

	 * @TODOSTEREO call this when adding stereo support

	 * tg->funcs->disable_stereo(tg);

/*

 * program_horz_count_by_2

 * Programs DxCRTC_HORZ_COUNT_BY2_EN - 1 for DVI 30bpp mode, 0 otherwise

/*

 * program_timing_generator

 * Program CRTC Timing Registers - DxCRTC_H_*, DxCRTC_V_*, Pixel repetition.

 * Call ASIC Control Object to program Timings.

	/* Due to an asic bug we need to apply the Front Porch workaround prior

	 * to programming the timing.

 Set overscan */

 Set flags */

	/* Enable stereo - only when we need to pack 3D frame. Other types

/*

 *****************************************************************************

 *  Function: set_drr

 *

 *  @brief

 *     Program dynamic refresh rate registers m_DxCRTC_V_TOTAL_*.

 *

 *  @param [in] pHwCrtcTiming: point to H

 *  wCrtcTiming struct

 *****************************************************************************

 register values */

 By register spec, it only takes 8 bit value

/*

 * get_vblank_counter

 *

 * @brief

 * Get counter for vertical blanks. use register CRTC_STATUS_FRAME_COUNT which

 * holds the counter of frames.

 *

 * @param

 * struct timing_generator *tg - [in] timing generator which controls the

 * desired CRTC

 *

 * @return

 * Counter of frames, which should equal to number of vblanks.

/*

 *****************************************************************************

 *  Function: dce110_timing_generator_get_position

 *

 *  @brief

 *     Returns CRTC vertical/horizontal counters

 *

 *  @param [out] position

 *****************************************************************************

/*

 *****************************************************************************

 *  Function: get_crtc_scanoutpos

 *

 *  @brief

 *     Returns CRTC vertical/horizontal counters

 *

 *  @param [out] vpos, hpos

 *****************************************************************************

/* TODO: is it safe to assume that mask/shift of Primary and Underlay

 * are the same?

 * For example: today CRTC_H_TOTAL == CRTCV_H_TOTAL but is it always

	/* In case of V_TOTAL_CONTROL is on, make sure V_TOTAL_MAX and

	 * V_TOTAL_MIN are equal to V_TOTAL.

	/* TODO: replace 'controller_dp_test_pattern' by 'test_pattern_mode'

	 * because this is not DP-specific (which is probably somewhere in DP

 color ramp generator mixes 16-bits color */

 requested bpc */

	/* RGB values of the color bars.

	 * Produce two RGB colors: RGB0 - white (all Fs)

	 * and RGB1 - black (all 0s)

	 * (three RGB components for two colors)

 dest color (converted to the specified color format) */

 translate to bit depth */

 adjust color to the required colorFormat */

			/* dst = 2^dstBpc * src / 2^srcBpc = src >>

			 * (srcBpc - dstBpc);

		/* CRTC_TEST_PATTERN_DATA has 16 bits,

		 * lowest 6 are hardwired to ZERO

		 * color bits should be left aligned aligned to MSB

		 * XXXXXXXXXX000000 for 10 bit,

		 * XXXXXXXX00000000 for 8 bit and XXXXXX0000000000 for 6

		/* We have to write the mask before data, similar to pipeline.

		 * For example, for 8 bpc, if we want RGB0 to be magenta,

		 * and RGB1 to be cyan,

		 * we need to make 7 writes:

		 * MASK   DATA

		 * 000001 00000000 00000000                     set mask to R0

		 * 000010 11111111 00000000     R0 255, 0xFF00, set mask to G0

		 * 000100 00000000 00000000     G0 0,   0x0000, set mask to B0

		 * 001000 11111111 00000000     B0 255, 0xFF00, set mask to R1

		 * 010000 00000000 00000000     R1 0,   0x0000, set mask to G1

		 * 100000 11111111 00000000     G1 255, 0xFF00, set mask to B1

		 * 100000 11111111 00000000     B1 255, 0xFF00

		 *

		 * we will make a loop of 6 in which we prepare the mask,

		 * then write, then prepare the color for next write.

		 * first iteration will write mask only,

		 * but each next iteration color prepared in

		 * previous iteration will be written within new mask,

		 * the last component will written separately,

		 * mask is not changing between 6th and 7th write

		 * and color will be prepared by last iteration

		/* write color, color values mask in CRTC_TEST_PATTERN_MASK

		 * is B1, G1, R1, B0, G0, R0

			/* prepare color mask, first write PATTERN_DATA

			 * will have all zeros

 write color component */

			/* prepare next color component,

			 * will be written in the next iteration

		/* write last color component,

		 * it's been already prepared in the loop

 enable test pattern */

		/* increment for the first ramp for one color gradation

		 * 1 gradation for 6-bit color is 2^10

		 * gradations in 16-bit color

 enable test pattern */

 add color depth translation here */

/*

 * dce110_timing_generator_validate_timing

 * The timing generators support a maximum display size of is 8192 x 8192 pixels,

 * including both active display and blanking periods. Check H Total and V Total.

 Currently we don't support 3D, so block all 3D timings */

 Temporarily blocking interlacing mode until it's supported */

	/* Check maximum number of pixels supported by Timing Generator

	 * (Currently will never fail, in order to fail needs display which

	 * needs more than 8192 horizontal and

	 * more than 8192 vertical total pixels)

/*

 * Wait till we are at the beginning of VBlank.

	/* We want to catch beginning of VBlank here, so if the first try are

	 * in VBlank, we might be very close to Active, in this case wait for

	 * another frame

 error - no point to wait if counter is not moving */

 error - no point to wait if counter is not moving */

/*

 * Wait till we are in VActive (anywhere in VActive)

 error - no point to wait if counter is not moving */

/*

 *****************************************************************************

 *  Function: dce110_timing_generator_setup_global_swap_lock

 *

 *  @brief

 *     Setups Global Swap Lock group for current pipe

 *     Pipe can join or leave GSL group, become a TimingServer or TimingClient

 *

 *  @param [in] gsl_params: setup data

 *****************************************************************************

 This pipe will belong to GSL Group zero. */

	/* Keep signal low (pending high) during 6 lines.

 DCP_GSL_PURPOSE_SURFACE_FLIP */

 Checkpoint relative to end of frame */

*******************************************************************/

	/* Clear all the register writes done by

	 * dce110_timing_generator_setup_global_swap_lock

 This pipe will belong to GSL Group zero. */

 Settig HW default values from reg specs */

 Restore DCP_GSL_PURPOSE_SURFACE_FLIP */

*******************************************************************/

/*

 *****************************************************************************

 *  Function: is_counter_moving

 *

 *  @brief

 *     check if the timing generator is currently going

 *

 *  @return

 *     true if currently going, false if currently paused or stopped.

 *

 *****************************************************************************

TODO: Figure out if we need this function. */

 Setup trigger edge */

		/* Register spec has reversed definition:

 send every signal */

 no delay */

 clear trigger status */

*************************************************************/

 force H count to H_TOTAL and V count to V_TOTAL */

 TriggerB - we never use TriggerA */

 clear trigger status */

 Setup trigger edge */

 clear trigger status */

*************************************************************/

 force H count to H_TOTAL and V count to V_TOTAL */

 TriggerB - we never use TriggerA */

 clear trigger status */

 force H count to H_TOTAL and V count to V_TOTAL */

 TriggerB - we never use TriggerA */

 clear trigger status */

 force counter now mode is disabled */

 clear trigger status */

*******************************************************************/

 clear trigger status */

/*

 *****************************************************************************

 *  @brief

 *     Checks whether CRTC triggered reset occurred

 *

 *  @return

 *     true if triggered reset occurred, false otherwise

 *****************************************************************************

/*

 * dce110_timing_generator_disable_vga

 * Turn OFF VGA Mode and Timing  - DxVGA_CONTROL

 * VGA Mode and VGA Timing is used by VBIOS on CRT Monitors;

/*

 * set_overscan_color_black

 *

 * @param :black_color is one of the color space

 *    :this routine will set overscan black color according to the color space.

 * @return none

	/* This is desirable to have a constant DAC output voltage during the

	 * blank time that is higher than the 0 volt reference level that the

	 * DAC outputs when the NBLANK signal

	/* TO DO we have to program EXT registers and we need to know LB DATA

	 * format because it is used when more 10 , i.e. 12 bits per color

	 *

	 * m_mmDxCRTC_OVERSCAN_COLOR_EXT

	 * m_mmDxCRTC_BLACK_COLOR_EXT

	 * m_mmDxCRTC_BLANK_DATA_COLOR_EXT

/* Gets first line of blank region of the display timing for CRTC

 * and programms is as a trigger to fire vertical interrupt

 Set interval width for interrupt to fire to 1 scanline */

 Cannot configure crc on a CRTC that is disabled */

 First, disable CRC before we configure it. */

 Program frame boundaries */

 Window A x axis start and end. */

 Window A y axis start and end. */

 Window B x axis start and end. */

 Window B y axis start and end. */

 Set crc mode and selection, and enable. Only using CRC0*/

 Early return if CRC is not enabled for this CRTC */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parsable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 SOC Bounding Box Parameters

 there's always that one bastard variable that's so long it throws everything out of alignment!

 new!

 new!

 new

 new

 Set the voltage scaling clocks as the defaults. Most of these will

 be set to different values by the test

mode_lib->vba.DRAMSpeedPerState[i] = soc->clock_limits[i].dram_speed_mhz;

 IP Parameters

 Convert Pipes to Planes

 TODO: Needs to be set based on src->dcc_rate_luma/chroma */

 TODO: or should this be full_recout_width???...maybe only when in hsplit mode?

 TODO: Needs to be set based on dout->audio.audio_sample_rate_khz/sample_layout */

 The DML spreadsheet assumes that the two cursors utilize the same amount of bandwidth. We'll

 calculate things a little more accurately

 handle overlays through BlendingAndTiming

 BlendingAndTiming tells you which instance to look at to get timing, the so called 'master'

 doesn't matter, so choose the smaller one

 TODO: ODMCombineEnabled => 2 * DPPPerPlane...actually maybe not since all pipes are specified

 Do we want the dscclk to automatically be halved? Guess not since the value is specified

 in wm mode we pull the parameters needed from the display_e2e_pipe_params_st structs

 rather than working them out as in recalculate_ms

 This is only safe to use memcmp because there are non-POD types in struct display_mode_lib

Progressive To Interlace Unit Effect

 Total Available Pipes Support Check

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 prefill has to be >= 1 */

 ensure minimum of 1 is used */

	/* TODO: take the max between luma, chroma chunk size?

	 * okay for now, as we are setting chunk_bytes to 8kb anyways

32kb */

 half to chroma */

 2/3 to chroma */

full 256b request */

128b request (for luma only for yuv420 8bpc) */

		/* Bug workaround, luma and chroma req size needs to be the same. (see: DEGVIDCN10-137)

		 * TODO: Remove after rtl fix

		/* Note: assumption, the config that pass in will fit into

		 *       the detiled buffer.

 Need refactor. */

	/* remember log rule

	 * "+" in log is multiply

	 * "-" in log is divide

	 * "/2" is like square root

	 * blk is vertical biased

 blk height of 1 */

 ------- */

 meta    */

 ------- */

 meta request is 64b and is 8x8byte meta element */

	/* each 64b meta request for dcn is 8x8 meta elements and

	 * a meta element covers one 256b block of the data surface.

 meta req is 8x8 */

	/* the dimensions of a meta row are meta_row_width x meta_row_height in elements.

	 * calculate upper bound of the meta_row_width

 ------ */

 dpte   */

 ------ */

 64b dpte req width in data element */

 one line high */

 only 3 possible shapes for dpte request in dimensions of ptes: 8x1, 4x2, 2x4. */

 8x1 */

 4x2 */

 2x4 */

	/* the dpte request dimensions in data elements is dpte_req_width x dpte_req_height

	 * log2_wmpg_width is how much 1 pte represent, now trying to calculate how much 64b pte req represent

	/* calculate pitch dpte row buffer can hold

	 * round the result down to a power of two.

 the upper bound of the dpte_row_width without dependency on viewport position follows.  */

	/* From programming guide:

	 * There is a special case of saving only half of ptes returned due to buffer space limits.

	 * this case applies to 4 and 8bpe in horizontal access of a vp_width greater than 2560+16

	 * when the pte request is 2x4 ptes (which happens when vmpg_bytes =4kb and tile blk_bytes >=64kb).

half of the full height */

 TODO check if ppe apply for both luma and chroma in 422 case */

	/* remember log rule

	 * "+" in log is multiply

	 * "-" in log is divide

	 * "/2" is like square root

	 * blk is vertical biased

 blk height of 1 */

 -------  */

 meta     */

 -------  */

 meta request is 64b and is 8x8byte meta element */

	/* each 64b meta request for dcn is 8x8 meta elements and

	 * a meta element covers one 256b block of the data surface.

 meta req is 8x8 byte, each byte represent 1 blk256 */

	/* the dimensions of a meta row are meta_row_width x meta_row_height in elements.

	 * calculate upper bound of the meta_row_width

full sized meta chunk width in unit of data elements */

64B mpte request */

 ------ */

 dpte   */

 ------ */

 64b dpte req height in data element */

 64b dpte req width in data element */

 one line high */

 only 3 possible shapes for dpte request in dimensions of ptes: 8x1, 4x2, 2x4. */

 Ensure we only have the 3 shapes */

 8x1 */

 4x2 */

 2x4 */

	/* The dpte request dimensions in data elements is dpte_req_width x dpte_req_height

	 * log2_vmpg_width is how much 1 pte represent, now calculating how much a 64b pte req represent

	 * That depends on the pte shape (i.e. 8x1, 4x2, 2x4)

	/* calculate pitch dpte row buffer can hold

	 * round the result down to a power of two.

		/* For linear, the dpte row is pitch dependent and the pte requests wrap at the pitch boundary.

		 * the dpte_row_width_ub is the upper bound of data_pitch*dpte_row_height in elements with this unique buffering.

 for tiled mode, row height is the same as req height and row store up to vp size upper bound */

	/* From programming guide:

	 * There is a special case of saving only half of ptes returned due to buffer space limits.

	 * this case applies to 4 and 8bpe in horizontal access of a vp_width greater than 2560+16

	 * when the pte request is 2x4 ptes (which happens when vmpg_bytes =4kb and tile blk_bytes >=64kb).

half of the full height */

	/* the dpte_group_bytes is reduced for the specific case of vertical

	 * access of a tile surface that has dpte request of 8x1 ptes.

reduced, in this case, will have page fault within a group */

full size */

since pte request size is 64byte, the number of data pte requests per full sized group is as follows.  */

length in 64b requests  */

 full sized data pte group width in elements */

	/* since dpte groups are only aligned to dpte_req_width and not dpte_group_width,

	 * the upper bound for the dpte groups per row is as follows.

	/* Just a check to make sure this function and the new one give the same

	 * result. The standalone get_row_heights() function is based off of the

	 * code in this function so the same changes need to be made to both.

 get param for luma surface */

 get param for chroma surface */

 calculate how to split the det buffer space between luma and chroma */

/* Note: currently taken in as is.

 * Nice to decouple code from hw register implement and extract code that are repeated for luma and chroma.

 Timing */

 ------------------------- */

 Section 1.5.2.1: OTG dependent Params */

 ------------------------- */

 15 bits */

 TODO: ip_param */

 ------------------------- */

 Section 1.5.2.2: Prefetch, Active and TTU  */

 ------------------------- */

 Prefetch Calc */

 Source */

 TODO */

 vp access direction: horizontal or vertical accessed */

 Scaling */

 in terms of line */

 in terms of refclk */

 dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now */

 Active */

 dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now */

 *2 for 2 pixel per element */

 assume half split for dcn1 */

 per line */

 per line */

 per line */

 per line */

 TTU - Luma / Chroma */

 vertical access */

 per req */

 per req */

 per req  */

 per req */

 TTU - Cursor */

 cursor source width */

 byte */

 32bit */

 TODO: oswin to think about what to do for cursor */

 TTU - Misc */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parsable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 For DML-C changes that hasn't been propagated to VBA yet

#define __DML_VBA_ALLOW_DELTA__

 Move these to ip paramaters/constant

 At which vstartup the DML start to try if the mode can be supported

 Delay in DCFCLK from ARB to DET (1st num is ARB to SDPIF, 2nd number is SDPIF to DET)

 fudge factor for min dcfclk calclation

 valid bpc         = source bits per component in the set of {8, 10, 12}

 valid bpp         = increments of 1/16 of a bit

                    min = 6/7/8 in N420/N422/444, respectively

                    max = such that compression is 1:1

valid sliceWidth  = number of pixels per slice line, must be less than or equal to 5184/numSlices (or 4096/numSlices in 420 mode)

valid numSlices   = number of slices in the horiziontal direction per DSC engine in the set of {1, 2, 3, 4}

valid pixelFormat = pixel/color format in the set of {:N444_RGB, :S422, :N422, :N420}

 fixed value

 N422/N420 operate at 2 pixels per clock

 #all other modes operate at 1 pixel per clock

initial transmit delay as per PPS

compute ssm delay

divide by pixel per cycle to compute slice width as seen by DSC

422 mode has an additional cycle of delay

main calculation for the dscce

dsc processes 3 pixel containers per cycle and a container can contain 1 or 2 pixels

   sfr

   dsccif

   dscc - input deserializer

   dscc gets pixels every other cycle

   dscc - input cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

  dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

   dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - output serializer

   dscc - cdc uncertainty

   sft

 PREVIOUS_ERROR (missing this term)

 See note above dated 5/30/2018

                      - ((NumberOfCursors > 0 || GPUVMEnable || DCCEnable) ?

 TODO: Did someone else add this??

 DAL custom code: need to update ReturnBW in case min dcfclk is overriden */

 End DAL custom code */

 DISPCLK and DPPCLK Calculation



 Urgent and B P-State/DRAM Clock Change Watermark

 DCFCLK Deep Sleep

 DSCCLK

 DSC Delay

 NumberOfPlanes

 Prefetch

 VBA_DELTA

 We don't really care to iterate between the various prefetch modes

v->PrefetchERROR = CalculateMinAndMaxPrefetchMode(v->AllowDRAMSelfRefreshOrDRAMClockChangeInVblank, &v->MinPrefetchMode, &v->MaxPrefetchMode);

 PREVIOUS_ERROR

 This error result check was done after the PrefetchModeSupported. So we will

 still try to calculate flip schedule even prefetch mode not supported

 Unbounded Request Enabled

Watermarks and NB P-State/DRAM Clock Change Support

 dummy

Display Pipeline Delivery Time in Prefetch, Groups

 Min TTUVBlank

 DCC Configuration

 We should always know the direction DCCProgrammingAssumesScanDirectionUnknown,

 VStartup Adjustment

Maximum Bandwidth Used

 Stutter Efficiency

 Display Pipe Configuration

MODE SUPPORT, VOLTAGE STATE AND SOC CONFIGURATION*/

Scale Ratio, taps Support Check*/

Source Format, Pixel Format and Scan Support Check*/

Bandwidth Support Check*/

Writeback Latency support check*/

Writeback Mode Support Check*/

Writeback Scale Ratio and Taps Support Check*/

Maximum DISPCLK/DPPCLK Support check*/

 UPTO

Total Available Pipes Support Check*/

Display IO and DSC Support Check*/

Number Of DSC Slices*/

 TODO: Need some other way to handle this nonsense

 v->OutputTypeAndRatePerState[i][k] = v->Output[k] & " HBR"

 TODO: Need some other way to handle this nonsense

 v->OutputTypeAndRatePerState[i][k] = v->Output[k] & " HBR2"

 TODO: Need some other way to handle this nonsense

 v->OutputTypeAndRatePerState[i][k] = v->Output[k] & " HBR3"

v->OutputTypeAndRatePerState[i][k] = v->Output[k] & "10x4";

v->OutputTypeAndRatePerState[i][k] = v->Output[k] & "12x4";

 UPTO 2172

 Skip dscclk validation: as long as dispclk is supported, dscclk is also implicitly supported */

DSC Delay per state*/

Calculate Swath, DET Configuration, DCFCLKDeepSleep



Calculate Return BW

Re-ordering Buffer Support Check

Vertical Active BW support check

Prefetch Check

PTE Buffer Size Check*/

Cursor Support Check*/

Valid Pitch Check*/

Mode Support, Voltage State and SOC Configuration*/

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 FIXME: take the max between luma, chroma chunk size?

 okay for now, as we are setting chunk_bytes to 8kb anyways

32kb

 Note: detile_buf_plane1_addr is in unit of 1KB

 half to chroma

 2/3 to luma

full 256b request

full sized meta chunk width in unit of data elements

 remember log rule

 "+" in log is multiply

 "-" in log is divide

 "/2" is like square root

 blk is vertical biased

 blk height of 1

 -------

 meta

 -------

 meta request is 64b and is 8x8byte meta element

 each 64b meta request for dcn is 8x8 meta elements and

 a meta element covers one 256b block of the data surface.

 meta req is 8x8 byte, each byte represent 1 blk256

 the dimensions of a meta row are meta_row_width x meta_row_height in elements.

 calculate upper bound of the meta_row_width

full sized meta chunk width in unit of data elements

64B mpte request

 ------

 dpte

 ------

 one line high

 only 3 possible shapes for dpte request in dimensions of ptes: 8x1, 4x2, 2x4.

one 64B PTE request returns 8 PTEs

4KB tile means 4kB page size

one 64B req gives 8x1 PTEs for 4KB tile

 tile block >= 64KB

two 64B reqs of 2x4 PTEs give 16 PTEs to cover 64KB

 log2_64KB_width

 log2_64KB_height

64KB page size and must 64KB tile block

one 64B req gives 8x1 PTEs for 64KB tile

 The dpte request dimensions in data elements is dpte_req_width x dpte_req_height

 log2_vmpg_width is how much 1 pte represent, now calculating how much a 64b pte req represent

 That depends on the pte shape (i.e. 8x1, 4x2, 2x4)

log2_dpte_req_height    = log2_vmpg_height + log2_dpte_req_height_ptes;

log2_dpte_req_width     = log2_vmpg_width + log2_dpte_req_width_ptes;

 calculate pitch dpte row buffer can hold

 round the result down to a power of two.

 For linear, the dpte row is pitch dependent and the pte requests wrap at the pitch boundary.

 the dpte_row_width_ub is the upper bound of data_pitch*dpte_row_height in elements with this unique buffering.

 the upper bound of the dpte_row_width without dependency on viewport position follows.

 for tiled mode, row height is the same as req height and row store up to vp size upper bound

 tile block >= 64KB

2*64B dpte request

64B dpte request

 the dpte_group_bytes is reduced for the specific case of vertical

 access of a tile surface that has dpte request of 8x1 ptes.

reduced, in this case, will have page fault within a group

since pte request size is 64byte, the number of data pte requests per full sized group is as follows.

length in 64b requests

 full sized data pte group width in elements

But if the tile block >=64KB and the page size is 4KB, then each dPTE request is 2*64B

 tile block >= 64KB

 since dpte groups are only aligned to dpte_req_width and not dpte_group_width,

 the upper bound for the dpte groups per row is as follows.

 FIXME check if ppe apply for both luma and chroma in 422 case

 vp access direction: horizontal or vertical accessed

 get param for luma surface

 get param for chroma surface

 calculate how to split the det buffer space between luma and chroma

 byte

 32bit

 FIXME: oswin to think about what to do for cursor

 Note: currently taken in as is.

 Nice to decouple code from hw register implement and extract code that are repeated for luma and chroma.

 -------------------------

 Section 1.15.2.1: OTG dependent Params

 -------------------------

 Timing

 Scaling

 FROM VBA

 From VBA

 From VBA

 From VBA

 From VBA

 From VBA

 15 bits

set_prefetch_mode(mode_lib, cstate_en, pstate_en, ignore_viewport_pos, immediate_flip_support);

 From VBA

old_impl_vs_vba_impl("min_dst_y_next_start", dlg_vblank_start, vba__min_dst_y_next_start);

 -------------------------

 Section 1.15.2.2: Prefetch, Active and TTU

 -------------------------

 Prefetch Calc

 Source

 vp access direction: horizontal or vertical accessed

 Scaling

 FROM VBA

old_impl_vs_vba_impl("vready_after_vcount0", disp_dlg_regs->vready_after_vcount0, vba__vready_after_vcount0);

 From VBA

 From VBA

 do some adjustment on the dst_after scaler to account for odm combine mode

 need to figure out which side of odm combine we're in

 figure out which pipes go together

 TODO: We should really check that 4to1 is supported before setting it to 4

 From VBA

 From VBA

 From VBA

 From VBA

 From VBA

U5.2

U4.2

 magic!

 From VBA

 From VBA

 Active

 *2 for 2 pixel per element

 In ODM

 This "hack"  is only allowed (and valid) for MPC combine. In ODM

 combine, you MUST specify the full_recout_width...according to Oswin

 assume half split for dcn1

 As of DCN2, mpc_combine and odm_combine are mutually exclusive

 per line

 per line

old_impl_vs_vba_impl("refcyc_per_line_delivery_pre_l", refcyc_per_line_delivery_pre_l, vba__refcyc_per_line_delivery_pre_l);

old_impl_vs_vba_impl("refcyc_per_line_delivery_l", refcyc_per_line_delivery_l, vba__refcyc_per_line_delivery_l);

 From VBA

 From VBA

 per line

 per line

old_impl_vs_vba_impl("refcyc_per_line_delivery_pre_c", refcyc_per_line_delivery_pre_c, vba__refcyc_per_line_delivery_pre_c);

old_impl_vs_vba_impl("refcyc_per_line_delivery_c", refcyc_per_line_delivery_c, vba__refcyc_per_line_delivery_c);

 From VBA

 From VBA

 TTU - Luma / Chroma

 vertical access

 per req

 per req

old_impl_vs_vba_impl("refcyc_per_req_delivery_pre_l", refcyc_per_req_delivery_pre_l, vba__refcyc_per_req_delivery_pre_l);

old_impl_vs_vba_impl("refcyc_per_req_delivery_l", refcyc_per_req_delivery_l, vba__refcyc_per_req_delivery_l);

 From VBA

 From VBA

 per req

 per req

old_impl_vs_vba_impl("refcyc_per_req_delivery_pre_c", refcyc_per_req_delivery_pre_c, vba__refcyc_per_req_delivery_pre_c);

old_impl_vs_vba_impl("refcyc_per_req_delivery_c", refcyc_per_req_delivery_c, vba__refcyc_per_req_delivery_c);

 TTU - Cursor

 From VBA

 From VBA

old_impl_vs_vba_impl("refcyc_per_req_delivery_pre_cur0", refcyc_per_req_delivery_pre_cur0, vba__refcyc_per_req_delivery_pre_cur0);

old_impl_vs_vba_impl("refcyc_per_req_delivery_cur0", refcyc_per_req_delivery_cur0, vba__refcyc_per_req_delivery_cur0);

 TTU - Misc

 all hard-coded

 Assignment to register structures

 in terms of line

 in terms of refclk

 hack for FPGA

 dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now

 From VBA

 From VBA

 From VBA

 From VBA

 Clamp to max for now

 TODO: Is this the right calculation? Does htotal need to be halved?

 off

 Get watermark and Tex.

 system parameter calculation done

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Function: dml20v2_rq_dlg_get_rq_params

  Calculate requestor related parameters that register definition agnostic

  (i.e. this layer does try to separate real values from register definition)

 Input:

  pipe_src_param - pipe source configuration (e.g. vp, pitch, etc.)

 Output:

  rq_param - values that can be used to setup RQ (e.g. swath_height, plane1_addr, etc.)



 Function: dml20v2_rq_dlg_get_dlg_params

  Calculate deadline related parameters



/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 TODO: take the max between luma, chroma chunk size?

 okay for now, as we are setting chunk_bytes to 8kb anyways

32kb

 half to chroma

 2/3 to chroma

full 256b request

128b request (for luma only for yuv420 8bpc)

 Note: assumption, the config that pass in will fit into

       the detiled buffer.

full sized meta chunk width in unit of data elements

 remember log rule

 "+" in log is multiply

 "-" in log is divide

 "/2" is like square root

 blk is vertical biased

 blk height of 1

 -------

 meta

 -------

 meta request is 64b and is 8x8byte meta element

 each 64b meta request for dcn is 8x8 meta elements and

 a meta element covers one 256b block of the data surface.

 meta req is 8x8 byte, each byte represent 1 blk256

 the dimensions of a meta row are meta_row_width x meta_row_height in elements.

 calculate upper bound of the meta_row_width

full sized meta chunk width in unit of data elements

64B mpte request

 ------

 dpte

 ------

 one line high

 only 3 possible shapes for dpte request in dimensions of ptes: 8x1, 4x2, 2x4.

one 64B PTE request returns 8 PTEs

4KB tile means 4kB page size

one 64B req gives 8x1 PTEs for 4KB tile

 tile block >= 64KB

two 64B reqs of 2x4 PTEs give 16 PTEs to cover 64KB

 log2_64KB_width

 log2_64KB_height

64KB page size and must 64KB tile block

one 64B req gives 8x1 PTEs for 64KB tile

 The dpte request dimensions in data elements is dpte_req_width x dpte_req_height

 log2_vmpg_width is how much 1 pte represent, now calculating how much a 64b pte req represent

 That depends on the pte shape (i.e. 8x1, 4x2, 2x4)

log2_dpte_req_height    = log2_vmpg_height + log2_dpte_req_height_ptes;

log2_dpte_req_width     = log2_vmpg_width + log2_dpte_req_width_ptes;

 calculate pitch dpte row buffer can hold

 round the result down to a power of two.

 For linear, the dpte row is pitch dependent and the pte requests wrap at the pitch boundary.

 the dpte_row_width_ub is the upper bound of data_pitch*dpte_row_height in elements with this unique buffering.

 the upper bound of the dpte_row_width without dependency on viewport position follows.

 for tiled mode, row height is the same as req height and row store up to vp size upper bound

 tile block >= 64KB

2*64B dpte request

64B dpte request

 the dpte_group_bytes is reduced for the specific case of vertical

 access of a tile surface that has dpte request of 8x1 ptes.

reduced, in this case, will have page fault within a group

full size

since pte request size is 64byte, the number of data pte requests per full sized group is as follows.

length in 64b requests

 full sized data pte group width in elements

But if the tile block >=64KB and the page size is 4KB, then each dPTE request is 2*64B

 tile block >= 64KB

 since dpte groups are only aligned to dpte_req_width and not dpte_group_width,

 the upper bound for the dpte groups per row is as follows.

 TODO check if ppe apply for both luma and chroma in 422 case

 get param for luma surface

 get param for chroma surface

 calculate how to split the det buffer space between luma and chroma

 Note: currently taken in as is.

 Nice to decouple code from hw register implement and extract code that are repeated for luma and chroma.

 -------------------------

 Section 1.15.2.1: OTG dependent Params

 -------------------------

 Timing

    unsigned int hblank_start = dst.hblank_start; 
 Scaling

    double vinit_l;

    double vinit_c;

    double vinit_bot_l;

    double vinit_bot_c;

    unsigned int swath_height_l;

    unsigned int dpte_bytes_per_row_ub_l;

    unsigned int meta_pte_bytes_per_frame_ub_l;

    unsigned int meta_bytes_per_row_ub_l;

    unsigned int swath_height_c;

   unsigned int dpte_bytes_per_row_ub_c;

 15 bits

 -------------------------

 Section 1.15.2.2: Prefetch, Active and TTU

 -------------------------

 Prefetch Calc

 Source

             dcc_en              = src.dcc;

 TODO

 vp access direction: horizontal or vertical accessed

      bytes_per_element_l = get_bytes_per_element(source_format_class(src.source_format), 0);

      bytes_per_element_c = get_bytes_per_element(source_format_class(src.source_format), 1);

 Scaling

     vinit_l         = scl.vinit;

     vinit_c         = scl.vinit_c;

     vinit_bot_l     = scl.vinit_bot;

     vinit_bot_c     = scl.vinit_bot_c;

    unsigned int swath_height_l                 = rq_dlg_param->rq_l.swath_height;

    unsigned int dpte_bytes_per_row_ub_l        = rq_dlg_param->rq_l.dpte_bytes_per_row_ub;

    unsigned int meta_pte_bytes_per_frame_ub_l  = rq_dlg_param->rq_l.meta_pte_bytes_per_frame_ub;

    unsigned int meta_bytes_per_row_ub_l        = rq_dlg_param->rq_l.meta_bytes_per_row_ub;

    unsigned int swath_height_c                 = rq_dlg_param->rq_c.swath_height;

   dpte_bytes_per_row_ub_c        = rq_dlg_param->rq_c.dpte_bytes_per_row_ub;

 TODO: Where is this coming from?

 TODO: What if this min_vblank doesn't match the value in the dml_config_settings.cpp?

 Lwait

 magic!

 Active

 *2 for 2 pixel per element

 In ODM

 This "hack"  is only allowed (and valid) for MPC combine. In ODM

 combine, you MUST specify the full_recout_width...according to Oswin

 assume half split for dcn1

 As of DCN2, mpc_combine and odm_combine are mutually exclusive

 per line

 per line

 per line

 per line

 TTU - Luma / Chroma

 vertical access

 per req

 per req

 per req

 per req

 TTU - Cursor

 TTU - Misc

 all hard-coded

 Assignment to register structures

 in terms of line

 in terms of refclk

 dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now

 TODO: dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now

 TODO: Is this the right calculation? Does htotal need to be halved?

 off

ASSERT(disp_ttu_regs->qos_level_high_wm < dml_pow(2, 14));*/

 Get watermark and Tex.

 TODO: Deprecated

 system parameter calculation done

 byte

 32bit

 TODO: oswin to think about what to do for cursor

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 Super monster function with some 45 argument

 valid bpc         = source bits per component in the set of {8, 10, 12}

 valid bpp         = increments of 1/16 of a bit

                    min = 6/7/8 in N420/N422/444, respectively

                    max = such that compression is 1:1

valid sliceWidth  = number of pixels per slice line, must be less than or equal to 5184/numSlices (or 4096/numSlices in 420 mode)

valid numSlices   = number of slices in the horiziontal direction per DSC engine in the set of {1, 2, 3, 4}

valid pixelFormat = pixel/color format in the set of {:N444_RGB, :S422, :N422, :N420}

 fixed value

 N422/N420 operate at 2 pixels per clock

 #all other modes operate at 1 pixel per clock

initial transmit delay as per PPS

compute ssm delay

divide by pixel per cycle to compute slice width as seen by DSC

422 mode has an additional cycle of delay

main calculation for the dscce

dsc processes 3 pixel containers per cycle and a container can contain 1 or 2 pixels

   sfr

   dsccif

   dscc - input deserializer

   dscc gets pixels every other cycle

   dscc - input cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

  dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

   dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - output serializer

   dscc - cdc uncertainty

   sft

 dml_ml->vba.DISPCLK and dml_ml->vba.DPPCLK Calculation



 Urgent Watermark

 Let's do this calculation again??

 dm_420_10

 NB P-State/DRAM Clock Change Watermark

 Stutter Efficiency

 dml_ml->vba.DCFCLK Deep Sleep

 Stutter Watermark

 Urgent Latency Supported

 Non-Urgent Latency Tolerance

 DSCCLK

 DSC Delay

 TODO

 NumberOfPlanes

 Prefetch

Display Pipeline Delivery Time in Prefetch

 Min TTUVBlank

 DCC Configuration

 NB P-State/DRAM Clock Change Support

XFC Parameters:

only use max vstart if it is not drr or lateflip.

 TODO: This doesn't seem to match programming guide

MODE SUPPORT, VOLTAGE STATE AND SOC CONFIGURATION*/

Scale Ratio, taps Support Check*/

Source Format, Pixel Format and Scan Support Check*/

Bandwidth Support Check*/

Writeback Latency support check*/

Re-ordering Buffer Support Check*/

Writeback Mode Support Check*/

Writeback Scale Ratio and Taps Support Check*/

Maximum DISPCLK/DPPCLK Support check*/

Viewport Size Check*/

Total Available Pipes Support Check*/

Total Available OTG Support Check*/

Display IO and DSC Support Check*/

DSC Delay per state*/

Prefetch Check

Prefetch Check*/

Vertical Active BW support*/

PTE Buffer Size Check*/

Cursor Support Check*/

Valid Pitch Check*/

Mode Support, Voltage State and SOC Configuration*/

 SPDX-License-Identifier: MIT

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/**

 * DOC: DCN2x FPU manipulation Overview

 *

 * The DCN architecture relies on FPU operations, which require special

 * compilation flags and the use of kernel_fpu_begin/end functions; ideally, we

 * want to avoid spreading FPU access across multiple files. With this idea in

 * mind, this file aims to centralize all DCN20 and DCN2.1 (DCN2x) functions

 * that require FPU access in a single place. Code in this file follows the

 * following code pattern:

 *

 * 1. Functions that use FPU operations should be isolated in static functions.

 * 2. The FPU functions should have the noinline attribute to ensure anything

 *    that deals with FP register is contained within this call.

 * 3. All function that needs to be accessed outside this file requires a

 *    public interface that not uses any FPU reference.

 * 4. Developers **must not** use DC_FP_START/END in this file, but they need

 *    to ensure that the caller invokes it before access any function available

 *    in this file. For this reason, public functions in this file must invoke

 *    dc_assert_fp_enabled();

 *

 * Let's expand a little bit more the idea in the code pattern. To fully

 * isolate FPU operations in a single place, we must avoid situations where

 * compilers spill FP values to registers due to FP enable in a specific C

 * file. Note that even if we isolate all FPU functions in a single file and

 * call its interface from other files, the compiler might enable the use of

 * FPU before we call DC_FP_START. Nevertheless, it is the programmer's

 * responsibility to invoke DC_FP_START/END in the correct place. To highlight

 * situations where developers forgot to use the FP protection before calling

 * the DC FPU interface functions, we introduce a helper that checks if the

 * function is invoked under FP protection. If not, it will trigger a kernel

 * warning.

 Set writeback information */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Function: dml20_rq_dlg_get_rq_params

  Calculate requestor related parameters that register definition agnostic

  (i.e. this layer does try to separate real values from register definition)

 Input:

  pipe_src_param - pipe source configuration (e.g. vp, pitch, etc.)

 Output:

  rq_param - values that can be used to setup RQ (e.g. swath_height, plane1_addr, etc.)



 Function: dml20_rq_dlg_get_dlg_params

  Calculate deadline related parameters



/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 TODO: take the max between luma, chroma chunk size?

 okay for now, as we are setting chunk_bytes to 8kb anyways

32kb

 half to chroma

 2/3 to chroma

full 256b request

128b request (for luma only for yuv420 8bpc)

 Note: assumption, the config that pass in will fit into

       the detiled buffer.

full sized meta chunk width in unit of data elements

 remember log rule

 "+" in log is multiply

 "-" in log is divide

 "/2" is like square root

 blk is vertical biased

 blk height of 1

 -------

 meta

 -------

 meta request is 64b and is 8x8byte meta element

 each 64b meta request for dcn is 8x8 meta elements and

 a meta element covers one 256b block of the data surface.

 meta req is 8x8 byte, each byte represent 1 blk256

 the dimensions of a meta row are meta_row_width x meta_row_height in elements.

 calculate upper bound of the meta_row_width

full sized meta chunk width in unit of data elements

64B mpte request

 ------

 dpte

 ------

 one line high

 only 3 possible shapes for dpte request in dimensions of ptes: 8x1, 4x2, 2x4.

one 64B PTE request returns 8 PTEs

4KB tile means 4kB page size

one 64B req gives 8x1 PTEs for 4KB tile

 tile block >= 64KB

two 64B reqs of 2x4 PTEs give 16 PTEs to cover 64KB

 log2_64KB_width

 log2_64KB_height

64KB page size and must 64KB tile block

one 64B req gives 8x1 PTEs for 64KB tile

 The dpte request dimensions in data elements is dpte_req_width x dpte_req_height

 log2_vmpg_width is how much 1 pte represent, now calculating how much a 64b pte req represent

 That depends on the pte shape (i.e. 8x1, 4x2, 2x4)

log2_dpte_req_height    = log2_vmpg_height + log2_dpte_req_height_ptes;

log2_dpte_req_width     = log2_vmpg_width + log2_dpte_req_width_ptes;

 calculate pitch dpte row buffer can hold

 round the result down to a power of two.

 For linear, the dpte row is pitch dependent and the pte requests wrap at the pitch boundary.

 the dpte_row_width_ub is the upper bound of data_pitch*dpte_row_height in elements with this unique buffering.

 the upper bound of the dpte_row_width without dependency on viewport position follows.

 for tiled mode, row height is the same as req height and row store up to vp size upper bound

 tile block >= 64KB

2*64B dpte request

64B dpte request

 the dpte_group_bytes is reduced for the specific case of vertical

 access of a tile surface that has dpte request of 8x1 ptes.

reduced, in this case, will have page fault within a group

full size

since pte request size is 64byte, the number of data pte requests per full sized group is as follows.

length in 64b requests

 full sized data pte group width in elements

But if the tile block >=64KB and the page size is 4KB, then each dPTE request is 2*64B

 tile block >= 64KB

 since dpte groups are only aligned to dpte_req_width and not dpte_group_width,

 the upper bound for the dpte groups per row is as follows.

 TODO check if ppe apply for both luma and chroma in 422 case

 get param for luma surface

 get param for chroma surface

 calculate how to split the det buffer space between luma and chroma

 Note: currently taken in as is.

 Nice to decouple code from hw register implement and extract code that are repeated for luma and chroma.

 -------------------------

 Section 1.15.2.1: OTG dependent Params

 -------------------------

 Timing

    unsigned int hblank_start = dst.hblank_start; 
 Scaling

    double vinit_l;

    double vinit_c;

    double vinit_bot_l;

    double vinit_bot_c;

    unsigned int swath_height_l;

    unsigned int dpte_bytes_per_row_ub_l;

    unsigned int meta_pte_bytes_per_frame_ub_l;

    unsigned int meta_bytes_per_row_ub_l;

    unsigned int swath_height_c;

   unsigned int dpte_bytes_per_row_ub_c;

 15 bits

 -------------------------

 Section 1.15.2.2: Prefetch, Active and TTU

 -------------------------

 Prefetch Calc

 Source

             dcc_en              = src.dcc;

 TODO

 vp access direction: horizontal or vertical accessed

      bytes_per_element_l = get_bytes_per_element(source_format_class(src.source_format), 0);

      bytes_per_element_c = get_bytes_per_element(source_format_class(src.source_format), 1);

 Scaling

     vinit_l         = scl.vinit;

     vinit_c         = scl.vinit_c;

     vinit_bot_l     = scl.vinit_bot;

     vinit_bot_c     = scl.vinit_bot_c;

    unsigned int swath_height_l                 = rq_dlg_param->rq_l.swath_height;

    unsigned int dpte_bytes_per_row_ub_l        = rq_dlg_param->rq_l.dpte_bytes_per_row_ub;

    unsigned int meta_pte_bytes_per_frame_ub_l  = rq_dlg_param->rq_l.meta_pte_bytes_per_frame_ub;

    unsigned int meta_bytes_per_row_ub_l        = rq_dlg_param->rq_l.meta_bytes_per_row_ub;

    unsigned int swath_height_c                 = rq_dlg_param->rq_c.swath_height;

   dpte_bytes_per_row_ub_c        = rq_dlg_param->rq_c.dpte_bytes_per_row_ub;

 TODO: Where is this coming from?

 TODO: What if this min_vblank doesn't match the value in the dml_config_settings.cpp?

 Lwait

 magic!

 Active

 *2 for 2 pixel per element

 In ODM

 This "hack"  is only allowed (and valid) for MPC combine. In ODM

 combine, you MUST specify the full_recout_width...according to Oswin

 assume half split for dcn1

 As of DCN2, mpc_combine and odm_combine are mutually exclusive

 per line

 per line

 per line

 per line

 TTU - Luma / Chroma

 vertical access

 per req

 per req

 per req

 per req

 TTU - Cursor

 TTU - Misc

 all hard-coded

 Assignment to register structures

 in terms of line

 in terms of refclk

 dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now

 TODO: dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now

 TODO: Is this the right calculation? Does htotal need to be halved?

 off

ASSERT(disp_ttu_regs->qos_level_high_wm < dml_pow(2, 14));*/

 Get watermark and Tex.

 TODO: Deprecated

 system parameter calculation done

 byte

 32bit

 TODO: oswin to think about what to do for cursor

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 Super monster function with some 45 argument

 valid bpc         = source bits per component in the set of {8, 10, 12}

 valid bpp         = increments of 1/16 of a bit

                    min = 6/7/8 in N420/N422/444, respectively

                    max = such that compression is 1:1

valid sliceWidth  = number of pixels per slice line, must be less than or equal to 5184/numSlices (or 4096/numSlices in 420 mode)

valid numSlices   = number of slices in the horiziontal direction per DSC engine in the set of {1, 2, 3, 4}

valid pixelFormat = pixel/color format in the set of {:N444_RGB, :S422, :N422, :N420}

 fixed value

 N422/N420 operate at 2 pixels per clock

 #all other modes operate at 1 pixel per clock

initial transmit delay as per PPS

compute ssm delay

divide by pixel per cycle to compute slice width as seen by DSC

422 mode has an additional cycle of delay

main calculation for the dscce

dsc processes 3 pixel containers per cycle and a container can contain 1 or 2 pixels

   sfr

   dsccif

   dscc - input deserializer

   dscc gets pixels every other cycle

   dscc - input cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

  dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

   dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - output serializer

   dscc - cdc uncertainty

   sft

 dml_ml->vba.DISPCLK and dml_ml->vba.DPPCLK Calculation



 Urgent Watermark

 Let's do this calculation again??

 dm_420_10

 NB P-State/DRAM Clock Change Watermark

 Stutter Efficiency

 dml_ml->vba.DCFCLK Deep Sleep

 Stutter Watermark

 Urgent Latency Supported

 Non-Urgent Latency Tolerance

 DSCCLK

 DSC Delay

 TODO

 NumberOfPlanes

 Prefetch

Display Pipeline Delivery Time in Prefetch

 Min TTUVBlank

 DCC Configuration

 NB P-State/DRAM Clock Change Support

XFC Parameters:

only use max vstart if it is not drr or lateflip.

 TODO: This doesn't seem to match programming guide

MODE SUPPORT, VOLTAGE STATE AND SOC CONFIGURATION*/

Scale Ratio, taps Support Check*/

Source Format, Pixel Format and Scan Support Check*/

Bandwidth Support Check*/

Writeback Latency support check*/

Re-ordering Buffer Support Check*/

Writeback Mode Support Check*/

Writeback Scale Ratio and Taps Support Check*/

Maximum DISPCLK/DPPCLK Support check*/

Viewport Size Check*/

Total Available Pipes Support Check*/

Total Available OTG Support Check*/

Display IO and DSC Support Check*/

DSC Delay per state*/

Prefetch Check

Prefetch Check*/

Vertical Active BW support*/

PTE Buffer Size Check*/

Cursor Support Check*/

Valid Pitch Check*/

Mode Support, Voltage State and SOC Configuration*/

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 alias enum

 requested size is bigger than the table */

	/* in native_422 or native_420 modes, the bits_per_pixel is double the

	 * target bpp (the latter is what calc_rc_params expects)

 fixed parameters */

 TODO: Make sure the formula for calculating this is precise (ceiling

 vs. floor, and at what point they should be applied)

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parseable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 FIXME: take the max between luma, chroma chunk size?

 okay for now, as we are setting chunk_bytes to 8kb anyways

32kb

 half to chroma

 2/3 to chroma

full 256b request

128b request (for luma only for yuv420 8bpc)

 Note: assumption, the config that pass in will fit into

       the detiled buffer.

full sized meta chunk width in unit of data elements

 remember log rule

 "+" in log is multiply

 "-" in log is divide

 "/2" is like square root

 blk is vertical biased

 blk height of 1

 -------

 meta

 -------

 meta request is 64b and is 8x8byte meta element

 each 64b meta request for dcn is 8x8 meta elements and

 a meta element covers one 256b block of the data surface.

 meta req is 8x8 byte, each byte represent 1 blk256

 the dimensions of a meta row are meta_row_width x meta_row_height in elements.

 calculate upper bound of the meta_row_width

full sized meta chunk width in unit of data elements

64B mpte request

 ------

 dpte

 ------

 one line high

 only 3 possible shapes for dpte request in dimensions of ptes: 8x1, 4x2, 2x4.

one 64B PTE request returns 8 PTEs

4KB tile means 4kB page size

one 64B req gives 8x1 PTEs for 4KB tile

 tile block >= 64KB

two 64B reqs of 2x4 PTEs give 16 PTEs to cover 64KB

 log2_64KB_width

 log2_64KB_height

64KB page size and must 64KB tile block

one 64B req gives 8x1 PTEs for 64KB tile

 The dpte request dimensions in data elements is dpte_req_width x dpte_req_height

 log2_vmpg_width is how much 1 pte represent, now calculating how much a 64b pte req represent

 That depends on the pte shape (i.e. 8x1, 4x2, 2x4)

log2_dpte_req_height    = log2_vmpg_height + log2_dpte_req_height_ptes;

log2_dpte_req_width     = log2_vmpg_width + log2_dpte_req_width_ptes;

 calculate pitch dpte row buffer can hold

 round the result down to a power of two.

 For linear, the dpte row is pitch dependent and the pte requests wrap at the pitch boundary.

 the dpte_row_width_ub is the upper bound of data_pitch*dpte_row_height in elements with this unique buffering.

 the upper bound of the dpte_row_width without dependency on viewport position follows.

 for tiled mode, row height is the same as req height and row store up to vp size upper bound

 tile block >= 64KB

2*64B dpte request

64B dpte request

 the dpte_group_bytes is reduced for the specific case of vertical

 access of a tile surface that has dpte request of 8x1 ptes.

reduced, in this case, will have page fault within a group

full size

since pte request size is 64byte, the number of data pte requests per full sized group is as follows.

length in 64b requests

 full sized data pte group width in elements

But if the tile block >=64KB and the page size is 4KB, then each dPTE request is 2*64B

 tile block >= 64KB

 since dpte groups are only aligned to dpte_req_width and not dpte_group_width,

 the upper bound for the dpte groups per row is as follows.

 FIXME check if ppe apply for both luma and chroma in 422 case

 vp access direction: horizontal or vertical accessed

 get param for luma surface

 get param for chroma surface

 calculate how to split the det buffer space between luma and chroma

 Note: currently taken in as is.

 Nice to decouple code from hw register implement and extract code that are repeated for luma and chroma.

 -------------------------

 Section 1.15.2.1: OTG dependent Params

 -------------------------

 Timing

    unsigned int hblank_start = dst.hblank_start; 
 Scaling

    double vinit_l;

    double vinit_c;

    double vinit_bot_l;

    double vinit_bot_c;

    unsigned int swath_height_l;

    unsigned int dpte_bytes_per_row_ub_l;

    unsigned int meta_pte_bytes_per_frame_ub_l;

    unsigned int meta_bytes_per_row_ub_l;

    unsigned int swath_height_c;

   unsigned int dpte_bytes_per_row_ub_c;

 15 bits

 -------------------------

 Section 1.15.2.2: Prefetch, Active and TTU

 -------------------------

 Prefetch Calc

 Source

             dcc_en              = src.dcc;

 FIXME

 vp access direction: horizontal or vertical accessed

      bytes_per_element_l = get_bytes_per_element(source_format_class(src.source_format), 0);

      bytes_per_element_c = get_bytes_per_element(source_format_class(src.source_format), 1);

 Scaling

 TODO: Where is this coming from?

 TODO: What if this min_vblank doesn't match the value in the dml_config_settings.cpp?

 Lwait

 TODO: Should this be urgent_latency_pixel_mixed_with_vm_data_us?

 TODO: Should this be urgent_latency_pixel_mixed_with_vm_data_us?

 magic!

 Active

 *2 for 2 pixel per element

 In ODM

 This "hack"  is only allowed (and valid) for MPC combine. In ODM

 combine, you MUST specify the full_recout_width...according to Oswin

 assume half split for dcn1

 As of DCN2, mpc_combine and odm_combine are mutually exclusive

 per line

 per line

 per line

 per line

 TTU - Luma / Chroma

 vertical access

 per req

 per req

 per req

 per req

 TTU - Cursor

 TTU - Misc

 all hard-coded

 Assignment to register structures

 in terms of line

 in terms of refclk

 dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now

 Clamp to max for now

 TODO: dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now

 TODO: Is this the right calculation? Does htotal need to be halved?

 off

 Get watermark and Tex.

 TODO: Deprecated

 system parameter calculation done

 byte

 32bit

 FIXME: oswin to think about what to do for cursor

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parsable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 Super monster function with some 45 argument

 valid bpc         = source bits per component in the set of {8, 10, 12}

 valid bpp         = increments of 1/16 of a bit

                    min = 6/7/8 in N420/N422/444, respectively

                    max = such that compression is 1:1

valid sliceWidth  = number of pixels per slice line, must be less than or equal to 5184/numSlices (or 4096/numSlices in 420 mode)

valid numSlices   = number of slices in the horiziontal direction per DSC engine in the set of {1, 2, 3, 4}

valid pixelFormat = pixel/color format in the set of {:N444_RGB, :S422, :N422, :N420}

 fixed value

 N422/N420 operate at 2 pixels per clock

 #all other modes operate at 1 pixel per clock

initial transmit delay as per PPS

compute ssm delay

divide by pixel per cycle to compute slice width as seen by DSC

422 mode has an additional cycle of delay

main calculation for the dscce

dsc processes 3 pixel containers per cycle and a container can contain 1 or 2 pixels

   sfr

   dsccif

   dscc - input deserializer

   dscc gets pixels every other cycle

   dscc - input cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

  dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

   dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - output serializer

   dscc - cdc uncertainty

   sft

 Limit to prevent overflow in DST_Y_PREFETCH register

 5/30/2018 - This was an optimization requested from Sy but now NumberOfCursors is no longer a factor

             so if this needs to be reinstated, then it should be officially done in the VBA code as well.

			if (mode_lib->NumberOfCursors > 0 || XFCEnabled)

			else

				TimeForFetchingMetaPTE = 0.0;

 See note above dated 5/30/2018

			if (NumberOfCursors > 0 || XFCEnabled)

			else 
				TimeForFetchingRowInVBlank = 0.0;

 See note above dated 5/30/2018

						- ((NumberOfCursors > 0 || GPUVMEnable || DCCEnable) ?

 TODO: Did someone else add this??

 DISPCLK and DPPCLK Calculation



 Urgent and B P-State/DRAM Clock Change Watermark

 dm_420_10

 DCFCLK Deep Sleep

 DSCCLK

 DSC Delay

 TODO

 NumberOfPlanes

 Prefetch

 We don't really care to iterate between the various prefetch modes

mode_lib->vba.PrefetchERROR = CalculateMinAndMaxPrefetchMode(mode_lib->vba.AllowDRAMSelfRefreshOrDRAMClockChangeInVblank, &mode_lib->vba.MinPrefetchMode, &mode_lib->vba.MaxPrefetchMode);

Watermarks and NB P-State/DRAM Clock Change Support

 dummy

Display Pipeline Delivery Time in Prefetch, Groups

 Min TTUVBlank

 DCC Configuration

 We should always know the direction DCCProgrammingAssumesScanDirectionUnknown,

XFC Parameters:

 Stutter Efficiency

 Display Pipe Configuration

 TODO: This doesn't seem to match programming guide

MODE SUPPORT, VOLTAGE STATE AND SOC CONFIGURATION*/

Scale Ratio, taps Support Check*/

Source Format, Pixel Format and Scan Support Check*/

Bandwidth Support Check*/

Writeback Latency support check*/

Re-ordering Buffer Support Check*/

Writeback Mode Support Check*/

Writeback Scale Ratio and Taps Support Check*/

Maximum DISPCLK/DPPCLK Support check*/

Viewport Size Check*/

Total Available Pipes Support Check*/

Total Available OTG Support Check*/

Display IO and DSC Support Check*/

DSC Delay per state*/

Prefetch Check

Vertical Active BW support*/

PTE Buffer Size Check*/

Cursor Support Check*/

Valid Pitch Check*/

Mode Support, Voltage State and SOC Configuration*/

double   DCFCLKDeepSleepPerPlane[DC__NUM_DPP__MAX];

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 FIXME: take the max between luma, chroma chunk size?

 okay for now, as we are setting chunk_bytes to 8kb anyways

32kb

 half to chroma

 2/3 to chroma

full 256b request

full sized meta chunk width in unit of data elements

 remember log rule

 "+" in log is multiply

 "-" in log is divide

 "/2" is like square root

 blk is vertical biased

 blk height of 1

 -------

 meta

 -------

 meta request is 64b and is 8x8byte meta element

 each 64b meta request for dcn is 8x8 meta elements and

 a meta element covers one 256b block of the data surface.

 meta req is 8x8 byte, each byte represent 1 blk256

 the dimensions of a meta row are meta_row_width x meta_row_height in elements.

 calculate upper bound of the meta_row_width

full sized meta chunk width in unit of data elements

64B mpte request

 ------

 dpte

 ------

 one line high

 only 3 possible shapes for dpte request in dimensions of ptes: 8x1, 4x2, 2x4.

one 64B PTE request returns 8 PTEs

4KB tile means 4kB page size

one 64B req gives 8x1 PTEs for 4KB tile

 tile block >= 64KB

two 64B reqs of 2x4 PTEs give 16 PTEs to cover 64KB

 log2_64KB_width

 log2_64KB_height

64KB page size and must 64KB tile block

one 64B req gives 8x1 PTEs for 64KB tile

 The dpte request dimensions in data elements is dpte_req_width x dpte_req_height

 log2_vmpg_width is how much 1 pte represent, now calculating how much a 64b pte req represent

 That depends on the pte shape (i.e. 8x1, 4x2, 2x4)

log2_dpte_req_height	= log2_vmpg_height + log2_dpte_req_height_ptes;

log2_dpte_req_width	 = log2_vmpg_width + log2_dpte_req_width_ptes;

 calculate pitch dpte row buffer can hold

 round the result down to a power of two.

 For linear, the dpte row is pitch dependent and the pte requests wrap at the pitch boundary.

 the dpte_row_width_ub is the upper bound of data_pitch*dpte_row_height in elements with this unique buffering.

 the upper bound of the dpte_row_width without dependency on viewport position follows.

 for tiled mode, row height is the same as req height and row store up to vp size upper bound

 tile block >= 64KB

2*64B dpte request

64B dpte request

 the dpte_group_bytes is reduced for the specific case of vertical

 access of a tile surface that has dpte request of 8x1 ptes.

reduced, in this case, will have page fault within a group

since pte request size is 64byte, the number of data pte requests per full sized group is as follows.

length in 64b requests

 full sized data pte group width in elements

But if the tile block >=64KB and the page size is 4KB, then each dPTE request is 2*64B

 tile block >= 64KB

 since dpte groups are only aligned to dpte_req_width and not dpte_group_width,

 the upper bound for the dpte groups per row is as follows.

 FIXME check if ppe apply for both luma and chroma in 422 case

 vp access direction: horizontal or vertical accessed

 get param for luma surface

 get param for chroma surface

 calculate how to split the det buffer space between luma and chroma

 byte

 32bit

 FIXME: oswin to think about what to do for cursor

 Note: currently taken in as is.

 Nice to decouple code from hw register implement and extract code that are repeated for luma and chroma.

 -------------------------

 Section 1.15.2.1: OTG dependent Params

 -------------------------

 Timing

	unsigned int hblank_start = dst.hblank_start; 
 Scaling

	double vinit_l;

	double vinit_c;

	double vinit_bot_l;

	double vinit_bot_c;

	unsigned int swath_height_l;

	unsigned int dpte_bytes_per_row_ub_l;

	unsigned int meta_pte_bytes_per_frame_ub_l;

	unsigned int meta_bytes_per_row_ub_l;

	unsigned int swath_height_c;

   unsigned int dpte_bytes_per_row_ub_c;

 15 bits

 -------------------------

 Section 1.15.2.2: Prefetch, Active and TTU

 -------------------------

 Prefetch Calc

 Source

			 dcc_en			  = src.dcc;

 TODO

 vp access direction: horizontal or vertical accessed

 Scaling

 TODO: Where is this coming from?

 TODO: What if this min_vblank doesn't match the value in the dml_config_settings.cpp?

 do some adjustment on the dst_after scaler to account for odm combine mode

 need to figure out which side of odm combine we're in

 figure out which pipes go together

 TODO: We should really check that 4to1 is supported before setting it to 4

 Lwait

 TODO: Should this be urgent_latency_pixel_mixed_with_vm_data_us?

 TODO: Should this be urgent_latency_pixel_mixed_with_vm_data_us?

U5.2

U4.2

 magic!

 Active

 *2 for 2 pixel per element

 In ODM

 This "hack"  is only allowed (and valid) for MPC combine. In ODM

 combine, you MUST specify the full_recout_width...according to Oswin

 assume half split for dcn1

 As of DCN2, mpc_combine and odm_combine are mutually exclusive

 per line

 per line

 per line

 per line

 smehta: this is a hack added until we get the real dml, sorry, need to make progress

 TTU - Luma / Chroma

 vertical access

 per req

 per req

 per req

 per req

 TTU - Cursor

 TTU - Misc

 all hard-coded

 Assignment to register structures

 in terms of line

 in terms of refclk

 dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now

 Clamp to max for now

 TODO: dcc for 4:2:0 is not supported in dcn1.0.  assigned to be the same as _l for now

 TODO: Is this the right calculation? Does htotal need to be halved?

 off

 Get watermark and Tex.

 TODO: Deprecated

 system parameter calculation done

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * NOTE:

 *   This file is gcc-parsable HW gospel, coming straight from HW engineers.

 *

 * It doesn't adhere to Linux kernel style and sometimes will do things in odd

 * ways. Unless there is something clearly wrong with it the code should

 * remain as-is as it provides us with a guarantee from HW that it is correct.

 Super monster function with some 45 argument

 valid bpc         = source bits per component in the set of {8, 10, 12}

 valid bpp         = increments of 1/16 of a bit

                    min = 6/7/8 in N420/N422/444, respectively

                    max = such that compression is 1:1

valid sliceWidth  = number of pixels per slice line, must be less than or equal to 5184/numSlices (or 4096/numSlices in 420 mode)

valid numSlices   = number of slices in the horiziontal direction per DSC engine in the set of {1, 2, 3, 4}

valid pixelFormat = pixel/color format in the set of {:N444_RGB, :S422, :N422, :N420}

 fixed value

 N422/N420 operate at 2 pixels per clock

 #all other modes operate at 1 pixel per clock

initial transmit delay as per PPS

compute ssm delay

divide by pixel per cycle to compute slice width as seen by DSC

422 mode has an additional cycle of delay

main calculation for the dscce

dsc processes 3 pixel containers per cycle and a container can contain 1 or 2 pixels

   sfr

   dsccif

   dscc - input deserializer

   dscc gets pixels every other cycle

   dscc - input cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc gets pixels every other cycle

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

  dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - cdc uncertainty

   dscc - output serializer

   sft

   sfr

   dsccif

   dscc - input deserializer

   dscc - input cdc fifo

   dscc - cdc uncertainty

   dscc - output cdc fifo

   dscc - output serializer

   dscc - cdc uncertainty

   sft

 DAL custom code: need to update ReturnBW in case min dcfclk is overriden */

 End DAL custom code */

 DISPCLK and DPPCLK Calculation



 Urgent and B P-State/DRAM Clock Change Watermark

 DCFCLK Deep Sleep

 DSCCLK

 DSC Delay

 NumberOfPlanes

 Prefetch

Watermarks and NB P-State/DRAM Clock Change Support

 dummy

Display Pipeline Delivery Time in Prefetch, Groups

 Min TTUVBlank

 DCC Configuration

 We should always know the direction DCCProgrammingAssumesScanDirectionUnknown,

Maximum Bandwidth Used

 VStartup Margin

 Stutter Efficiency

 Display Pipe Configuration

MODE SUPPORT, VOLTAGE STATE AND SOC CONFIGURATION*/

Scale Ratio, taps Support Check*/

Source Format, Pixel Format and Scan Support Check*/

Bandwidth Support Check*/

Writeback Latency support check*/

Writeback Mode Support Check*/

Writeback Scale Ratio and Taps Support Check*/

Maximum DISPCLK/DPPCLK Support check*/

Total Available Pipes Support Check*/

Display IO and DSC Support Check*/

Number Of DSC Slices*/

 TODO: Need some other way to handle this nonsense

 v->OutputTypeAndRatePerState[i][k] = v->Output[k] & " HBR"

 TODO: Need some other way to handle this nonsense

 v->OutputTypeAndRatePerState[i][k] = v->Output[k] & " HBR2"

if (v->Outbpp == BPP_INVALID && v->DSCEnabled[k] == dm_dsc_enable_only_if_necessary && v->ForcedOutputLinkBPP[k] == 0) {

 TODO: Need some other way to handle this nonsense

 v->OutputTypeAndRatePerState[i][k] = v->Output[k] & " HBR3"

 Skip dscclk validation: as long as dispclk is supported, dscclk is also implicitly supported */

DSC Delay per state*/

Calculate Swath, DET Configuration, DCFCLKDeepSleep



Calculate Return BW

 Clamp calculated values to actual minimum */

Re-ordering Buffer Support Check

Vertical Active BW support check

Prefetch Check

PTE Buffer Size Check*/

Cursor Support Check*/

Valid Pitch Check*/

Mode Support, Voltage State and SOC Configuration*/

double   DCFCLKDeepSleepPerPlane[DC__NUM_DPP__MAX];

 CONFIG_DRM_AMD_DC_DCN */

/*

 * Copyright 2019-2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

vidip/dc/dcn3/doc/architecture/DCN3x_Display_Mode.xlsm#83 */

 ?

 ?

 writeback_line_buffer_buffer_size = 656640

 SRExitTime

 ?

 ?

 ?

 only pipe 0 is read for voltage and dcf/soc clocks */

 Default clock levels are used for diags, which may lead to overclocking. */

 loop backwards*/

 duplicate last level */

 WM Set D */

 WM Set C */

 WM Set B */

 WM Set A */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Set Default link settings */

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2020 Mauro Rossi <issor.oruam@gmail.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 generic src_id for all HPD and HPDRX interrupts */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 generic src_id for all HPD and HPDRX interrupts */

 compile time expand base address. */

/* vupdate_no_lock_int_entry maps to DC_IRQ_SOURCE_VUPDATEx, to match semantic

 * of DCE's DC_IRQ_SOURCE_VUPDATEx.

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 generic src_id for all HPD and HPDRX interrupts */

 compile time expand base address. */

/* vupdate_no_lock_int_entry maps to DC_IRQ_SOURCE_VUPDATEx, to match semantic

 * of DCE's DC_IRQ_SOURCE_VUPDATEx.

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 generic src_id for all HPD and HPDRX interrupts */

 compile time expand base address. */

/* vupdate_no_lock_int_entry maps to DC_IRQ_SOURCE_VUPDATEx, to match semantic

 * of DCE's DC_IRQ_SOURCE_VUPDATEx.

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 generic src_id for all HPD and HPDRX interrupts */

 compile time expand base address. */

/* vupdate_no_lock_int_entry maps to DC_IRQ_SOURCE_VUPDATEx, to match semantic

 * of DCE's DC_IRQ_SOURCE_VUPDATEx.

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 generic src_id for all HPD and HPDRX interrupts */

 compile time expand base address. */

/* vupdate_no_lock_int_entry maps to DC_IRQ_SOURCE_VUPDATEx, to match semantic

 * of DCE's DC_IRQ_SOURCE_VUPDATEx.

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 generic src_id for all HPD and HPDRX interrupts */

 compile time expand base address. */

/* vupdate_no_lock_int_entry maps to DC_IRQ_SOURCE_VUPDATEx, to match semantic

 * of DCE's DC_IRQ_SOURCE_VUPDATEx.

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 generic src_id for all HPD and HPDRX interrupts */

/* vupdate_no_lock_int_entry maps to DC_IRQ_SOURCE_VUPDATEx, to match semantic

 * of DCE's DC_IRQ_SOURCE_VUPDATEx.

 SPDX-License-Identifier: MIT

/*

 * Copyright (C) 2021 Advanced Micro Devices, Inc.

 *

 * Authors: AMD

 generic src_id for all HPD and HPDRX interrupts */

 compile time expand base address. */

/* vupdate_no_lock_int_entry maps to DC_IRQ_SOURCE_VUPDATEx, to match semantic

 * of DCE's DC_IRQ_SOURCE_VUPDATEx.

/*

 * Copyright 2012-15 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 generic src_id for all HPD and HPDRX interrupts */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

		/*

		 * Only notify active stream or virtual stream.

		 * Need to notify virtual stream to work around

		 * headless case. HPD does not fire when system is in

		 * S0i2.

		/*

		 * Sum up plane_count for all streams ( active and virtual ).

 Unknown Asic */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set register offset */

 set register offset with instance */

ClocksStateInvalid - should not be used*/

ClocksStateUltraLow - currently by HW design team not supposed to be used*/

ClocksStateLow*/

ClocksStateNominal*/

ClocksStatePerformance*/

TODO: remove use the two broken down functions

 Prepare to program display clock*/

 Make sure requested clock isn't lower than minimum threshold*/

	/*

	 * from power down, we need mark the clock state as ClocksStateNominal

	 * from HWReset, so when resume we will call pplib voltage regulator.

Program DP ref Clock*/

VBIOS will determine DPREFCLK frequency, so we don't set it*/

 Prepare to program display clock*/

 Make sure requested clock isn't lower than minimum threshold*/

	/*

	 * from power down, we need mark the clock state as ClocksStateNominal

	 * from HWReset, so when resume we will call pplib voltage regulator.

Program DP ref Clock*/

VBIOS will determine DPREFCLK frequency, so we don't set it*/

 Returns the dp_refclk that was set */

TODO: W/A for dal3 linux, investigate why this works */

 get max clock state from PPLIB */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

ClocksStateInvalid - should not be used*/

ClocksStateUltraLow - currently by HW design team not supposed to be used*/

ClocksStateLow*/

ClocksStateNominal*/

ClocksStatePerformance*/

/**

 * dce121_clock_patch_xgmi_ss_info() - Save XGMI spread spectrum info

 * @clk_mgr_dce: clock manager internal structure

 *

 * Reads from VBIOS the XGMI spread spectrum info and saves it within

 * the dce clock manager. This operation will overwrite the existing dprefclk

 * SS values if the vBIOS query succeeds. Otherwise, it does nothing. It also

 * sets the ->xgmi_enabled flag.

			/*

			 * Currently for DP Reference clock we

			 * need only SS percentage for

			 * downspread

TODO: W/A for dal3 linux, investigate why this works */

		/*

		 * When xGMI is enabled, the display clk needs to be adjusted

		 * with the WAFL link's SS percentage.

	/*

	 * The xGMI enabled info is used to determine if audio and display

	 * clocks need to be adjusted with the WAFL link's SS info.

/*

 * Copyright 2020 Mauro Rossi <issor.oruam@gmail.com>

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Currently the register shifts and masks in this file are used for dce60

 * which has no DPREFCLK_CNTL register

 * TODO: remove this when DENTIST_DISPCLK_CNTL

 * is moved to dccg, where it belongs

 set register offset */

 Max clock values for each state indexed by "enum clocks_state": */

 ClocksStateInvalid - should not be used */

 ClocksStateUltraLow - not expected to be used for DCE 6.0 */

 ClocksStateLow */

 ClocksStateNominal */

 ClocksStatePerformance */

 DCE6 has no DPREFCLK_CNTL to read DP Reference Clock source */

	/* Read the mmDENTIST_DISPCLK_CNTL to get the currently

 Convert DENTIST_DPREFCLK_WDIVIDERto actual divider*/

 Calculate the current DFS clock, in kHz.*/

TODO: W/A for dal3 linux, investigate why this works */

 get max clock state from PPLIB */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 For dce12_get_dp_ref_freq_khz

 For dcn20_update_clocks_update_dpp_dto

 TODO: remove this include once we ported over remaining clk mgr functions*/

 abusing the fact that the dig and phy are coupled to see if the phy is enabled */

 WA for hang on HDMI after display off back back on*/

	/*

	 * if it is safe to lower, but we are already in the lower state, we don't have to do anything

	 * also if safe to lower is false, we just go in the higher state

 check that we're not already in lower */

 if we can go lower, go lower */

 update power state */

 check that we're not already in D0 */

 update power state */

 workaround: Limit dppclk to 100Mhz to avoid lower eDP panel switch to plus 4K monitor underflow.

 increase per DPP DTO before lowering global dppclk

 increase global DPPCLK before lowering per DPP DTO

 always update dtos unless clock is lowered and not safe to lower

 notify DMCUB of latest clocks

 get FbMult value */

	/*

	 * Register value of fbmult is in 8.16 format, we are converting to 31.32

	 * to leverage the fix point operations available in driver

 16 bit fractional part*/

 8 bit integer part */

	/*

	 * since fractional part is only 16 bit in register definition but is 32 bit

	 * in our fix point definiton, need to shift left by 16 to obtain correct value

 multiply by REFCLK period */

 integer part is now VCO frequency in kHz */

 Assumption is that boot state always supports pstate

 skip empty entries, the smu array has no holes*/

 We will not select WM based on fclk, so leave it as unconstrained */

 add 1 to make it non-overlapping with next lvl */

 unconstrained for memory retraining */

 Modify previous watermark range to cover up to max */

 Must have at least one set of valid watermarks */

 modify the min and max to make sure we cover the whole range*/

 This is for writeback only, does not matter currently as no writeback support*/

 Find lowest DPM, FCLK is filled in reverse order*/

 clock table is all 0s, just use our own hardcode */

 dispclk and dppclk can be max at any voltage, same number of levels for both */

 TODO: Check we get what we expect during bringup */

 Saved clocks configured at boot for debug purposes */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

Not used. DPRef is constant

Keep it in case VMIN dees not support phy clk

Not used anymore

Not used anymore

Used for WM table txfr

/*

 * Function to be used instead of REG_WAIT macro because the wait ends when

 * the register is NOT EQUAL to zero, and because the translation in msg_if.h

 * won't work with REG_WAIT.

 First clear response register */

 Set the parameter register for the SMU message, unit is Mhz */

 Trigger the message transaction by writing the message ID */

  Unit of SMU msg parameter is Mhz */

 TODO: add code for programing DP DTO, currently this is down by command table */

TODO: Work with smu team to define optimization options.

TODO: Work with smu team to define optimization options.

 Arg = 1: Turn DTB on; 0: Turn DTB CLK OFF. when it is on, it is 600MHZ */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 we want to floor here to get higher clock than required rather than lower */

		/* Loop index will match dpp->inst if resource exists,

		 * and we want to avoid dependency on dpp object

 When changing divider to or from 127, some extra programming is required to prevent corruption */

 Virtual encoders don't have this function */

 Virtual encoders don't have this function */

this is from resume or boot up, if forced_clock cfg option used, we bypass program dispclk and DPPCLK, but need set them for S3.

force_clock_mode 0x1:  force reset the clock even it is the same clock as long as it is in Passive level.

 if clock is being lowered, increase DTO before lowering refclk

 if clock is being raised, increase refclk before lowering DTO

 always update dtos unless clock is lowered and not safe to lower

update dmcu for wait_loop count*/

 Min fclk = 1.2GHz since all the extra scemi logic seems to run off of it */

	/* Both fclk and ref_dppclk run on the same scemi clock.

	 * So take the higher value since the DPP DTO is typically programmed

	 * such that max dppclk is 1:1 with ref_dppclk.

 Both fclk and ref_dppclk run on the same scemi clock.

 TODO: set dtbclk in correct place */

 Assumption is that boot state always supports pstate

 Calculate the current DFS clock, in kHz.*/

 Notify clk_mgr of a change in link rate, update phyclk frequency if necessary */

 700 MHz planned if VCO is 3.85 GHz, will be retrieved

 DFS Slice 2 should be used for DPREFCLK */

 Convert DPREFCLK DFS Slice DID to actual divider*/

 get FbMult value */

		/* set up a fixed-point number

		 * this works because the int part is on the right edge of the register

		 * and the frac part is on the left edge

 multiply by REFCLK period */

 integer part is now VCO frequency in kHz */

 in case we don't get a value from the register, use default */

 Calculate the DPREFCLK in kHz.*/

Integrated_info table does not exist on dGPU projects so should not be referenced

anywhere in code for dGPUs.

Also there is no plan for now that DFS BYPASS will be used on NV10/12/14.

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

		/* currently there is no DCECLOCK_TYPE_DPPCLK type defined in VBIOS interface.

		 * vbios program DPPCLK to the same DispCLK limitation

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Function to be used instead of REG_WAIT macro because the wait ends when

 * the register is NOT EQUAL to zero, and because the translation in msg_if.h

 * won't work with REG_WAIT.

 First clear response register */

 Set the parameter register for the SMU message, unit is Mhz */

 Trigger the message transaction by writing the message ID */

 Actual dispclk set is returned in the parameter register */

  Unit of SMU msg parameter is Mhz */

 pmfw always set clock more than or equal requested clock

 TODO: add code for programing DP DTO, currently this is down by command table */

 if PMFW doesn't support this message, assume retraining is disabled

 so we only use most optimal watermark if we know retraining is enabled.

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Constants */

 Number obtained from LPDDR4 Training Counter Requirement doc */

 SMU Version that is able to set DISPCLK below 100MHz */

 Macros */

 TODO: evaluate how to lower or disable all dcn clocks in screen off case */

 abusing the fact that the dig and phy are coupled to see if the phy is enabled */

 WA for hang on HDMI after display off back back on*/

 update power state */

		/* Loop index may not match dpp->inst if some pipes disabled,

		 * so select correct inst from res_pool

	/*

	 * if it is safe to lower, but we are already in the lower state, we don't have to do anything

	 * also if safe to lower is false, we just go in the higher state

 check that we're not already in lower */

 if we can go lower, go lower */

 update power state */

 check that we're not already in D0 */

 update power state */

 workaround: Limit dppclk to 100Mhz to avoid lower eDP panel switch to plus 4K monitor underflow.

 Do not adjust dppclk if dppclk is 0 to avoid unexpected result

	/*

	 * Temporally ignore thew 0 cases for disp and dpp clks.

	 * We may have a new feature that requires 0 clks in the future.

 increase per DPP DTO before lowering global dppclk with requested dppclk

update dpp dto with actual dpp clk.

 increase global DPPCLK before lowering per DPP DTO

 always update dtos unless clock is lowered and not safe to lower

update dmcu for wait_loop count*/

 get FbMult value */

	/*

	 * Register value of fbmult is in 8.16 format, we are converting to 31.32

	 * to leverage the fix point operations available in driver

 16 bit fractional part*/

 8 bit integer part */

	/*

	 * since fractional part is only 16 bit in register definition but is 32 bit

	 * in our fix point definiton, need to shift left by 16 to obtain correct value

 multiply by REFCLK period */

 integer part is now VCO frequency in kHz */

dcf deep sleep divider

 This function collect raw clk register values */

split

 REGISTER VALUES

 This function produce translated logical clk state values*/

 Assumption is that boot state always supports pstate

 skip empty entries, the smu array has no holes*/

 We will not select WM based on fclk, so leave it as unconstrained */

 dcfclk wil be used to select WM*/

 add 1 to make it non-overlapping with next lvl */

 unconstrained for memory retraining */

 Modify previous watermark range to cover up to max */

 Must have at least one set of valid watermarks */

 modify the min and max to make sure we cover the whole range*/

 This is for writeback only, does not matter currently as no writeback support*/

 Notify PP Lib/SMU which Watermarks to use for which clock ranges */

 Notify clk_mgr of a change in link rate, update phyclk frequency if necessary */

 Find lowest DPM, FCLK is filled in reverse order*/

 clock table is all 0s, just use our own hardcode */

		/*

		 * WM set D will be re-purposed for memory retraining

		/* SMU Version 55.51.0 and up no longer have an issue

 TODO: Check we get what we expect during bringup */

 in case we don't get a value from the register, use default */

 Saved clocks configured at boot for debug purposes */

 treat memory config as single channel if memory is asymmetrics. */

 enable powerfeatures when displaycount goes to 0 */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Currently the register shifts and masks in this file are used for dce100 and dce80

 * which has identical definitions.

 * TODO: remove this when DPREFCLK_CNTL and dpref DENTIST_DISPCLK_CNTL

 * is moved to dccg, where it belongs

 Max clock values for each state indexed by "enum clocks_state": */

 ClocksStateInvalid - should not be used */

 ClocksStateUltraLow - not expected to be used for DCE 8.0 */

 ClocksStateLow */

 ClocksStateNominal */

 ClocksStatePerformance */

/* SW will adjust DP REF Clock average value for all purposes

 * (DP DTO / DP Audio DTO and DP GTC)

 if clock is spread for all cases:

 -if SS enabled on DP Ref clock and HW de-spreading enabled with SW

 calculations for DS_INCR/DS_MODULO (this is planned to be default case)

 -if SS enabled on DP Ref clock and HW de-spreading enabled with HW

 calculations (not planned to be used, but average clock should still

 be valid)

 -if SS enabled on DP Ref clock and HW de-spreading disabled

 (should not be case with CIK) then SW should program all rates

 generated according to average value (case as with previous ASICs)

 ASSERT DP Reference Clock source is from DFS*/

	/* Read the mmDENTIST_DISPCLK_CNTL to get the currently

 Convert DENTIST_DPREFCLK_WDIVIDERto actual divider*/

 Calculate the current DFS clock, in kHz.*/

/* unit: in_khz before mode set, get pixel clock from context. ASIC register

 * may not be programmed yet

 do not check under lay */

		/* raise clock state for HBR3/2 if required. Confirmed with HW DCE/DPCS

		 * logic for HBR3 still needs Nominal (0.8V) on VDDC rail

	/* Iterate from highest supported to lowest valid state, and update

	 * lowest RequiredState with the lowest state that satisfies

	 * all required clocks

 set max clock state for high phyclock, invalid on exceeding display clock */

 TODO: remove use the two broken down functions */

 Make sure requested clock isn't lower than minimum threshold*/

 Prepare to program display clock*/

 Cache the fixed display clock*/

	/* from power down, we need mark the clock state as ClocksStateNominal

update the maximum display clock for each power state*/

		/*Do not allow bad VBIOS/SBIOS to override with invalid values,

		/* Based on VBIOS, VBIOS will keep entry for GPU PLL SS

		 * even if SS not enabled and in that case

		 * SSInfo.spreadSpectrumPercentage !=0 would be sign

		 * that SS is enabled

				/* TODO: Currently for DP Reference clock we

				 * need only SS percentage for

		/* Based on VBIOS, VBIOS will keep entry for DPREFCLK SS

		 * even if SS not enabled and in that case

		 * SSInfo.spreadSpectrumPercentage !=0 would be sign

		 * that SS is enabled

				/* Currently for DP Reference clock we

				 * need only SS percentage for

TODO: W/A for dal3 linux, investigate why this works */

 get max clock state from PPLIB */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

we don't have clk folder yet*/

 Query SMU for all clock states for a particular clock */

 fine-grained, only min and max */

 discrete, a number of fixed states */

 will set num_levels to 0 on failure */

 if the initial message failed, num_levels will be 0 */

 defaults */

 Set A - Normal - default values*/

 Set B - Performance - higher minimum clocks */

	clk_mgr->base.bw_params->wm_table.nv_entries[WM_B].valid = true;

	clk_mgr->base.bw_params->wm_table.nv_entries[WM_B].dml_input.pstate_latency_us = pstate_latency_us;

	clk_mgr->base.bw_params->wm_table.nv_entries[WM_B].dml_input.sr_exit_time_us = sr_exit_time_us;

	clk_mgr->base.bw_params->wm_table.nv_entries[WM_B].dml_input.sr_enter_plus_exit_time_us = sr_enter_plus_exit_time_us;

	clk_mgr->base.bw_params->wm_table.nv_entries[WM_B].pmfw_breakdown.wm_type = WATERMARKS_CLOCK_RANGE;

	clk_mgr->base.bw_params->wm_table.nv_entries[WM_B].pmfw_breakdown.min_dcfclk = TUNED VALUE;

	clk_mgr->base.bw_params->wm_table.nv_entries[WM_B].pmfw_breakdown.max_dcfclk = 0xFFFF;

	clk_mgr->base.bw_params->wm_table.nv_entries[WM_B].pmfw_breakdown.min_uclk = TUNED VALUE;

	clk_mgr->base.bw_params->wm_table.nv_entries[WM_B].pmfw_breakdown.max_uclk = 0xFFFF;

 Set C - Dummy P-State - P-State latency set to "dummy p-state" value */

 Set D - MALL - SR enter and exit times adjusted for MALL */

 do we fail if these fail? if so, how? do we not care to check?

 DCFCLK */

 DTBCLK */

 SOCCLK */

 DPREFCLK ???

 DISPCLK */

 DPPCLK */

 PHYCLK */

 Get UCLK, update bounding box */

 WM range table */

 get FbMult value */

 get FbMult value */

	/* set up a fixed-point number

	 * this works because the int part is on the right edge of the register

	 * and the frac part is on the left edge

 multiply by REFCLK period */

 this is from resume or boot up, if forced_clock cfg option used, we bypass program dispclk and DPPCLK, but need set them for S3. */

 force_clock_mode 0x1:  force reset the clock even it is the same clock as long as it is in Passive level. */

 We don't actually care about socclk, don't notify SMU of hard min */

 to disable P-State switching, set UCLK min = max */

 Always update saved value, even if new value not set due to P-State switching unsupported */

 set UCLK to requested value if P-State switching is supported, or to re-enable P-State switching */

 if clock is being lowered, increase DTO before lowering refclk */

 if clock is being raised, increase refclk before lowering DTO */

			/* There is a check inside dcn20_update_clocks_update_dpp_dto which ensures

			 * that we do not lower dto when it is not safe to lower. We do not need to

update dmcu for wait_loop count*/

 should log failure

 collect valid ranges, place in pmfw table */

 Set min memclk to minimum, either constrained by the current mode or DPM0 */

 Set max memclk to highest DPM value */

 Get current memclk states, update bounding box */

 Refresh memclk states */

 Refresh bounding box */

 Notify clk_mgr of a change in link rate, update phyclk frequency if necessary */

 TODO: Implement the functions and remove the ifndef guard */

todo for dcn30 for clk register offset*/

 700 MHz planned if VCO is 3.85 GHz, will be retrieved

 integer part is now VCO frequency in kHz */

 in case we don't get a value from the register, use default */

 Convert dprefclk units from MHz to KHz */

 Value already divided by 10, some resolution lost */

TODO: uncomment assert once dcn3_dump_clk_registers is implemented */

ASSERT(s.dprefclk != 0);

 need physical address of table to give to PMFW */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Function to be used instead of REG_WAIT macro because the wait ends when

 * the register is NOT EQUAL to zero, and because the translation in msg_if.h

 * won't work with REG_WAIT.

 handle DALSMC_Result_CmdRejectedBusy? */

 Log? */

 Wait for response register to be ready */

 Clear response register */

 Set the parameter register for the SMU message */

 Trigger the message transaction by writing the message ID */

 Wait for response */

 Test message should return input + 1 */

 Message output should match SMU11_DRIVER_IF_VERSION in smu11_driver_if.h */

 Message output should match DALSMC_VERSION in dalsmc.h */

 Returns the actual frequency that was set in MHz, 0 on failure */

 bits 23:16 for clock type, lower 16 bits for frequency in MHz */

 Returns the actual frequency that was set in MHz, 0 on failure */

 bits 23:16 for clock type, lower 16 bits for frequency in MHz */

/*

 * Frequency in MHz returned in lower 16 bits for valid DPM level

 *

 * Call with dpm_level = 0xFF to query features, return value will be:

 *     Bits 7:0 - number of DPM levels

 *     Bit   28 - 1 = auto DPM on

 *     Bit   29 - 1 = sweep DPM on

 *     Bit   30 - 1 = forced DPM on

 *     Bit   31 - 0 = discrete, 1 = fine-grained

 *

 * With fine-grained DPM, only min and max frequencies will be reported

 *

 * Returns 0 on failure

 bits 23:16 for clock type, lower 8 bits for DPM level */

 Returns the max DPM frequency in DC mode in MHz, 0 on failure */

 bits 23:16 for clock type */

 bits 8:7 for cache timer scale, bits 6:1 for cache timer delay, bit 0 = 1 for enable, = 0 for disable */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

#define VBIOSSMC_MSG_SetPhyclkVoltageByFreq       0xA

#define VBIOSSMC_MSG_SetDisplayCount              0xC

#define VBIOSSMC_MSG_EnableTmdp48MHzRefclkPwrDown 0xD

Used for WM table txfr

/*

 * Function to be used instead of REG_WAIT macro because the wait ends when

 * the register is NOT EQUAL to zero, and because the translation in msg_if.h

 * won't work with REG_WAIT.

 First clear response register */

 Set the parameter register for the SMU message, unit is Mhz */

 Trigger the message transaction by writing the message ID */

 Actual dispclk set is returned in the parameter register */

  Unit of SMU msg parameter is Mhz */

 TODO: add code for programing DP DTO, currently this is down by command table */

TODO: Work with smu team to define optimization options.

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 For dce12_get_dp_ref_freq_khz

 For dcn20_update_clocks_update_dpp_dto

 Constants */

 Number obtained from LPDDR4 Training Counter Requirement doc */

 Macros */

 TODO: evaluate how to lower or disable all dcn clocks in screen off case */

 abusing the fact that the dig and phy are coupled to see if the phy is enabled */

 WA for hang on HDMI after display off back back on*/

	/*

	 * if it is safe to lower, but we are already in the lower state, we don't have to do anything

	 * also if safe to lower is false, we just go in the higher state

 check that we're not already in lower */

 if we can go lower, go lower */

 update power state */

 check that we're not already in D0 */

 update power state */

 workaround: Limit dppclk to 100Mhz to avoid lower eDP panel switch to plus 4K monitor underflow.

 increase per DPP DTO before lowering global dppclk

 increase global DPPCLK before lowering per DPP DTO

 always update dtos unless clock is lowered and not safe to lower

 get FbMult value */

	/*

	 * Register value of fbmult is in 8.16 format, we are converting to 31.32

	 * to leverage the fix point operations available in driver

 16 bit fractional part*/

 8 bit integer part */

	/*

	 * since fractional part is only 16 bit in register definition but is 32 bit

	 * in our fix point definiton, need to shift left by 16 to obtain correct value

 multiply by REFCLK period */

 integer part is now VCO frequency in kHz */

dcf deep sleep divider

 This function collect raw clk register values */

split

 REGISTER VALUES

 This function produce translated logical clk state values*/

 Assumption is that boot state always supports pstate

 skip empty entries, the smu array has no holes*/

 We will not select WM based on fclk, so leave it as unconstrained */

 add 1 to make it non-overlapping with next lvl */

 unconstrained for memory retraining */

 Modify previous watermark range to cover up to max */

 Must have at least one set of valid watermarks */

 modify the min and max to make sure we cover the whole range*/

 This is for writeback only, does not matter currently as no writeback support*/

 Find lowest DPM, FCLK is filled in reverse order*/

 clock table is all 0s, just use our own hardcode */

		/*

		 * WM set D will be re-purposed for memory retraining

 Temporary Place holder until we can get them from fuse */

 TODO: Check we get what we expect during bringup */

 in case we don't get a value from the register, use default */

 Saved clocks configured at boot for debug purposes */

/*

	if (!IS_FPGA_MAXIMUS_DC(ctx->dce_environment) && clk_mgr->base.smu_ver) {

		 enable powerfeatures when displaycount goes to 0

		dcn301_smu_enable_phy_refclk_pwrdwn(clk_mgr, !debug->disable_48mhz_pwrdwn);

	}

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Only used by testing framework*/

dcf clk

dcf deep sleep divider

dcf deep sleep allow

dpref clk

disp clk

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 increase clock, looking for div is 0 for current, request div is 1*/

 already divided by 2, no need to reach target clk with 2 steps*/

		/* request disp clk is lower than maximum supported dpp clk,

		 * no need to reach target clk with two steps.

 target dpp clk not request divided by 2, still within threshold */

		/* decrease clock, looking for current dppclk divided by 2,

		 * request dppclk not divided by 2.

 current dpp clk not divided by 2, no need to ramp*/

		/* current disp clk is lower than current maximum dpp clk,

		 * no need to ramp

 request dpp clk need to be divided by 2 */

	/* this function is to change dispclk, dppclk and dprefclk according to

	 * bandwidth requirement. Its call stack is rv1_update_clocks -->

	 * update_clocks --> dcn10_prepare_bandwidth / dcn10_optimize_bandwidth

	 * --> prepare_bandwidth / optimize_bandwidth. before change dcn hw,

	 * prepare_bandwidth will be called first to allow enough clock,

	 * watermark for change, after end of dcn hw change, optimize_bandwidth

	 * is executed to lower clock to save power for new dcn hw settings.

	 *

	 * below is sequence of commit_planes_for_stream:

	 *

	 * step 1: prepare_bandwidth - raise clock to have enough bandwidth

	 * step 2: lock_doublebuffer_enable

	 * step 3: pipe_control_lock(true) - make dchubp register change will

	 * not take effect right way

	 * step 4: apply_ctx_for_surface - program dchubp

	 * step 5: pipe_control_lock(false) - dchubp register change take effect

	 * step 6: optimize_bandwidth --> dc_post_update_surfaces_to_stream

	 * for full_date, optimize clock to save power

	 *

	 * at end of step 1, dcn clocks (dprefclk, dispclk, dppclk) may be

	 * changed for new dchubp configuration. but real dcn hub dchubps are

	 * still running with old configuration until end of step 5. this need

	 * clocks settings at step 1 should not less than that before step 1.

	 * this is checked by two conditions: 1. if (should_set_clock(safe_to_lower

	 * , new_clocks->dispclk_khz, clk_mgr_base->clks.dispclk_khz) ||

	 * new_clocks->dispclk_khz == clk_mgr_base->clks.dispclk_khz)

	 * 2. request_dpp_div = new_clocks->dispclk_khz > new_clocks->dppclk_khz

	 *

	 * the second condition is based on new dchubp configuration. dppclk

	 * for new dchubp may be different from dppclk before step 1.

	 * for example, before step 1, dchubps are as below:

	 * pipe 0: recout=(0,40,1920,980) viewport=(0,0,1920,979)

	 * pipe 1: recout=(0,0,1920,1080) viewport=(0,0,1920,1080)

	 * for dppclk for pipe0 need dppclk = dispclk

	 *

	 * new dchubp pipe split configuration:

	 * pipe 0: recout=(0,0,960,1080) viewport=(0,0,960,1080)

	 * pipe 1: recout=(960,0,960,1080) viewport=(960,0,960,1080)

	 * dppclk only needs dppclk = dispclk /2.

	 *

	 * dispclk, dppclk are not lock by otg master lock. they take effect

	 * after step 1. during this transition, dispclk are the same, but

	 * dppclk is changed to half of previous clock for old dchubp

	 * configuration between step 1 and step 6. This may cause p-state

	 * warning intermittently.

	 *

	 * for new_clocks->dispclk_khz == clk_mgr_base->clks.dispclk_khz, we

	 * need make sure dppclk are not changed to less between step 1 and 6.

	 * for new_clocks->dispclk_khz > clk_mgr_base->clks.dispclk_khz,

	 * new display clock is raised, but we do not know ratio of

	 * new_clocks->dispclk_khz and clk_mgr_base->clks.dispclk_khz,

	 * new_clocks->dispclk_khz /2 does not guarantee equal or higher than

	 * old dppclk. we could ignore power saving different between

	 * dppclk = displck and dppclk = dispclk / 2 between step 1 and step 6.

	 * as long as safe_to_lower = false, set dpclk = dispclk to simplify

	 * condition check.

	 * todo: review this change for other asic.

 set disp clk to dpp clk threshold */

 update request dpp clk division option */

 If target clk not same as dppclk threshold, set to target clock */

		/*

		 * Notify SMU active displays

		 * if function pointer not set up, this message is

		 * sent as part of pplib_apply_display_requirements.

 F Clock

DCF Clock

	/* make sure dcf clk is before dpp clk to

	 * make sure we have enough voltage to run dpp clk

use dcfclk to request voltage*/

 dcn1 dppclk is tied to dispclk */

 program dispclk on = as a w/a for sleep resume clock ramping issues */

use dcfclk to request voltage*/

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Function to be used instead of REG_WAIT macro because the wait ends when

 * the register is NOT EQUAL to zero, and because the translation in msg_if.h

 * won't work with REG_WAIT.

 First clear response register */

 Set the parameter register for the SMU message, unit is Mhz */

 Trigger the message transaction by writing the message ID */

 Actual dispclk set is returned in the parameter register */

  Unit of SMU msg parameter is Mhz */

 TODO: add code for programing DP DTO, currently this is down by command table */

/*

 * Copyright 2012-16 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 set register offset */

 set register offset with instance */

ClocksStateInvalid - should not be used*/

ClocksStateUltraLow - currently by HW design team not supposed to be used*/

ClocksStateLow*/

ClocksStateNominal*/

ClocksStatePerformance*/

	/*

	 * Some asics do not give us sclk levels, so we just report the actual

	 * required sclk

	/*

	 * even maximum level could not satisfy requirement, this

	 * is unexpected at this stage, should have been caught at

	 * validation time

 only notify active stream */

 Round v_refresh*/

	/*

	 * TODO: determine whether the bandwidth has reached memory's limitation

	 * , then change minimum memory clock based on real-time bandwidth

	 * limitation.

	/*

	 * As workaround for >4x4K lightup set dcfclock to min_engine_clock value.

	 * This is not required for less than 5 displays,

	 * thus don't request decfclk in dc to avoid impact

	 * on power saving.

	 *

 TODO: dce11.2*/

 TODO: is this still applicable?*/

TODO: W/A for dal3 linux, investigate why this works */

 get max clock state from PPLIB */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 0x74 >> 1*/

 0x6803b - 0x6802c */

 HDCP 1.4 */

 HDCP 2.2 */

 special case, reading repeatedly at the same address, don't use read() */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* if all displays on the link don't need authentication,

	 * hdcp is not desired

	/* if all displays on the link don't need authentication,

	 * hdcp is not desired

 initialize transition input */

			/* TODO - update psp to unify create session failure

			 * recovery between hdcp1 and 2.

 stop callback and watchdog requests from previous authentication*/

/*

 * Implementation of functions in mod_hdcp.h

 skip inactive display */

 check existing display container */

 find an empty display container */

 reset existing authentication status */

 reset retry counters */

 reset error trace */

 add display to connection */

 request authentication */

 find display in connection */

 stop current authentication */

 clear retry counters */

 reset error trace */

 remove display */

 request authentication when connection is not reset */

 find display in connection */

 skip if no changes */

 stop current authentication */

 clear retry counters */

 reset error trace */

 set new adjustment */

 request authentication when connection is not reset */

 wait 100ms to debounce simultaneous updates for different indices */

 find display in connection */

 populate query */

 execute and transition */

 reset authentication if needed */

 Clear CP_IRQ status if needed */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 units of ms

 Avoid device count == 0 to do authentication */

 Some MST display may choose to report the internal panel as an HDCP RX.   */

 To update this condition with 1(because the immediate repeater's internal */

 panel is possibly not included in DEVICE_COUNT) + get_device_count(hdcp). */

 Device count must be greater than or equal to tracked hdcp displays.      */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 needs second part of authentication */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Avoid device count == 0 to do authentication */

	/* Some MST display may choose to report the internal panel as an HDCP RX.

	 * To update this condition with 1(because the immediate repeater's internal

	 * panel is possibly not included in DEVICE_COUNT) + get_device_count(hdcp).

	 * Device count must be greater than or equal to tracked hdcp displays.

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 1A-04: repeatedly attempts on port access failure */

 out of sync with psp state */

 1A-05: consider invalid bksv a failure */

 1A-06: consider invalid r0' a failure */

 1A-08: consider bksv listed in SRM a failure */

			/*

			 * some slow RX will fail rx validation when it is

			 * not ready. give it more time to react before retry.

 1A-07: consider invalid ri' a failure */

 1A-07a: consider read ri' not returned a failure */

 1B-03: fail hdcp on ksv list READY timeout */

 prevent black screen in next attempt */

 continue ksv list READY polling*/

 1B-06: consider MAX_CASCADE_EXCEEDED a failure */

 1B-05: consider MAX_DEVS_EXCEEDED a failure */

 1B-04: consider invalid v' a failure */

 1A-04: no authentication on bcaps read failure */

 out of sync with psp state */

 1A-05: consider invalid bksv a failure */

 allow 2 additional retries */

				/*

				 * 1A-06: consider invalid r0' a failure

				 * after 3 attempts.

				 * 1A-08: consider bksv listed in SRM a failure

				/*

				 * some slow RX will fail rx validation when it is

				 * not ready. give it more time to react before retry.

 1A-07: restart hdcp on a link integrity failure */

 1B-04: fail hdcp on ksv list READY timeout */

 prevent black screen in next attempt */

 1B-06: consider MAX_DEVS_EXCEEDED a failure */

 1B-07: consider MAX_CASCADE_EXCEEDED a failure */

			/*

			 * some slow dongle doesn't update

			 * device count as soon as downstream is connected.

			 * give it more time to react.

 allow 2 additional retries */

				/*

				 * 1B-05: consider invalid v' a failure

				 * after 3 attempts.

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 out of sync with psp state */

 1A-08: consider ake timeout a failure */

				/* some hdmi receivers are not ready for HDCP

				 * immediately after video becomes active,

				 * delay 1s before retry on first HDCP message

				 * timeout.

 continue ake cert polling*/

			/*

			 * 1A-09: consider invalid ake cert a failure

			 * 1A-10: consider receiver id listed in SRM a failure

 1A-11-3: consider h' timeout a failure */

 continue h' polling */

				/* 1A-12: consider pairing info timeout

				 * a failure

 continue pairing info polling */

 1A-11-1: consider invalid h' a failure */

 1A-11-2: consider h' timeout a failure */

 continue h' polling */

 1A-11-1: consider invalid h' a failure */

			/*

			 * 1A-05: consider disconnection after LC init a failure

			 * 1A-13-1: consider invalid l' a failure

			 * 1A-13-2: consider l' timeout a failure

			/* some CTS equipment requires a delay GREATER than

			 * 200 ms, so delay 210 ms instead of 200 ms

			/*

			 * 1A-07: restart hdcp on REAUTH_REQ

			 * 1B-08: restart hdcp on REAUTH_REQ

 1B-02: consider rx id list timeout a failure */

				/* some CTS equipment's actual timeout

				 * measurement is slightly greater than 3000 ms.

				 * Delay 100 ms to ensure it is fully timeout

				 * before re-authentication.

			/* 1B-03: consider invalid v' a failure

			 * 1B-04: consider MAX_DEVS_EXCEEDED a failure

			 * 1B-05: consider MAX_CASCADE_EXCEEDED a failure

			 * 1B-06: consider invalid seq_num_V a failure

			 * 1B-09: consider seq_num_V rollover a failure

				/* 1B-10-2: restart content stream management on

				 * stream ready timeout

			/*

			 * 1B-10-1: restart content stream management

			 * on invalid M'

 out of sync with psp state */

 possibly display not ready */

			/*

			 * 1A-08: consider invalid ake cert a failure

			 * 1A-09: consider receiver id listed in SRM a failure

 1A-10-3: consider h' timeout a failure */

				/*

				 * 1A-11: consider pairing info timeout

				 * a failure

 1A-10-1: consider invalid h' a failure */

 1A-10-2: consider h' timeout a failure */

 1A-10-1: consider invalid h' a failure */

 1A-12: consider invalid l' a failure */

			/*

			 * 1A-07: restart hdcp on REAUTH_REQ

			 * 1B-08: restart hdcp on REAUTH_REQ

 1B-02: consider rx id list timeout a failure */

			/*

			 * 1B-03: consider invalid v' a failure

			 * 1B-04: consider MAX_DEVS_EXCEEDED a failure

			 * 1B-05: consider MAX_CASCADE_EXCEEDED a failure

			 * 1B-06: consider invalid seq_num_V a failure

			 * 1B-09: consider seq_num_V rollover a failure

			/*

			 * 1B-10-1: restart content stream management

			 * on invalid M'

			 * 1B-10-2: consider stream ready timeout a failure

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* When calculating LUT values the first region and at least one subsequent

 * region are calculated with full precision. These defines are a demarcation

 * of where the second region starts and ends.

 * These are hardcoded values to avoid recalculating them in loops.

 these are helpers for calculations to reduce stack usage

 do not depend on these being preserved across calls

/* Helper to optimize gamma calculation, only use in translate_from_linear, in

 * particular the dc_fixpt_pow function which is very expensive

 * The idea is that our regions for X points are exponential and currently they all use

 * the same number of points (NUM_PTS_IN_REGION) and in each region every point

 * is exactly 2x the one at the same index in the previous region. In other words

 * X[i] = 2 * X[i-NUM_PTS_IN_REGION] for i>=16

 * The other fact is that (2x)^gamma = 2^gamma * x^gamma

 * So we compute and save x^gamma for the first 16 regions, and for every next region

 * just multiply with 2^gamma which can be computed once, and save the result so we

 * recursively compute all the values.

/*

 * Regamma coefficients are used for both regamma and degamma. Degamma

 * coefficients are calculated in our formula using the regamma coefficients.

sRGB     709     2.2 2.4 P3*/

 one-time setup of X points */

 consts for PQ gamma formula. */

 consts for dePQ gamma formula. */

 avoid complex numbers

 de gamma, non-linear to linear */

 re gamma, linear to non-linear */

 one-time pre-compute PQ values - only for sdr_white_level 80 */

 pow function has problems with arguments too small */

 one-time pre-compute dePQ values - only for max pixel value 125 FP16 */

	/* X points is 2^-25 to 2^7

	 * De-gamma X is 2^-12 to 2^0 – we are skipping first -12-(-25) = 13 regions

		/* In the first region (first 16 points) and in the

		 * region delimited by START/END we calculate with

		 * full precision to avoid error accumulation. 

	/* TODO: start index is from segment 2^-24, skipping first segment

	 * due to x values too small for power calculations

		/* Multiply 0.008 as regamma is 0-1 and FP16 input is 0-125.

		 * FP 1.0 = 80nits

 should really not happen? */

 should really not happen? */

 see variable definition for more info

 TODO use y vs r,g,b */

 dc_fixpt_epsilon is a bit too small

 always 1? DAL2 code is weird

 (1+b)/maxContent

 a * max_lum_pq - b

 t = (E1 - ks) / (1 - ks)

 (2t^3 - 3t^2 + 1) * ks

 (-2t^3 + 3t^2) * max_lum_pq

 (t^3 - 2t^2 + t) * (1-ks)

 temp2 = (1-E2)^4

 cap at 0.1 at the bottom

 cap at 100 at the top

 only max used, we don't adjust min luminance

 see var definition for more info

 first 32 points have problems with fixed point, too small

 max content is equal 1 */

 Ensure output respects reasonable boundaries

 Here clipping happens for the first time */

				/* The next few lines implement the equation

				 * output = prev_out +

				 * (coord_x->x - prev_coord_x->x) *

				 * (1.0 - prev_out) /

				 * (maxDisp/sdr_white_level - prevCoordX)

				 *

				 * This equation interpolates the first point

				 * after max_display/80 so that the slope from

				 * hw_x_before_max and hw_x_after_max is such

				 * that we hit Y=1.0 at max_display/80.

				/* Relaxing the maximum boundary to 1.07 (instead of 1.0)

				 * because the last point in the curve must be such that

				 * the maximum display pixel brightness interpolates to

				 * exactly 1.0. The worst case scenario was calculated

				 * around 1.057, so the limit of 1.07 leaves some safety

				 * margin.

			/* Every other clipping after the first

			 * one is dealt with here

	/* X points is 2^-25 to 2^7

	 * De-gamma X is 2^-12 to 2^0 – we are skipping first -12-(-25) = 13 regions

 check when i == 434

 when i == 471

/* todo: all these scale_gamma functions are inherently the same but

 *  take different structures as params or different format for ramp

 *  values. We could probably implement it in a more generic fashion

/*

 * RS3+ color transform DDI - 1D LUT adjustment is composed with regamma here

 * Input is evenly distributed in the output color space as specified in

 * SetTimings

 *

 * Interpolation details:

 * 1D LUT has 4096 values which give curve correction in 0-1 float range

 * for evenly spaced points in 0-1 range. lut1D[index] gives correction

 * for index/4095.

 * First we find index for which:

 *	index/4095 < regamma_y < (index+1)/4095 =>

 *	index < 4095*regamma_y < index + 1

 * norm_y = 4095*regamma_y, and index is just truncating to nearest integer

 * lut1 = lut1D[index], lut2 = lut1D[index+1]

 *

 * adjustedY is then linearly interpolating regamma Y between lut1 and lut2

 *

 * Custom degamma on Linux uses the same interpolation math, so is handled here

 this is not expected

				/* Here we are dealing with the last point in the curve,

				 * which in some cases might exceed the range given by

				 * max_lut_index. So we interpolate the value using

				 * max_lut_index and max_lut_index - 1.

 we have everything now, so interpolate

 This function should not gets called with 0 as a parameter

 TODO: float point case */

/* The "old" interpolation uses a complicated scheme to build an array of

 * coefficients while also using an array of 0-255 normalized to 0-1

 * Then there's another loop using both of the above + new scaled user ramp

 * and we concatenate them. It also searches for points of interpolation and

 * uses enums for positions.

 *

 * This function uses a different approach:

 * user ramp is always applied on X with 0/255, 1/255, 2/255, ..., 255/255

 * To find index for hwX , we notice the following:

 * i/255 <= hwX < (i+1)/255  <=> i <= 255*hwX < i+1

 * See apply_lut_1d which is the same principle, but on 4K entry 1D LUT

 *

 * Once the index is known, combined Y is simply:

 * user_ramp(index) + (hwX-index/255)*(user_ramp(index+1) - user_ramp(index)

 *

 * We should switch to this method in all cases, it's simpler and faster

 * ToDo one day - for now this only applies to ADL regamma to avoid regression

 * for regular use cases (sRGB and PQ)

 fixed_pt library has problems handling too small values */

 we have everything now, so interpolate

 setup to spare calculated ideal regamma values */

 just copy current rgb_regamma into  tf_pts */

 this should be named differently, all it does is clamp to 0-1 */

 fixed_pt library has problems handling too small values */

 this function just clamps output to 0-1

 no custom HDR curves!

 this function just clamps output to 0-1

	/* we can use hardcoded curve for plain SRGB TF

	 * If linear, it's bypass if on user ramp

 HLG OOTF not accounted for

 just copy coordinates_x into curve

 just copy current rgb_regamma into  tf_pts */

 clamps to 0-1

 trans == TRANSFER_FUNCTION_SRGB

 trans == TRANSFER_FUNCTION_BT709

 trans == TRANSFER_FUNCTION_GAMMA22

 trans == TRANSFER_FUNCTION_GAMMA24

 trans == TRANSFER_FUNCTION_GAMMA26

 we can use hardcoded curve for plain SRGB TF */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 At this point any positions with value 0 are unused vmids, evict them

 Return value of -1 indicates vmid table unitialized or ptb dne in the table

 Expected to be called only when there's an available vmid

 Physical address gets vmid 0

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

 Refresh rate ramp at a fixed rate of 65 Hz/second */

 Number of elements in the render times cache array */

 Threshold to exit/exit BTR (to avoid frequent enter-exits at the lower limit) */

 Threshold to change BTR multiplier (to avoid frequent changes) */

 Threshold to exit fixed refresh rate */

 Number of consecutive frames to check before entering/exiting fixed refresh */

 Unused currently */

 v_total cannot be less than nominal */

 v_total cannot be less than nominal */

 Calculate ratio between new and current frame duration with 3 digit */

 Calculate delta between new and current frame duration in us */

	/* Adjust frame duration delta based on ratio between current and

	 * standard frame duration (frame duration at 60 Hz refresh rate).

 Going to a higher refresh rate (lower frame duration) */

 Reduce frame duration */

 Adjust for frame duration below min */

 Going to a lower refresh rate (larger frame duration) */

 Increase frame duration */

 Adjust for frame duration above max */

 v_total cannot be less than nominal */

 Program BTR */

 Exit Below the Range */

 Enter Below the Range */

 BTR set to "not active" so disengage */

 Restore FreeSync */

 BTR set to "active" so engage */

		/* Calculate number of midPoint frames that could fit within

		 * the render time interval - take ceil of this value

		/* Calculate number of midPoint frames that could fit within

		 * the render time interval - take floor of this value

		/* Choose number of frames to insert based on how close it

		 * can get to the mid point of the variable range.

		 *  - Delta for CEIL: delta_from_mid_point_in_us_1

		 *  - Delta for FLOOR: delta_from_mid_point_in_us_2

			/* Check for out of range.

			 * If using CEIL produces a value that is out of range,

			 * then we are forced to use FLOOR.

			/* Check if FLOOR would result in non-LFC. In this case

			 * choose to use CEIL

			/* If choosing CEIL results in a frame duration that is

			 * closer to the mid point of the range.

			 * Choose CEIL

			/* If choosing FLOOR results in a frame duration that is

			 * closer to the mid point of the range.

			 * Choose FLOOR

		/* Prefer current frame multiplier when BTR is enabled unless it drifts

		 * too far from the midpoint

		/* Either we've calculated the number of frames to insert,

		 * or we need to insert min duration frames

 Cache the calculated variables */

 Compute the exit refresh rate and exit frame duration */

 Exit Fixed Refresh mode */

 Enter Fixed Refresh mode */

 PB1 = 0x1A (24bit AMD IEEE OUI (0x00001A) - Byte 0) */

 PB2 = 0x00 (24bit AMD IEEE OUI (0x00001A) - Byte 1) */

 PB3 = 0x00 (24bit AMD IEEE OUI (0x00001A) - Byte 2) */

 PB4 = Reserved */

 PB5 = Reserved */

 PB6 = [Bits 7:3 = Reserved] */

 PB6 = [Bit 0 = FreeSync Supported] */

 PB6 = [Bit 1 = FreeSync Enabled] */

 PB6 = [Bit 2 = FreeSync Active] */

 For v1 & 2 infoframes program nominal if non-fs mode, otherwise full range

 PB7 = FreeSync Minimum refresh rate (Hz) */

	/* PB8 = FreeSync Maximum refresh rate (Hz)

	 * Note: We should never go above the field rate of the mode timing set.

 FreeSync HDR */

 PB1 = 0x1A (24bit AMD IEEE OUI (0x00001A) - Byte 0) */

 PB2 = 0x00 (24bit AMD IEEE OUI (0x00001A) - Byte 1) */

 PB3 = 0x00 (24bit AMD IEEE OUI (0x00001A) - Byte 2) */

 PB4 = Reserved */

 PB5 = Reserved */

 PB6 = [Bits 7:3 = Reserved] */

 PB6 = [Bit 0 = FreeSync Supported] */

 PB6 = [Bit 1 = FreeSync Enabled] */

 PB6 = [Bit 2 = FreeSync Active] */

 Non-fs case, program nominal range

 Non-fs case, program nominal range

 PB7 = FreeSync Minimum refresh rate (Hz) */

 PB8 = FreeSync Maximum refresh rate (Hz) */

 PB11 : MSB FreeSync Minimum refresh rate [Hz] - bits 9:8 */

 PB12 : MSB FreeSync Maximum refresh rate [Hz] - bits 9:8 */

 PB16 : Reserved bits 7:1, FixedRate bit 0 */

FreeSync HDR

 PB6 = [Bit 3 = Native Color Active]

 PB6 = [Bit 2 = Gamma 2.2 EOTF Active]

 HEADER */

		/* HB0  = Packet Type = 0x83 (Source Product

		 *	  Descriptor InfoFrame)

 HB1  = Version = 0x01 */

 HB2  = [Bits 7:5 = 0] [Bits 4:0 = Length = 0x08] */

 HEADER */

		/* HB0  = Secondary-data Packet ID = 0 - Only non-zero

		 *	  when used to associate audio related info packets

		/* HB1  = Packet Type = 0x83 (Source Product

		 *	  Descriptor InfoFrame)

		/* HB2  = [Bits 7:0 = Least significant eight bits -

		 *	  For INFOFRAME, the value must be 1Bh]

		/* HB3  = [Bits 7:2 = INFOFRAME SDP Version Number = 0x1]

		 *	  [Bits 1:0 = Most significant two bits = 0x00]

 HEADER */

		/* HB0  = Packet Type = 0x83 (Source Product

		 *	  Descriptor InfoFrame)

 HB1  = Version = 0x02 */

 HB2  = [Bits 7:5 = 0] [Bits 4:0 = Length = 0x09] */

 HEADER */

		/* HB0  = Secondary-data Packet ID = 0 - Only non-zero

		 *	  when used to associate audio related info packets

		/* HB1  = Packet Type = 0x83 (Source Product

		 *	  Descriptor InfoFrame)

		/* HB2  = [Bits 7:0 = Least significant eight bits -

		 *	  For INFOFRAME, the value must be 1Bh]

		/* HB3  = [Bits 7:2 = INFOFRAME SDP Version Number = 0x2]

		 *	  [Bits 1:0 = Most significant two bits = 0x00]

 HEADER */

		/* HB0  = Packet Type = 0x83 (Source Product

		 *	  Descriptor InfoFrame)

 HB1  = Version = 0x03 */

 HB2  = [Bits 7:5 = 0] [Bits 4:0 = Length] */

-1 for checksum

 HEADER */

		/* HB0  = Secondary-data Packet ID = 0 - Only non-zero

		 *	  when used to associate audio related info packets

		/* HB1  = Packet Type = 0x83 (Source Product

		 *	  Descriptor InfoFrame)

		/* HB2  = [Bits 7:0 = Least significant eight bits -

		 *	  For INFOFRAME, the value must be 1Bh]

		/* HB3  = [Bits 7:2 = INFOFRAME SDP Version Number = 0x2]

		 *	  [Bits 1:0 = Most significant two bits = 0x00]

 Calculate checksum */

 PB0 = Checksum (one byte complement) */

 SPD info packet for FreeSync */

 PB9 : bit7 - fast transport Active*/

clear bit

set bit

 PB13 : Target Output Pixel Rate [kHz] - bits 7:0  */

 PB14 : Target Output Pixel Rate [kHz] - bits 15:8  */

 PB15 : Target Output Pixel Rate [kHz] - bits 23:16  */

 Data Byte Count: 0x1B

 Length

Version

 Header,SDP 1.3

	/* SPD info packet for FreeSync

	 * VTEM info packet for HdmiVRR

	 * Check if Freesync is supported. Return if false. If true,

	 * set the corresponding bit in the info packet

 always populate with pixel rate.

 Calculate nominal field rate for stream */

 Full range may be larger than current video timing, so cap at nominal */

 Full range may be larger than current video timing, so cap at nominal */

 If a monitor reports exactly max refresh of 2x of min, enforce it on nominal */

			/* Do not update vtotals if ramping is already active

			 * in order to continue ramp from current refresh.

 Sum off all entries except oldest one */

 Add render time for current flip */

 Below the Range Logic */

 Only execute if in fullscreen mode */

		/* TODO: pass in flag for Pre-DCE12 ASIC

		 * in order for frame variable duration to take affect,

		 * it needs to be done one VSYNC early, which is at

		 * frameCounter == 1.

		 * For DCE12 and newer updates to V_TOTAL_MIN/MAX

		 * will take affect on current frame

 Restore FreeSync */

	/* If in fullscreen freesync mode or in video, do not program

	 * static screen ramp values

	/* Gradual Static Screen Ramping Logic

	 * Execute if ramp is active and user enabled freesync static screen

 Calculate nominal field rate for stream, rounded up to nearest integer */

 Calculate nominal field rate for stream, rounded up to nearest integer */

	/* Typically nominal refresh calculated can have some fractional part.

	 * Allow for some rounding error of actual video timing by taking floor

	 * of caps and request. Round the nominal refresh rate.

	 *

	 * Dividing will convert everything to units in Hz although input

	 * variable name is in uHz!

	 *

	 * Also note, this takes care of rounding error on the nominal refresh

	 * so by rounding error we only expect it to be off by a small amount,

	 * such as < 0.1 Hz. i.e. 143.9xxx or 144.1xxx.

	 *

	 * Example 1. Caps    Min = 40 Hz, Max = 144 Hz

	 *            Request Min = 40 Hz, Max = 144 Hz

	 *                    Nominal = 143.5x Hz rounded to 144 Hz

	 *            This function should allow this as valid request

	 *

	 * Example 2. Caps    Min = 40 Hz, Max = 144 Hz

	 *            Request Min = 40 Hz, Max = 144 Hz

	 *                    Nominal = 144.4x Hz rounded to 144 Hz

	 *            This function should allow this as valid request

	 *

	 * Example 3. Caps    Min = 40 Hz, Max = 144 Hz

	 *            Request Min = 40 Hz, Max = 144 Hz

	 *                    Nominal = 120.xx Hz rounded to 120 Hz

	 *            This function should return NOT valid since the requested

	 *            max is greater than current timing's nominal

	 *

	 * Example 4. Caps    Min = 40 Hz, Max = 120 Hz

	 *            Request Min = 40 Hz, Max = 120 Hz

	 *                    Nominal = 144.xx Hz rounded to 144 Hz

	 *            This function should return NOT valid since the nominal

	 *            is greater than the capability's max refresh

 Check nominal is within range */

 If nominal is less than max, limit the max allowed refresh rate */

 Check min is within range */

 For variable range, check for at least 10 Hz range */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

01h = VSC SDP supports only 3D stereo.

02h = 3D stereo + PSR.

03h = 3D stereo + PSR2.

04h = 3D stereo + PSR/PSR2 + Y-coordinate.

05h = 3D stereo + PSR/PSR2 + Y-coordinate + Pixel Encoding/Colorimetry Format

 VTEM Byte Offset

 VTEM Byte Masks

PB0

0: Periodic pseudo-static EM Data Set

1: Periodic dynamic EM Data Set

2: Unique EM Data Set

3: Reserved

PB1

PB2

0: This is a Vendor Specific EM Data Set

1: This EM Data Set is defined by This Specification (HDMI 2.1 r102.clean)

2: This EM Data Set is defined by CTA-861-G

3: This EM Data Set is defined by VESA

PB3

PB4

PB5

PB6

PB7-27 (20 bytes):

PB7 = MD0

MD1

MD2

MD3

VSC packet set to 2 when DP revision >= 1.2*/

 Update to revision 5 for extended colorimetry support */

	/* VSC packet not needed based on the features

	 * supported by this DP display

 Secondary-data Packet ID = 0*/

		/* 07h - Packet Type Value indicating Video

		 * Stream Configuration packet

		/* 02h = VSC SDP supporting 3D stereo and PSR

		 * (applies to eDP v1.3 or higher).

		/* 08h = VSC packet supporting 3D stereo + PSR

		 * (HB2 = 02h).

 Secondary-data Packet ID = 0

 07h = Packet Type Value indicating Video Stream Configuration packet

 01h = Revision number. VSC SDP supporting 3D stereo only

 01h = VSC SDP supporting 3D stereo only (HB2 = 01h).

		/* ==============================================================================================================|

		 * A. STEREO 3D

		 * ==============================================================================================================|

		 * VSC Payload (1 byte) From DP1.2 spec

		 *

		 * Bits 3:0 (Stereo Interface Method Code)  |  Bits 7:4 (Stereo Interface Method Specific Parameter)

		 * -----------------------------------------------------------------------------------------------------

		 * 0 = Non Stereo Video                     |  Must be set to 0x0

		 * -----------------------------------------------------------------------------------------------------

		 * 1 = Frame/Field Sequential               |  0x0: L + R view indication based on MISC1 bit 2:1

		 *                                          |  0x1: Right when Stereo Signal = 1

		 *                                          |  0x2: Left when Stereo Signal = 1

		 *                                          |  (others reserved)

		 * -----------------------------------------------------------------------------------------------------

		 * 2 = Stacked Frame                        |  0x0: Left view is on top and right view on bottom

		 *                                          |  (others reserved)

		 * -----------------------------------------------------------------------------------------------------

		 * 3 = Pixel Interleaved                    |  0x0: horiz interleaved, right view pixels on even lines

		 *                                          |  0x1: horiz interleaved, right view pixels on odd lines

		 *                                          |  0x2: checker board, start with left view pixel

		 *                                          |  0x3: vertical interleaved, start with left view pixels

		 *                                          |  0x4: vertical interleaved, start with right view pixels

		 *                                          |  (others reserved)

		 * -----------------------------------------------------------------------------------------------------

		 * 4 = Side-by-side                         |  0x0: left half represents left eye view

		 *                                          |  0x1: left half represents right eye view

 Stacked Frame, Left view is on top and right view on bottom.

 Frame/Field Sequential, L + R view indication based on MISC1 bit 2:1

 Side-by-side

 No Stereo Video, Shall be cleared to 0x0.

	/* 05h = VSC SDP supporting 3D stereo, PSR2, and Pixel Encoding/Colorimetry Format indication.

	 *   Added in DP1.3, a DP Source device is allowed to indicate the pixel encoding/colorimetry

	 *   format to the DP Sink device with VSC SDP only when the DP Sink device supports it

	 *   (i.e., VSC_SDP_EXTENSION_FOR_COLORIMETRY_SUPPORTED bit in the DPRX_FEATURE_ENUMERATION_LIST

	 *   register (DPCD Address 02210h, bit 3) is set to 1).

	 *   (Requires VSC_SDP_EXTENSION_FOR_COLORIMETRY_SUPPORTED bit set to 1 in DPCD 02210h. This

	 *   DPCD register is exposed in the new Extended Receiver Capability field for DPCD Rev. 1.4

	 *   (and higher). When MISC1. bit 6. is Set to 1, a Source device uses a VSC SDP to indicate

	 *   the Pixel Encoding/Colorimetry Format and that a Sink device must ignore MISC1, bit 7, and

	 *   MISC0, bits 7:1 (MISC1, bit 7. and MISC0, bits 7:1 become "don't care").)

 Secondary-data Packet ID = 0 */

 07h - Packet Type Value indicating Video Stream Configuration packet */

 05h = VSC SDP supporting 3D stereo, PSR2, and Pixel Encoding/Colorimetry Format indication. */

 13h = VSC SDP supporting 3D stereo, + PSR2, + Pixel Encoding/Colorimetry Format indication (HB2 = 05h). */

		/* Set VSC SDP fields for pixel encoding and colorimetry format from DP 1.3 specs

		 * Data Bytes DB 18~16

		 * Bits 3:0 (Colorimetry Format)        |  Bits 7:4 (Pixel Encoding)

		 * ----------------------------------------------------------------------------------------------------

		 * 0x0 = sRGB                           |  0 = RGB

		 * 0x1 = RGB Wide Gamut Fixed Point

		 * 0x2 = RGB Wide Gamut Floating Point

		 * 0x3 = AdobeRGB

		 * 0x4 = DCI-P3

		 * 0x5 = CustomColorProfile

		 * (others reserved)

		 * ----------------------------------------------------------------------------------------------------

		 * 0x0 = ITU-R BT.601                   |  1 = YCbCr444

		 * 0x1 = ITU-R BT.709

		 * 0x2 = xvYCC601

		 * 0x3 = xvYCC709

		 * 0x4 = sYCC601

		 * 0x5 = AdobeYCC601

		 * 0x6 = ITU-R BT.2020 Y'cC'bcC'rc

		 * 0x7 = ITU-R BT.2020 Y'C'bC'r

		 * (others reserved)

		 * ----------------------------------------------------------------------------------------------------

		 * 0x0 = ITU-R BT.601                   |  2 = YCbCr422

		 * 0x1 = ITU-R BT.709

		 * 0x2 = xvYCC601

		 * 0x3 = xvYCC709

		 * 0x4 = sYCC601

		 * 0x5 = AdobeYCC601

		 * 0x6 = ITU-R BT.2020 Y'cC'bcC'rc

		 * 0x7 = ITU-R BT.2020 Y'C'bC'r

		 * (others reserved)

		 * ----------------------------------------------------------------------------------------------------

		 * 0x0 = ITU-R BT.601                   |  3 = YCbCr420

		 * 0x1 = ITU-R BT.709

		 * 0x2 = xvYCC601

		 * 0x3 = xvYCC709

		 * 0x4 = sYCC601

		 * 0x5 = AdobeYCC601

		 * 0x6 = ITU-R BT.2020 Y'cC'bcC'rc

		 * 0x7 = ITU-R BT.2020 Y'C'bC'r

		 * (others reserved)

		 * ----------------------------------------------------------------------------------------------------

		 * 0x0 =DICOM Part14 Grayscale          |  4 = Yonly

		 * Display Function

		 * (others reserved)

 Set Pixel Encoding */

 RGB = 0h */

 YCbCr444 = 1h */

 YCbCr422 = 2h */

 YCbCr420 = 3h */

 default RGB = 0h */

 Set Colorimetry format based on pixel encoding */

			/* Note: xvYCC probably not supported correctly here on DP since colorspace translation

			 * loses distinction between BT601 vs xvYCC601 in translation

 Set color depth */

			/* NOTE: This is actually not valid for YCbCr pixel encoding to have 6 bpc

			 *       as of DP1.4 spec, but value of 0 probably reserved here for potential future use.

case COLOR_DEPTH_141414: -- NO SUCH FORMAT IN DP SPEC */

 all YCbCr are always limited range */

 DB17 bit 7 set to 1 for CEA timing. */

		/* Content Type (Bits 2:0)

		 *  0 = Not defined.

		 *  1 = Graphics.

		 *  2 = Photo.

		 *  3 = Video.

		 *  4 = Game.

/**

 *  mod_build_hf_vsif_infopacket - Prepare HDMI Vendor Specific info frame.

 *                                 Follows HDMI Spec to build up Vendor Specific info frame

 *

 *  @stream:      contains data we may need to construct VSIF (i.e. timing_3d_format, etc.)

 *  @info_packet: output structure where to store VSIF

/* Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

/* Possible Min Reduction config from least aggressive to most aggressive

 *  0    1     2     3     4     5     6     7     8     9     10    11   12

 * 100  98.0 94.1  94.1  85.1  80.3  75.3  69.4  60.0  57.6  50.2  49.8  40.0 %

/* Possible Max Reduction configs from least aggressive to most aggressive

 *  0    1     2     3     4     5     6     7     8     9     10    11   12

 * 96.1 89.8 85.1  80.3  69.4  64.7  64.7  50.2  39.6  30.2  30.2  30.2  19.6 %

/* Possible ABM 2.2 Min Reduction configs from least aggressive to most aggressive

 *  0    1     2     3     4     5     6     7     8     9     10    11   12

 * 100  100   100   100   100   100   100   100  100  92.2  83.1  75.3  75.3 %

/* Possible ABM 2.2 Max Reduction configs from least aggressive to most aggressive

 *  0    1     2     3     4     5     6     7     8     9     10    11   12

 * 96.1 89.8 74.9  69.4  64.7  52.2  48.6  39.6  30.2  25.1  19.6  12.5  12.5 %

/* Predefined ABM configuration sets. We may have different configuration sets

 * in order to satisfy different power/quality requirements.

  ABM Level 1,    ABM Level 2,    ABM Level 3,    ABM Level 4 */

 Default - Medium aggressiveness */

 Alt #1  - Increased aggressiveness */

 Alt #2  - Minimal aggressiveness */

 Alt #3  - Super aggressiveness */

  min_red  max_red  bright_pos  dark_pos  bright_gain  contrast  dev   min_knee  max_knee  blRed    blStart

  min_red  max_red  bright_pos  dark_pos  bright_gain  contrast  dev   min_knee  max_knee  blRed  blStart

 reserve 0xF0~0xF6 are write by DMCU only

 reserve 0xF0~0xF6 are write by DMCU only

 reserve 0xF0~0xFF are write by DMCU only

 reserve 0xF0~0xFF are write by DMCU only

 NOTE: iRAM is 256B in size */

 flags                      */

 0x00 U16  */

 parameters for ABM2.0 algorithm */

 0x02 U0.8 */

 0x16 U0.8 */

 0x2a U2.6 */

 0x3e U2.6 */

 0x52 U2.6 */

 0x66 U2.6 */

 0x7a U0.8 */

 0x7f U0.8 */

 parameters for crgb conversion */

 0x80 U3.13 */

 0x90 U1.15 */

 0xa0 U4.12 */

 parameters for custom curve */

 thresholds for brightness --> backlight */

 0xb0 U16.0 */

 offsets for brightness --> backlight */

 0xd0 U16.0 */

 For reading PSR State directly from IRAM */

 0xf0       */

 0xf1       */

 0xf2       */

 0xf3       */

 0xf4       */

 0xf6       */

 0xf7       */

 0xf9       */

 0xfb       */

 0xfc       */

 0xfd       */

 0xfe       */

 0xff       */

 flags                      */

 0x00 U16  */

 parameters for ABM2.2 algorithm */

 0x02 U0.8 */

 0x16 U0.8 */

 0x2a U2.6 */

 0x3e U2.6 */

 0x52 U0.8 */

 0x56 U0.8 */

 0x5a U0.8 */

 0x5e U0.8 */

 0x63 U0.8 */

 0x67 U0.8 */

 0x6b U16  */

 0x6d U0.8 */

 parameters for crgb conversion */

 0x80 U3.13 */

 0x90 U1.15 */

 0xa0 U4.12 */

 parameters for custom curve */

 thresholds for brightness --> backlight */

 0xb0 U16.0 */

 offsets for brightness --> backlight */

 0xd0 U16.0 */

 For reading PSR State directly from IRAM */

 0xf0       */

 0xf1       */

 0xf2       */

 0xf3       */

 0xf4       */

 0xf6       */

 0xf7       */

 0xf8       */

 0xf9       */

 0xfa       */

 0xfb       */

 0xfc       */

 0xfd       */

 0xfe       */

 0xff       */

	/* Setup all brightness levels between 0% and 100% exclusive

	 * Fills brightness-to-backlight transform table. Backlight custom curve

	 * describes transform from brightness to backlight. It will be defined

	 * as set of thresholds and set of offsets, together, implying

	 * extrapolation of custom curve into 16 uniformly spanned linear

	 * segments.  Each threshold/offset represented by 16 bit entry in

	 * format U4.10.

	/* Setup all brightness levels between 0% and 100% exclusive

	 * Fills brightness-to-backlight transform table. Backlight custom curve

	 * describes transform from brightness to backlight. It will be defined

	 * as set of thresholds and set of offsets, together, implying

	 * extrapolation of custom curve into 16 uniformly spanned linear

	 * segments.  Each threshold/offset represented by 16 bit entry in

	 * format U4.10.

Gamma 2.4

Gamma 2.2

Gamma 2.2

 We must copy to structure that is aligned to 32-bit

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 check if sh_mem_config register already configured */

		/* TODO:

		 *    This shouldn't be an issue with Navi10.  Verify.

 Not needed on SDMAv4 onwards any more */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 topology_device_list - Master list of all topology devices */

 Called with write topology_lock acquired */

 Making sure that the buffer is an empty string */

 Making sure that the buffer is an empty string */

 Making sure that the buffer is an empty string */

 Making sure that the buffer is an empty string */

 Check each bit */

 Replace the last "," with end of line */

***** Sysfs of Performance Counters ******/

 invalid data for PMC */

***************************************/

 Making sure that the buffer is an empty string */

	/*

	 * Creating the sysfs folders

	/*

	 * Creating sysfs files for node properties

 All hardware blocks have the same number of attributes. */

		/* Information of IOMMU's num_counters and counter_ids is shown

		 * under /sys/bus/event_source/devices/amd_iommu. We don't

		 * duplicate here.

 Called with write topology lock acquired */

 Called with write topology lock acquired */

 Called with write topology_lock acquired */

/* Helper function for intializing platform_xx members of

 * kfd_system_properties. Uses OEM info from the last CPU/APU node.

/*

 * Performance counters information is not part of CRAT but we would like to

 * put them in the sysfs under topology directory for Thunk to get the data.

 * This function is called before updating the sysfs.

 These are the only counters supported so far */

/* kfd_add_non_crat_information - Add information that is not currently

 *	defined in CRAT but is necessary for KFD topology

 * @dev - topology device to which addition info is added

 Check if CPU only node. */

 Add system memory information */

 TODO: For GPU node, rearrange code from kfd_topology_add_device */

/* kfd_is_acpi_crat_invalid - CRAT from ACPI is valid only for AMD APU devices.

 *	Ignore CRAT for all other devices. AMD APU is identified if both CPU

 *	and GPU cores are present.

 * @device_list - topology device list created by parsing ACPI CRAT table.

 * @return - TRUE if invalid, FALSE is valid.

	/* topology_device_list - Master list of all topology devices

	 * temp_topology_device_list - temporary list created while parsing CRAT

	 * or VCRAT. Once parsing is complete the contents of list is moved to

	 * topology_device_list

 Initialize the head for the both the lists */

	/* Proximity domains in ACPI CRAT tables start counting at

	 * 0. The same should be true for virtual CRAT tables created

	 * at this stage. GPUs added later in kfd_topology_add_device

	 * use a counter.

	/*

	 * Get the CRAT image from the ACPI. If ACPI doesn't have one

	 * or if ACPI CRAT is invalid create a virtual CRAT.

	 * NOTE: The current implementation expects all AMD APUs to have

	 *	CRAT. If no CRAT is available, it is assumed to be a CPU

	/* For nodes with GPU, this information gets added

	 * when GPU is detected (kfd_topology_add_device).

 Add additional information to CPU only node created above */

/* kfd_assign_gpu - Attach @gpu to the correct kfd topology device. If

 *		the GPU device is not already present in the topology device

 *		list then return NULL. This means a new topology device has to

 *		be created for this GPU.

		/* Discrete GPUs need their own topology device list

		 * entries. Don't assign them to CPU/APU nodes.

	/*

	 * TODO: Generate an event for thunk about the arrival/removal

	 * of the GPU

/* kfd_fill_mem_clk_max_info - Since CRAT doesn't have memory clock info,

 *		patch this after CRAT parsing.

	/* Currently, amdgpu driver (amdgpu_mc) deals only with GPUs with

	 * single bank of VRAM local memory.

	 * for dGPUs - VCRAT reports only one bank of Local Memory

	 * for APUs - If CRAT from ACPI reports more than one bank, then

	 *	all the banks will report the same mem_clk_max information

 xgmi always supports atomics between links. */

 check pcie support to set cpu(dev) flags for target_gpu_dev link. */

 set gpu (dev) flags. */

 CPU -> GPU with PCIe */

		/* GPU <-> GPU with PCIe and

		 * Vega20 with XGMI

 GPU only creates direct links so apply flags setting to all */

 Include the CPU in xGMI hive if xGMI connected by assigning it the hive ID. */

	/* Check to see if this gpu device exists in the topology_device_list.

	 * If so, assign the gpu to that device,

	 * else create a Virtual CRAT for this gpu device and then parse that

	 * CRAT to create a new topology device. Once created assign the gpu to

	 * that topology device

		/* Update the SYSFS tree, since we added another topology

		 * device

	/* TODO: Move the following lines to function

	 *	kfd_add_non_crat_information

	/* Fill-in additional information that is not available in CRAT but

	 * needed for the topology

	/*

	* Overwrite ATS capability according to needs_iommu_device to fix

	* potential missing corresponding bit in CRAT of BIOS.

	/* Fix errors in CZ CRAT.

	 * simd_count: Carrizo CRAT reports wrong simd_count, probably

	 *		because it doesn't consider masked out CUs

	 * max_waves_per_simd: Carrizo reports wrong max_waves_per_simd

 kfd only concerns sram ecc on GFX and HBM ecc on UMC */

/* kfd_topology_enum_kfd_devices - Enumerate through all devices in KFD

 *	topology. If GPU device is found @idx, then valid kfd_dev pointer is

 *	returned through @kdev

 * Return -	0: On success (@kdev will be NULL for non GPU nodes)

 *		-1: If end of list

/* kfd_numa_node_to_apic_id - Returns the APIC ID of the first logical processor

 *	of the given NUMA node (numa_node_id)

 * Return -1 on failure

	/* Only use IOMMUv2 if there is an APU topology node with no GPU

	 * assigned yet. This GPU will be assigned to it.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Mapping queue priority to pipe priority, indexed by queue priority */

	/* Exceeding these bounds corrupts the stack and indicates a coding error.

	 * Returning with no CU's enabled will hang the queue, which should be

	 * attention grabbing.

	/* Count active CUs per SH.

	 *

	 * Some CUs in an SH may be disabled.	HW expects disabled CUs to be

	 * represented in the high bits of each SH's enable mask (the upper and lower

	 * 16 bits of se_mask) and will take care of the actual distribution of

	 * disabled CUs within each SH automatically.

	 * Each half of se_mask must be filled only on bits 0-cu_per_sh[se][sh]-1.

	 *

	 * See note on Arcturus cu_bitmap layout in gfx_v9_0_get_cu_info.

	/* Symmetrically map cu_mask to all SEs & SHs:

	 * se_mask programs up to 2 SH in the upper and lower 16 bits.

	 *

	 * Examples

	 * Assuming 1 SH/SE, 4 SEs:

	 * cu_mask[0] bit0 -> se_mask[0] bit0

	 * cu_mask[0] bit1 -> se_mask[1] bit0

	 * ...

	 * cu_mask[0] bit4 -> se_mask[0] bit1

	 * ...

	 *

	 * Assuming 2 SH/SE, 4 SEs

	 * cu_mask[0] bit0 -> se_mask[0] bit0 (SE0,SH0,CU0)

	 * cu_mask[0] bit1 -> se_mask[1] bit0 (SE1,SH0,CU0)

	 * ...

	 * cu_mask[0] bit4 -> se_mask[0] bit16 (SE0,SH1,CU0)

	 * cu_mask[0] bit5 -> se_mask[1] bit16 (SE1,SH1,CU0)

	 * ...

	 * cu_mask[0] bit8 -> se_mask[0] bit1 (SE0,SH0,CU1)

	 * ...

	 *

	 * First ensure all CUs are disabled, then enable user specified CUs.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/*

	 * We acquire a buffer from DIQ

	 * The receive packet buff will be sitting on the Indirect Buffer

	 * and in the PQ we put the IB packet + sync packet(s).

	/*

	 * for now we use release mem for GPU-CPU synchronization

	 * Consider WaitRegMem + WriteData as a better alternative

	 * we get a GART allocations ( gpu/cpu mapping),

	 * for the sync variable, and wait until:

	 * (a) Sync with HW

	 * (b) Sync var is written by CP to mem.

 Wait till CP writes sync code: */

	/*

	 * no action is needed in this case,

	 * just make sure diq will not be used

 disable watch address */

 todo - disable address watch */

 for now assume it is an ATC address */

 taking the vmid for that process on the safe way using pdd */

 we do not control the vmid in DIQ mode, just a place holder */

 enable watch flag if address is not zero*/

 Send command to single wave */

		/*

		 * Limit access to the process waves only,

		 * by setting vmid check

 Send command to all waves with matching VMID */

 Send command to all CU waves with matching VMID */

 we do not control the VMID in DIQ, so reset it to a known value */

 Restore the GRBM_GFX_INDEX register */

 taking the VMID for that process on the safe way using PDD */

 for non DIQ we need to patch the VMID: */

	/* Scan all registers in the range ATC_VMID8_PASID_MAPPING ..

	 * ATC_VMID15_PASID_MAPPING

	 * to check which VMID the current process is mapped to.

 taking the VMID for that process on the safe way using PDD */

 for non DIQ we need to patch the VMID: */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* Initialize a kernel queue, including allocations of GART memory

 * needed for the queue.

 For CIK family asics, kq->eop_mem is not needed */

 assign HIQ to HQD */

 allocate fence for DIQ */

 Uninitialize a kernel queue and free all its memory usages. */

	/* For CIK family asics, kq->eop_mem is Null, kfd_gtt_sa_free()

	 * is able to handle NULL properly.

	/* When rptr == wptr, the buffer is empty.

	 * When rptr == wptr + 1, the buffer is full.

	 * It is always rptr that advances to the position of wptr, rather than

	 * the opposite. So we can only use up to queue_size_dwords - 1 dwords.

		/*

		 * make sure calling functions know

		 * acquire_packet_buffer() failed

		/* make sure after rolling back to position 0, there is

		 * still enough space.

 fill nops, roll back and start at position 0 */

 FIXME: Can this test be removed? */

/*

 * Copyright 2016-2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/* check if there is over subscription

	 * Note: the arbitration between the number of VMIDs and

	 * hws_max_conc_proc has been done in

	 * kgd2kfd_device_init().

 calculate run list ib allocation size */

	/*

	 * Increase the allocation size in case we need a chained run list

	 * when over subscription

 build the run list ib packet */

 build map process packet */

 PM4 packet structures on CIK are the same as on VI */

/*

 * Copyright 2015-2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/* GPU Processor ID base for dGPUs for which VCRAT needs to be created.

 * GPU processor ID are expressed with Bit[31]=1.

 * The base is set to 0x8000_0000 + 0x1000 to avoid collision with GPU IDs

 * used in the CRAT.

/* Return the next available gpu_processor_id and increment it for next GPU

 *	@total_cu_count - Total CUs present in the GPU including ones

 *			  masked off

 Static table to describe GPU Cache information */

	/* Indicates how many Compute Units share this cache

	 * within a SA. Value = 1 indicates the cache is not shared

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache (in SQC module) per bank */

 Scalar L1 Data Cache (in SQC module) per bank */

 TODO: Add L2 Cache information */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache (in SQC module) per bank */

 Scalar L1 Data Cache (in SQC module) per bank. */

 TODO: Add L2 Cache information */

/* NOTE: L1 cache information has been updated and L2/L3

 * cache information has been added for Vega10 and

 * newer ASICs. The unit for cache_size is KiB.

 * In future,  check & update cache details

 * for every new ASIC is required.

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 L2 Data Cache per GPU (Total Tex Cache) */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 L2 Data Cache per GPU (Total Tex Cache) */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 L2 Data Cache per GPU (Total Tex Cache) */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 L2 Data Cache per GPU (Total Tex Cache) */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 L2 Data Cache per GPU (Total Tex Cache) */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 L2 Data Cache per GPU (Total Tex Cache) */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 GL1 Data Cache per SA */

 L2 Data Cache per GPU (Total Tex Cache) */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 GL1 Data Cache per SA */

 L2 Data Cache per GPU (Total Tex Cache) */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 GL1 Data Cache per SA */

 L2 Data Cache per GPU (Total Tex Cache) */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 GL1 Data Cache per SA */

 L2 Data Cache per GPU (Total Tex Cache) */

 L3 Data Cache per GPU */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 GL1 Data Cache per SA */

 L2 Data Cache per GPU (Total Tex Cache) */

 L3 Data Cache per GPU */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 GL1 Data Cache per SA */

 L2 Data Cache per GPU (Total Tex Cache) */

 L3 Data Cache per GPU */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 GL1 Data Cache per SA */

 L2 Data Cache per GPU (Total Tex Cache) */

 L3 Data Cache per GPU */

 TCP L1 Cache per CU */

 Scalar L1 Instruction Cache per SQC */

 Scalar L1 Data Cache per SQC */

 GL1 Data Cache per SA */

 L2 Data Cache per GPU (Total Tex Cache) */

/* kfd_parse_subtype_cu - parse compute unit subtypes and attach it to correct

 * topology device present in the device_list

/* kfd_parse_subtype_mem - parse memory subtypes and attach it to correct

 * topology device present in the device_list

 We're on GPU node */

 APU */

 dGPU */

			/* Multiple banks of the same type are aggregated into

			 * one. User mode doesn't care about multiple physical

			 * memory segments. It's managed as a single virtual

			 * heap for user mode.

/* kfd_parse_subtype_cache - parse cache subtypes and attach it to correct

 * topology device present in the device_list

		/* Cache infomration in CRAT doesn't have proximity_domain

		 * information as it is associated with a CPU core or GPU

		 * Compute Unit. So map the cache using CPU core Id or SIMD

		 * (GPU) ID.

		 * TODO: This works because currently we can safely assume that

		 *  Compute Units are parsed before caches are parsed. In

		 *  future, remove this dependency

/* kfd_parse_subtype_iolink - parse iolink subtypes and attach it to correct

 * topology device present in the device_list

	/* CPU topology is created before GPUs are detected, so CPU->GPU

	 * links are not built at that time. If a PCIe type is discovered, it

	 * means a GPU is detected and we are adding GPU->CPU to the topology.

	 * At this time, also add the corresponded CPU->GPU link if GPU

	 * is large bar.

	 * For xGMI, we only added the link with one direction in the crat

	 * table, add corresponded reversed direction link now.

 same everything but the other direction */

/* kfd_parse_subtype - parse subtypes and attach it to correct topology device

 * present in the device_list

 *	@sub_type_hdr - subtype section of crat_image

 *	@device_list - list of topology devices present in this crat_image

		/*

		 * For now, nothing to do here

		/*

		 * For now, nothing to do here

/* kfd_parse_crat_table - parse CRAT table. For each node present in CRAT

 * create a kfd_topology_device and add in to device_list. Also parse

 * CRAT subtypes and attach it to appropriate kfd_topology_device

 *	@crat_image - input image containing CRAT

 *	@device_list - [OUT] list of kfd_topology_device generated after

 *		       parsing crat_image

 *	@proximity_domain - Proximity domain of the first device in the table

 *

 *	Return - 0 if successful else -ve value

 Helper function. See kfd_fill_gpu_cache_info for parameter description */

 First check if enough memory is available */

	/* CU could be inactive. In case of shared cache find the first active

	 * CU. and incase of non-shared cache check if the CU is inactive. If

	 * inactive active skip it

		/* Sibling map is w.r.t processor_id_low, so shift out

		 * inactive CU

 Helper function. See kfd_fill_gpu_cache_info for parameter description */

 First check if enough memory is available */

	/* CU could be inactive. In case of shared cache find the first active

	 * CU. and incase of non-shared cache check if the CU is inactive. If

	 * inactive active skip it

		/* Sibling map is w.r.t processor_id_low, so shift out

		 * inactive CU

/* kfd_fill_gpu_cache_info - Fill GPU cache info using kfd_gpu_cache_info

 * tables

 *

 *	@kdev - [IN] GPU device

 *	@gpu_processor_id - [IN] GPU processor ID to which these caches

 *			    associate

 *	@available_size - [IN] Amount of memory available in pcache

 *	@cu_info - [IN] Compute Unit info obtained from KGD

 *	@pcache - [OUT] memory into which cache data is to be filled in.

 *	@size_filled - [OUT] amount of data used up in pcache.

 *	@num_of_entries - [OUT] number of caches added

	/* For each type of cache listed in the kfd_gpu_cache_info table,

	 * go through all available Compute Units.

	 * The [i,j,k] loop will

	 *		if kfd_gpu_cache_info.num_cu_shared = 1

	 *			will parse through all available CU

	 *		If (kfd_gpu_cache_info.num_cu_shared != 1)

	 *			then it will consider only one CU from

	 *			the shared unit

 Move to next CU block */

/*

 * kfd_create_crat_image_acpi - Allocates memory for CRAT image and

 * copies CRAT from ACPI (if available).

 * NOTE: Call kfd_destroy_crat_image to free CRAT image memory

 *

 *	@crat_image: CRAT read from ACPI. If no CRAT in ACPI then

 *		     crat_image will be NULL

 *	@size: [OUT] size of crat_image

 *

 *	Return 0 if successful else return error code

 Fetch the CRAT table from ACPI */

/* Memory required to create Virtual CRAT.

 * Since there is no easy way to predict the amount of memory required, the

 * following amount is allocated for GPU Virtual CRAT. This is

 * expected to cover all known conditions. But to be safe additional check

 * is put in the code to ensure we don't overwrite.

/* kfd_fill_cu_for_cpu - Fill in Compute info for the given CPU NUMA node

 *

 *	@numa_node_id: CPU NUMA node id

 *	@avail_size: Available size in the memory

 *	@sub_type_hdr: Memory into which compute info will be filled in

 *

 *	Return 0 if successful else return -ve value

 Fill in subtype header data */

 Fill in CU data */

/* kfd_fill_mem_info_for_cpu - Fill in Memory info for the given CPU NUMA node

 *

 *	@numa_node_id: CPU NUMA node id

 *	@avail_size: Available size in the memory

 *	@sub_type_hdr: Memory into which compute info will be filled in

 *

 *	Return 0 if successful else return -ve value

 Fill in subtype header data */

 Fill in Memory Subunit data */

	/* Unlike si_meminfo, si_meminfo_node is not exported. So

	 * the following lines are duplicated from si_meminfo_node

	 * function

 Create IO links from this node to other CPU nodes */

 node itself */

 Fill in subtype header data */

 Fill in IO link data */

/* kfd_create_vcrat_image_cpu - Create Virtual CRAT for CPU

 *

 *	@pcrat_image: Fill in VCRAT for CPU

 *	@size:	[IN] allocated size of crat_image.

 *		[OUT] actual size of data filled in crat_image

	/* Fill in CRAT Header.

	 * Modify length and total_entries as subunits are added.

 Fill in Subtype: Compute Unit */

 Fill in Subtype: Memory */

 Fill in Subtype: IO Link */

	/* TODO: Add cache Subtype for CPU.

	 * Currently, CPU cache information is available in function

	 * detect_cache_attributes(cpu) defined in the file

	 * ./arch/x86/kernel/cpu/intel_cacheinfo.c. This function is not

	 * exported and to get the same information the code needs to be

	 * duplicated.

 Fetch the SRAT table from ACPI */

 Parse all entries looking for a match. */

		/*

		 * If length is 0, break from this loop to avoid

		 * infinite loop.

 Workaround bad cpu-gpu binding case */

/* kfd_fill_gpu_direct_io_link - Fill in direct io link from GPU

 * to its NUMA node

 *	@avail_size: Available size in the memory

 *	@kdev - [IN] GPU device

 *	@sub_type_hdr: Memory into which io link info will be filled in

 *	@proximity_domain - proximity domain of the GPU node

 *

 *	Return 0 if successful else return -ve value

 Fill in subtype header data */

	/* Fill in IOLINK subtype.

	 * TODO: Fill-in other fields of iolink subtype

		/*

		 * with host gpu xgmi link, host can access gpu memory whether

		 * or not pcie bar type is large, so always create bidirectional

		 * io link.

/* kfd_create_vcrat_image_gpu - Create Virtual CRAT for CPU

 *

 *	@pcrat_image: Fill in VCRAT for GPU

 *	@size:	[IN] allocated size of crat_image.

 *		[OUT] actual size of data filled in crat_image

	/* Fill the CRAT Header.

	 * Modify length and total_entries as subunits are added.

 Change length as we add more subtypes*/

	/* Fill in Subtype: Compute Unit

	 * First fill in the sub type header and then sub type data

 Fill CU subtype data */

	/* Check if this node supports IOMMU. During parsing this flag will

	 * translate to HSA_CAP_ATS_PRESENT

	/* Fill in Subtype: Memory. Only on systems with large BAR (no

	 * private FB), report memory as public. On other systems

	 * report the total FB size (public+private) as a single

	 * private heap.

	/* TODO: Fill in cache information. This information is NOT readily

	 * available in KGD

	/* Fill in Subtype: IO_LINKS

	 *  Only direct links are added here which is Link from GPU to

	 *  to its NUMA node. Indirect links are added by userspace.

	/* Fill in Subtype: IO_LINKS

	 * Direct links from GPU to other GPUs through xGMI.

	 * We will loop GPUs that already be processed (with lower value

	 * of proximity_domain), add the link for the GPUs with same

	 * hive id (from this GPU to other GPU) . The reversed iolink

	 * (from other GPU to this GPU) will be added

	 * in kfd_parse_subtype_iolink.

/* kfd_create_crat_image_virtual - Allocates memory for CRAT image and

 *		creates a Virtual CRAT (VCRAT) image

 *

 * NOTE: Call kfd_destroy_crat_image to free CRAT image memory

 *

 *	@crat_image: VCRAT image created because ACPI does not have a

 *		     CRAT for this device

 *	@size: [OUT] size of virtual crat_image

 *	@flags:	COMPUTE_UNIT_CPU - Create VCRAT for CPU device

 *		COMPUTE_UNIT_GPU - Create VCRAT for GPU

 *		(COMPUTE_UNIT_CPU | COMPUTE_UNIT_GPU) - Create VCRAT for APU

 *			-- this option is not currently implemented.

 *			The assumption is that all AMD APUs will have CRAT

 *	@kdev: Valid kfd_device required if flags contain COMPUTE_UNIT_GPU

 *

 *	Return 0 if successful else return -ve value

	/* Allocate the CPU Virtual CRAT size based on the number of online

	 * nodes. Allocate VCRAT_SIZE_FOR_GPU for GPU virtual CRAT image.

	 * This should cover all the current conditions. A check is put not

	 * to overwrite beyond allocated size for GPUs

 TODO: */

/* kfd_destroy_crat_image

 *

 *	@crat_image: [IN] - crat_image from kfd_create_crat_image_xxx(..)

 *

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/* In 64-bit mode, we can only control the top 3 bits of the LDS,

	 * scratch and GPUVM apertures.

	 * The hardware fills in the remaining 59 bits according to the

	 * following pattern:

	 * LDS:		X0000000'00000000 - X0000001'00000000 (4GB)

	 * Scratch:	X0000001'00000000 - X0000002'00000000 (4GB)

	 * GPUVM:	Y0010000'00000000 - Y0020000'00000000 (1TB)

	 *

	 * (where X/Y is the configurable nybble with the low-bit 0)

	 *

	 * LDS and scratch will have the same top nybble programmed in the

	 * top 3 bits of SH_MEM_BASES.PRIVATE_BASE.

	 * GPUVM can have a different top nybble programmed in the

	 * top 3 bits of SH_MEM_BASES.SHARED_BASE.

	 * We don't bother to support different top nybbles

	 * for LDS/Scratch and GPUVM.

 check if sh_mem_config register already configured */

 check if sh_mem_config register already configured */

	/* On dGPU we're always in GPUVM64 addressing mode with 64-bit

	 * aperture addresses.

	/* On dGPU we're always in GPUVM64 addressing mode with 64-bit

	 * aperture addresses.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 4 is the max # of SEs */

 AQL write pointer counts in 64B packets, PM4/CP counts in dwords. */

	/*

	 * HW does not clamp this field correctly. Maximum EOP queue size

	 * is constrained by per-SE EOP done signal count, which is 8-bit.

	 * Limit is 0xFF EOP entries (= 0x7F8 dwords). CP will not submit

	 * more than (EOP entry count - 1) so a queue size of 0x800 dwords

	 * is safe, giving a maximum field value of 0xA.

	/* Control stack is not copied to user mode for GFXv8 because

	 * it's part of the context save area that is already

	 * accessible to user mode

/*

 *  * preempt type here is ignored because there is only one way

 *  * to preempt sdma queue

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 filep now owns the reference returned by kfd_create_process */

 Return gpu_id as doorbell offset for mmap usage */

		/* On SOC15 ASICs, include the doorbell offset within the

		 * process doorbell frame, which is 2 pages.

	/* To prevent an unreasonably large CU mask size, set an arbitrary

	 * limit of max_num_cus bits.  We can then just drop any CU mask bits

	 * past max_num_cus bits and just use the first max_num_cus bits.

	/*

	 * make sure that we have pdd, if this the first queue created for

	 * this process

 In case of a legal call, we have no dbgmgr yet */

/*

 * Parse and generate variable size data structure for address watch.

 * Total size of the buffer and # watch points is limited in order

 * to prevent kernel abuse. (no bearing to the much smaller HW limitation

 * which is enforced by dbgdev module)

 * please also note that the watch address itself are not "copied from user",

 * since it be set into the HW in user mode values.

 *

 Validate arguments */

 this is the actual buffer to work with */

	/*

	 * set watch address base pointer to point on the array base

	 * within args_buff

 skip over the addresses buffer */

		/*

		 * There is an array of masks.

		 * set watch mask base pointer to point on the array base

		 * within args_buff

 skip over the masks buffer */

 just the NULL mask, set to NULL and skip over it */

 Currently HSA Event is not supported for DBG */

 Parse and generate fixed size data structure for wave control */

 we use compact form, independent of the packing attribute value */

 input size must match the computed "compact" size */

 copy the entire buffer from user */

 move ptr to the start of the "pay-load" area */

 Reading GPU clock counter from KGD */

 Node without GPU resource */

 No access to rdtsc. Using raw monotonic time */

 Since the counter is in nano-seconds we use 1GHz frequency */

 Run over all pdd of the process */

		/* Return number of nodes, so that user space can alloacate

		 * sufficient memory

	/* Fill in process-aperture information for all available

	 * nodes, but not more than args->num_of_nodes as that is

	 * the amount of memory allocated by user

 Run over all pdd of the process */

	/* For dGPUs the event page is allocated in user mode. The

	 * handle is passed to KFD with the first call to this IOCTL

	 * through the event_page_offset field.

 On success, the PDD keeps the drm_file reference */

	/* Flush pending deferred work to avoid racing with deferred actions

	 * from previous memory map changes (e.g. munmap).

 Update the VRAM usage count */

	/* MMIO is mapped through kfd device

	 * Generate a kfd mmap offset

	/*

	 * Safeguard to prevent user space from freeing signal BO.

	 * It will be freed at process termination.

	/* If freeing the buffer failed, leave the handle in place for

	 * clean-up during process tear-down.

 Flush TLBs after waiting for the page table updates to complete */

 Flush TLBs after waiting for the page table updates to complete */

 Find a KFD GPU device that supports the get_dmabuf_info query */

 Get dmabuf info from KGD */

 Reverse-lookup gpu_id from kgd pointer */

 Copy metadata buffer to user mode */

 Handle requests for watching SMI events */

* Ioctl table */

	/* Get the process struct from the filep. Only the process

	 * that opened /dev/kfd can use the file descriptor. Child

	 * processes need to create their own KFD device context.

 Do not trust userspace, use our own definition */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 Verify module parameters */

 Verify module parameters */

	/* Ignore the return value, so that we can continue

	 * to init the KFD, even if procfs isn't craated

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * List of struct kfd_process (field kfd_process).

 * Unique/indexed by mm_struct*

 For process termination handling */

/* Ordered, single-threaded workqueue for restoring evicted

 * processes. Restoring multiple processes concurrently under memory

 * pressure can lead to processes blocking each other from validating

 * their BOs and result in a live-lock situation where processes

 * remain evicted indefinitely.

/*

 * Structure for SDMA activity tracking

	/*

	 * Total SDMA activity is current SDMA activity + past SDMA activity

	 * Past SDMA count is stored in pdd.

	 * To get the current activity counters for all active SDMA queues,

	 * we loop over all SDMA queues and get their counts from user-space.

	 *

	 * We cannot call get_user() with dqm_lock held as it can cause

	 * a circular lock dependency situation. To read the SDMA stats,

	 * we need to do the following:

	 *

	 * 1. Create a temporary list of SDMA queue nodes from the qpd->queues_list,

	 *    with dqm_lock/dqm_unlock().

	 * 2. Call get_user() for each node in temporary list without dqm_lock.

	 *    Save the SDMA count for each node and also add the count to the total

	 *    SDMA count counter.

	 *    Its possible, during this step, a few SDMA queue nodes got deleted

	 *    from the qpd->queues_list.

	 * 3. Do a second pass over qpd->queues_list to check if any nodes got deleted.

	 *    If any node got deleted, its SDMA count would be captured in the sdma

	 *    past activity counter. So subtract the SDMA counter stored in step 2

	 *    for this node from the total SDMA count.

	/*

	 * Create the temp list of all SDMA queues

	/*

	 * If the temp list is empty, then no SDMA queues nodes were found in

	 * qpd->queues_list. Return the past activity count as the total sdma

	 * count

	/*

	 * Get the usage count for each SDMA queue in temp_list.

	/*

	 * Do a second iteration over qpd_queues_list to check if any SDMA

	 * nodes got deleted while fetching SDMA counter.

	/*

	 * If temp list is not empty, it implies some queues got deleted

	 * from qpd->queues_list during SDMA usage read. Subtract the SDMA

	 * count for each node from the total SDMA count.

/**

 * @kfd_get_cu_occupancy - Collect number of waves in-flight on this device

 * by current process. Translates acquired wave count into number of compute units

 * that are occupied.

 *

 * @atr: Handle of attribute that allows reporting of wave count. The attribute

 * handle encapsulates GPU device it is associated with, thereby allowing collection

 * of waves in flight, etc

 *

 * @buffer: Handle of user provided buffer updated with wave count

 *

 * Return: Number of bytes written to user buffer or an error value

 Collect wave count from device if it supports */

 Translate wave count to number of compute units */

 If we fail to create the procfs, clean up */

 Sysfs handle that gets CU occupancy is per device */

 Create proc/<pid>/queues/<queue id> folder */

	/*

	 * Create sysfs files for each GPU:

	 * - proc/<pid>/stats_<gpuid>/

	 * - proc/<pid>/stats_<gpuid>/evicted_ms

	 * - proc/<pid>/stats_<gpuid>/cu_occupancy

 Add sysfs file to report compute unit occupancy */

	/*

	 * Create sysfs files for each GPU which supports SVM

	 * - proc/<pid>/counters_<gpuid>/

	 * - proc/<pid>/counters_<gpuid>/faults

	 * - proc/<pid>/counters_<gpuid>/page_in

	 * - proc/<pid>/counters_<gpuid>/page_out

	/*

	 * Create sysfs files for each GPU:

	 * - proc/<pid>/vram_<gpuid>

	 * - proc/<pid>/sdma_<gpuid>

/* kfd_process_alloc_gpuvm - Allocate GPU VM for the KFD process

 *	This function should be only called right after the process

 *	is created and when kfd_processes_mutex is still being held

 *	to avoid concurrency. Because of that exclusiveness, we do

 *	not need to take p->mutex.

/* kfd_process_device_reserve_ib_mem - Reserve memory inside the

 *	process for IB usage The memory reserved is for KFD to submit

 *	IB to AMDGPU from kernel.  If the memory is reserved

 *	successfully, ib_kaddr will have the CPU/kernel

 *	address. Check ib_kaddr before accessing the memory.

 ib_base is only set for dGPU */

 Only the pthreads threading model is supported. */

	/*

	 * take kfd processes mutex before starting of process creation

	 * so there won't be a case where two threads of the same process

	 * create two kfd_process structures

 A prior open of /dev/kfd could have already created the process. */

 kfd_process_free_notifier will trigger the cleanup */

 Only the pthreads threading model is supported. */

	/*

	 * Remove all handles from idr and release appropriate

	 * local memory object

/*

 * Just kunmap and unpin signal BO here. It will be freed in

 * kfd_process_free_outstanding_kfd_bos()

		/*

		 * before destroying pdd, make sure to report availability

		 * for auto suspend

/* No process locking is needed in this function, because the process

 * is not findable any more. We must assume that no other thread is

 * using it any more, otherwise we couldn't safely free the process

 * structure in the end.

	/*

	 * The kfd_process structure can not be free because the

	 * mmu_notifier srcu is read locked

	/* Iterate over all process device data structures and if the

	 * pdd is in debug mode, we should first force unregistration,

	 * then we will be able to destroy the queues

 Indicate to other users that MM is no longer valid */

	/* Signal the eviction fence after user mode queues are

	 * destroyed. This allows any BOs to be freed without

	 * triggering pointless evictions or waiting for fences.

 cwsr_base is only set for dGPU */

		/* KFD trap handler is bound, record as second-level TBA/TMA

		 * in first-level TMA. First-level trap will jump to second.

 No trap handler bound, bind as first-level TBA/TMA. */

	/* On most GFXv9 GPUs, the retry mode in the SQ must match the

	 * boot time retry setting. Mixing processes with different

	 * XNACK/retry settings can hang the GPU.

	 *

	 * Different GPUs can have different noretry settings depending

	 * on HW bugs or limitations. We need to find at least one

	 * XNACK mode for this process that's compatible with all GPUs.

	 * Fortunately GPUs with retry enabled (noretry=0) can run code

	 * built for XNACK-off. On GFXv9 it may perform slower.

	 *

	 * Therefore applications built for XNACK-off can always be

	 * supported and will be our fallback if any GPU does not

	 * support retry.

		/* Only consider GFXv9 and higher GPUs. Older GPUs don't

		 * support the SVM APIs and don't need to be considered

		 * for the XNACK mode selection.

		/* Aldebaran can always support XNACK because it can support

		 * per-process XNACK mode selection. But let the dev->noretry

		 * setting still influence the default XNACK mode.

		/* GFXv10 and later GPUs do not support shader preemption

		 * during page faults. This can lead to poor QoS for queue

		 * management and memory-manager-related preemptions or

		 * even deadlocks.

/*

 * On return the kfd_process is fully operational and will be freed when the

 * mm is released

 init process apertures*/

 Check XNACK support after PDDs are created in kfd_init_apertures */

 alloc_notifier needs to find the process in the hash table */

	/* MMU notifier registration must be the last call that can fail

	 * because after this point we cannot unwind the process creation.

	 * After this point, mmu_notifier_put will trigger the cleanup by

	 * dropping the last process reference in the free_notifier.

 Mask out doorbells reserved for SDMA, IH, and VCN on SOC15. */

 Init idr used for memory handle translation */

/**

 * kfd_process_device_init_vm - Initialize a VM for a process-device

 *

 * @pdd: The process-device

 * @drm_file: Optional pointer to a DRM file descriptor

 *

 * If @drm_file is specified, it will be used to acquire the VM from

 * that file descriptor. If successful, the @pdd takes ownership of

 * the file descriptor.

 *

 * If @drm_file is NULL, a new VM is created.

 *

 * Returns 0 on success, -errno on failure.

/*

 * Direct the IOMMU to bind the process (specifically the pasid->mm)

 * to the device.

 * Unbinding occurs when the process dies or the device is removed.

 *

 * Assumes that the process lock is held.

	/*

	 * signal runtime-pm system to auto resume and prevent

	 * further runtime suspend once device pdd is created until

	 * pdd is destroyed.

	/*

	 * make sure that runtime_usage counter is incremented just once

	 * per pdd

 balance runpm reference count and exit with error */

/* Create specific handle mapped to mem from process local memory idr

 * Assumes that the process lock is held.

/* Translate specific handle from process local memory idr

 * Assumes that the process lock is held.

/* Remove specific handle from process local memory idr

 * Assumes that the process lock is held.

 This increments the process->ref counter. */

 This increments the process->ref counter. */

/* kfd_process_evict_queues - Evict all user queues of a process

 *

 * Eviction is reference-counted per process-device. This means multiple

 * evictions from different sources can be nested safely.

		/* evict return -EIO if HWS is hang or asic is resetting, in this case

		 * we would like to set all the queues to be in evicted state to prevent

		 * them been add back since they actually not be saved right now.

	/* To keep state consistent, roll back partial eviction by

	 * restoring queues

 kfd_process_restore_queues - Restore all user queues of a process */

	/* Process termination destroys this worker thread. So during the

	 * lifetime of this thread, kfd_process p will be valid

	/* Narrow window of overlap between restore and evict work

	 * item is possible. Once amdgpu_amdkfd_gpuvm_restore_process_bos

	 * unreserves KFD BOs, it is possible to evicted again. But

	 * restore has few more steps of finish. So lets wait for any

	 * previous restore work to complete

	/* Process termination destroys this worker thread. So during the

	 * lifetime of this thread, kfd_process p will be valid

	/* Setting last_restore_timestamp before successful restoration.

	 * Otherwise this would have to be set by KGD (restore_process_bos)

	 * before KFD BOs are unreserved. If not, the process can be evicted

	 * again before the timestamp is set.

	 * If restore fails, the timestamp will be set again in the next

	 * attempt. This would mean that the minimum GPU quanta would be

	 * PROCESS_ACTIVE_TIME_MS - (time to execute the following two

	 * functions)

 Mapping pages to user process */

		/* Nothing to flush until a VMID is assigned, which

		 * only happens when the first queue is created.

/*

 * Copyright 2016-2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

		/* On GFX9, unlike GFX10, bit TRAP_EN of SQ_SHADER_TBA_HI is

		 * not defined, so setting it won't do any harm.

	/* Determine the number of processes to map together to HW:

	 * it can not exceed the number of VMIDs available to the

	 * scheduler, and it is determined by the smaller of the number

	 * of processes in the runlist and kfd module parameter

	 * hws_max_conc_proc.

	 * Note: the arbitration between the number of VMIDs and

	 * hws_max_conc_proc has been done in

	 * kgd2kfd_device_init().

 no static queues under SDMA */

 in this case, we do not preempt static queues */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * The primary memory I/O features being added for revisions of gfxip

 * beyond 7.0 (Kaveri) are:

 *

 * Access to ATC/IOMMU mapped memory w/ associated extension of VA to 48b

 *

 * “Flat” shader memory access – These are new shader vector memory

 * operations that do not reference a T#/V# so a “pointer” is what is

 * sourced from the vector gprs for direct access to memory.

 * This pointer space has the Shared(LDS) and Private(Scratch) memory

 * mapped into this pointer space as apertures.

 * The hardware then determines how to direct the memory request

 * based on what apertures the request falls in.

 *

 * Unaligned support and alignment check

 *

 *

 * System Unified Address - SUA

 *

 * The standard usage for GPU virtual addresses are that they are mapped by

 * a set of page tables we call GPUVM and these page tables are managed by

 * a combination of vidMM/driver software components.  The current virtual

 * address (VA) range for GPUVM is 40b.

 *

 * As of gfxip7.1 and beyond we’re adding the ability for compute memory

 * clients (CP/RLC, DMA, SHADER(ifetch, scalar, and vector ops)) to access

 * the same page tables used by host x86 processors and that are managed by

 * the operating system. This is via a technique and hardware called ATC/IOMMU.

 * The GPU has the capability of accessing both the GPUVM and ATC address

 * spaces for a given VMID (process) simultaneously and we call this feature

 * system unified address (SUA).

 *

 * There are three fundamental address modes of operation for a given VMID

 * (process) on the GPU:

 *

 *	HSA64 – 64b pointers and the default address space is ATC

 *	HSA32 – 32b pointers and the default address space is ATC

 *	GPUVM – 64b pointers and the default address space is GPUVM (driver

 *		model mode)

 *

 *

 * HSA64 - ATC/IOMMU 64b

 *

 * A 64b pointer in the AMD64/IA64 CPU architecture is not fully utilized

 * by the CPU so an AMD CPU can only access the high area

 * (VA[63:47] == 0x1FFFF) and low area (VA[63:47 == 0) of the address space

 * so the actual VA carried to translation is 48b.  There is a “hole” in

 * the middle of the 64b VA space.

 *

 * The GPU not only has access to all of the CPU accessible address space via

 * ATC/IOMMU, but it also has access to the GPUVM address space.  The “system

 * unified address” feature (SUA) is the mapping of GPUVM and ATC address

 * spaces into a unified pointer space.  The method we take for 64b mode is

 * to map the full 40b GPUVM address space into the hole of the 64b address

 * space.



 * The GPUVM_Base/GPUVM_Limit defines the aperture in the 64b space where we

 * direct requests to be translated via GPUVM page tables instead of the

 * IOMMU path.

 *

 *

 * 64b to 49b Address conversion

 *

 * Note that there are still significant portions of unused regions (holes)

 * in the 64b address space even for the GPU.  There are several places in

 * the pipeline (sw and hw), we wish to compress the 64b virtual address

 * to a 49b address.  This 49b address is constituted of an “ATC” bit

 * plus a 48b virtual address.  This 49b address is what is passed to the

 * translation hardware.  ATC==0 means the 48b address is a GPUVM address

 * (max of 2^40 – 1) intended to be translated via GPUVM page tables.

 * ATC==1 means the 48b address is intended to be translated via IOMMU

 * page tables.

 *

 * A 64b pointer is compared to the apertures that are defined (Base/Limit), in

 * this case the GPUVM aperture (red) is defined and if a pointer falls in this

 * aperture, we subtract the GPUVM_Base address and set the ATC bit to zero

 * as part of the 64b to 49b conversion.

 *

 * Where this 64b to 49b conversion is done is a function of the usage.

 * Most GPU memory access is via memory objects where the driver builds

 * a descriptor which consists of a base address and a memory access by

 * the GPU usually consists of some kind of an offset or Cartesian coordinate

 * that references this memory descriptor.  This is the case for shader

 * instructions that reference the T# or V# constants, or for specified

 * locations of assets (ex. the shader program location).  In these cases

 * the driver is what handles the 64b to 49b conversion and the base

 * address in the descriptor (ex. V# or T# or shader program location)

 * is defined as a 48b address w/ an ATC bit.  For this usage a given

 * memory object cannot straddle multiple apertures in the 64b address

 * space. For example a shader program cannot jump in/out between ATC

 * and GPUVM space.

 *

 * In some cases we wish to pass a 64b pointer to the GPU hardware and

 * the GPU hw does the 64b to 49b conversion before passing memory

 * requests to the cache/memory system.  This is the case for the

 * S_LOAD and FLAT_* shader memory instructions where we have 64b pointers

 * in scalar and vector GPRs respectively.

 *

 * In all cases (no matter where the 64b -> 49b conversion is done), the gfxip

 * hardware sends a 48b address along w/ an ATC bit, to the memory controller

 * on the memory request interfaces.

 *

 *	<client>_MC_rdreq_atc   // read request ATC bit

 *

 *		0 : <client>_MC_rdreq_addr is a GPUVM VA

 *

 *		1 : <client>_MC_rdreq_addr is a ATC VA

 *

 *

 * “Spare” aperture (APE1)

 *

 * We use the GPUVM aperture to differentiate ATC vs. GPUVM, but we also use

 * apertures to set the Mtype field for S_LOAD/FLAT_* ops which is input to the

 * config tables for setting cache policies. The “spare” (APE1) aperture is

 * motivated by getting a different Mtype from the default.

 * The default aperture isn’t an actual base/limit aperture; it is just the

 * address space that doesn’t hit any defined base/limit apertures.

 * The following diagram is a complete picture of the gfxip7.x SUA apertures.

 * The APE1 can be placed either below or above

 * the hole (cannot be in the hole).

 *

 *

 * General Aperture definitions and rules

 *

 * An aperture register definition consists of a Base, Limit, Mtype, and

 * usually an ATC bit indicating which translation tables that aperture uses.

 * In all cases (for SUA and DUA apertures discussed later), aperture base

 * and limit definitions are 64KB aligned.

 *

 *	<ape>_Base[63:0] = { <ape>_Base_register[63:16], 0x0000 }

 *

 *	<ape>_Limit[63:0] = { <ape>_Limit_register[63:16], 0xFFFF }

 *

 * The base and limit are considered inclusive to an aperture so being

 * inside an aperture means (address >= Base) AND (address <= Limit).

 *

 * In no case is a payload that straddles multiple apertures expected to work.

 * For example a load_dword_x4 that starts in one aperture and ends in another,

 * does not work.  For the vector FLAT_* ops we have detection capability in

 * the shader for reporting a “memory violation” back to the

 * SQ block for use in traps.

 * A memory violation results when an op falls into the hole,

 * or a payload straddles multiple apertures.  The S_LOAD instruction

 * does not have this detection.

 *

 * Apertures cannot overlap.

 *

 *

 *

 * HSA32 - ATC/IOMMU 32b

 *

 * For HSA32 mode, the pointers are interpreted as 32 bits and use a single GPR

 * instead of two for the S_LOAD and FLAT_* ops. The entire GPUVM space of 40b

 * will not fit so there is only partial visibility to the GPUVM

 * space (defined by the aperture) for S_LOAD and FLAT_* ops.

 * There is no spare (APE1) aperture for HSA32 mode.

 *

 *

 * GPUVM 64b mode (driver model)

 *

 * This mode is related to HSA64 in that the difference really is that

 * the default aperture is GPUVM (ATC==0) and not ATC space.

 * We have gfxip7.x hardware that has FLAT_* and S_LOAD support for

 * SUA GPUVM mode, but does not support HSA32/HSA64.

 *

 *

 * Device Unified Address - DUA

 *

 * Device unified address (DUA) is the name of the feature that maps the

 * Shared(LDS) memory and Private(Scratch) memory into the overall address

 * space for use by the new FLAT_* vector memory ops.  The Shared and

 * Private memories are mapped as apertures into the address space,

 * and the hardware detects when a FLAT_* memory request is to be redirected

 * to the LDS or Scratch memory when it falls into one of these apertures.

 * Like the SUA apertures, the Shared/Private apertures are 64KB aligned and

 * the base/limit is “in” the aperture. For both HSA64 and GPUVM SUA modes,

 * the Shared/Private apertures are always placed in a limited selection of

 * options in the hole of the 64b address space. For HSA32 mode, the

 * Shared/Private apertures can be placed anywhere in the 32b space

 * except at 0.

 *

 *

 * HSA64 Apertures for FLAT_* vector ops

 *

 * For HSA64 SUA mode, the Shared and Private apertures are always placed

 * in the hole w/ a limited selection of possible locations. The requests

 * that fall in the private aperture are expanded as a function of the

 * work-item id (tid) and redirected to the location of the

 * “hidden private memory”. The hidden private can be placed in either GPUVM

 * or ATC space. The addresses that fall in the shared aperture are

 * re-directed to the on-chip LDS memory hardware.

 *

 *

 * HSA32 Apertures for FLAT_* vector ops

 *

 * In HSA32 mode, the Private and Shared apertures can be placed anywhere

 * in the 32b space except at 0 (Private or Shared Base at zero disables

 * the apertures). If the base address of the apertures are non-zero

 * (ie apertures exists), the size is always 64KB.

 *

 *

 * GPUVM Apertures for FLAT_* vector ops

 *

 * In GPUVM mode, the Shared/Private apertures are specified identically

 * to HSA64 mode where they are always in the hole at a limited selection

 * of locations.

 *

 *

 * Aperture Definitions for SUA and DUA

 *

 * The interpretation of the aperture register definitions for a given

 * VMID is a function of the “SUA Mode” which is one of HSA64, HSA32, or

 * GPUVM64 discussed in previous sections. The mode is first decoded, and

 * then the remaining register decode is a function of the mode.

 *

 *

 * SUA Mode Decode

 *

 * For the S_LOAD and FLAT_* shader operations, the SUA mode is decoded from

 * the COMPUTE_DISPATCH_INITIATOR:DATA_ATC bit and

 * the SH_MEM_CONFIG:PTR32 bits.

 *

 * COMPUTE_DISPATCH_INITIATOR:DATA_ATC    SH_MEM_CONFIG:PTR32        Mode

 *

 * 1                                              0                  HSA64

 *

 * 1                                              1                  HSA32

 *

 * 0                                              X                 GPUVM64

 *

 * In general the hardware will ignore the PTR32 bit and treat

 * as “0” whenever DATA_ATC = “0”, but sw should set PTR32=0

 * when DATA_ATC=0.

 *

 * The DATA_ATC bit is only set for compute dispatches.

 * All “Draw” dispatches are hardcoded to GPUVM64 mode

 * for FLAT_* / S_LOAD operations.

/* On GFXv9 the LDS and scratch apertures are programmed independently

 * using the high 16 bits of the 64-bit virtual address. They must be

 * in the hole, which will be the case as long as the high 16 bits are

 * not 0.

 *

 * The aperture sizes are still 4GB implicitly.

 *

 * A GPUVM aperture is not applicable on GFXv9.

/* User mode manages most of the SVM aperture address space. The low

 * 16MB are reserved for kernel use (CWSR trap handler and kernel IB

 * for now).

	/*

	 * node id couldn't be 0 - the three MSB bits of

	 * aperture shouldn't be 0

		/* dGPUs: SVM aperture starting at 0

		 * with small reserved space for kernel.

		 * Set them to CANONICAL addresses.

		/* set them to non CANONICAL addresses, and no SVM is

		 * allocated.

	/* Raven needs SVM to support graphic handle, etc. Leave the small

	 * reserved space before SVM on Raven as well, even though we don't

	 * have to.

	 * Set gpuvm_base and gpuvm_limit to CANONICAL addresses so that they

	 * are used in Thunk to reserve SVM.

Iterating over all devices*/

			/* Skip non GPU devices and devices to which the

			 * current process have no access to. Access can be

			 * limited by placing the process in a specific

			 * cgroup hierarchy

		/*

		 * For 64 bit process apertures will be statically reserved in

		 * the x86_64 non canonical process address space

		 * amdkfd doesn't currently support apertures for 32 bit process

				/* dGPUs: the reserved space for kernel

				 * before SVM

 SPDX-License-Identifier: GPL-2.0 OR MIT

/*

 * Copyright 2020-2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/* Long enough to ensure no retry fault comes after svm range is restored and

 * page table is updated.

/**

 * svm_range_unlink - unlink svm_range from lists and interval tree

 * @prange: svm range structure to be removed

 *

 * Remove the svm_range from the svms and svm_bo lists and the svms

 * interval tree.

 *

 * Context: The caller must hold svms->lock

/**

 * svm_range_add_to_svms - add svm range to svms

 * @prange: svm range structure to be added

 *

 * Add the svm range to svms interval tree and link list

 *

 * Context: The caller must hold svms->lock

		/* list_del_init tells a concurrent svm_range_vram_node_new when

		 * it's safe to reuse the svm_bo pointer and svm_bo_list head.

		/* We're not in the eviction worker.

		 * Signal the fence and synchronize with any

		 * pending eviction work.

 We still have a reference, all is well */

		/*

		 * Migrate from GPU to GPU, remove range from source bo_adev

		 * svm_bo range list, and return false to allocate svm_bo from

		 * destination adev.

			/* The BO is getting evicted,

			 * we need to get a new one

			/* wait for the fence to avoid long spin-loop

			 * at list_empty_careful

			/* The BO was still around and we got

			 * a new reference to it

	/* We need a new svm_bo. Spin-loop to wait for concurrent

	 * svm_range_bo_release to finish removing this range from

	 * its range list. After this, it is safe to reuse the

	 * svm_bo pointer and svm_bo_list head.

/**

 * svm_range_debug_dump - print all range information from svms

 * @svms: svm range list header

 *

 * debug output svm range start, end, prefetch location from svms

 * interval tree and link list

 *

 * Context: The caller must hold svms->lock

/**

 * svm_range_split_adjust - split range and adjust

 *

 * @new: new range

 * @old: the old range

 * @start: the old range adjust to start address in pages

 * @last: the old range adjust to last address in pages

 *

 * Copy system memory dma_addr or vram ttm_res in old range to new

 * range from new_start up to size new->npages, the remaining old range is from

 * start to last

 *

 * Return:

 * 0 - OK, -ENOMEM - out of memory

/**

 * svm_range_split - split a range in 2 ranges

 *

 * @prange: the svm range to split

 * @start: the remaining range start address in pages

 * @last: the remaining range last address in pages

 * @new: the result new range generated

 *

 * Two cases only:

 * case 1: if start == prange->start

 *         prange ==> prange[start, last]

 *         new range [last + 1, prange->last]

 *

 * case 2: if last == prange->last

 *         prange ==> prange[start, last]

 *         new range [prange->start, start - 1]

 *

 * Return:

 * 0 - OK, -ENOMEM - out of memory, -EINVAL - invalid start, last

/**

 * svm_range_split_by_granularity - collect ranges within granularity boundary

 *

 * @p: the process with svms list

 * @mm: mm structure

 * @addr: the vm fault address in pages, to split the prange

 * @parent: parent range if prange is from child list

 * @prange: prange to split

 *

 * Trims @prange to be a single aligned block of prange->granularity if

 * possible. The head and tail are added to the child_list in @parent.

 *

 * Context: caller must hold mmap_read_lock and prange->lock

 *

 * Return:

 * 0 - OK, otherwise error code

	/* Align splited range start and size to granularity size, then a single

	 * PTE will be used for whole range, this reduces the number of PTE

	 * updated and the L1 TLB space used for translation.

 xnack on, update mapping on GPUs with ACCESS_IN_PLACE */

		/* Collect all pages in the same address range and memory domain

		 * that can be mapped with a single call to update mapping.

/*

 * Validation+GPU mapping with concurrent invalidation (MMU notifiers)

 *

 * To prevent concurrent destruction or change of range attributes, the

 * svm_read_lock must be held. The caller must not hold the svm_write_lock

 * because that would block concurrent evictions and lead to deadlocks. To

 * serialize concurrent migrations or validations of the same range, the

 * prange->migrate_mutex must be held.

 *

 * For VRAM ranges, the SVM BO must be allocated and valid (protected by its

 * eviction fence.

 *

 * The following sequence ensures race-free validation and GPU mapping:

 *

 * 1. Reserve page table (and SVM BO if range is in VRAM)

 * 2. hmm_range_fault to get page addresses (if system memory)

 * 3. DMA-map pages (if system memory)

 * 4-a. Take notifier lock

 * 4-b. Check that pages still valid (mmu_interval_read_retry)

 * 4-c. Check that the range was not split or otherwise invalidated

 * 4-d. Update GPU page table

 * 4.e. Release notifier lock

 * 5. Release page table (and SVM BO) reservation

		/* If prefetch range to GPU, or GPU retry fault migrate range to

		 * GPU, which has ACCESS attribute to the range, create mapping

		 * on that GPU.

		/* This should never happen. actual_loc gets set by

		 * svm_migrate_ram_to_vram after allocating a BO.

/**

 * svm_range_list_lock_and_flush_work - flush pending deferred work

 *

 * @svms: the svm range list

 * @mm: the mm structure

 *

 * Context: Returns with mmap write lock held, pending deferred work flushed

 *

	/* kfd_process_notifier_release destroys this worker thread. So during

	 * the lifetime of this thread, kfd_process and mm will be valid.

		/*

		 * If range is migrating, wait for migration is done.

		/* No recovery from this failure. Probably the CP is

		 * hanging. No point trying again.

 If validation failed, reschedule another attempt */

/**

 * svm_range_evict - evict svm range

 *

 * Stop all queues of the process to ensure GPU doesn't access the memory, then

 * return to let CPU evict the buffer and proceed CPU pagetable update.

 *

 * Don't need use lock to sync cpu pagetable invalidation with GPU execution.

 * If invalidation happens while restore work is running, restore work will

 * restart to ensure to get the latest CPU pages mapping to GPU, then start

 * the queues.

 First eviction, stop the queues */

/**

 * svm_range_handle_overlap - split overlap ranges

 * @svms: svm range list header

 * @new: range added with this attributes

 * @start: range added start address, in pages

 * @last: range last address, in pages

 * @update_list: output, the ranges attributes are updated. For set_attr, this

 *               will do validation and map to GPUs. For unmap, this will be

 *               removed and unmap from GPUs

 * @insert_list: output, the ranges will be inserted into svms, attributes are

 *               not changes. For set_attr, this will add into svms.

 * @remove_list:output, the ranges will be removed from svms

 * @left: the remaining range after overlap, For set_attr, this will be added

 *        as new range.

 *

 * Total have 5 overlap cases.

 *

 * This function handles overlap of an address interval with existing

 * struct svm_ranges for applying new attributes. This may require

 * splitting existing struct svm_ranges. All changes should be applied to

 * the range_list and interval tree transactionally. If any split operation

 * fails, the entire update fails. Therefore the existing overlapping

 * svm_ranges are cloned and the original svm_ranges left unchanged. If the

 * transaction succeeds, the modified clones are added and the originals

 * freed. Otherwise the clones are removed and the old svm_ranges remain.

 *

 * Context: The caller must hold svms->lock

 node intersects the updated range, clone+split it */

			/* The node is contained within start..last,

			 * just update it

 insert a new node if needed */

 TODO: implement deferred validation and mapping */

 TODO: implement deferred validation and mapping */

		/* Checking for the need to drain retry faults must be in

		 * mmap write lock to serialize with munmap notifiers.

		 *

		 * Remove from deferred_list must be inside mmap write lock,

		 * otherwise, svm_range_list_lock_and_flush_work may hold mmap

		 * write lock, and continue because deferred_list is empty, then

		 * deferred_list handle is blocked by mmap write lock.

	/* Make sure pending page faults are drained in the deferred worker

	 * before the range is freed to avoid straggler interrupts on

	 * unmapped memory causing "phantom faults".

 if prange is on the deferred list */

/**

 * svm_range_cpu_invalidate_pagetables - interval notifier callback

 *

 * If event is MMU_NOTIFY_UNMAP, this is from CPU unmap range, otherwise, it

 * is from migration, or CPU page invalidation callback.

 *

 * For unmap event, unmap range from GPUs, remove prange from svms in a delayed

 * work thread, and split prange if only part of prange is unmapped.

 *

 * For invalidation event, if GPU retry fault is not enabled, evict the queues,

 * then schedule svm_range_restore_work to update GPU mapping and resume queues.

 * If GPU retry fault is enabled, unmap the svm range from GPU, retry fault will

 * update GPU mapping to recover.

 *

 * Context: mmap lock, notifier_invalidate_start lock are held

 *          for invalidate event, prange lock is held if this is from migration

/**

 * svm_range_from_addr - find svm range from fault address

 * @svms: svm range list header

 * @addr: address to search range interval tree, in pages

 * @parent: parent range if range is on child list

 *

 * Context: The caller must hold svms->lock

 *

 * Return: the svm_range found or NULL

/* svm_range_best_restore_location - decide the best fault restore location

 * @prange: svm range structure

 * @adev: the GPU on which vm fault happened

 *

 * This is only called when xnack is on, to decide the best location to restore

 * the range mapping after GPU vm fault. Caller uses the best location to do

 * migration if actual loc is not best location, then update GPU page table

 * mapping to the best location.

 *

 * If the preferred loc is accessible by faulting GPU, use preferred loc.

 * If vm fault gpu idx is on range ACCESSIBLE bitmap, best_loc is vm fault gpu

 * If vm fault gpu idx is on range ACCESSIBLE_IN_PLACE bitmap, then

 *    if range actual loc is cpu, best_loc is cpu

 *    if vm fault gpu is on xgmi same hive of range actual loc gpu, best_loc is

 *    range actual loc.

 * Otherwise, GPU no access, best_loc is -1.

 *

 * Return:

 * -1 means vm fault GPU no access

 * 0 for CPU or GPU id

 fall through */

 First range that starts after the fault address */

 Last range that ends before the fault address */

		/* Last range must end before addr because

		 * there was no range after addr

 Check userptr by searching entire vm->va interval tree */

 Create one page svm range if 2MB range overlapping */

/* svm_range_skip_recover - decide if prange can be recovered

 * @prange: svm range structure

 *

 * GPU vm retry fault handle skip recover the range for cases:

 * 1. prange is on deferred list to be removed after unmap, it is stale fault,

 *    deferred list work will drain the stale fault before free the prange.

 * 2. prange is on deferred list to add interval notifier after split, or

 * 3. prange is child range, it is split from parent prange, recover later

 *    after interval notifier is added.

 *

 * Return: true to skip recover, false to recover

	/* fault is on different page of same range

	 * or fault is skipped to recover later

	 * or fault is on invalid virtual address

	/* fault is recovered

	 * or fault cannot recover because GPU no access on the range

			/* Need the write lock to create new range with MMU notifier.

			 * Also flush pending deferred work to make sure the interval

			 * tree is up to date before we add a new range

 skip duplicate vm fault on different pages of same range */

				/* Fallback to system memory if migration to

				 * VRAM failed

 Ensure list work is finished before process is destroyed */

/**

 * svm_range_check_vm - check if virtual address range mapped already

 * @p: current kfd_process

 * @start: range start address, in pages

 * @last: range last address, in pages

 * @bo_s: mapping start address in pages if address range already mapped

 * @bo_l: mapping last address in pages if address range already mapped

 *

 * The purpose is to avoid virtual address ranges already allocated by

 * kfd_ioctl_alloc_memory_of_gpu ioctl.

 * It looks for each pdd in the kfd_process.

 *

 * Context: Process context

 *

 * Return 0 - OK, if the range is not mapped.

 * Otherwise error code:

 * -EADDRINUSE - if address is mapped already by kfd_ioctl_alloc_memory_of_gpu

 * -ERESTARTSYS - A wait for the buffer to become unreserved was interrupted by

 * a signal. Release all buffer reservations and return to user-space.

/**

 * svm_range_is_valid - check if virtual address range is valid

 * @p: current kfd_process

 * @start: range start address, in pages

 * @size: range size, in pages

 *

 * Valid virtual address range means it belongs to one or more VMAs

 *

 * Context: Process context

 *

 * Return:

 *  0 - OK, otherwise error code

/**

 * svm_range_add - add svm range and handle overlap

 * @p: the range add to this process svms

 * @start: page size aligned

 * @size: page size aligned

 * @nattr: number of attributes

 * @attrs: array of attributes

 * @update_list: output, the ranges need validate and update GPU mapping

 * @insert_list: output, the ranges need insert to svms

 * @remove_list: output, the ranges are replaced and need remove from svms

 *

 * Check if the virtual address range has overlap with the registered ranges,

 * split the overlapped range, copy and adjust pages address and vram nodes in

 * old and new ranges.

 *

 * Context: Process context, caller must hold svms->lock

 *

 * Return:

 * 0 - OK, otherwise error code

/**

 * svm_range_best_prefetch_location - decide the best prefetch location

 * @prange: svm range structure

 *

 * For xnack off:

 * If range map to single GPU, the best prefetch location is prefetch_loc, which

 * can be CPU or GPU.

 *

 * If range is ACCESS or ACCESS_IN_PLACE by mGPUs, only if mGPU connection on

 * XGMI same hive, the best prefetch location is prefetch_loc GPU, othervise

 * the best prefetch location is always CPU, because GPU can not have coherent

 * mapping VRAM of other GPUs even with large-BAR PCIe connection.

 *

 * For xnack on:

 * If range is not ACCESS_IN_PLACE by mGPUs, the best prefetch location is

 * prefetch_loc, other GPU access will generate vm fault and trigger migration.

 *

 * If range is ACCESS_IN_PLACE by mGPUs, only if mGPU connection on XGMI same

 * hive, the best prefetch location is prefetch_loc GPU, otherwise the best

 * prefetch location is always CPU.

 *

 * Context: Process context

 *

 * Return:

 * 0 for CPU or GPU id

/* FIXME: This is a workaround for page locking bug when some pages are

 * invalid during migration to VRAM

/* svm_range_trigger_migration - start page migration if prefetch loc changed

 * @mm: current process mm_struct

 * @prange: svm range structure

 * @migrated: output, true if migration is triggered

 *

 * If range perfetch_loc is GPU, actual loc is cpu 0, then migrate the range

 * from ram to vram.

 * If range prefetch_loc is cpu 0, actual loc is GPU, then migrate the range

 * from vram to ram.

 *

 * If GPU vm fault retry is not enabled, migration interact with MMU notifier

 * and restore work:

 * 1. migrate_vma_setup invalidate pages, MMU notifier callback svm_range_evict

 *    stops all queues, schedule restore work

 * 2. svm_range_restore_work wait for migration is done by

 *    a. svm_range_validate_vram takes prange->migrate_mutex

 *    b. svm_range_validate_ram HMM get pages wait for CPU fault handle returns

 * 3. restore work update mappings of GPU, resume all queues.

 *

 * Context: Process context

 *

 * Return:

 * 0 - OK, otherwise - error code of migration

 svm_bo was freed while eviction was pending */

	/* svm_range_bo_release destroys this worker thread. So during

	 * the lifetime of this thread, kfd_process and mm will be valid.

	/* This is the last reference to svm_bo, after svm_range_vram_node_free

	 * has been called in svm_migrate_vram_to_ram

 Add new range and split existing ranges as needed */

 Apply changes as a transaction */

 TODO: unmap ranges from GPU that lost access */

	/* Trigger migrations and revalidate and map to GPUs as needed. If

	 * this fails we may be left with partially completed actions. There

	 * is no clean way of rolling back to the previous state in such a

	 * case because the rollback wouldn't be guaranteed to work either.

	/* Flush pending deferred work to avoid racing with deferred actions from

	 * previous memory map changes (e.g. munmap). Concurrent memory map changes

	 * can still race with get_attr because we don't hold the mmap lock. But that

	 * would be a race condition in the application anyway, and undefined

	 * behaviour is acceptable in that case.

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 4 is the max # of SEs */

 AQL write pointer counts in 64B packets, PM4/CP counts in dwords. */

	/*

	 * HW does not clamp this field correctly. Maximum EOP queue size

	 * is constrained by per-SE EOP done signal count, which is 8-bit.

	 * Limit is 0xFF EOP entries (= 0x7F8 dwords). CP will not submit

	 * more than (EOP entry count - 1) so a queue size of 0x800 dwords

	 * is safe, giving a maximum field value of 0xA.

 GC 10 removed WPP_CLAMP from PQ Control */

	/* Control stack is written backwards, while workgroup context data

	 * is written forwards. Both starts from m->cp_hqd_cntl_stack_size.

	 * Current position is at m->cp_hqd_cntl_stack_offset and

	 * m->cp_hqd_wg_state_offset, respectively.

	/* Control stack is not copied to user mode for GFXv10 because

	 * it's part of the context save area that is already

	 * accessible to user mode

/*

 *  * preempt type here is ignored because there is only one way

 *  * to preempt sdma queue

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * This extension supports a kernel level doorbells management for the

 * kernel queues using the first doorbell page reserved for the kernel.

/*

 * Each device exposes a doorbell aperture, a PCI MMIO aperture that

 * receives 32-bit writes that are passed to queues as wptr values.

 * The doorbells are intended to be written by applications as part

 * of queueing work on user-mode queues.

 * We assign doorbells to applications in PAGE_SIZE-sized and aligned chunks.

 * We map the doorbell address space into user-mode when a process creates

 * its first queue on each device.

 * Although the mapping is done by KFD, it is equivalent to an mmap of

 * the /dev/kfd with the particular device encoded in the mmap offset.

 * There will be other uses for mmap of /dev/kfd, so only a range of

 * offsets (KFD_MMAP_DOORBELL_START-END) is used for doorbells.

 # of doorbell bytes allocated for each process. */

 Doorbell calculations for device init. */

	/*

	 * We start with calculations in bytes because the input data might

	 * only be byte-aligned.

	 * Only after we have done the rounding can we assume any alignment.

	/*

	 * For simplicitly we only allow mapping of the entire doorbell

	 * allocation of a single device & process.

 Calculate physical address of doorbell */

 get kernel iomem pointer for a doorbell */

	/*

	 * Calculating the kernel doorbell offset using the first

	 * doorbell page.

	/*

	 * doorbell_base_dw_offset accounts for doorbells taken by KGD.

	 * index * kfd_doorbell_process_slice/sizeof(u32) adjusts to

	 * the process's doorbells. The offset returned is in dword

	 * units regardless of the ASIC-dependent doorbell size.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Only allow one queue per process can have GWS assigned */

 Doorbell initialized in user space*/

 let DQM handle it*/

 HWS limit */

	/*

	 * for debug process, verify that it is within the static queues limit

	 * currently limit is set to half of the total avail HQD slots

	 * If we are just about to create DIQ, the is_debug flag is not set yet

	 * Hence we also check the type as well

		/* SDMA queues are always allocated statically no matter

		 * which scheduler mode is used. We also do not need to

		 * check whether a SDMA queue can be allocated here, because

		 * allocate_sdma_queue() in create_queue() has the

		 * corresponding check logic.

 check if there is over subscription */

		/* Return the doorbell offset within the doorbell page

		 * to the caller so it can be passed up to user mode

		 * (in bytes).

		 * There are always 1024 doorbells per process, so in case

		 * of 8-byte doorbells, there are two doorbell pages per

		 * process.

 check if queues list is empty unregister process from device */

 destroy kernel queue (DIQ) */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Size of the per-pipe EOP queue */

 queue is available for KFD usage if bit is 1 */

		/* On pre-SOC15 chips we need to use the queue ID to

		 * preserve the user mode ABI.

		/* For SDMA queues on SOC15 with 8-byte doorbell, use static

		 * doorbell assignments based on the engine and queue id.

		 * The doobell index distance between RLC (2*i) and (2*i+1)

		 * for a SDMA engine is 512.

 For CP queues on SOC15 reserve a free doorbell ID */

	/* qpd->page_table_base is set earlier when register_process()

	 * is called, i.e. when the first queue is created.

 invalidate the VM context after pasid and vmid mapping is set up */

 On GFX v7, CP doesn't flush TC at dequeue */

 Release the vmid mapping */

	/*

	 * Eviction state logic: mark all queues as evicted, even ones

	 * not currently active. Restoring inactive queues later only

	 * updates the is_evicted flag but is a no-op otherwise.

 Temporarily release dqm lock to avoid a circular lock dependency */

	/*

	 * Unconditionally increment this counter, regardless of the queue's

	 * type or whether the queue is active.

 horizontal hqd allocation */

/* Access to DQM has to be locked before calling destroy_queue_nocpsch_locked

 * to avoid asynchronized access

			/* dbgdev_wave_reset_wavefronts has to be called before

			 * deallocate_vmid(), i.e. when vmid is still in use.

 Get the SDMA queue stats */

 Save previous activity state for counters */

 Make sure the queue is unmapped before updating the MQD */

	/*

	 * check active state vs. the previous state and modify

	 * counter accordingly. map_queues_cpsch uses the

	 * dqm->active_queue_count to determine whether a new runlist must be

	 * uploaded.

 already evicted, do nothing */

	/* Mark all queues as evicted. Deactivate all active queues on

	 * the qpd.

			/* Return the first error, but keep going to

			 * maintain a consistent eviction state

 already evicted, do nothing */

	/* Mark all queues as evicted. Deactivate all active queues on

	 * the qpd.

 Retrieve PD base */

 already restored, do nothing */

 ref count still > 0, decrement & quit */

 Update PD Base in QPD */

	/* Take a safe reference to the mm_struct, which may otherwise

	 * disappear even while the kfd_process is still referenced.

	/* Remove the eviction flags. Activate queues that are not

	 * inactive for other reasons.

			/* Return the first error, but keep going to

			 * maintain a consistent eviction state

 Retrieve PD base */

 already restored, do nothing */

 ref count still > 0, decrement & quit */

 Update PD Base in QPD */

 activate all active queues on the qpd */

 Retrieve PD base */

 Update PD Base in QPD */

	/* Outside the DQM lock because under the DQM lock we can't do

	 * reclaim or take other locks that others hold while reclaiming.

 qpd not found in dqm list */

	/* Outside the DQM lock because under the DQM lock we can't do

	 * reclaim or take other locks that others hold while reclaiming.

		/* sdma_engine_id is sdma id including

		 * both PCIe-optimized SDMAs and XGMI-

		 * optimized SDMAs. The calculation below

		 * assumes the first N engines are always

		 * PCIe-optimized ones

/*

 * Device Queue Manager implementation for cp scheduler

 only acquire queues from the first MEC */

		/* This situation may be hit in the future if a new HW

		 * generation exposes more than 64 queues. If so, the

		 * definition of res.queue_mask needs updating

 allocate fence memory on the gart */

 clear hang status when driver try to start the hw scheduler */

	/*

	 * Unconditionally increment this counter, regardless of the queue's

	 * type or whether the queue is active.

	/*

	 * Unconditionally decrement this counter, regardless of the queue's

	 * type.

	/*

	 * Eviction state logic: mark all queues as evicted, even ones

	 * not currently active. Restoring inactive queues later only

	 * updates the is_evicted flag but is a no-op otherwise.

	/*

	 * Unconditionally increment this counter, regardless of the queue's

	 * type or whether the queue is active.

			/* In HWS case, this is used to halt the driver thread

			 * in order not to mess up CP states before doing

			 * scandumps for FW debugging.

 dqm->lock mutex has to be locked before calling this function */

 dqm->lock mutex has to be locked before calling this function */

 should be timed out */

		/* It's possible we're detecting a HWS hang in the

		 * middle of a GPU reset. No need to schedule another

		 * reset in this case.

	/* In the current MEC firmware implementation, if compute queue

	 * doesn't response to the preemption request in time, HIQ will

	 * abandon the unmap request without returning any timeout error

	 * to driver. Instead, MEC firmware will log the doorbell of the

	 * unresponding compute queue to HIQ.MQD.queue_doorbell_id fields.

	 * To make sure the queue unmap was successful, driver need to

	 * check those fields

 dqm->lock mutex has to be locked before calling this function */

 Get the SDMA queue stats */

 remove queue from list to prevent rescheduling after preemption */

		/*

		 * error, currently we do not allow to destroy a queue

		 * of a currently debugged process

	/*

	 * Unconditionally decrement this counter, regardless of the queue's

	 * type

 Do free_mqd after dqm_unlock(dqm) to avoid circular locking */

/*

 * Low bits must be 0000/FFFF as required by HW, high bits must be 0 to

 * stay in user mode.

 APE1 limit is inclusive and 64K aligned. */

 base > limit disables APE1 */

		/*

		 * In FSA64, APE1_Base[63:0] = { 16{SH_MEM_APE1_BASE[31]},

		 *			SH_MEM_APE1_BASE[31:0], 0x0000 }

		 * APE1_Limit[63:0] = { 16{SH_MEM_APE1_LIMIT[31]},

		 *			SH_MEM_APE1_LIMIT[31:0], 0xFFFF }

		 * Verify that the base and size parameters can be

		 * represented in this format and convert them.

		 * Additionally restrict APE1 to user-mode addresses.

 Clear all user mode queues */

 Unregister process */

	/* Outside the DQM lock because under the DQM lock we can't do

	 * reclaim or take other locks that others hold while reclaiming.

	/*

	 * get_wave_state is outside the dqm lock to prevent circular locking

	 * and the queue should be protected against destruction by the process

	 * lock.

 Clean all kernel queues */

 Clear all user mode queues */

 Unregister process */

	/* Lastly, free mqd resources.

	 * Do free_mqd() after dqm_unlock to avoid circular locking.

	/* Outside the DQM lock because under the DQM lock we can't do

	 * reclaim or take other locks that others hold while reclaiming.

 Allocate one hiq mqd (HWS) and all SDMA mqd in a continuous trunk*/

 HWS is not available on Hawaii. */

	/* HWS depends on CWSR for timely dequeue. CWSR is not

	 * available on Tonga.

	 *

	 * FIXME: This argument also applies to Kaveri.

 initialize dqm for cp scheduling */

 initialize dqm for no cp scheduling */

 SPDX-License-Identifier: GPL-2.0 OR MIT

/*

 * Copyright 2020-2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 use gart window 0 */

/**

 * svm_migrate_copy_memory_gart - sdma copy data between ram and vram

 *

 * @adev: amdgpu device the sdma ring running

 * @src: source page address array

 * @dst: destination page address array

 * @npages: number of pages to copy

 * @direction: enum MIGRATION_COPY_DIR

 * @mfence: output, sdma fence to signal after sdma is done

 *

 * ram address uses GART table continuous entries mapping to ram pages,

 * vram address uses direct mapping of vram pages, which must have npages

 * number of continuous pages.

 * GART update and sdma uses same buf copy function ring, sdma is splited to

 * multiple GTT_MAX_PAGES transfer, all sdma operations are serialized, wait for

 * the last sdma finish fence which is returned to check copy memory is done.

 *

 * Context: Process context, takes and releases gtt_window_lock

 *

 * Return:

 * 0 - OK, otherwise error code

/**

 * svm_migrate_copy_done - wait for memory copy sdma is done

 *

 * @adev: amdgpu device the sdma memory copy is executing on

 * @mfence: migrate fence

 *

 * Wait for dma fence is signaled, if the copy ssplit into multiple sdma

 * operations, this is the last sdma operation fence.

 *

 * Context: called after svm_migrate_copy_memory

 *

 * Return:

 * 0		- success

 * otherwise	- error code from dma fence signal

/**

 * svm_migrate_ram_to_vram - migrate svm range from system to device

 * @prange: range structure

 * @best_loc: the device to migrate to

 * @mm: the process mm structure

 *

 * Context: Process context, caller hold mmap read lock, svms lock, prange lock

 *

 * Return:

 * 0 - OK, otherwise error code

 FIXME: workaround for page locking bug with invalid pages */

/**

 * svm_migrate_vram_to_ram - migrate svm range from device to system

 * @prange: range structure

 * @mm: process mm, use current->mm if NULL

 *

 * Context: Process context, caller hold mmap read lock, svms lock, prange lock

 *

 * Return:

 * 0 - OK, otherwise error code

/**

 * svm_migrate_vram_to_vram - migrate svm range from device to device

 * @prange: range structure

 * @best_loc: the device to migrate to

 * @mm: process mm, use current->mm if NULL

 *

 * Context: Process context, caller hold mmap read lock, svms lock, prange lock

 *

 * Return:

 * 0 - OK, otherwise error code

	/*

	 * TODO: for both devices with PCIe large bar or on same xgmi hive, skip

	 * system memory as migration bridge

/**

 * svm_migrate_to_ram - CPU page fault handler

 * @vmf: CPU vm fault vma, address

 *

 * Context: vm fault handler, caller holds the mmap read lock

 *

 * Return:

 * 0 - OK

 * VM_FAULT_SIGBUS - notice application to have SIGBUS page fault

 xnack on, update mapping on GPUs with ACCESS_IN_PLACE */

 Each VRAM page uses sizeof(struct page) on system memory */

 Page migration works on Vega10 or newer */

	/* TODO: register all vram to HMM for now.

	 * should remove reserved size

	/* Device manager releases device-specific resources, memory region and

	 * pgmap when driver disconnects from device.

 Disable SVM support capability */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * KFD Interrupts.

 *

 * AMD GPUs deliver interrupts by pushing an interrupt description onto the

 * interrupt ring and then sending an interrupt. KGD receives the interrupt

 * in ISR and sends us a pointer to each new entry on the interrupt ring.

 *

 * We generally can't process interrupt-signaled events from ISR, so we call

 * out to each interrupt client module (currently only the scheduler) to ask if

 * each interrupt is interesting. If they return true, then it requires further

 * processing so we copy it to an internal interrupt ring and call each

 * interrupt client again from a work-queue.

 *

 * There's no acknowledgment for the interrupts we use. The hardware simply

 * queues a new interrupt each time without waiting.

 *

 * The fixed-size internal queue means that it's possible for us to lose

 * interrupts because we have no back-pressure to the hardware.

	/*

	 * After this function returns, the interrupt will be enabled. This

	 * barrier ensures that the interrupt running on a different processor

	 * sees all the above writes.

	/*

	 * Stop the interrupt handler from writing to the ring and scheduling

	 * workqueue items. The spinlock ensures that any interrupt running

	 * after we have unlocked sees interrupts_active = false.

	/*

	 * flush_work ensures that there are no outstanding

	 * work-queue items that will access interrupt_ring. New work items

	 * can't be created because we stopped interrupt handling above.

/*

 * Assumption: single reader/writer. This function is not re-entrant

/*

 * Assumption: single reader/writer. This function is not re-entrant

 integer and bitwise OR so there is no boolean short-circuiting */

/*

 * Copyright 2016-2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 SQ_INTERRUPT_WORD_AUTO_CTXID */

 SQ_INTERRUPT_WORD_WAVE_CTXID */

 Only handle interrupts from KFD VMIDs */

 Only handle clients we care about */

	/* This is a known issue for gfx9. Under non HWS, pasid is not set

	 * in the interrupt payload, so we need to find out the pasid on our

	 * own.

 Patch the pasid field */

 If there is no valid PASID, it's likely a bug */

	/* Interrupt types we care about: various signals and faults.

	 * They will be forwarded to a work queue (see below).

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/* Determine the number of processes to map together to HW:

	 * it can not exceed the number of VMIDs available to the

	 * scheduler, and it is determined by the smaller of the number

	 * of processes in the runlist and kfd module parameter

	 * hws_max_conc_proc.

	 * Note: the arbitration between the number of VMIDs and

	 * hws_max_conc_proc has been done in

	 * kgd2kfd_device_init().

 no static queues under SDMA */

 in this case, we do not preempt static queues */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 get actual type of DBGDevice cpsch or not */

 remember pasid */

 provide the pqm for diq generation */

 activate the actual registering */

 Is the requests coming from the already registered process? */

 Is the requests coming from the already registered process? */

 Is the requests coming from the already registered process? */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 = false */

			/* We've already allocated user PASIDs, too late to

			 * change the limit

/*

 * Copyright 2016-2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 check if sh_mem_config register already configured */

			/* Aldebaran can safely support different XNACK modes

			 * per process

 Not needed on SDMAv4 any more */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * Wrapper around wait_queue_entry_t

 Event to wait for */

 Becomes true when event is signaled */

/*

 * Each signal event needs a 64-bit signal slot where the signaler will write

 * a 1 before sending an interrupt. (This is needed because some interrupts

 * do not contain enough spare data bits to identify an event.)

 * We get whole pages and map them to the process VA.

 * Individual signal events use their event_id as slot index.

 Initialize all events to unsignaled */

 Oldest user mode expects 256 event slots */

	/*

	 * Compatibility with old user mode: Only use signal slots

	 * user mode has mapped, may be less than

	 * KFD_SIGNAL_EVENT_LIMIT. This also allows future increase

	 * of the event limit without breaking user mode.

/*

 * Assumes that p->event_mutex is held and of course that p is not going

 * away (current or locked).

/**

 * lookup_signaled_event_by_partial_id - Lookup signaled event from partial ID

 * @p:     Pointer to struct kfd_process

 * @id:    ID to look up

 * @bits:  Number of valid bits in @id

 *

 * Finds the first signaled event with a matching partial ID. If no

 * matching signaled event is found, returns NULL. In that case the

 * caller should assume that the partial ID is invalid and do an

 * exhaustive search of all siglaned events.

 *

 * If multiple events with the same partial ID signal at the same

 * time, they will be found one interrupt at a time, not necessarily

 * in the same order the interrupts occurred. As long as the number of

 * interrupts is correct, all signaled events will be seen by the

 * driver.

	/* Fast path for the common case that @id is not a partial ID

	 * and we only need a single lookup.

	/* General case for partial IDs: Iterate over all matching IDs

	 * and find the first one that has signaled.

	/* Cast KFD_LAST_NONSIGNAL_EVENT to uint32_t. This allows an

	 * intentional integer overflow to -1 without a compiler

	 * warning. idr_alloc treats a negative value as "maximum

	 * signed integer".

 Wake up pending waiters. They will return failure */

/*

 * We assume that the process is being destroyed and there is no need to

 * unmap the pages or keep bookkeeping data in order.

 Initialize all events to unsignaled */

 Assumes that p is current. */

	/* Auto reset if the list is non-empty and we're waking

	 * someone. waitqueue_active is safe here because we're

	 * protected by the p->event_mutex, which is also held when

	 * updating the wait queues in kfd_wait_on_events.

 Assumes that p is current. */

 Assumes that p is current. */

	/*

	 * Because we are called from arbitrary context (workqueue) as opposed

	 * to process context, kfd_process could attempt to exit while we are

	 * running so the lookup function increments the process ref count.

 Presumably process exited. */

		/*

		 * Partial ID lookup failed. Assume that the event ID

		 * in the interrupt payload was invalid and do an

		 * exhaustive search of signaled events.

			/* With relatively few events, it's faster to

			 * iterate over the event IDR

			/* With relatively many events, it's faster to

			 * iterate over the signal slots and lookup

			 * only signaled events from the IDR.

	/* Only add to the wait list if we actually need to

	 * wait on this event.

/* test_event_condition - Test condition of events being waited for

 * @all:           Return completion only if all events have signaled

 * @num_events:    Number of events to wait for

 * @event_waiters: Array of event waiters, one per event

 *

 * Returns KFD_IOC_WAIT_RESULT_COMPLETE if all (or one) event(s) have

 * signaled. Returns KFD_IOC_WAIT_RESULT_TIMEOUT if no (or not all)

 * events have signaled. Returns KFD_IOC_WAIT_RESULT_FAIL if any of

 * the events have been destroyed.

/*

 * Copy event specific data, if defined.

 * Currently only memory exception events have additional data to copy to user

	/*

	 * msecs_to_jiffies interprets all values above 2^31-1 as infinite,

	 * but we consider them finite.

	 * This hack is wrong, but nobody is likely to notice.

 Check condition once. */

		/* This should not happen. Events shouldn't be

		 * destroyed while we're holding the event_mutex

 Add to wait lists if we need to wait. */

			/*

			 * This is wrong when a nonzero, non-infinite timeout

			 * is specified. We need to use

			 * ERESTARTSYS_RESTARTBLOCK, but struct restart_block

			 * contains a union with data for each user and it's

			 * in generic kernel code that I don't want to

			 * touch yet.

		/* Set task state to interruptible sleep before

		 * checking wake-up conditions. A concurrent wake-up

		 * will put the task back into runnable state. In that

		 * case schedule_timeout will not put the task to

		 * sleep and we'll get a chance to re-check the

		 * updated conditions almost immediately. Otherwise,

		 * this race condition would lead to a soft hang or a

		 * very long sleep.

	/* copy_signaled_event_data may sleep. So this has to happen

	 * after the task state is set back to RUNNING.

 check required size doesn't exceed the allocated size */

 Probably KFD bug, but mmap is user-accessible. */

 mapping the page to user process */

/*

 * Assumes that p->event_mutex is held and of course

 * that p is not going away (current or locked).

 Send SIGTERM no event of type "type" has been found*/

	/*

	 * Because we are called from arbitrary context (workqueue) as opposed

	 * to process context, kfd_process could attempt to exit while we are

	 * running so the lookup function increments the process ref count.

 Presumably process exited. */

	/* Take a safe reference to the mm_struct, which may otherwise

	 * disappear even while the kfd_process is still referenced.

 Process is exiting */

 Set failure reason */

	/* Workaround on Raven to not kill the process when memory is freed

	 * before IOMMU is able to finish processing all the excessive PPRs

 Lookup events by type and signal them */

 KFD_SUPPORT_IOMMU_V2 */

	/*

	 * Because we are called from arbitrary context (workqueue) as opposed

	 * to process context, kfd_process could attempt to exit while we are

	 * running so the lookup function increments the process ref count.

 Presumably process exited. */

 Lookup events by type and signal them */

 Presumably process exited. */

 Set failure reason */

 Whole gpu reset caused by GPU hang and memory is lost */

 Presumably process exited. */

 user application will handle SIGBUS signal */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 4 is the max # of SEs */

	/*

	 * Make sure to use the last queue state saved on mqd when the cp

	 * reassigns the queue, so when queue is switched on/off (e.g over

	 * subscription or quantum timeout) the context will be consistent

	/*

	 * Pipe Priority

	 * Identifies the pipe relative priority when this queue is connected

	 * to the pipeline. The pipe priority is against the GFX pipe and HP3D.

	 * In KFD we are using a fixed pipe priority set to CS_MEDIUM.

	 * 0 = CS_LOW (typically below GFX)

	 * 1 = CS_MEDIUM (typically between HP3D and GFX

	 * 2 = CS_HIGH (typically above HP3D)

 AQL write pointer counts in 64B packets, PM4/CP counts in dwords. */

	/*

	 * Calculating queue size which is log base 2 of actual queue size -1

	 * dwords and another -1 for ffs

/*

 * preempt type here is ignored because there is only one way

 * to preempt sdma queue

/*

 * HIQ MQD Implementation, concrete implementation for HIQ MQD implementation.

 * The HIQ queue in Kaveri is using the same MQD structure as all the user mode

 * queues but with different initial values.

	/*

	 * Calculating queue size which is log base 2 of actual queue

	 * size -1 dwords

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * kfd_locked is used to lock the kfd driver during suspend or reset

 * once locked, kfd driver will stop any further GPU execution.

 * create process (open) will return -EAGAIN.

 max num of queues for KV.TODO should be a dynamic value */

 max num of queues for CZ.TODO should be a dynamic value */

 max num of queues for KV.TODO should be a dynamic value */

	/* Allow BIF to recode atomics to PCIe 3.0 AtomicOps.

	 * 32 and 64-bit requests are possible and must be

	 * supported.

 Verify module parameters regarding mapped process number*/

 calculate max size of mqds needed for queues */

	/*

	 * calculate max size of runlist packet.

	 * There can be only 2 packets at once

 Add size of HIQ & DIQ */

 add another 512KB for all other allocations on gart (HPD, fences) */

 Initialize GTT sa with 512 byte chunk size */

	/* If supported on this device, allocate global GWS that is shared

	 * by all KFD processes

 If CRAT is broken, won't set iommu enabled */

/*

 * Fix me. KFD won't be able to resume existing process for now.

 * We will keep all existing process in a evicted state and

 * wait the process to be terminated.

 for runtime suspend, skip locking kfd */

 For first KFD device suspend all the KFD processes */

 for runtime resume, skip unlocking kfd */

 This is called directly from KGD at ISR. */

	/* Because we are called from arbitrary context (workqueue) as opposed

	 * to process context, kfd_process could attempt to exit while we are

	 * running so the lookup function increments the process ref count.

	/* Because we are called from arbitrary context (workqueue) as opposed

	 * to process context, kfd_process could attempt to exit while we are

	 * running so the lookup function increments the process ref count.

/** kgd2kfd_schedule_evict_and_restore_process - Schedules work queue that will

 *   prepare for safe eviction of KFD BOs that belong to the specified

 *   process.

 *

 * @mm: mm_struct that identifies the specified KFD process

 * @fence: eviction fence attached to KFD process BOs

 *

	/* Avoid KFD process starvation. Wait for at least

	 * PROCESS_ACTIVE_TIME_MS before evicting the process again

	/* During process initialization eviction_work.dwork is initialized

	 * to kfd_evict_bo_worker

 Find the first chunk that is free */

 If there wasn't any free chunk, bail out */

 Update fields of mem_obj */

 If we need only one chunk, mark it as allocated and get out */

 Otherwise, try to see if we have enough contiguous chunks */

		/*

		 * If next free chunk is not contiguous than we need to

		 * restart our search from the last free chunk we found (which

		 * wasn't contiguous to the previous ones

		/*

		 * If we reached end of buffer, bail out with error

 Check if we don't need another chunk */

 Mark the chunks as allocated */

 Act like kfree when trying to free a NULL object */

 Mark the chunks as free */

/* This function will send a package to HIQ to hang the HWS

 * which will trigger a GPU reset and bring the HWS back to normal state

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 events enabled */

	/* kfifo_to_user can sleep so we can't use spinlock protection around

	 * it. Instead, we kfifo out as spinlocked then copy them to the user.

	/*

	 * GpuReset msg = Reset seq number (incremented for

	 * every reset message sent before GPU reset).

	 * 1 byte event + 1 byte space + 8 bytes seq num +

	 * 1 byte \n + 1 byte \0 = 12

	/*

	 * ThermalThrottle msg = throttle_bitmask(8):

	 * 			 thermal_interrupt_count(16):

	 * 1 byte event + 1 byte space + 16 byte throttle_bitmask +

	 * 1 byte : + 16 byte thermal_interupt_counter + 1 byte \n +

	 * 1 byte \0 = 37

 VmFault msg = (hex)uint32_pid(8) + :(1) + task name(16) = 25 */

	/* 1 byte event + 1 byte space + 25 bytes msg + 1 byte \n +

	 * 1 byte \0 = 29

 Report VM faults from user applications, not retry from kernel */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/* In 64-bit mode, we can only control the top 3 bits of the LDS,

	 * scratch and GPUVM apertures.

	 * The hardware fills in the remaining 59 bits according to the

	 * following pattern:

	 * LDS:		X0000000'00000000 - X0000001'00000000 (4GB)

	 * Scratch:	X0000001'00000000 - X0000002'00000000 (4GB)

	 * GPUVM:	Y0010000'00000000 - Y0020000'00000000 (1TB)

	 *

	 * (where X/Y is the configurable nybble with the low-bit 0)

	 *

	 * LDS and scratch will have the same top nybble programmed in the

	 * top 3 bits of SH_MEM_BASES.PRIVATE_BASE.

	 * GPUVM can have a different top nybble programmed in the

	 * top 3 bits of SH_MEM_BASES.SHARED_BASE.

	 * We don't bother to support different top nybbles

	 * for LDS/Scratch and GPUVM.

 check if sh_mem_config register already configured */

 check if sh_mem_config register already configured */

	/* On dGPU we're always in GPUVM64 addressing mode with 64-bit

	 * aperture addresses.

	/* On dGPU we're always in GPUVM64 addressing mode with 64-bit

	 * aperture addresses.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

	/* This workaround is due to HW/FW limitation on Hawaii that

	 * VMID and PASID are not written into ih_ring_entry

 Only handle interrupts from KFD VMIDs */

 If there is no valid PASID, it's likely a firmware bug */

	/* Interrupt types we care about: various signals and faults.

	 * They will be forwarded to a work queue (see below).

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/** kfd_iommu_check_device - Check whether IOMMU is available for device

/** kfd_iommu_device_init - Initialize IOMMU for device

/** kfd_iommu_bind_process_to_device - Have the IOMMU bind a process

 *

 * Binds the given process to the given device using its PASID. This

 * enables IOMMUv2 address translation for the process on the device.

 *

 * This function assumes that the process mutex is held.

/** kfd_iommu_unbind_process - Unbind process from all devices

 *

 * This removes all IOMMU device bindings of the process. To be used

 * before process termination.

 Callback for process shutdown invoked by the IOMMU driver */

	/*

	 * Look for the process that matches the pasid. If there is no such

	 * process, we either released it in amdkfd's own notifier, or there

	 * is a bug. Unfortunately, there is no way to tell...

		/* For GPU relying on IOMMU, we need to dequeue here

		 * when PASID is still bound.

 This function called by IOMMU driver on PPR failure */

/*

 * Bind processes do the device that have been temporarily unbound

 * (PDD_BOUND_SUSPENDED) in kfd_unbind_processes_from_device.

/*

 * Mark currently bound processes as PDD_BOUND_SUSPENDED. These

 * processes will be restored to PDD_BOUND state in

 * kfd_bind_processes_to_device.

/** kfd_iommu_suspend - Prepare IOMMU for suspend

 *

 * This unbinds processes from the device and disables the IOMMU for

 * the device.

/** kfd_iommu_resume - Restore IOMMU after resume

 *

 * This reinitializes the IOMMU for the device and re-binds previously

 * suspended processes to the device.

/** kfd_iommu_add_perf_counters - Add IOMMU performance counters to topology

 assume one iommu */

/*

 * Copyright 2016-2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/* For V9 only, due to a HW bug, the control stack of a user mode

	 * compute queue needs to be allocated just behind the page boundary

	 * of its regular MQD buffer. So we allocate an enlarged MQD buffer:

	 * the first page of the buffer serves as the regular MQD buffer

	 * purpose and the remaining is for control stack. Although the two

	 * parts are in the same buffer object, they need different memory

	 * types: MQD part needs UC (uncached) as usual, while control stack

	 * needs NC (non coherent), which is different from the UC type which

	 * is used when control stack is allocated in user space.

	 *

	 * Because of all those, we use the gtt allocation function instead

	 * of sub-allocation function for this enlarged MQD buffer. Moreover,

	 * in order to achieve two memory types in a single buffer object, we

	 * pass a special bo flag AMDGPU_GEM_CREATE_CP_MQD_GFX9 to instruct

	 * amdgpu memory functions to do so.

 AQL write pointer counts in 64B packets, PM4/CP counts in dwords. */

	/*

	 * HW does not clamp this field correctly. Maximum EOP queue size

	 * is constrained by per-SE EOP done signal count, which is 8-bit.

	 * Limit is 0xFF EOP entries (= 0x7F8 dwords). CP will not submit

	 * more than (EOP entry count - 1) so a queue size of 0x800 dwords

	 * is safe, giving a maximum field value of 0xA.

 Control stack is located one page after MQD. */

/*

 *  * preempt type here is ignored because there is only one way

 *  * to preempt sdma queue

/*

 * Copyright 2013 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Christian König <christian.koenig@amd.com>

/**

 * uvd_v4_2_ring_get_rptr - get read pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware read pointer

/**

 * uvd_v4_2_ring_get_wptr - get write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware write pointer

/**

 * uvd_v4_2_ring_set_wptr - set write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Commits the write pointer to the hardware

 UVD TRAP */

/**

 * uvd_v4_2_hw_init - start and test UVD block

 *

 * @handle: handle used to pass amdgpu_device pointer

 *

 * Initialize the hardware, boot up the VCPU and do some testing

 Clear timeout status bits */

/**

 * uvd_v4_2_hw_fini - stop the hardware block

 *

 * @handle: handle used to pass amdgpu_device pointer

 *

 * Stop the UVD block, mark ring as not ready any more

	/*

	 * Proper cleanups before halting the HW engine:

	 *   - cancel the delayed idle work

	 *   - enable powergating

	 *   - enable clockgating

	 *   - disable dpm

	 *

	 * TODO: to align with the VCN implementation, move the

	 * jobs for clockgating/powergating/dpm setting to

	 * ->set_powergating_state().

 shutdown the UVD block */

/**

 * uvd_v4_2_start - start UVD block

 *

 * @adev: amdgpu_device pointer

 *

 * Setup and start the UVD block

 disable byte swapping */

 set uvd busy */

 take UVD block out of reset */

 enable VCPU clock */

 disable interupt */

 swap (8 in 32) RB and IB */

 initialize UVD memory controller */

 enable UMC */

 enable interupt */

 force RBC into idle state */

 Set the write pointer delay */

 program the 4GB memory segment for rptr and ring buffer */

 Initialize the ring buffer's read and write pointers */

 set the ring address */

 Set ring buffer size */

/**

 * uvd_v4_2_stop - stop UVD block

 *

 * @adev: amdgpu_device pointer

 *

 * stop the UVD block

 Stall UMC and register bus before resetting VCPU */

 put LMI, VCPU, RBC etc... into reset */

/**

 * uvd_v4_2_ring_emit_fence - emit an fence & trap command

 *

 * @ring: amdgpu_ring pointer

 * @addr: address

 * @seq: sequence number

 * @flags: fence related flags

 *

 * Write a fence and a trap command to the ring.

/**

 * uvd_v4_2_ring_test_ring - register write test

 *

 * @ring: amdgpu_ring pointer

 *

 * Test if we can successfully write to the context register

/**

 * uvd_v4_2_ring_emit_ib - execute indirect buffer

 *

 * @ring: amdgpu_ring pointer

 * @job: iob associated with the indirect buffer

 * @ib: indirect buffer to execute

 * @flags: flags associated with the indirect buffer

 *

 * Write ring commands to execute the indirect buffer

/**

 * uvd_v4_2_mc_resume - memory controller programming

 *

 * @adev: amdgpu_device pointer

 *

 * Let the UVD memory controller know it's offsets

 program the VCPU memory controller bits 0-27 */

 bits 28-31 */

 bits 32-39 */

 TODO

	/* This doesn't actually powergate the UVD block.

	 * That's done in the dpm code via the SMC.  This

	 * just re-inits the block as necessary.  The actual

	 * gating still happens in the dpm code.  We should

	 * revisit this when there is a cleaner line between

	 * the smc and the hw blocks

 uvd_v4_2_ring_emit_fence  x1 no user fence */

 uvd_v4_2_ring_emit_ib */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Christian König

/**

 * DOC: mem_info_vram_total

 *

 * The amdgpu driver provides a sysfs API for reporting current total VRAM

 * available on the device

 * The file mem_info_vram_total is used for this and returns the total

 * amount of VRAM in bytes

/**

 * DOC: mem_info_vis_vram_total

 *

 * The amdgpu driver provides a sysfs API for reporting current total

 * visible VRAM available on the device

 * The file mem_info_vis_vram_total is used for this and returns the total

 * amount of visible VRAM in bytes

/**

 * DOC: mem_info_vram_used

 *

 * The amdgpu driver provides a sysfs API for reporting current total VRAM

 * available on the device

 * The file mem_info_vram_used is used for this and returns the total

 * amount of currently used VRAM in bytes

/**

 * DOC: mem_info_vis_vram_used

 *

 * The amdgpu driver provides a sysfs API for reporting current total of

 * used visible VRAM

 * The file mem_info_vis_vram_used is used for this and returns the total

 * amount of currently used visible VRAM in bytes

/**

 * DOC: mem_info_vram_vendor

 *

 * The amdgpu driver provides a sysfs API for reporting the vendor of the

 * installed VRAM

 * The file mem_info_vram_vendor is used for this and returns the name of the

 * vendor.

/**

 * amdgpu_vram_mgr_vis_size - Calculate visible node size

 *

 * @adev: amdgpu_device pointer

 * @node: MM node structure

 *

 * Calculate how many bytes of the MM node are inside visible VRAM

/**

 * amdgpu_vram_mgr_bo_visible_size - CPU visible BO size

 *

 * @bo: &amdgpu_bo buffer object (must be in VRAM)

 *

 * Returns:

 * How much of the given &amdgpu_bo buffer object lies in CPU visible VRAM.

 Commit the reservation of VRAM pages */

/**

 * amdgpu_vram_mgr_reserve_range - Reserve a range from VRAM

 *

 * @man: TTM memory type manager

 * @start: start address of the range in VRAM

 * @size: size of the range

 *

 * Reserve memory from start addess with the specified size in VRAM

/**

 * amdgpu_vram_mgr_query_page_status - query the reservation status

 *

 * @man: TTM memory type manager

 * @start: start address of a page in VRAM

 *

 * Returns:

 *	-EBUSY: the page is still hold and in pending list

 *	0: the page has been reserved

 *	-ENOENT: the input page is not a reservation

/**

 * amdgpu_vram_mgr_virt_start - update virtual start address

 *

 * @mem: ttm_resource to update

 * @node: just allocated node

 *

 * Calculate a virtual BO start address to easily check if everything is CPU

 * accessible.

/**

 * amdgpu_vram_mgr_new - allocate new ranges

 *

 * @man: TTM memory type manager

 * @tbo: TTM BO we need this range for

 * @place: placement flags and restrictions

 * @res: the resulting mem object

 *

 * Allocate VRAM for the given BO.

 bail out quickly if there's likely not enough VRAM for this BO */

 default to 2MB */

 Limit maximum size to 2GB due to SG table limitations */

/**

 * amdgpu_vram_mgr_del - free ranges

 *

 * @man: TTM memory type manager

 * @res: TTM memory object

 *

 * Free the allocated VRAM again.

/**

 * amdgpu_vram_mgr_alloc_sgt - allocate and fill a sg table

 *

 * @adev: amdgpu device pointer

 * @res: TTM memory object

 * @offset: byte offset from the base of VRAM BO

 * @length: number of bytes to export in sg_table

 * @dev: the other device

 * @dir: dma direction

 * @sgt: resulting sg table

 *

 * Allocate and fill a sg table from a VRAM allocation.

 Determine the number of DRM_MM nodes to export */

 Initialize scatterlist nodes of sg_table */

	/*

	 * Walk down DRM_MM nodes to populate scatterlist nodes

	 * @note: Use iterator api to get first the DRM_MM node

	 * and the number of bytes from it. Access the following

	 * DRM_MM node(s) if more buffer needs to exported

/**

 * amdgpu_vram_mgr_free_sgt - allocate and fill a sg table

 *

 * @dev: device pointer

 * @dir: data direction of resource to unmap

 * @sgt: sg table to free

 *

 * Free a previously allocate sg table.

/**

 * amdgpu_vram_mgr_usage - how many bytes are used in this domain

 *

 * @man: TTM memory type manager

 *

 * Returns how many bytes are used in this domain.

/**

 * amdgpu_vram_mgr_vis_usage - how many bytes are used in the visible part

 *

 * @man: TTM memory type manager

 *

 * Returns how many bytes are used in the visible part of VRAM

/**

 * amdgpu_vram_mgr_debug - dump VRAM table

 *

 * @man: TTM memory type manager

 * @printer: DRM printer to use

 *

 * Dump the table content using printk.

/**

 * amdgpu_vram_mgr_init - init VRAM manager and DRM MM

 *

 * @adev: amdgpu_device pointer

 *

 * Allocate and initialize the VRAM manager.

/**

 * amdgpu_vram_mgr_fini - free and destroy VRAM manager

 *

 * @adev: amdgpu_device pointer

 *

 * Destroy and free the VRAM manager, returns -EBUSY if ranges are still

 * allocated inside it.

/*

 * Copyright 2007-8 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

	/* Wait until we're out of the vertical blank period before the one

	 * targeted by the flip

 We borrow the event spin lock for protecting flip_status */

 Do the flip (mmio) */

 Set the flip status */

/*

 * Handle unpin events outside the interrupt handler proper.

 unpin of the old buffer */

 schedule unpin of the old buffer */

 take a reference to the old object */

 pin the new buffer */

 we borrow the event spin lock for protecting flip_wrok */

 update crtc fb */

	/* if we have active crtcs and we don't have a power ref,

	/* if we have no active crtcs, then drop the power ref

 drop the power reference we got coming in here */

 on hw with routers, select right port */

 Couldn't find an accessible DDC on this connector */

	/* Probe also for valid EDID header

	 * EDID header starts with:

	 * 0x00,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x00.

	 * Only the first 6 bytes must be valid as

		/* Couldn't find an accessible EDID on this

	/*

	 * if amdgpu_bo_support_uswc returns false it means that USWC mappings

	 * is not supported for this board. But this mapping is required

	 * to avoid hang caused by placement of scanout BO in GTT on certain

	 * APUs. So force the BO placement to VRAM in case this architecture

	 * will not allow USWC mappings.

	 * Also, don't allow GTT domain if the BO doesn't have USWC flag set.

 enable S/G on PCO and RV2 */

 returning NULL will cause the default format structs to be used. */

/*

 * Tries to extract the renderable DCC offset from the opaque metadata attached

 * to the buffer.

 Something that fits a descriptor + header. */

 Don't show error message when returning -ERESTARTSYS */

	/*

	 * The first word is the metadata version, and we need space for at least

	 * the version + pci vendor+device id + 8 words for a descriptor.

 resource word 6/7 META_DATA_ADDRESS{_LO} */

 resource word 5/7 META_DATA_ADDRESS */

 256B */

 4KiB */

 4KiB _X */

 64KiB */

 64 KiB _T */

 64 KiB _X */

 RESERVED or VAR */

 Z microtiling */

 S microtiling */

 Enable constant encode on RAVEN2 and later. */

			/*

			 * If the userspace driver uses retiling the tiling flags do not contain

			 * info on the renderable DCC buffer. Luckily the opaque metadata contains

			 * the info so we can try to extract it. The kernel does not use this info

			 * but we should convert it to a modifier plane for getfb2, so the

			 * userspace driver that gets it doesn't have to juggle around another DCC

			 * plane internally.

 of base surface data */

 Mirrors the is_displayable check in radeonsi's gfx6_compute_surface */

 Zero swizzle mode means linear */

 DISPLAY */

 RENDER */

		/*

		 * TODO: for pipe aligned we may need to check the alignment of the

		 * total size of the surface, which may need to be bigger than the

		 * natural alignment due to some HW workarounds

 Force at least natural alignment. */

 Don't show error message when returning -ERESTARTSYS */

 Verify that the modifier is supported. */

	/*

	 * This needs to happen before modifier conversion as that might change

	 * the number of planes.

 Handle is imported dma-buf, so cannot be migrated to VRAM for scanout */

 XXX support different dither options? spatial, temporal, both, etc. */

 adjustment options for the display watermarks */

 try and guess if this is a tv or a monitor */

 480p */

 576p */

 720p */

 1080p */

 set scaling */

 copy native mode */

 fix up for overscan on hdmi */

/*

 * Retrieve current video scanout position of crtc on a given gpu, and

 * an optional accurate timestamp of when query happened.

 *

 * \param dev Device to query.

 * \param pipe Crtc to query.

 * \param flags Flags from caller (DRM_CALLED_FROM_VBLIRQ or 0).

 *              For driver internal use only also supports these flags:

 *

 *              USE_REAL_VBLANKSTART to use the real start of vblank instead

 *              of a fudged earlier start of vblank.

 *

 *              GET_DISTANCE_TO_VBLANKSTART to return distance to the

 *              fudged earlier start of vblank in *vpos and the distance

 *              to true start of vblank in *hpos.

 *

 * \param *vpos Location where vertical scanout position should be stored.

 * \param *hpos Location where horizontal scanout position should go.

 * \param *stime Target location for timestamp taken immediately before

 *               scanout position query. Can be NULL to skip timestamp.

 * \param *etime Target location for timestamp taken immediately after

 *               scanout position query. Can be NULL to skip timestamp.

 *

 * Returns vpos as a positive number while in active scanout area.

 * Returns vpos as a negative number inside vblank, counting the number

 * of scanlines to go until end of vblank, e.g., -1 means "one scanline

 * until start of active scanout / end of vblank."

 *

 * \return Flags, or'ed together as follows:

 *

 * DRM_SCANOUTPOS_VALID = Query successful.

 * DRM_SCANOUTPOS_INVBL = Inside vblank.

 * DRM_SCANOUTPOS_ACCURATE = Returned position is accurate. A lack of

 * this flag means that returned position may be offset by a constant but

 * unknown small number of scanlines wrt. real scanout position.

 *

 preempt_disable_rt() should go right here in PREEMPT_RT patchset. */

 Get optional system timestamp before query. */

 Get optional system timestamp after query. */

 preempt_enable_rt() should go right here in PREEMPT_RT patchset. */

 Decode into vertical and horizontal scanout position. */

 Valid vblank area boundaries from gpu retrieved? */

 Yes: Decode. */

 No: Fake something reasonable which gives at least ok results. */

 Called from driver internal vblank counter query code? */

 Caller wants distance from real vbl_start in *hpos */

	/* Fudge vblank to start a few scanlines earlier to handle the

	 * problem that vblank irqs fire a few scanlines before start

	 * of vblank. Some driver internal callers need the true vblank

	 * start to be used and signal this via the USE_REAL_VBLANKSTART flag.

	 *

	 * The cause of the "early" vblank irq is that the irq is triggered

	 * by the line buffer logic when the line buffer read position enters

	 * the vblank, whereas our crtc scanout position naturally lags the

	 * line buffer read position.

 Test scanout position against vblank region. */

 In vblank? */

 Called from driver internal vblank counter query code? */

 Caller wants distance from fudged earlier vbl_start */

	/* Check if inside vblank area and apply corrective offsets:

	 * vpos will then be >=0 in video scanout area, but negative

	 * within vblank area, counting down the number of lines until

	 * start of scanout.

 Inside "upper part" of vblank area? Apply corrective offset if so: */

		/* With variable refresh rate displays the vpos can exceed

		 * the vtotal value. Clamp to 0 to return -vbl_end instead

		 * of guessing the remaining number of lines until scanout.

 Correct for shifted end of vbl at vbl_end. */

 turn off display hw */

 unpin the front buffers and cursors */

 don't unpin kernel fb objects */

 pin cursors */

 turn on display hw */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Block CPU access */

 blackout the MC */

 wait for the MC to settle */

 unblackout the MC */

 allow CPU access */

/**

 * gmc_v7_0_init_microcode - load ucode images from disk

 *

 * @adev: amdgpu_device pointer

 *

 * Use the firmware interface to load the ucode images into

 * the driver (not loaded into hw).

 * Returns 0 on success, error on failure.

/**

 * gmc_v7_0_mc_load_microcode - load MC ucode into the hw

 *

 * @adev: amdgpu_device pointer

 *

 * Load the GDDR MC ucode into the hw (CIK).

 * Returns 0 on success, error on failure.

 reset the engine and set to writable */

 load mc io regs */

 load the MC ucode */

 put the engine back into the active state */

 wait for training to complete */

/**

 * gmc_v7_0_mc_program - program the GPU memory controller

 *

 * @adev: amdgpu_device pointer

 *

 * Set the location of vram, gart, and AGP in the GPU's

 * physical address space (CIK).

 Initialize HDP */

 Lockout access through VGA aperture*/

 disable VGA render */

 Update configuration */

/**

 * gmc_v7_0_mc_init - initialize the memory controller driver params

 *

 * @adev: amdgpu_device pointer

 *

 * Look up the amount of vram, vram width, and decide how to place

 * vram and gart within the GPU's physical address space (CIK).

 * Returns 0 for success.

 Get VRAM informations */

 size in MB on si */

 In case the PCI BAR is larger than the actual amount of vram */

 set the gart size */

 no MM engines */

 UVD, VCE do not support GPUVM */

 UVD, VCE do not support GPUVM */

 UVD, VCE do not support GPUVM */

 UVD, VCE do not support GPUVM */

 UVD, VCE do not support GPUVM */

/**

 * gmc_v7_0_flush_gpu_tlb_pasid - tlb flush via pasid

 *

 * @adev: amdgpu_device pointer

 * @pasid: pasid to be flush

 * @flush_type: type of flush

 * @all_hub: flush all hubs

 *

 * Flush the TLB for the requested pasid.

/*

 * GART

 * VMID 0 is the physical GPU addresses as used by the kernel.

 * VMIDs 1-15 are used for userspace clients and are handled

 * by the amdgpu vm/hsa code.

/**

 * gmc_v7_0_flush_gpu_tlb - gart tlb flush callback

 *

 * @adev: amdgpu_device pointer

 * @vmid: vm instance to flush

 * @vmhub: which hub to flush

 * @flush_type: type of flush

 * *

 * Flush the TLB for the requested page table (CIK).

 bits 0-15 are the VM contexts0-15 */

 bits 0-15 are the VM contexts0-15 */

/**

 * gmc_v7_0_set_fault_enable_default - update VM fault handling

 *

 * @adev: amdgpu_device pointer

 * @value: true redirects VM faults to the default page

/**

 * gmc_v7_0_set_prt - set PRT VM fault

 *

 * @adev: amdgpu_device pointer

 * @enable: enable/disable VM fault handling for PRT

/**

 * gmc_v7_0_gart_enable - gart enable

 *

 * @adev: amdgpu_device pointer

 *

 * This sets up the TLBs, programs the page tables for VMID0,

 * sets up the hw for VMIDs 1-15 which are allocated on

 * demand, and sets up the global locations for the LDS, GDS,

 * and GPUVM for FSA64 clients (CIK).

 * Returns 0 for success, errors for failure.

 Setup TLB control */

 Setup L2 cache */

 setup context0 */

 empty context1-15 */

	/* FIXME start with 4G, once using 2 level pt switch to full

	 * vm size space

 set vm size, must be a multiple of 4 */

 enable context1-15 */

 Initialize common gart structure */

/**

 * gmc_v7_0_gart_disable - gart disable

 *

 * @adev: amdgpu_device pointer

 *

 * This disables all VM page table (CIK).

 Disable all tables */

 Setup TLB control */

 Setup L2 cache */

/**

 * gmc_v7_0_vm_decode_fault - print human readable fault info

 *

 * @adev: amdgpu_device pointer

 * @status: VM_CONTEXT1_PROTECTION_FAULT_STATUS register value

 * @addr: VM_CONTEXT1_PROTECTION_FAULT_ADDR register value

 * @mc_client: VM_CONTEXT1_PROTECTION_FAULT_MCCLIENT register value

 * @pasid: debug logging only - no functional use

 *

 * Print human readable fault information (CIK).

	/* Adjust VM size here.

	 * Currently set to 4GB ((1 << 20) 4k pages).

	 * Max GPUVM size for cayman and SI is 40 bits.

	/* Set the internal MC address mask

	 * This is the max address of the GPU's

	 * internal address space.

 40 bit MC */

 Memory manager */

	/*

	 * number of VMs

	 * VMID 0 is reserved for System

	 * amdgpu graphics/compute will use VMIDs 1-7

	 * amdkfd will use VMIDs 8-15

 base offset of vram pages */

 read MC_STATUS */

 Wait a little for things to settle down */

 system context */

 VMs */

 system context */

 VMs */

 reset addr and status */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Navi10 has two graphic rings to share each graphic pipe.

 * 1. Primary ring

 * 2. Async ring

CC_GC_SA_UNIT_DISABLE

GC_USER_SA_UNIT_DISABLE

PA_SC_ENHANCE_3

 Pending on emulation bring up */

 only in new version, AMDGPU_REGS_NO_KIQ and AMDGPU_REGS_RLC enabled simultaneously */

 Pending on emulation bring up */

 Pending on emulation bring up */

 Pending on emulation bring up */

 This is not in GDB yet. Don't remove it. It fixes a GPU hang on Navy Flounder. */

 This is not in GDB yet. Don't remove it. It fixes a GPU hang on VanGogh. */

 TODO: pending on golden setting value of gb address config */

 vmid_mask:0 queue_type:0 (KIQ) */

 queue mask lo */

 queue mask hi */

 gws mask lo */

 gws mask hi */

 oac mask */

 gds heap base:0, gds heap size:0 */

 Q_sel:0, vmid:0, vidmem: 1, engine:0, num_Q:1*/

 Q_sel: 0, vmid: 0, engine: 0, num_Q: 1 */

 Queue_Sel */

 VMID */

queue_type: normal compute queue */

 alloc format: all_on_one_pipe */

 num_queues: must be 1 */

 Q_sel: 0, vmid: 0, engine: 0, num_Q: 1 */

 Q_sel: 0, vmid: 0, engine: 0, num_Q: 1 */

 memory (1) or register (0) */

 wait */

 equal */

 Dword align */

 poll interval */

 begin clear state */

 context control state */

 set PA_SC_TILE_STEERING_OVERRIDE */

 end clear state */

 clear state */

 clear state block */

 jump table block */

 init clear state block */

 init spm vmid with 0xf */

 take ownership of the relevant compute queues */

	/* in gfx10 the SIMD_ID is specified as part of the INSTANCE

	 * field when performing a select_se_sh so it should be

 type 2 wave data */

 mec0 is me1 */

 type-2 packets are deprecated on MEC, use type-3 instead */

 KIQ event */

 EOP Event */

 Privileged reg */

 Privileged inst */

 set up the gfx ring */

 set up the compute queues - allocate horizontally across pipes */

 allocate visible FB for rlc auto-loading fw */

	/* for ASICs that integrates GFX v10.3

 init num_sc */

 init num_rb_per_sc */

 init num_packer_per_sc */

	/*

	 * Configure apertures:

	 * LDS:         0x60000000'00000000 - 0x60000001'00000000 (4GB)

	 * Scratch:     0x60000001'00000000 - 0x60000002'00000000 (4GB)

	 * GPUVM:       0x60010000'00000000 - 0x60020000'00000000 (1TB)

 CP and shaders */

	/* Initialize all compute VMIDs to have no GDS, GWS, or OA

	/*

	 * Initialize all compute and user-gfx VMIDs to have no GDS, GWS, or OA

	 * access. Compute VMIDs should be enabled by FW for target VMIDs,

	 * the driver can enable them for graphics. VMID0 should maintain

	 * access so that HWS firmware can save/restore entries.

	/*

	 * GCRD_TARGETS_DISABLE field contains

	 * for Navi10/Navi12: GL1C=[18:15], SQC=[14:10], TCP=[9:0]

	 * for Navi14: GL1C=[21:18], SQC=[17:12], TCP=[11:0]

 TCP */

 SQC */

 GL1C */

	/*

	 * UTCL1_UTCL0_INVREQ_DISABLE field contains

	 * for Navi10Navi12: SQG=[24], RMI=[23:20], SQC=[19:10], TCP=[9:0]

	 * for Navi14: SQG=[28], RMI=[27:24], SQC=[23:12], TCP=[11:0]

 TCP */

 SQC */

 RMI */

 SQG */

			/*

			 * Set corresponding TCP bits for the inactive WGPs in

			 * GCRD_SA_TARGETS_DISABLE

 Set TCP & SQC bits in UTCL1_UTCL0_INVREQ_DISABLE */

 only override TCP & SQC bits */

 only override TCP & SQC bits */

 TCCs are global (not instanced). */

 XXX SH_MEM regs */

 where to put LDS, scratch, GPUVM in FSA64 space */

 CP and shaders */

 csib */

		/* RLC_PG_CNTL[23] = 0 (default)

		 * RLC will wait for handshake acks with SMU

		 * GFXOFF will be enabled

		 * RLC_PG_CNTL[23] = 1

		 * RLC will not issue any message to SMU

		 * hence no handshake between SMU & RLC

		 * GFXOFF will be disabled

	/* TODO: enable rlc & smu handshake until smu

 enable Save Restore Machine */

 enable RLC SRM */

 disable CG */

 disable PG */

 legacy rlc firmware loading */

 rlc backdoor autoload firmware */

 Copy toc from psp sos fw to rlc toc buffer */

 Offset needs 4KB alignment */

 In case the offset in rlc toc ucode is aligned */

 pfp ucode */

 ce ucode */

 me ucode */

 rlc ucode */

 mec1 ucode */

 mec2 ucode is not necessary if mec2 ucode is same as mec1 */

 Temporarily put sdma part here */

 wait for 50ms */

 Trigger an invalidation of the L1 instruction caches */

 Wait for invalidation complete */

 Program me ucode address into intruction cache address register */

 wait for 50ms */

 Trigger an invalidation of the L1 instruction caches */

 Wait for invalidation complete */

 Program ce ucode address into intruction cache address register */

 wait for 50ms */

 Trigger an invalidation of the L1 instruction caches */

 Wait for invalidation complete */

 Program pfp ucode address into intruction cache address register */

 wait for 50ms */

 Trigger an invalidation of the L1 instruction caches */

 Wait for invalidation complete */

 Program mec1 ucode address into intruction cache address register */

 wait for 50ms */

 Trigger an invalidation of the L1 instruction caches */

 Wait for invalidation complete */

 wait for 50ms */

 Trigger an invalidation of the L1 instruction caches */

 Wait for invalidation complete */

 wait for 50ms */

 Trigger an invalidation of the L1 instruction caches */

 Wait for invalidation complete */

 init the CP */

 submit cs packet to copy state 0 to next available state */

 maximum supported gfx ring is 2 */

 Set the write pointer delay */

 set the RB to use vmid 0 */

 Init gfx ring 0 for pipe 0 */

 Set ring buffer size */

 Initialize the ring buffer's write pointers */

 set the wb address wether it's enabled or not */

 Init gfx ring 1 for pipe 1 */

 maximum supported gfx ring is 2 */

 Initialize the ring buffer's write pointers */

 Set the wb address wether it's enabled or not */

 Switch to pipe 0 */

 start the ring */

 Wait for 50 ms */

 Trigger an invalidation of the L1 instruction caches */

 Wait for invalidation complete */

 MEC1 */

	/*

	 * TODO: Loading MEC2 firmware is only necessary if MEC2 should run

	 * different microcode than MEC1.

 tell RLC which is KIQ queue */

 set up gfx hqd wptr */

 set the pointer to the MQD */

 set up mqd control */

 set up gfx_hqd_vimd with 0x0 to indicate the ring buffer's vmid */

	/* set up default queue priority level

 set up time quantum */

 set up gfx hqd base. this is similar as CP_RB_BASE */

 set up hqd_rptr_addr/_hi, similar as CP_RB_RPTR */

 set up rb_wptr_poll addr */

 set up the gfx_hqd_control, similar as CP_RB0_CNTL */

 set up cp_doorbell_control */

	/*if there are 2 gfx rings, set the lower doorbell range of the first ring,

 reset read and write pointers, similar to CP_RB0_WPTR/_RPTR */

 active the queue */

 set mmCP_GFX_HQD_WPTR/_HI to 0 */

 set GFX_MQD_BASE */

 set GFX_MQD_CONTROL */

 set GFX_HQD_VMID to 0 */

 set GFX_HQD_BASE, similar as CP_RB_BASE */

 set GFX_HQD_RPTR_ADDR, similar as CP_RB_RPTR */

 set GFX_HQD_CNTL, similar as CP_RB_CNTL */

 set RB_WPTR_POLL_ADDR */

 set RB_DOORBELL_CONTROL */

 active the queue */

 reset mqd with the backup copy */

 reset the ring */

 set the EOP size, register value is 2^(EOP_SIZE+1) dwords */

 enable doorbell? */

 disable the queue if it's active */

 set the pointer to the MQD */

 set MQD vmid to 0 */

 set the pointer to the HQD, this is similar CP_RB0_BASE/_HI */

 set up the HQD, this is similar to CP_RB0_CNTL */

 set the wb address whether it's enabled or not */

 only used if CP_PQ_WPTR_POLL_CNTL.CP_PQ_WPTR_POLL_CNTL__EN_MASK=1 */

 enable the doorbell if requested */

 reset read and write pointers, similar to CP_RB0_WPTR/_RPTR */

 set the vmid for the queue */

 set MIN_IB_AVAIL_SIZE */

 set static priority for a compute queue/ring */

	/* map_queues packet doesn't need activate the queue,

	 * so only kiq need set this field.

 inactivate the queue */

 disable wptr polling */

 write the EOP addr */

 set the EOP size, register value is 2^(EOP_SIZE+1) dwords */

 enable doorbell? */

 disable the queue if it's active */

 set the pointer to the MQD */

 set MQD vmid to 0 */

 set the pointer to the HQD, this is similar CP_RB0_BASE/_HI */

 set up the HQD, this is similar to CP_RB0_CNTL */

 set the wb address whether it's enabled or not */

 only used if CP_PQ_WPTR_POLL_CNTL.CP_PQ_WPTR_POLL_CNTL__EN_MASK=1 */

 enable the doorbell if requested */

 reset read and write pointers, similar to CP_RB0_WPTR/_RPTR */

 set the vmid for the queue */

 activate the queue */

 for GPU_RESET case */

 reset MQD to a clean status */

 reset ring buffer */

 for GPU_RESET case */

 reset MQD to a clean status */

 reset ring buffer */

 legacy firmware loading */

	/* check if mmVGT_ESGS_RING_SIZE_UMD

	/* initialize cam_index to 0

 mmVGT_TF_RING_SIZE_UMD -> mmVGT_TF_RING_SIZE */

 mmVGT_TF_MEMORY_BASE_UMD -> mmVGT_TF_MEMORY_BASE */

 mmVGT_TF_MEMORY_BASE_HI_UMD -> mmVGT_TF_MEMORY_BASE_HI */

 mmVGT_HS_OFFCHIP_PARAM_UMD -> mmVGT_HS_OFFCHIP_PARAM */

 mmVGT_ESGS_RING_SIZE_UMD -> mmVGT_ESGS_RING_SIZE */

 mmVGT_GSVS_RING_SIZE_UMD -> mmVGT_GSVS_RING_SIZE */

 mmSPI_CONFIG_CNTL_REMAP -> mmSPI_CONFIG_CNTL */

 mmVGT_TF_RING_SIZE_UMD -> mmVGT_TF_RING_SIZE */

 mmVGT_TF_MEMORY_BASE_UMD -> mmVGT_TF_MEMORY_BASE */

 mmVGT_TF_MEMORY_BASE_HI_UMD -> mmVGT_TF_MEMORY_BASE_HI */

 mmVGT_HS_OFFCHIP_PARAM_UMD -> mmVGT_HS_OFFCHIP_PARAM */

 mmVGT_ESGS_RING_SIZE_UMD -> mmVGT_ESGS_RING_SIZE */

 mmVGT_GSVS_RING_SIZE_UMD -> mmVGT_GSVS_RING_SIZE */

 mmSPI_CONFIG_CNTL_REMAP -> mmSPI_CONFIG_CNTL */

		/**

		 * For gfx 10, rlc firmware loading relies on smu firmware is

		 * loaded firstly, so in direct type, it has to load smc ucode

		 * here before rlc.

 if GRBM CAM not remapped, set up the remapping */

	/*

	 * init golden registers and rlc resume may override some registers,

	 * reconfig them here

 Program KIQ position of RLC_CP_SCHEDULERS during destroy */

 read MC_STATUS */

 GRBM_STATUS */

 GRBM_STATUS2 */

 stop the rlc */

 Disable GFX parsing/prefetching */

 Disable MEC parsing/prefetching */

 Wait a little for things to settle down */

		/* The SMUIO TSC clock frequency is 100MHz, which sets 32-bit carry over

		 * roughly every 42 seconds.

 GDS Base */

 GDS Size */

 GWS */

 OA */

 if RLC is not enabled, do nothing */

 wait for RLC_SAFE_MODE */

 wait for RLC_SAFE_MODE */

 It is disabled by HW by default */

 0 - Disable some blocks' MGCG */

 1 - RLC_CGTT_MGCG_OVERRIDE */

 MGLS is a global flag to control all MGLS in GFX */

 2 - RLC memory Light sleep */

 3 - CP memory Light sleep */

 1 - MGCG_OVERRIDE */

 2 - disable MGLS in CP */

 3 - disable MGLS in RLC */

 Enable 3D CGCG/CGLS */

 write cmd to clear cgcg/cgls ov */

 unset CGCG override */

 update CGCG and CGLS override bits */

 enable 3Dcgcg FSM(0x0000363f) */

 set IDLE_POLL_COUNT(0x00900100) */

 Disable CGCG/CGLS */

 disable cgcg, cgls should be disabled */

 disable cgcg and cgls in FSM */

 unset CGCG override */

 update CGCG and CGLS override bits */

 enable cgcg FSM(0x0000363F) */

 set IDLE_POLL_COUNT(0x00900100) */

 reset CGCG/CGLS bits */

 disable cgcg and cgls in FSM */

 unset FGCG override */

 update FGCG override bits */

 unset RLC SRAM CLK GATER override */

 update RLC SRAM CLK GATER override bits */

 reset FGCG bits */

 disable FGCG*/

 reset RLC SRAM CLK GATER bits */

 disable RLC SRAM CLK*/

 enable FGCG firstly*/

		/* CGCG/CGLS should be enabled after MGCG/MGLS

		 * ===  MGCG + MGLS ===

 ===  CGCG /CGLS for GFX 3D Only === */

 ===  CGCG + CGLS === */

		/* CGCG/CGLS should be disabled before MGCG/MGLS

		 * ===  CGCG + CGLS ===

 ===  CGCG /CGLS for GFX 3D Only === */

 ===  MGCG + MGLS === */

 disable fgcg at last*/

 not for *_SOC15 */

	/*

	 * CGPG enablement required and the register to program the hysteresis value

	 * RLC_PG_DELAY_3.CGCG_ACTIVE_BEFORE_CGPG to the desired CGPG hysteresis value

	 * in refclk count. Note that RLC FW is modified to take 16 bits from

	 * RLC_PG_DELAY_3[15:0] as the hysteresis instead of just 8 bits.

	 *

	 * The recommendation from RLC team is setting RLC_PG_DELAY_3 to 200us as part)

	 * of CGPG enablement starting point.

	 * Power/performance team will optimize it and might give a new value later.

 AMD_CG_SUPPORT_GFX_FGCG */

 AMD_CG_SUPPORT_GFX_MGCG */

 AMD_CG_SUPPORT_GFX_CGCG */

 AMD_CG_SUPPORT_GFX_CGLS */

 AMD_CG_SUPPORT_GFX_RLC_LS */

 AMD_CG_SUPPORT_GFX_CP_LS */

 AMD_CG_SUPPORT_GFX_3D_CGCG */

 AMD_CG_SUPPORT_GFX_3D_CGLS */

 gfx10 is 32bit rptr*/

 XXX check if swapping is necessary on BE */

 XXX check if swapping is necessary on BE */

 gfx10 hardware is 32bit rptr */

 XXX check if swapping is necessary on BE */

 XXX check if swapping is necessary on BE */

 only DOORBELL method supported on gfx10 now */

 pfp */

 Dword align */

	/* Currently, there is a high possibility to get wave ID mismatch

	 * between ME and GDS, leading to a hw deadlock, because ME generates

	 * different wave IDs than the GDS expects. This situation happens

	 * randomly when at least 5 compute pipes use GDS ordered append.

	 * The wave IDs generated by ME are also wrong after suspend/resume.

	 * Those are probably bugs somewhere else in the kernel driver.

	 *

	 * Writing GDS_COMPUTE_MAX_WAVE_ID resets wave ID counters in ME and

	 * GDS to 0 for this ring (me/pipe).

 Dword align */

 RELEASE_MEM - flush caches, send int */

 must be set with GLM_WB */

	/*

	 * the address should be Qword aligned if 64bit write, Dword

	 * aligned if only send 32bit data low (discard data high)

 compute doesn't have PFP */

 sync PFP to ME, otherwise we might get invalid PFP reads */

 we only allocate 32bit for each seq wb address */

 write fence seq to the "addr" */

 set register to trigger INT */

 src_id is 178 */

 set load_enable otherwise this package is just NOPs */

 set load_global_config & load_global_uconfig */

 set load_cs_sh_regs */

 set load_per_context_state & load_gfx_sh_regs for GFX */

 set load_ce_ram if preamble presented */

		/* still load_ce_ram if this is the first time preamble presented

		 * although there is no context switch happens.

 discard following DWs if *cond_exec_gpu_addr==0 */

 patch dummy value later */

 assert preemption condition */

 assert IB preemption, emit the trailing fence */

 poll the trailing fence */

 deassert preemption condition */

 src: register*/

 dst: memory */

 write confirm */

 no inc addr */

	/*

	 * amdgpu controls only the first MEC. That's why this function only

	 * handles the setting of interrupts for this specific MEC. All other

	 * pipes' interrupts are set by amdkfd.

			/* Per-queue interrupt is supported for MEC starting from VI.

			  * The interrupt can only be enabled/disabled per pipe instead of per queue.

 we only enabled 1 gfx queue per pipe for now */

 kiq only support GENERIC2_INT now */

 ACQUIRE_MEM - make one or more surfaces valid for use by the subsequent operations */

 CP_COHER_CNTL */

 CP_COHER_SIZE */

 CP_COHER_SIZE_HI */

 CP_COHER_BASE */

 CP_COHER_BASE_HI */

 POLL_INTERVAL */

 GCR_CNTL */

 totally 242 maximum if 16 IBs */

 COND_EXEC */

 PIPELINE_SYNC */

 VM_FLUSH */

 FENCE for VM_FLUSH */

 GDS switch */

		4 + /* double SWITCH_BUFFER,

		     * the first COND_EXEC jump to the place

		     * just prior to this double SWITCH_BUFFER

 COND_EXEC */

 HDP_flush */

 VGT_flush */

	CE_META */

	DE_META */

 CNTX_CTRL */

 HDP_INVL */

 FENCE x2 */

 SWITCH_BUFFER */

 gfx_v10_0_emit_mem_sync */

 gfx_v10_0_ring_emit_ib_gfx */

 gfx_v10_0_ring_emit_gds_switch */

 gfx_v10_0_ring_emit_hdp_flush */

 hdp invalidate */

 gfx_v10_0_ring_emit_pipeline_sync */

 gfx_v10_0_ring_emit_vm_flush */

 gfx_v10_0_ring_emit_fence x3 for user fence, vm fence */

 gfx_v10_0_emit_mem_sync */

 gfx_v10_0_ring_emit_ib_compute */

 gfx_v10_0_ring_emit_gds_switch */

 gfx_v10_0_ring_emit_hdp_flush */

hdp invalidate */

 gfx_v10_0_ring_emit_pipeline_sync */

 gfx_v10_0_ring_emit_vm_flush */

 gfx_v10_0_ring_emit_fence_kiq x3 for user fence, vm fence */

 gfx_v10_0_ring_emit_ib_compute */

 if there is one WGP enabled, it means 2 CUs will be enabled */

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 *

/**

 * DOC: AMDGPU SECUREDISPLAY debugfs test interface

 *

 * how to use?

 * echo opcode <value> > <debugfs_dir>/dri/xxx/securedisplay_test

 * eg. echo 1 > <debugfs_dir>/dri/xxx/securedisplay_test

 * eg. echo 2 phy_id > <debugfs_dir>/dri/xxx/securedisplay_test

 *

 * opcode:

 * 1：Query whether TA is responding used only for validation pupose

 * 2: Send region of Interest and CRC value to I2C. (uint32)phy_id is

 * send to determine which DIO scratch register should be used to get

 * ROI and receive i2c_buf as the output.

 *

 * You can refer more detail from header file ta_securedisplay_if.h

 *

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * jpeg_v2_5_early_init - set function pointers

 *

 * @handle: amdgpu_device pointer

 *

 * Set ring and irq function pointers

/**

 * jpeg_v2_5_sw_init - sw init for JPEG block

 *

 * @handle: amdgpu_device pointer

 *

 * Load firmware and sw initialization

 JPEG TRAP */

/**

 * jpeg_v2_5_sw_fini - sw fini for JPEG block

 *

 * @handle: amdgpu_device pointer

 *

 * JPEG suspend and free up sw allocation

/**

 * jpeg_v2_5_hw_init - start and test JPEG block

 *

 * @handle: amdgpu_device pointer

 *

/**

 * jpeg_v2_5_hw_fini - stop the hardware block

 *

 * @handle: amdgpu_device pointer

 *

 * Stop the JPEG block, mark ring as not ready any more

/**

 * jpeg_v2_5_suspend - suspend JPEG block

 *

 * @handle: amdgpu_device pointer

 *

 * HW fini and suspend JPEG block

/**

 * jpeg_v2_5_resume - resume JPEG block

 *

 * @handle: amdgpu_device pointer

 *

 * Resume firmware and hw init JPEG block

/**

 * jpeg_v2_5_start - start JPEG block

 *

 * @adev: amdgpu_device pointer

 *

 * Setup and start the JPEG block

 disable anti hang mechanism */

 JPEG disable CGC */

 MJPEG global tiling registers */

 enable JMI channel */

 enable System Interrupt for JRBC */

/**

 * jpeg_v2_5_stop - stop JPEG block

 *

 * @adev: amdgpu_device pointer

 *

 * stop the JPEG block

 reset JMI */

 enable anti hang mechanism */

/**

 * jpeg_v2_5_dec_ring_get_rptr - get read pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware read pointer

/**

 * jpeg_v2_5_dec_ring_get_wptr - get write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware write pointer

/**

 * jpeg_v2_5_dec_ring_set_wptr - set write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Commits the write pointer to the hardware

/**

 * jpeg_v2_6_dec_ring_insert_start - insert a start command

 *

 * @ring: amdgpu_ring pointer

 *

 * Write a start command to the ring.

 PCTL0_MMHUB_DEEPSLEEP_IB */

/**

 * jpeg_v2_6_dec_ring_insert_end - insert a end command

 *

 * @ring: amdgpu_ring pointer

 *

 * Write a end command to the ring.

 PCTL0_MMHUB_DEEPSLEEP_IB */

 jpeg_v2_5_dec_ring_emit_vm_flush */

 jpeg_v2_5_dec_ring_emit_fence x2 vm fence */

 jpeg_v2_5_dec_ring_emit_ib */

 jpeg_v2_5_dec_ring_emit_vm_flush */

 jpeg_v2_5_dec_ring_emit_fence x2 vm fence */

 jpeg_v2_5_dec_ring_emit_ib */

 CHIP_ALDEBARAN */

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 *          Jerome Glisse

/**

 * DOC: pcie_replay_count

 *

 * The amdgpu driver provides a sysfs API for reporting the total number

 * of PCIe replays (NAKs)

 * The file pcie_replay_count is used for this and returns the total

 * number of replays as a sum of the NAKs generated and NAKs received

/**

 * DOC: product_name

 *

 * The amdgpu driver provides a sysfs API for reporting the product name

 * for the device

 * The file serial_number is used for this and returns the product name

 * as returned from the FRU.

 * NOTE: This is only available for certain server cards

/**

 * DOC: product_number

 *

 * The amdgpu driver provides a sysfs API for reporting the part number

 * for the device

 * The file serial_number is used for this and returns the part number

 * as returned from the FRU.

 * NOTE: This is only available for certain server cards

/**

 * DOC: serial_number

 *

 * The amdgpu driver provides a sysfs API for reporting the serial number

 * for the device

 * The file serial_number is used for this and returns the serial number

 * as returned from the FRU.

 * NOTE: This is only available for certain server cards

/**

 * amdgpu_device_supports_px - Is the device a dGPU with ATPX power control

 *

 * @dev: drm_device pointer

 *

 * Returns true if the device is a dGPU with ATPX power control,

 * otherwise return false.

/**

 * amdgpu_device_supports_boco - Is the device a dGPU with ACPI power resources

 *

 * @dev: drm_device pointer

 *

 * Returns true if the device is a dGPU with ACPI power control,

 * otherwise return false.

/**

 * amdgpu_device_supports_baco - Does the device support BACO

 *

 * @dev: drm_device pointer

 *

 * Returns true if the device supporte BACO,

 * otherwise return false.

/**

 * amdgpu_device_supports_smart_shift - Is the device dGPU with

 * smart shift support

 *

 * @dev: drm_device pointer

 *

 * Returns true if the device is a dGPU with Smart Shift support,

 * otherwise returns false.

/*

 * VRAM access helper functions

/**

 * amdgpu_device_mm_access - access vram by MM_INDEX/MM_DATA

 *

 * @adev: amdgpu_device pointer

 * @pos: offset of the buffer in vram

 * @buf: virtual address of the buffer in system memory

 * @size: read/write size, sizeof(@buf) must > @size

 * @write: true - write to vram, otherwise - read from vram

/**

 * amdgpu_device_vram_access - access vram by vram aperature

 *

 * @adev: amdgpu_device pointer

 * @pos: offset of the buffer in vram

 * @buf: virtual address of the buffer in system memory

 * @size: read/write size, sizeof(@buf) must > @size

 * @write: true - write to vram, otherwise - read from vram

 *

 * The return value means how many bytes have been transferred.

/**

 * amdgpu_device_vram_access - read/write a buffer in vram

 *

 * @adev: amdgpu_device pointer

 * @pos: offset of the buffer in vram

 * @buf: virtual address of the buffer in system memory

 * @size: read/write size, sizeof(@buf) must > @size

 * @write: true - write to vram, otherwise - read from vram

 try to using vram apreature to access vram first */

 using MM to access rest vram */

/*

 * register access helper functions.

 Check if hw access should be skipped because of hotplug or device error */

	/*

	 * This is a bit complicated to understand, so worth a comment. What we assert

	 * here is that the GPU reset is not running on another thread in parallel.

	 *

	 * For this we trylock the read side of the reset semaphore, if that succeeds

	 * we know that the reset is not running in paralell.

	 *

	 * If the trylock fails we assert that we are either already holding the read

	 * side of the lock or are the reset thread itself and hold the write side of

	 * the lock.

/**

 * amdgpu_device_rreg - read a memory mapped IO or indirect register

 *

 * @adev: amdgpu_device pointer

 * @reg: dword aligned register offset

 * @acc_flags: access flags which require special behavior

 *

 * Returns the 32 bit value from the offset specified.

/*

 * MMIO register read with bytes helper functions

 * @offset:bytes offset from MMIO start

 *

/**

 * amdgpu_mm_rreg8 - read a memory mapped IO register

 *

 * @adev: amdgpu_device pointer

 * @offset: byte aligned register offset

 *

 * Returns the 8 bit value from the offset specified.

/*

 * MMIO register write with bytes helper functions

 * @offset:bytes offset from MMIO start

 * @value: the value want to be written to the register

 *

/**

 * amdgpu_mm_wreg8 - read a memory mapped IO register

 *

 * @adev: amdgpu_device pointer

 * @offset: byte aligned register offset

 * @value: 8 bit value to write

 *

 * Writes the value specified to the offset specified.

/**

 * amdgpu_device_wreg - write to a memory mapped IO or indirect register

 *

 * @adev: amdgpu_device pointer

 * @reg: dword aligned register offset

 * @v: 32 bit value to write to the register

 * @acc_flags: access flags which require special behavior

 *

 * Writes the value specified to the offset specified.

/*

 * amdgpu_mm_wreg_mmio_rlc -  write register either with mmio or with RLC path if in range

 *

 * this function is invoked only the debugfs register access

/**

 * amdgpu_mm_rdoorbell - read a doorbell dword

 *

 * @adev: amdgpu_device pointer

 * @index: doorbell index

 *

 * Returns the value in the doorbell aperture at the

 * requested doorbell index (CIK).

/**

 * amdgpu_mm_wdoorbell - write a doorbell dword

 *

 * @adev: amdgpu_device pointer

 * @index: doorbell index

 * @v: value to write

 *

 * Writes @v to the doorbell aperture at the

 * requested doorbell index (CIK).

/**

 * amdgpu_mm_rdoorbell64 - read a doorbell Qword

 *

 * @adev: amdgpu_device pointer

 * @index: doorbell index

 *

 * Returns the value in the doorbell aperture at the

 * requested doorbell index (VEGA10+).

/**

 * amdgpu_mm_wdoorbell64 - write a doorbell Qword

 *

 * @adev: amdgpu_device pointer

 * @index: doorbell index

 * @v: value to write

 *

 * Writes @v to the doorbell aperture at the

 * requested doorbell index (VEGA10+).

/**

 * amdgpu_device_indirect_rreg - read an indirect register

 *

 * @adev: amdgpu_device pointer

 * @pcie_index: mmio register offset

 * @pcie_data: mmio register offset

 * @reg_addr: indirect register address to read from

 *

 * Returns the value of indirect register @reg_addr

/**

 * amdgpu_device_indirect_rreg64 - read a 64bits indirect register

 *

 * @adev: amdgpu_device pointer

 * @pcie_index: mmio register offset

 * @pcie_data: mmio register offset

 * @reg_addr: indirect register address to read from

 *

 * Returns the value of indirect register @reg_addr

 read low 32 bits */

 read high 32 bits */

/**

 * amdgpu_device_indirect_wreg - write an indirect register address

 *

 * @adev: amdgpu_device pointer

 * @pcie_index: mmio register offset

 * @pcie_data: mmio register offset

 * @reg_addr: indirect register offset

 * @reg_data: indirect register data

 *

/**

 * amdgpu_device_indirect_wreg64 - write a 64bits indirect register address

 *

 * @adev: amdgpu_device pointer

 * @pcie_index: mmio register offset

 * @pcie_data: mmio register offset

 * @reg_addr: indirect register offset

 * @reg_data: indirect register data

 *

 write low 32 bits */

 write high 32 bits */

/**

 * amdgpu_invalid_rreg - dummy reg read function

 *

 * @adev: amdgpu_device pointer

 * @reg: offset of register

 *

 * Dummy register read function.  Used for register blocks

 * that certain asics don't have (all asics).

 * Returns the value in the register.

/**

 * amdgpu_invalid_wreg - dummy reg write function

 *

 * @adev: amdgpu_device pointer

 * @reg: offset of register

 * @v: value to write to the register

 *

 * Dummy register read function.  Used for register blocks

 * that certain asics don't have (all asics).

/**

 * amdgpu_invalid_rreg64 - dummy 64 bit reg read function

 *

 * @adev: amdgpu_device pointer

 * @reg: offset of register

 *

 * Dummy register read function.  Used for register blocks

 * that certain asics don't have (all asics).

 * Returns the value in the register.

/**

 * amdgpu_invalid_wreg64 - dummy reg write function

 *

 * @adev: amdgpu_device pointer

 * @reg: offset of register

 * @v: value to write to the register

 *

 * Dummy register read function.  Used for register blocks

 * that certain asics don't have (all asics).

/**

 * amdgpu_block_invalid_rreg - dummy reg read function

 *

 * @adev: amdgpu_device pointer

 * @block: offset of instance

 * @reg: offset of register

 *

 * Dummy register read function.  Used for register blocks

 * that certain asics don't have (all asics).

 * Returns the value in the register.

/**

 * amdgpu_block_invalid_wreg - dummy reg write function

 *

 * @adev: amdgpu_device pointer

 * @block: offset of instance

 * @reg: offset of register

 * @v: value to write to the register

 *

 * Dummy register read function.  Used for register blocks

 * that certain asics don't have (all asics).

/**

 * amdgpu_device_asic_init - Wrapper for atom asic_init

 *

 * @adev: amdgpu_device pointer

 *

 * Does any asic specific work and then calls atom asic init.

/**

 * amdgpu_device_vram_scratch_init - allocate the VRAM scratch page

 *

 * @adev: amdgpu_device pointer

 *

 * Allocates a scratch page of VRAM for use by various things in the

 * driver.

/**

 * amdgpu_device_vram_scratch_fini - Free the VRAM scratch page

 *

 * @adev: amdgpu_device pointer

 *

 * Frees the VRAM scratch page.

/**

 * amdgpu_device_program_register_sequence - program an array of registers.

 *

 * @adev: amdgpu_device pointer

 * @registers: pointer to the register array

 * @array_size: size of the register array

 *

 * Programs an array or registers with and and or masks.

 * This is a helper for setting golden registers.

/**

 * amdgpu_device_pci_config_reset - reset the GPU

 *

 * @adev: amdgpu_device pointer

 *

 * Resets the GPU using the pci config reset sequence.

 * Only applicable to asics prior to vega10.

/**

 * amdgpu_device_pci_reset - reset the GPU using generic PCI means

 *

 * @adev: amdgpu_device pointer

 *

 * Resets the GPU using generic pci reset interfaces (FLR, SBR, etc.).

/*

 * GPU doorbell aperture helpers function.

/**

 * amdgpu_device_doorbell_init - Init doorbell driver information.

 *

 * @adev: amdgpu_device pointer

 *

 * Init doorbell driver information (CIK)

 * Returns 0 on success, error on failure.

 No doorbell on SI hardware generation */

 doorbell bar mapping */

	/* For Vega, reserve and map two pages on doorbell BAR since SDMA

	 * paging queue doorbell use the second page. The

	 * AMDGPU_DOORBELL64_MAX_ASSIGNMENT definition assumes all the

	 * doorbells are in the first page. So with paging queue enabled,

	 * the max num_doorbells should + 1 page (0x400 in dword)

/**

 * amdgpu_device_doorbell_fini - Tear down doorbell driver information.

 *

 * @adev: amdgpu_device pointer

 *

 * Tear down doorbell driver information (CIK)

/*

 * amdgpu_device_wb_*()

 * Writeback is the method by which the GPU updates special pages in memory

 * with the status of certain GPU events (fences, ring pointers,etc.).

/**

 * amdgpu_device_wb_fini - Disable Writeback and free memory

 *

 * @adev: amdgpu_device pointer

 *

 * Disables Writeback and frees the Writeback memory (all asics).

 * Used at driver shutdown.

/**

 * amdgpu_device_wb_init- Init Writeback driver info and allocate memory

 *

 * @adev: amdgpu_device pointer

 *

 * Initializes writeback and allocates writeback memory (all asics).

 * Used at driver startup.

 * Returns 0 on success or an -error on failure.

 AMDGPU_MAX_WB * sizeof(uint32_t) * 8 = AMDGPU_MAX_WB 256bit slots */

 clear wb memory */

/**

 * amdgpu_device_wb_get - Allocate a wb entry

 *

 * @adev: amdgpu_device pointer

 * @wb: wb index

 *

 * Allocate a wb slot for use by the driver (all asics).

 * Returns 0 on success or -EINVAL on failure.

 convert to dw offset */

/**

 * amdgpu_device_wb_free - Free a wb entry

 *

 * @adev: amdgpu_device pointer

 * @wb: wb index

 *

 * Free a wb slot allocated for use by the driver (all asics)

/**

 * amdgpu_device_resize_fb_bar - try to resize FB BAR

 *

 * @adev: amdgpu_device pointer

 *

 * Try to resize FB BAR to make all VRAM CPU accessible. We try very hard not

 * to fail, but if any of the BARs is not accessible after the size we abort

 * driver loading by returning -ENODEV.

 Bypass for VF */

 skip if the bios has already enabled large BAR */

 Check if the root BUS has 64bit memory resources */

 Trying to resize is pointless without a root hub window above 4GB */

 Limit the BAR size to what is available */

 Disable memory decoding while we change the BAR addresses and size */

 Free the VRAM and doorbell BAR, we most likely need to move both. */

	/* When the doorbell or fb BAR isn't available we have no chance of

	 * using the device.

/*

 * GPU helpers function.

/**

 * amdgpu_device_need_post - check if the hw need post or not

 *

 * @adev: amdgpu_device pointer

 *

 * Check if the asic has been initialized (all asics) at driver startup

 * or post is needed if  hw reset is performed.

 * Returns true if need or false if not.

		/* for FIJI: In whole GPU pass-through virtualization case, after VM reboot

		 * some old smc fw still need driver do vPost otherwise gpu hang, while

		 * those smc fw version above 22.15 doesn't have this flaw, so we force

		 * vpost executed for smc version below 22.15

 force vPost if error occured */

 Don't post if we need to reset whole hive on init */

 bios scratch used on CIK+ */

 check MEM_SIZE for older asics */

 if we get transitioned to only one device, take VGA back */

/**

 * amdgpu_device_vga_set_decode - enable/disable vga decode

 *

 * @pdev: PCI device pointer

 * @state: enable/disable vga decode

 *

 * Enable/disable vga decode (all asics).

 * Returns VGA resource flags.

/**

 * amdgpu_device_check_block_size - validate the vm block size

 *

 * @adev: amdgpu_device pointer

 *

 * Validates the vm block size specified via module parameter.

 * The vm block size defines number of bits in page table versus page directory,

 * a page is 4KB so we have 12 bits offset, minimum 9 bits in the

 * page table and the remaining bits are in the page directory.

	/* defines number of bits in page table versus page directory,

	 * a page is 4KB so we have 12 bits offset, minimum 9 bits in the

/**

 * amdgpu_device_check_vm_size - validate the vm size

 *

 * @adev: amdgpu_device pointer

 *

 * Validates the vm size in GB specified via module parameter.

 * The VM size is the size of the GPU virtual memory space in GB.

 no need to check the default value */

/**

 * amdgpu_device_check_arguments - validate module params

 *

 * @adev: amdgpu_device pointer

 *

 * Validates certain module parameters and updates

 * the associated values used by the driver (all asics).

 gart size must be greater or equal to 32M */

 gtt size must be greater or equal to 32M */

 valid range is between 4 and 9 inclusive */

/**

 * amdgpu_switcheroo_set_state - set switcheroo state

 *

 * @pdev: pci dev pointer

 * @state: vga_switcheroo state

 *

 * Callback for the switcheroo driver.  Suspends or resumes the

 * the asics before or after it is powered up using ACPI methods.

 don't suspend or resume card normally */

 Shut down the device */

/**

 * amdgpu_switcheroo_can_switch - see if switcheroo state can change

 *

 * @pdev: pci dev pointer

 *

 * Callback for the switcheroo driver.  Check of the switcheroo

 * state can be changed.

 * Returns true if the state can be changed, false if not.

	/*

	* FIXME: open_count is protected by drm_global_mutex but that would lead to

	* locking inversion with the driver load path. And the access here is

	* completely racy anyway. So don't bother with locking for now.

/**

 * amdgpu_device_ip_set_clockgating_state - set the CG state

 *

 * @dev: amdgpu_device pointer

 * @block_type: Type of hardware IP (SMU, GFX, UVD, etc.)

 * @state: clockgating state (gate or ungate)

 *

 * Sets the requested clockgating state for all instances of

 * the hardware IP specified.

 * Returns the error code from the last instance.

/**

 * amdgpu_device_ip_set_powergating_state - set the PG state

 *

 * @dev: amdgpu_device pointer

 * @block_type: Type of hardware IP (SMU, GFX, UVD, etc.)

 * @state: powergating state (gate or ungate)

 *

 * Sets the requested powergating state for all instances of

 * the hardware IP specified.

 * Returns the error code from the last instance.

/**

 * amdgpu_device_ip_get_clockgating_state - get the CG state

 *

 * @adev: amdgpu_device pointer

 * @flags: clockgating feature flags

 *

 * Walks the list of IPs on the device and updates the clockgating

 * flags for each IP.

 * Updates @flags with the feature flags for each hardware IP where

 * clockgating is enabled.

/**

 * amdgpu_device_ip_wait_for_idle - wait for idle

 *

 * @adev: amdgpu_device pointer

 * @block_type: Type of hardware IP (SMU, GFX, UVD, etc.)

 *

 * Waits for the request hardware IP to be idle.

 * Returns 0 for success or a negative error code on failure.

/**

 * amdgpu_device_ip_is_idle - is the hardware IP idle

 *

 * @adev: amdgpu_device pointer

 * @block_type: Type of hardware IP (SMU, GFX, UVD, etc.)

 *

 * Check if the hardware IP is idle or not.

 * Returns true if it the IP is idle, false if not.

/**

 * amdgpu_device_ip_get_ip_block - get a hw IP pointer

 *

 * @adev: amdgpu_device pointer

 * @type: Type of hardware IP (SMU, GFX, UVD, etc.)

 *

 * Returns a pointer to the hardware IP block structure

 * if it exists for the asic, otherwise NULL.

/**

 * amdgpu_device_ip_block_version_cmp

 *

 * @adev: amdgpu_device pointer

 * @type: enum amd_ip_block_type

 * @major: major version

 * @minor: minor version

 *

 * return 0 if equal or greater

 * return 1 if smaller or the ip_block doesn't exist

/**

 * amdgpu_device_ip_block_add

 *

 * @adev: amdgpu_device pointer

 * @ip_block_version: pointer to the IP to add

 *

 * Adds the IP block driver information to the collection of IPs

 * on the asic.

/**

 * amdgpu_device_enable_virtual_display - enable virtual display feature

 *

 * @adev: amdgpu_device pointer

 *

 * Enabled the virtual display feature if the user has enabled it via

 * the module parameter virtual_display.  This feature provides a virtual

 * display hardware on headless boards or in virtualized environments.

 * This function parses and validates the configuration string specified by

 * the user and configues the virtual display configuration (number of

 * virtual connectors, crtcs, etc.) specified.

/**

 * amdgpu_device_parse_gpu_info_fw - parse gpu info firmware

 *

 * @adev: amdgpu_device pointer

 *

 * Parses the asic configuration parameters specified in the gpu info

 * firmware and makes them availale to the driver for use in configuring

 * the asic.

 * Returns 0 on success, -EINVAL on failure.

		/*

		 * FIXME: The bounding box is still needed by Navi12, so

		 * temporarily read it from gpu_info firmware. Should be droped

		 * when DAL no longer needs it.

		/*

		 * Should be droped when DAL no longer needs it.

		/*

		 * soc bounding box info is not integrated in disocovery table,

		 * we always need to parse it from gpu info firmware if needed.

/**

 * amdgpu_device_ip_early_init - run early init for hardware IPs

 *

 * @adev: amdgpu_device pointer

 *

 * Early initialization pass for hardware IPs.  The hardware IPs that make

 * up each asic are discovered each IP's early_init callback is run.  This

 * is the first stage in initializing the asic.

 * Returns 0 on success, negative error code on failure.

 get the vbios after the asic_funcs are set up */

 Read BIOS */

get pf2vf msg info at it's earliest time*/

 no need to do the fw loading again if already done*/

/**

 * amdgpu_device_ip_init - run init for hardware IPs

 *

 * @adev: amdgpu_device pointer

 *

 * Main initialization pass for hardware IPs.  The list of all the hardware

 * IPs that make up the asic is walked and the sw_init and hw_init callbacks

 * are run.  sw_init initializes the software state associated with each IP

 * and hw_init initializes the hardware associated with each IP.

 * Returns 0 on success, negative error code on failure.

 need to do gmc hw init early so we can allocate gpu mem */

 right after GMC hw init, we create CSA */

 create ucode bo when sw_init complete*/

	/*

	 * retired pages will be loaded from eeprom and reserved here,

	 * it should be called after amdgpu_device_ip_hw_init_phase2  since

	 * for some ASICs the RAS EEPROM code relies on SMU fully functioning

	 * for I2C communication which only true at this point.

	 *

	 * amdgpu_ras_recovery_init may fail, but the upper only cares the

	 * failure from bad gpu situation and stop amdgpu init process

	 * accordingly. For other failed cases, it will still release all

	 * the resource and print error message, rather than returning one

	 * negative value to upper level.

	 *

	 * Note: theoretically, this should be called before all vram allocations

	 * to protect retired page from abusing

 Don't init kfd if whole hive need to be reset during init */

/**

 * amdgpu_device_fill_reset_magic - writes reset magic to gart pointer

 *

 * @adev: amdgpu_device pointer

 *

 * Writes a reset magic value to the gart pointer in VRAM.  The driver calls

 * this function before a GPU reset.  If the value is retained after a

 * GPU reset, VRAM has not been lost.  Some GPU resets may destry VRAM contents.

/**

 * amdgpu_device_check_vram_lost - check if vram is valid

 *

 * @adev: amdgpu_device pointer

 *

 * Checks the reset magic value written to the gart pointer in VRAM.

 * The driver calls this after a GPU reset to see if the contents of

 * VRAM is lost or now.

 * returns true if vram is lost, false if not.

	/*

	 * For all ASICs with baco/mode1 reset, the VRAM is

	 * always assumed to be lost.

/**

 * amdgpu_device_set_cg_state - set clockgating for amdgpu device

 *

 * @adev: amdgpu_device pointer

 * @state: clockgating state (gate or ungate)

 *

 * The list of all the hardware IPs that make up the asic is walked and the

 * set_clockgating_state callbacks are run.

 * Late initialization pass enabling clockgating for hardware IPs.

 * Fini or suspend, pass disabling clockgating for hardware IPs.

 * Returns 0 on success, negative error code on failure.

 skip CG for GFX on S0ix */

 skip CG for VCE/UVD, it's handled specially */

 enable clockgating to save power */

 skip PG for GFX on S0ix */

 skip CG for VCE/UVD, it's handled specially */

 enable powergating to save power */

	/*

	 * MGPU fan boost feature should be enabled

	 * only when there are two or more dGPUs in

	 * the system

/**

 * amdgpu_device_ip_late_init - run late init for hardware IPs

 *

 * @adev: amdgpu_device pointer

 *

 * Late initialization pass for hardware IPs.  The list of all the hardware

 * IPs that make up the asic is walked and the late_init callbacks are run.

 * late_init covers any special initialization that an IP requires

 * after all of the have been initialized or something that needs to happen

 * late in the init process.

 * Returns 0 on success, negative error code on failure.

 For XGMI + passthrough configuration on arcturus, enable light SBR */

		/*

		 * Reset device p-state to low as this was booted with high.

		 *

		 * This should be performed only after all devices from the same

		 * hive get initialized.

		 *

		 * However, it's unknown how many device in the hive in advance.

		 * As this is counted one by one during devices initializations.

		 *

		 * So, we wait for all XGMI interlinked devices initialized.

		 * This may bring some delays as those devices may come from

		 * different hives. But that should be OK.

 need to disable SMC first */

 XXX handle errors */

 XXX handle errors */

/**

 * amdgpu_device_ip_fini - run fini for hardware IPs

 *

 * @adev: amdgpu_device pointer

 *

 * Main teardown pass for hardware IPs.  The list of all the hardware

 * IPs that make up the asic is walked and the hw_fini and sw_fini callbacks

 * are run.  hw_fini tears down the hardware associated with each IP

 * and sw_fini tears down any software state associated with each IP.

 * Returns 0 on success, negative error code on failure.

 XXX handle errors */

/**

 * amdgpu_device_delayed_init_work_handler - work handler for IB tests

 *

 * @work: work_struct.

/**

 * amdgpu_device_ip_suspend_phase1 - run suspend for hardware IPs (phase 1)

 *

 * @adev: amdgpu_device pointer

 *

 * Main suspend function for hardware IPs.  The list of all the hardware

 * IPs that make up the asic is walked, clockgating is disabled and the

 * suspend callbacks are run.  suspend puts the hardware and software state

 * in each IP into a state suitable for suspend.

 * Returns 0 on success, negative error code on failure.

 displays are handled separately */

 XXX handle errors */

 XXX handle errors */

/**

 * amdgpu_device_ip_suspend_phase2 - run suspend for hardware IPs (phase 2)

 *

 * @adev: amdgpu_device pointer

 *

 * Main suspend function for hardware IPs.  The list of all the hardware

 * IPs that make up the asic is walked, clockgating is disabled and the

 * suspend callbacks are run.  suspend puts the hardware and software state

 * in each IP into a state suitable for suspend.

 * Returns 0 on success, negative error code on failure.

 displays are handled in phase1 */

 PSP lost connection when err_event_athub occurs */

 skip unnecessary suspend if we do not initialize them yet */

		/* skip suspend of gfx and psp for S0ix

		 * gfx is in gfxoff state, so on resume it will exit gfxoff just

		 * like at runtime. PSP is also part of the always on hardware

		 * so no need to suspend it.

 XXX handle errors */

 XXX handle errors */

 handle putting the SMC in the appropriate state */

/**

 * amdgpu_device_ip_suspend - run suspend for hardware IPs

 *

 * @adev: amdgpu_device pointer

 *

 * Main suspend function for hardware IPs.  The list of all the hardware

 * IPs that make up the asic is walked, clockgating is disabled and the

 * suspend callbacks are run.  suspend puts the hardware and software state

 * in each IP into a state suitable for suspend.

 * Returns 0 on success, negative error code on failure.

/**

 * amdgpu_device_ip_resume_phase1 - run resume for hardware IPs

 *

 * @adev: amdgpu_device pointer

 *

 * First resume function for hardware IPs.  The list of all the hardware

 * IPs that make up the asic is walked and the resume callbacks are run for

 * COMMON, GMC, and IH.  resume puts the hardware into a functional state

 * after a suspend and updates the software state as necessary.  This

 * function is also used for restoring the GPU after a GPU reset.

 * Returns 0 on success, negative error code on failure.

/**

 * amdgpu_device_ip_resume_phase2 - run resume for hardware IPs

 *

 * @adev: amdgpu_device pointer

 *

 * First resume function for hardware IPs.  The list of all the hardware

 * IPs that make up the asic is walked and the resume callbacks are run for

 * all blocks except COMMON, GMC, and IH.  resume puts the hardware into a

 * functional state after a suspend and updates the software state as

 * necessary.  This function is also used for restoring the GPU after a GPU

 * reset.

 * Returns 0 on success, negative error code on failure.

/**

 * amdgpu_device_ip_resume - run resume for hardware IPs

 *

 * @adev: amdgpu_device pointer

 *

 * Main resume function for hardware IPs.  The hardware IPs

 * are split into two resume functions because they are

 * are also used in in recovering from a GPU reset and some additional

 * steps need to be take between them.  In this case (S3/S4) they are

 * run sequentially.

 * Returns 0 on success, negative error code on failure.

/**

 * amdgpu_device_detect_sriov_bios - determine if the board supports SR-IOV

 *

 * @adev: amdgpu_device pointer

 *

 * Query the VBIOS data tables to determine if the board supports SR-IOV.

/**

 * amdgpu_device_asic_has_dc_support - determine if DC supports the asic

 *

 * @asic_type: AMD asic type

 *

 * Check if there is DC (new modesetting infrastructre) support for an asic.

 * returns true if DC has support, false if not.

		/*

		 * We have systems in the wild with these ASICs that require

		 * LVDS and VGA support which is not supported with DC.

		 *

		 * Fallback to the non-DC driver here by default so as not to

		 * cause regressions.

		/*

		 * We have systems in the wild with these ASICs that require

		 * LVDS and VGA support which is not supported with DC.

		 *

		 * Fallback to the non-DC driver here by default so as not to

		 * cause regressions.

/**

 * amdgpu_device_has_dc_support - check if dc is supported

 *

 * @adev: amdgpu_device pointer

 *

 * Returns true for supported, false for not supported

 It's a bug to not have a hive within this function */

	/*

	 * Use task barrier to synchronize all xgmi reset works across the

	 * hive. task_barrier_enter and task_barrier_exit will block

	 * until all the threads running the xgmi reset works reach

	 * those points. task_barrier_full will do both blocks.

	/*

	 * By default timeout for non compute jobs is 10000

	 * and 60000 for compute jobs.

	 * In SR-IOV or passthrough mode, timeout for compute

	 * jobs are 60000 by default.

		/*

		 * There is only one value specified and

		 * it should apply to all non-compute jobs.

/**

 * amdgpu_device_init - initialize the driver

 *

 * @adev: amdgpu_device pointer

 * @flags: driver flags

 *

 * Initializes the driver info and hw (all asics).

 * Returns 0 for success or an error on failure.

 * Called at driver startup.

	/* mutex initialization are all done here so we

	/*

	 * If throttling continues, logging will be performed every minute

	 * to avoid log flooding. "-1" is subtracted since the thermal

	 * throttling interrupt comes every second. Thus, the total logging

	 * interval is 59 seconds(retelimited printk interval) + 1(waiting

	 * for throttling interrupt) = 60 seconds.

 Registers mapping */

 TODO: block userspace mapping of io register */

 detect hw virtualization here */

 early init functions */

 enable PCIE atomic ops */

 doorbell bar mapping and doorbell index init*/

 post the asic on emulation mode */

 detect if we are with an SRIOV vbios */

	/* check if we need to reset the asic

	 *  E.g., driver was not cleanly unloaded previously, etc.

 Only need to init necessary block for SMU to handle the reset */

 Post card if necessary */

 Initialize clocks */

 Initialize clocks */

 init i2c buses */

 Fence driver */

 init the mode config */

 failed in exclusive mode due to timeout */

 Don't send request since VF is inactive. */

 Initialize the buffer migration limit. */

 Allow 8 MB/s. */

 Get a log2 for easy divisions. */

	/*

	 * Register gpu instance before amdgpu_device_enable_mgpu_fan_boost.

	 * Otherwise the mgpu fan boost feature will be skipped due to the

	 * gpu instance is counted less.

	/* enable clockgating, etc. after ib tests, etc. since some blocks require

	 * explicit gating rather than handling it automatically.

 must succeed. */

 Have stored pci confspace at hand for restore in sudden PCI error */

 if we have > 1 VGA cards, then disable the amdgpu VGA resources */

	/* this will fail for cards that aren't VGA class devices, just

 Clear all CPU mappings pointing to this device */

 Unmap all mapped bars - Doorbell, registers and VRAM */

 Memory manager related */

/**

 * amdgpu_device_fini - tear down the driver

 *

 * @adev: amdgpu_device pointer

 *

 * Tear down the driver info (all asics).

 * Called at driver shutdown.

	/* make sure IB test finished before entering exclusive mode

	 * to avoid preemption on IB test

 disable all interrupts */

 free i2c buses */

/**

 * amdgpu_device_evict_resources - evict device resources

 * @adev: amdgpu device object

 *

 * Evicts all ttm device resources(vram BOs, gart table) from the lru list

 * of the vram memory type. Mainly used for evicting device resources

 * at suspend time.

 *

 No need to evict vram on APUs for suspend to ram */

/*

 * Suspend & resume.

/**

 * amdgpu_device_suspend - initiate device suspend

 *

 * @dev: drm dev pointer

 * @fbcon : notify the fbdev of suspend

 *

 * Puts the hw in the suspend state (all asics).

 * Returns 0 for success or an error on failure.

 * Called at driver suspend.

 First evict vram memory */

	/* This second call to evict device resources is to evict

	 * the gart page table using the CPU.

/**

 * amdgpu_device_resume - initiate device resume

 *

 * @dev: drm dev pointer

 * @fbcon : notify the fbdev of resume

 *

 * Bring the hw back to operating state (all asics).

 * Returns 0 for success or an error on failure.

 * Called at driver resume.

 post card */

 Make sure IB tests flushed */

	/*

	 * Most of the connector probing functions try to acquire runtime pm

	 * refs to ensure that the GPU is powered on when connector polling is

	 * performed. Since we're calling this from a runtime PM callback,

	 * trying to acquire rpm refs will cause us to deadlock.

	 *

	 * Since we're guaranteed to be holding the rpm lock, it's safe to

	 * temporarily disable the rpm helpers so this doesn't deadlock us.

/**

 * amdgpu_device_ip_check_soft_reset - did soft reset succeed

 *

 * @adev: amdgpu_device pointer

 *

 * The list of all the hardware IPs that make up the asic is walked and

 * the check_soft_reset callbacks are run.  check_soft_reset determines

 * if the asic is still hung or not.

 * Returns true if any of the IPs are still in a hung state, false if not.

/**

 * amdgpu_device_ip_pre_soft_reset - prepare for soft reset

 *

 * @adev: amdgpu_device pointer

 *

 * The list of all the hardware IPs that make up the asic is walked and the

 * pre_soft_reset callbacks are run if the block is hung.  pre_soft_reset

 * handles any IP specific hardware or software state changes that are

 * necessary for a soft reset to succeed.

 * Returns 0 on success, negative error code on failure.

/**

 * amdgpu_device_ip_need_full_reset - check if a full asic reset is needed

 *

 * @adev: amdgpu_device pointer

 *

 * Some hardware IPs cannot be soft reset.  If they are hung, a full gpu

 * reset is necessary to recover.

 * Returns true if a full asic reset is required, false if not.

/**

 * amdgpu_device_ip_soft_reset - do a soft reset

 *

 * @adev: amdgpu_device pointer

 *

 * The list of all the hardware IPs that make up the asic is walked and the

 * soft_reset callbacks are run if the block is hung.  soft_reset handles any

 * IP specific hardware or software state changes that are necessary to soft

 * reset the IP.

 * Returns 0 on success, negative error code on failure.

/**

 * amdgpu_device_ip_post_soft_reset - clean up from soft reset

 *

 * @adev: amdgpu_device pointer

 *

 * The list of all the hardware IPs that make up the asic is walked and the

 * post_soft_reset callbacks are run if the asic was hung.  post_soft_reset

 * handles any IP specific hardware or software state changes that are

 * necessary after the IP has been soft reset.

 * Returns 0 on success, negative error code on failure.

/**

 * amdgpu_device_recover_vram - Recover some VRAM contents

 *

 * @adev: amdgpu_device pointer

 *

 * Restores the contents of VRAM buffers from the shadows in GTT.  Used to

 * restore things like GPUVM page tables after a GPU reset where

 * the contents of VRAM might be lost.

 *

 * Returns:

 * 0 on success, negative error code on failure.

 No need to recover an evicted BO */

/**

 * amdgpu_device_reset_sriov - reset ASIC for SR-IOV vf

 *

 * @adev: amdgpu_device pointer

 * @from_hypervisor: request from hypervisor

 *

 * do VF FLR and reinitialize Asic

 * return 0 means succeeded otherwise failed

 Resume IP prior to SMC */

 we need recover gart prior to run SMC/CP/SDMA resume */

 now we are okay to resume SMC/CP/SDMA */

/**

 * amdgpu_device_has_job_running - check if there is any job in mirror list

 *

 * @adev: amdgpu_device pointer

 *

 * check if there is any job in mirror list

/**

 * amdgpu_device_should_recover_gpu - check if we should try GPU recovery

 *

 * @adev: amdgpu_device pointer

 *

 * Check amdgpu_gpu_recovery and SRIOV status to see if we should try to recover

 * a hung GPU.

 disable BM */

 wait for asic to come out of reset */

 stop the data exchange thread */

 block all schedulers and reset given job's ring */

		/*clear job fence from fence drv to avoid force_completion

 after all hw jobs are reset, hw fence is meaningless, so force_completion */

 If reset handler not implemented, continue; otherwise return */

 Don't suspend on bare metal if we are not going to HW reset the ASIC */

 Try reset handler method first */

 If reset handler not implemented, continue; otherwise return */

 Reset handler not implemented, use the default method */

	/*

	 * ASIC reset has to be done on all XGMI hive nodes ASAP

	 * to allow proper links negotiation in FW (within 1 sec)

 For XGMI run all resets in parallel to speed up the process */

 For XGMI wait for all resets to complete before proceed */

 post card */

				/*

				 * Add this ASIC as tracked as reset was already

				 * complete successfully.

				/*

				 * The GPU enters bad state once faulty pages

				 * by ECC has reached the threshold, and ras

				 * recovery is scheduled next. So add one check

				 * here to break recovery if it indeed exceeds

				 * bad page threshold, and remind user to

				 * retire this GPU or setting one bigger

				 * bad_page_threshold value to fix this once

				 * probing driver again.

 must succeed. */

 Update PSP FW topology after reset */

/*

 * to lockup a list of amdgpu devices in a hive safely, if not a hive

 * with multiple nodes, it will be similar as amdgpu_device_lock_adev.

 *

 * unlock won't require roll back.

		/*

		 * if the lockup iteration break in the middle of a hive,

		 * it may means there may has a race issue,

		 * or a hive device locked up independently.

		 * we may be in trouble and may not, so will try to roll back

		 * the lock and give out a warnning.

	/*

	 * For now, only BACO and mode1 reset are confirmed

	 * to suffer the audio issue without proper suspended.

		/*

		 * If we cannot get the audio device autosuspend delay,

		 * a fixed 4S interval will be used. Considering 3S is

		 * the audio controller default autosuspend delay setting.

		 * 4S used here is guaranteed to cover that.

 TODO: abort the succeeding gpu reset? */

 clear job's guilty and depend the folowing step to decide the real one */

		/* for the real bad job, it will be resubmitted twice, adding a dma_fence_get

 timeout */

 set guilty */

 do hw reset */

			/*

			 * add reset counter so that the following

			 * resubmitted job could flush vmid

 got the hw fence, signal finished fence */

 remove node from list and free the job */

/**

 * amdgpu_device_gpu_recover - reset the asic and recover scheduler

 *

 * @adev: amdgpu_device pointer

 * @job: which job trigger hang

 *

 * Attempt to reset the GPU if it has hung (all asics).

 * Attempt to do soft-reset or full-reset and reinitialize Asic

 * Returns 0 for success or an error on failure.

	/*

	 * Special case: RAS triggered and full reset isn't supported

	/*

	 * Flush RAM to disk so that after reboot

	 * the user can read log and see why the system rebooted.

	/*

	 * Here we trylock to avoid chain of resets executing from

	 * either trigger by jobs on different adevs in XGMI hive or jobs on

	 * different schedulers for same device while this TO handler is running.

	 * We always reset all schedulers for device and all devices for XGMI

	 * hive so that should take care of them too.

	/*

	 * lock the device before we try to operate the linked list

	 * if didn't get the device lock, don't touch the linked list since

	 * others may iterating it.

 even we skipped this reset, still need to set the job to guilty */

	/*

	 * Build list of devices to reset.

	 * In case we are in XGMI hive mode, resort the device list

	 * to put adev in the 1st position.

 block all schedulers and reset given job's ring */

		/*

		 * Try to put the audio codec into suspend state

		 * before gpu reset started.

		 *

		 * Due to the power domain of the graphics device

		 * is shared with AZ power domain. Without this,

		 * we may change the audio hardware from behind

		 * the audio driver's back. That will trigger

		 * some audio codec errors.

		/*

		 * Mark these ASICs to be reseted as untracked first

		 * And add them back after reset completed

 disable ras on ALL IPs */

	/*

	 * Must check guilty signal here since after this point all old

	 * HW fences are force signaled.

	 *

	 * job->base holds a reference to parent fence

 Rest of adevs pre asic reset from XGMI hive. */

TODO Should we stop ?*/

 Actual ASIC resets if needed.*/

 TODO Implement XGMI hive reset logic for SRIOV */

 Post ASIC reset for all devs .*/

		/*

		 * Sometimes a later bad compute job can block a good gfx job as gfx

		 * and compute ring share internal GC HW mutually. We add an additional

		 * guilty jobs recheck step to find the real guilty job, it synchronously

		 * submits and pends for the first job being signaled. If it gets timeout,

		 * we identify it as a real guilty job.

 No point to resubmit jobs if we didn't HW reset*/

 bad news, how to tell it to userspace ? */

 unlock kfd: SRIOV would do it separately */

		/* kfd_post_reset will do nothing if kfd device is not initialized,

		 * need to bring up kfd here if it's not be initialized before

/**

 * amdgpu_device_get_pcie_info - fence pcie info about the PCIE slot

 *

 * @adev: amdgpu_device pointer

 *

 * Fetchs and stores in the driver the PCIE capabilities (gen speed

 * and lanes) of the slot the device is in. Handles APUs and

 * virtualized environments where PCIE config space may not be available.

 covers APUs as well */

 asic caps */

 platform caps */

/**

 * amdgpu_pci_error_detected - Called when a PCI error is detected.

 * @pdev: PCI device struct

 * @state: PCI channel state

 *

 * Description: Called when a PCI error is detected.

 *

 * Return: PCI_ERS_RESULT_NEED_RESET or PCI_ERS_RESULT_DISCONNECT.

 Fatal error, prepare for slot reset */

		/*

		 * Cancel and wait for all TDRs in progress if failing to

		 * set  adev->in_gpu_reset in amdgpu_device_lock_adev

		 *

		 * Locking adev->reset_sem will prevent any external access

		 * to GPU during PCI error recovery

		/*

		 * Block any work scheduling as we do for regular GPU reset

		 * for the duration of the recovery

 Permanent error, prepare for device removal */

/**

 * amdgpu_pci_mmio_enabled - Enable MMIO and dump debug registers

 * @pdev: pointer to PCI device

 TODO - dump whatever for debugging purposes */

	/* This called only if amdgpu_pci_error_detected returns

	 * PCI_ERS_RESULT_CAN_RECOVER. Read/write to the device still

	 * works, no need to reset slot.

/**

 * amdgpu_pci_slot_reset - Called when PCI slot has been reset.

 * @pdev: PCI device struct

 *

 * Description: This routine is called by the pci error recovery

 * code after the PCI slot has been reset, just before we

 * should resume normal operations.

 wait for asic to come out of reset */

 Restore PCI confspace */

 confirm  ASIC came out of reset */

/**

 * amdgpu_pci_resume() - resume normal ops after PCI reset

 * @pdev: pointer to PCI device

 *

 * Called when the error recovery driver tells us that its

 * OK to resume normal operation.

 Only continue execution for the case of pci_channel_io_frozen */

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 *          Jerome Glisse

 *          Christian König

/*

 * IB

 * IBs (Indirect Buffers) and areas of GPU accessible memory where

 * commands are stored.  You can put a pointer to the IB in the

 * command ring and the hw will fetch the commands from the IB

 * and execute them.  Generally userspace acceleration drivers

 * produce command buffers which are send to the kernel and

 * put in IBs for execution by the requested ring.

/**

 * amdgpu_ib_get - request an IB (Indirect Buffer)

 *

 * @adev: amdgpu_device pointer

 * @vm: amdgpu_vm pointer

 * @size: requested IB size

 * @pool_type: IB pool type (delayed, immediate, direct)

 * @ib: IB object returned

 *

 * Request an IB (all asics).  IBs are allocated using the

 * suballocator.

 * Returns 0 on success, error on failure.

 flush the cache before commit the IB */

/**

 * amdgpu_ib_free - free an IB (Indirect Buffer)

 *

 * @adev: amdgpu_device pointer

 * @ib: IB object to free

 * @f: the fence SA bo need wait on for the ib alloation

 *

 * Free an IB (all asics).

/**

 * amdgpu_ib_schedule - schedule an IB (Indirect Buffer) on the ring

 *

 * @ring: ring index the IB is associated with

 * @num_ibs: number of IBs to schedule

 * @ibs: IB objects to schedule

 * @job: job to schedule

 * @f: fence created during this submission

 *

 * Schedule an IB on the associated ring (all asics).

 * Returns 0 on success, error on failure.

 *

 * On SI, there are two parallel engines fed from the primary ring,

 * the CE (Constant Engine) and the DE (Drawing Engine).  Since

 * resource descriptors have moved to memory, the CE allows you to

 * prime the caches while the DE is updating register state so that

 * the resource descriptors will be already in cache when the draw is

 * processed.  To accomplish this, the userspace driver submits two

 * IBs, one for the CE and one for the DE.  If there is a CE IB (called

 * a CONST_IB), it will be put on the ring prior to the DE IB.  Prior

 * to SI there was just a DE IB.

 ring tests don't use a job */

	/* Setup initial TMZiness and send it off.

 wrap the last IB with fence */

/**

 * amdgpu_ib_pool_init - Init the IB (Indirect Buffer) pool

 *

 * @adev: amdgpu_device pointer

 *

 * Initialize the suballocator to manage a pool of memory

 * for use as IBs (all asics).

 * Returns 0 on success, error on failure.

/**

 * amdgpu_ib_pool_fini - Free the IB (Indirect Buffer) pool

 *

 * @adev: amdgpu_device pointer

 *

 * Tear down the suballocator managing the pool of memory

 * for use as IBs (all asics).

/**

 * amdgpu_ib_ring_tests - test IBs on the rings

 *

 * @adev: amdgpu_device pointer

 *

 * Test an IB (Indirect Buffer) on each ring.

 * If the test fails, disable the ring.

 * Returns 0 on success, error if the primary GFX ring

 * IB test fails.

		/* for MM engines in hypervisor side they are not scheduled together

		 * with CP and SDMA engines, so even in exclusive mode MM engine could

		 * still running on other VF thus the IB TEST TIMEOUT for MM engines

		 * under SR-IOV should be set to a long time. 8 sec should be enough

		 * for the MM comes back to this VF.

		/* for CP & SDMA engines since they are scheduled together so

		 * need to make the timeout width enough to cover the time

		 * cost waiting for it coming back under RUNTIME only

		/* KIQ rings don't have an IB test because we never submit IBs

		 * to them and they have no interrupt support.

 MM engine need more time */

 oh, oh, that's really bad */

/*

 * Debugfs info

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * sdma_v5_0_init_microcode - load ucode images from disk

 *

 * @adev: amdgpu_device pointer

 *

 * Use the firmware interface to load the ucode images into

 * the driver (not loaded into hw).

 * Returns 0 on success, error on failure.

 emulation only, won't work on real chip

 navi10 real chip need to use PSP to load firmware

 this is the offset we need patch later */

 insert dummy here and patch it later */

/**

 * sdma_v5_0_ring_get_rptr - get the current read pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Get the current rptr from the hardware (NAVI10+).

 XXX check if swapping is necessary on BE */

/**

 * sdma_v5_0_ring_get_wptr - get the current write pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Get the current wptr from the hardware (NAVI10+).

 XXX check if swapping is necessary on BE */

/**

 * sdma_v5_0_ring_set_wptr - commit the write pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Write the wptr back to the hardware (NAVI10+).

 XXX check if swapping is necessary on BE */

/**

 * sdma_v5_0_ring_emit_ib - Schedule an IB on the DMA engine

 *

 * @ring: amdgpu ring pointer

 * @job: job to retrieve vmid from

 * @ib: IB object to schedule

 * @flags: unused

 *

 * Schedule an IB in the DMA ring (NAVI10).

	/* An IB packet must end on a 8 DW boundary--the next dword

	 * must be on a 8-dword boundary. Our IB packet below is 6

	 * dwords long, thus add x number of NOPs, such that, in

	 * modular arithmetic,

	 * wptr + 6 + x = 8k, k >= 0, which in C is,

	 * (wptr + 6 + x) % 8 = 0.

	 * The expression below, is a solution of x.

 base must be 32 byte aligned */

/**

 * sdma_v5_0_ring_emit_mem_sync - flush the IB by graphics cache rinse

 *

 * @ring: amdgpu ring pointer

 * @job: job to retrieve vmid from

 * @ib: IB object to schedule

 *

 * flush the IB by graphics cache rinse.

 flush entire cache L0/L1/L2, this can be optimized by performance requirement */

/**

 * sdma_v5_0_ring_emit_hdp_flush - emit an hdp flush on the DMA ring

 *

 * @ring: amdgpu ring pointer

 *

 * Emit an hdp flush packet on the requested DMA ring.

 == */

 reference */

 mask */

 retry count, poll interval */

/**

 * sdma_v5_0_ring_emit_fence - emit a fence on the DMA ring

 *

 * @ring: amdgpu ring pointer

 * @addr: address

 * @seq: sequence number

 * @flags: fence related flags

 *

 * Add a DMA fence packet to the ring to write

 * the fence seq number and DMA trap packet to generate

 * an interrupt if needed (NAVI10).

 write the fence */

 Ucached(UC) */

 zero in first two bits */

 optionally write high bits as well */

 zero in first two bits */

 generate an interrupt */

/**

 * sdma_v5_0_gfx_stop - stop the gfx async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Stop the gfx async dma ring buffers (NAVI10).

/**

 * sdma_v5_0_rlc_stop - stop the compute async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Stop the compute async dma queues (NAVI10).

 XXX todo */

/**

 * sdma_v5_0_ctx_switch_enable - stop the async dma engines context switch

 *

 * @adev: amdgpu_device pointer

 * @enable: enable/disable the DMA MEs context switch.

 *

 * Halt or unhalt the async dma engines context switch (NAVI10).

/**

 * sdma_v5_0_enable - stop the async dma engines

 *

 * @adev: amdgpu_device pointer

 * @enable: enable/disable the DMA MEs.

 *

 * Halt or unhalt the async dma engines (NAVI10).

/**

 * sdma_v5_0_gfx_resume - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the gfx DMA ring buffers and enable them (NAVI10).

 * Returns 0 for success, error for failure.

 Set ring buffer size in dwords */

 Initialize the ring buffer's read and write pointers */

 setup the wptr shadow polling */

 set the wb address whether it's enabled or not */

 before programing wptr to a less value, need set minor_ptr_update first */

 only bare-metal use register write for wptr */

 set minor_ptr_update to 0 after wptr programed */

 set utc l1 enable flag always to 1 */

 enable MCBP */

 Set up RESP_MODE to non-copy addresses */

 program default cache read and write policy */

 clean read policy and write policy bits */

 unhalt engine */

 enable DMA RB */

 enable DMA IBs */

 bare-metal sequence doesn't need below to lines */

/**

 * sdma_v5_0_rlc_resume - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the compute DMA queues and enable them (NAVI10).

 * Returns 0 for success, error for failure.

/**

 * sdma_v5_0_load_microcode - load the sDMA ME ucode

 *

 * @adev: amdgpu_device pointer

 *

 * Loads the sDMA0/1 ucode.

 * Returns 0 for success, -EINVAL if the ucode is not available.

 halt the MEs */

/**

 * sdma_v5_0_start - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the DMA engines and enable them (NAVI10).

 * Returns 0 for success, error for failure.

 set RB registers */

 unhalt the MEs */

 enable sdma ring preemption */

 start the gfx rings and rlc compute queues */

/**

 * sdma_v5_0_ring_test_ring - simple async dma engine test

 *

 * @ring: amdgpu_ring structure holding ring information

 *

 * Test the DMA engine by writing using it to write an

 * value to memory. (NAVI10).

 * Returns 0 for success, error for failure.

/**

 * sdma_v5_0_ring_test_ib - test an IB on the DMA engine

 *

 * @ring: amdgpu_ring structure holding ring information

 * @timeout: timeout value in jiffies, or MAX_SCHEDULE_TIMEOUT

 *

 * Test a simple IB in the DMA ring (NAVI10).

 * Returns 0 on success, error on failure.

/**

 * sdma_v5_0_vm_copy_pte - update PTEs by copying them from the GART

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @src: src addr to copy from

 * @count: number of page entries to update

 *

 * Update PTEs by copying them from the GART using sDMA (NAVI10).

 src/dst endian swap */

/**

 * sdma_v5_0_vm_write_pte - update PTEs by writing them manually

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @value: dst addr to write into pe

 * @count: number of page entries to update

 * @incr: increase next addr by incr bytes

 *

 * Update PTEs by writing them manually using sDMA (NAVI10).

/**

 * sdma_v5_0_vm_set_pte_pde - update the page tables using sDMA

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @addr: dst addr to write into pe

 * @count: number of page entries to update

 * @incr: increase next addr by incr bytes

 * @flags: access flags

 *

 * Update the page tables using sDMA (NAVI10).

 for physically contiguous pages (vram) */

 dst addr */

 mask */

 value */

 increment size */

 number of entries */

/**

 * sdma_v5_0_ring_pad_ib - pad the IB

 * @ring: amdgpu_ring structure holding ring information

 * @ib: indirect buffer to fill with padding

 *

 * Pad the IB with NOPs to a boundary multiple of 8.

/**

 * sdma_v5_0_ring_emit_pipeline_sync - sync the pipeline

 *

 * @ring: amdgpu_ring pointer

 *

 * Make sure all previous operations are completed (CIK).

 wait for idle */

 equal */

 reference */

 mask */

 retry count, poll interval */

/**

 * sdma_v5_0_ring_emit_vm_flush - vm flush using sDMA

 *

 * @ring: amdgpu_ring pointer

 * @vmid: vmid number to use

 * @pd_addr: address

 *

 * Update the page table base and flush the VM TLB

 * using sDMA (NAVI10).

 equal */

 reference */

 mask */

 wait for a cycle to reset vm_inv_eng*_ack */

 SDMA trap event */

 SDMA trap event */

get DWORD offset

 get DWORD offset

 todo */

 assert preemption condition */

 emit the trailing fence */

 assert IB preemption */

 poll the trailing fence */

 deassert IB preemption */

 deassert the preemption condition */

 XXX compute */

 XXX compute */

 XXX page queue*/

 XXX compute */

 XXX compute */

 XXX page queue*/

 Enable sdma clock gating */

 Disable sdma clock gating */

 Enable sdma mem light sleep */

 Disable sdma mem light sleep */

 AMD_CG_SUPPORT_SDMA_MGCG */

 AMD_CG_SUPPORT_SDMA_LS */

 sdma_v5_0_ring_init_cond_exec */

 sdma_v5_0_ring_emit_hdp_flush */

 hdp_invalidate */

 sdma_v5_0_ring_emit_pipeline_sync */

 sdma_v5_0_ring_emit_vm_flush */

 sdma_v5_0_ring_emit_fence x3 for user fence, vm fence */

 sdma_v5_0_ring_emit_ib */

/**

 * sdma_v5_0_emit_copy_buffer - copy buffer using the sDMA engine

 *

 * @ib: indirect buffer to copy to

 * @src_offset: src GPU address

 * @dst_offset: dst GPU address

 * @byte_count: number of bytes to xfer

 * @tmz: if a secure copy should be used

 *

 * Copy GPU buffers using the DMA engine (NAVI10).

 * Used by the amdgpu ttm implementation to move pages if

 * registered as the asic copy callback.

 src/dst endian swap */

/**

 * sdma_v5_0_emit_fill_buffer - fill buffer using the sDMA engine

 *

 * @ib: indirect buffer to fill

 * @src_data: value to write to buffer

 * @dst_offset: dst GPU address

 * @byte_count: number of bytes to xfer

 *

 * Fill GPU buffers using the DMA engine (NAVI10).

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sub license, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL

 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,

 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 * USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

/*

 * Authors:

 *    Christian König <christian.koenig@amd.com>

/**

 * amdgpu_sync_create - zero init sync object

 *

 * @sync: sync object to initialize

 *

 * Just clear the sync object for now.

/**

 * amdgpu_sync_same_dev - test if fence belong to us

 *

 * @adev: amdgpu device to use for the test

 * @f: fence to test

 *

 * Test if the fence was issued by us.

/**

 * amdgpu_sync_get_owner - extract the owner of a fence

 *

 * @f: fence get the owner from

 *

 * Extract who originally created the fence.

/**

 * amdgpu_sync_keep_later - Keep the later fence

 *

 * @keep: existing fence to test

 * @fence: new fence

 *

 * Either keep the existing fence or the new one, depending which one is later.

/**

 * amdgpu_sync_add_later - add the fence to the hash

 *

 * @sync: sync object to add the fence to

 * @f: fence to add

 *

 * Tries to add the fence to an existing hash entry. Returns true when an entry

 * was found, false otherwise.

/**

 * amdgpu_sync_fence - remember to sync to this fence

 *

 * @sync: sync object to add fence to

 * @f: fence to sync to

 *

 * Add the fence to the sync object.

/**

 * amdgpu_sync_vm_fence - remember to sync to this VM fence

 *

 * @sync: sync object to add fence to

 * @fence: the VM fence to add

 *

 * Add the fence to the sync object and remember it as VM update.

 Determine based on the owner and mode if we should sync to a fence or not */

 Always sync to moves, no matter what */

	/* We only want to trigger KFD eviction fences on

	 * evict or move jobs. Skip KFD fences otherwise.

 Never sync to VM updates either. */

 Ignore fences depending on the sync mode */

/**

 * amdgpu_sync_resv - sync to a reservation object

 *

 * @adev: amdgpu device

 * @sync: sync object to add fences from reservation object to

 * @resv: reservation object with embedded fence

 * @mode: how owner affects which fences we sync to

 * @owner: owner of the planned job submission

 *

 * Sync to the fence

 always sync to the exclusive fence */

/**

 * amdgpu_sync_peek_fence - get the next fence not signaled yet

 *

 * @sync: the sync object

 * @ring: optional ring to use for test

 *

 * Returns the next fence not signaled yet without removing it from the sync

 * object.

			/* For fences from the same ring it is sufficient

			 * when they are scheduled.

/**

 * amdgpu_sync_get_fence - get the next fence from the sync object

 *

 * @sync: sync object to use

 *

 * Get and removes the next fence from the sync object not signaled yet.

/**

 * amdgpu_sync_clone - clone a sync object

 *

 * @source: sync object to clone

 * @clone: pointer to destination sync object

 *

 * Adds references to all unsignaled fences in @source to @clone. Also

 * removes signaled fences from @source while at it.

/**

 * amdgpu_sync_free - free the sync object

 *

 * @sync: sync object to use

 *

 * Free the sync object.

/**

 * amdgpu_sync_init - init sync object subsystem

 *

 * Allocate the slab allocator.

/**

 * amdgpu_sync_fini - fini sync object subsystem

 *

 * Free the slab allocator.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Enable pflip interrupts */

 Disable pflip interrupts */

/**

 * dce_v11_0_page_flip - pageflip callback.

 *

 * @adev: amdgpu_device pointer

 * @crtc_id: crtc to cleanup pageflip on

 * @crtc_base: new address of the crtc (GPU MC address)

 * @async: asynchronous flip

 *

 * Triggers the actual pageflip by updating the primary

 * surface base address.

 flip immediate for async, default is vsync */

 update pitch */

 update the scanout addresses */

 writing to the low address triggers the update */

 post the write */

/**

 * dce_v11_0_hpd_sense - hpd sense callback.

 *

 * @adev: amdgpu_device pointer

 * @hpd: hpd (hotplug detect) pin

 *

 * Checks if a digital monitor is connected (evergreen+).

 * Returns true if connected, false if not connected.

/**

 * dce_v11_0_hpd_set_polarity - hpd set polarity callback.

 *

 * @adev: amdgpu_device pointer

 * @hpd: hpd (hotplug detect) pin

 *

 * Set the polarity of the hpd pin (evergreen+).

/**

 * dce_v11_0_hpd_init - hpd setup callback.

 *

 * @adev: amdgpu_device pointer

 *

 * Setup the hpd pins used by the card (evergreen+).

 * Enable the pin, set the polarity, and enable the hpd interrupts.

			/* don't try to enable hpd on eDP or LVDS avoid breaking the

			 * aux dp channel on imac and help (but not completely fix)

			 * https://bugzilla.redhat.com/show_bug.cgi?id=726143

			 * also avoid interrupt storms during dpms.

/**

 * dce_v11_0_hpd_fini - hpd tear down callback.

 *

 * @adev: amdgpu_device pointer

 *

 * Tear down the hpd pins used by the card (evergreen+).

 * Disable the hpd interrupts.

 Lockout access through VGA aperture*/

 disable VGA render */

Disable VGA render and enabled crtc, if has DCE engine*/

Disable crtc*/

 LVDS/eDP FMT is set up by atom */

 not needed for analog */

 XXX sort out optimal dither settings */

 XXX sort out optimal dither settings */

 XXX sort out optimal dither settings */

 not needed */

 display watermark setup */

/**

 * dce_v11_0_line_buffer_adjust - Set up the line buffer

 *

 * @adev: amdgpu_device pointer

 * @amdgpu_crtc: the selected display controller

 * @mode: the current display mode on the selected display

 * controller

 *

 * Setup up the line buffer allocation for

 * the selected display controller (CIK).

 * Returns the line buffer size in pixels.

	/*

	 * Line Buffer Setup

	 * There are 6 line buffers, one for each display controllers.

	 * There are 3 partitions per LB. Select the number of partitions

	 * to enable based on the display width.  For display widths larger

	 * than 4096, you need use to use 2 display controllers and combine

	 * them using the stereo blender.

 controller not enabled, so no lb used */

/**

 * cik_get_number_of_dram_channels - get the number of dram channels

 *

 * @adev: amdgpu_device pointer

 *

 * Look up the number of video ram channels (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the number of dram channels

 number of dram channels */

 bandwidth per dram data pin in kHz */

 engine clock in kHz */

 display clock in kHz */

 viewport width */

 active display time in ns */

 blank time in ns */

 mode is interlaced */

 vertical scale ratio */

 number of active crtcs */

 bytes per pixel display + overlay */

 line buffer allocated to pipe */

 vertical scaler taps */

/**

 * dce_v11_0_dram_bandwidth - get the dram bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the raw dram bandwidth (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the dram bandwidth in MBytes/s

 Calculate raw DRAM Bandwidth */

 0.7 */

/**

 * dce_v11_0_dram_bandwidth_for_display - get the dram bandwidth for display

 *

 * @wm: watermark calculation data

 *

 * Calculate the dram bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the dram bandwidth for display in MBytes/s

 Calculate DRAM Bandwidth and the part allocated to display. */

 0.3 to 0.7 */

 XXX worse case value 0.3 */

/**

 * dce_v11_0_data_return_bandwidth - get the data return bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the data return bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the data return bandwidth in MBytes/s

 Calculate the display Data return Bandwidth */

 0.8 */

/**

 * dce_v11_0_dmif_request_bandwidth - get the dmif bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the dmif bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the dmif bandwidth in MBytes/s

 Calculate the DMIF Request Bandwidth */

 0.8 */

/**

 * dce_v11_0_available_bandwidth - get the min available bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the min available bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the min available bandwidth in MBytes/s

 Calculate the Available bandwidth. Display can use this temporarily but not in average. */

/**

 * dce_v11_0_average_bandwidth - get the average available bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the average available bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the average available bandwidth in MBytes/s

	/* Calculate the display mode Average Bandwidth

	 * DisplayMode should contain the source and destination dimensions,

	 * timing, etc.

/**

 * dce_v11_0_latency_watermark - get the latency watermark

 *

 * @wm: watermark calculation data

 *

 * Calculate the latency watermark (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the latency watermark in ns

 First calculate the latency in ns */

 2000 ns. */

 dc pipe latency */

/**

 * dce_v11_0_average_bandwidth_vs_dram_bandwidth_for_display - check

 * average and available dram bandwidth

 *

 * @wm: watermark calculation data

 *

 * Check if the display average bandwidth fits in the display

 * dram bandwidth (CIK).

 * Used for display watermark bandwidth calculations

 * Returns true if the display fits, false if not.

/**

 * dce_v11_0_average_bandwidth_vs_available_bandwidth - check

 * average and available bandwidth

 *

 * @wm: watermark calculation data

 *

 * Check if the display average bandwidth fits in the display

 * available bandwidth (CIK).

 * Used for display watermark bandwidth calculations

 * Returns true if the display fits, false if not.

/**

 * dce_v11_0_check_latency_hiding - check latency hiding

 *

 * @wm: watermark calculation data

 *

 * Check latency hiding (CIK).

 * Used for display watermark bandwidth calculations

 * Returns true if the display fits, false if not.

/**

 * dce_v11_0_program_watermarks - program display watermarks

 *

 * @adev: amdgpu_device pointer

 * @amdgpu_crtc: the selected display controller

 * @lb_size: line buffer size

 * @num_heads: number of display controllers in use

 *

 * Calculate and program the display watermarks for the

 * selected display controller (CIK).

 watermark for high clocks */

 XXX: get this from fb config */

 set for high clocks */

 possibly force display priority to high */

 should really do this at mode validation time... */

 watermark for low clocks */

 XXX: get this from fb config */

 set for low clocks */

 possibly force display priority to high */

 should really do this at mode validation time... */

 select wm A */

 select wm B */

 restore original selection */

 save values for DPM */

 Save number of lines the linebuffer leads before the scanout */

/**

 * dce_v11_0_bandwidth_update - program display watermarks

 *

 * @adev: amdgpu_device pointer

 *

 * Calculate and program the display watermarks and line

 * buffer allocation (CIK).

 program the speaker allocation */

 set HDMI mode */

 stereo */

 disable audio.  it will be set up later */

 XXX remove once we switch to ip funcs */

/*

 * update the N and CTS parameters for a given pixel clock rate

/*

 * build a HDMI Video Info Frame

 XXX two dtos; generally use dto0 for hdmi */

	/* Express [24MHz / target pixel clock] as an exact rational

	 * number (coefficient of two integer numbers.  DCCG_AUDIO_DTOx_PHASE

	 * is the numerator, DCCG_AUDIO_DTOx_MODULE is the denominator

/*

 * update the info frames with the data from the current display mode

 Silent, r600_hdmi_enable will raise WARN for us */

 hdmi deep color mode general control packets setup, if bpc > 8 */

 disable audio prior to setting up hw */

 send null packets when required */

 send null packets when required */

 send general control packets */

 send general control packets every frame */

 enable audio info frames (frames won't be set until audio is enabled) */

 required for audio info values to be updated */

 required for audio info values to be updated */

 anything other than 0 */

 unset HDMI_GC_AVMUTE */

 set the default audio delay */

 should be suffient for all audio modes and small enough for all hblanks */

 allow 60958 channel status fields to be updated */

 clear SW CTS value */

 select SW CTS value */

 allow hw to sent ACR packets when required */

 enable AVI info frames */

 required for audio info values to be updated */

 send audio packets */

 enable audio after to setting up hw */

 Silent, r600_hdmi_enable will raise WARN for us */

 DCE11 has audio blocks tied to DIG encoders */

 no fb bound */

	/* If atomic, assume fb object is pinned & idle & fenced and

	 * just update base pointers

 Greater 8 bpc fb needs to bypass hw-lut to retain precision */

 Greater 8 bpc fb needs to bypass hw-lut to retain precision */

	/* Make sure surface address is updated at vertical blank rather than

	 * horizontal blank

	/*

	 * The LUT only has 256 slots for indexing by a 8 bpc fb. Bypass the LUT

	 * for > 8 bpc scanout to avoid truncation of fb indices to 8 msb's, to

	 * retain the full precision throughout the pipeline.

 set pageflip to happen anywhere in vblank interval */

 Bytes per pixel may have changed */

 XXX match this to the depth of the crtc fmt block, move to modeset? */

	/* XXX this only needs to be programmed once per crtc at startup,

	 * not sure where the best place for it is

/**

 * dce_v11_0_pick_pll - Allocate a PPLL for use by the crtc.

 *

 * @crtc: drm crtc

 *

 * Returns the PPLL (Pixel PLL) to be used by the crtc.  For DP monitors

 * a single PPLL can be used for all DP crtcs/encoders.  For non-DP

 * monitors a dedicated PPLL must be used.  If a particular board has

 * an external DP PLL, return ATOM_PPLL_INVALID to skip PLL programming

 * as there is no need to program the PLL itself.  If we are not able to

 * allocate a PLL, return ATOM_PPLL_INVALID to skip PLL programming to

 * avoid messing up an existing monitor.

 *

 * Asic specific PLL information

 *

 * DCE 10.x

 * Tonga

 * - PPLL1, PPLL2 are available for all UNIPHY (both DP and non-DP)

 * CI

 * - PPLL0, PPLL1, PPLL2 are available for all UNIPHY (both DP and non-DP) and DAC

 *

 skip PPLL programming if using ext clock */

 use the same PPLL for all DP monitors */

 use the same PPLL for all monitors with the same clock */

 XXX need to determine what plls are available on each DCE11 part */

 avivo cursor are offset into the total surface */

 turn off cursor */

 Make sure VBLANK and PFLIP interrupts are still enabled */

 adjust pm to dpms */

 disable crtc pair power gating before programming */

 disable the GRPH */

			/* one other crtc is using this pll don't turn

			 * off the pll

 disable the ppll */

 disable the ppll */

 SetPixelClock calculates the plls and ss values now */

 update the hw version fpr dpm */

 assign the encoder to the amdgpu crtc to avoid repeated lookups later */

 pick pll */

 if we can't get a PPLL for a non-DP encoder, fail */

 FIXME: not supported yet */

 HPD hotplug */

 allocate crtcs */

 setup afmt */

 disable vga render */

 init dig PHYs, disp eng pll */

 initialize hpd */

 turn on the BL */

 Wait a little for things to settle down */

 IRQ could occur when in initial stage */

 page flip completed. clean up */

 wakeup usersapce */

 vblank */

 vline */

 need to call this here rather than in prepare() since we need some crtc info */

 set scaler clears this on some chips */

 select the clock/data port if it uses a router */

 turn eDP panel on for mode set */

 this is needed for the pll/ss setup to work correctly in some cases */

 set up the FMT blocks */

 need to call this here as we need the crtc set up */

 these are handled by the primary encoders */

 no detect for TMDS/LVDS yet */

 see if we already added it */

 add a new one */

 these are handled by the primary encoders */

/*

 * Copyright 2009 Jerome Glisse.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sub license, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL

 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,

 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 * USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

/*

 * Authors:

 *    Jerome Glisse <glisse@freedesktop.org>

 *    Thomas Hellstrom <thomas-at-tungstengraphics-dot-com>

 *    Dave Airlie

/**

 * amdgpu_evict_flags - Compute placement flags

 *

 * @bo: The buffer object to evict

 * @placement: Possible destination(s) for evicted BO

 *

 * Fill in placement data when ttm_bo_evict() is called

 Don't handle scatter gather BOs */

 Object isn't an AMDGPU object so ignore */

 Move to system memory */

			/* Try evicting to the CPU inaccessible part of VRAM

			 * first, but only set GTT as busy placement, so this

			 * BO will be evicted to GTT rather than causing other

			 * BOs to be evicted from VRAM

 Move to GTT memory */

/**

 * amdgpu_ttm_map_buffer - Map memory into the GART windows

 * @bo: buffer object to map

 * @mem: memory object to map

 * @mm_cur: range to map

 * @num_pages: number of pages to map

 * @window: which GART window to use

 * @ring: DMA ring to use for the copy

 * @tmz: if we should setup a TMZ enabled mapping

 * @addr: resulting address inside the MC address space

 *

 * Setup one of the GART windows to access a specific piece of memory or return

 * the physical address for local memory.

 Map only what can't be accessed directly */

/**

 * amdgpu_ttm_copy_mem_to_mem - Helper function for copy

 * @adev: amdgpu device

 * @src: buffer/address where to read from

 * @dst: buffer/address where to write to

 * @size: number of bytes to copy

 * @tmz: if a secure copy should be used

 * @resv: resv object to sync to

 * @f: Returns the last fence if multiple jobs are submitted.

 *

 * The function copies @size bytes from {src->mem + src->offset} to

 * {dst->mem + dst->offset}. src->bo and dst->bo could be same BO for a

 * move and different for a BO to BO copy.

 *

		/* Copy size cannot exceed GTT_MAX_BYTES. So if src or dst

		 * begins at an offset, then adjust the size accordingly

 Map src to window 0 and dst to window 1. */

/*

 * amdgpu_move_blit - Copy an entire buffer to another buffer

 *

 * This is a helper called by amdgpu_bo_move() and amdgpu_move_vram_ram() to

 * help move buffers to and from VRAM.

 clear the space being freed */

 Always block for VM page tables before committing the new location */

/*

 * amdgpu_mem_visible - Check that memory can be accessed by ttm_bo_move_memcpy

 *

 * Called by amdgpu_bo_move()

 ttm_resource_ioremap only supports contiguous memory */

/*

 * amdgpu_bo_move - Move a buffer object to a new memory location

 *

 * Called by ttm_bo_handle_move_mem()

 Can't move a pinned BO */

 Nothing to save here */

		/* amdgpu_bo_fault_reserve_notify will re-set this if the CPU

		 * accesses the BO after it's moved.

 Check that all memory is CPU accessible */

 update statistics */

/*

 * amdgpu_ttm_io_mem_reserve - Reserve a block of memory during a fault

 *

 * Called by ttm_mem_io_reserve() ultimately via ttm_bo_vm_fault()

 system memory */

 check if it's visible */

/**

 * amdgpu_ttm_domain_start - Returns GPU start address

 * @adev: amdgpu device object

 * @type: type of the memory

 *

 * Returns:

 * GPU start address of a memory domain

/*

 * TTM backend functions.

/*

 * amdgpu_ttm_tt_get_user_pages - get device accessible pages that back user

 * memory and start HMM tracking CPU page table update

 *

 * Calling function must call amdgpu_ttm_tt_userptr_range_done() once and only

 * once afterwards to stop HMM tracking

 Another get_user_pages is running at the same time?? */

 Happens during process shutdown */

/*

 * amdgpu_ttm_tt_userptr_range_done - stop HMM track the CPU page table change

 * Check if the pages backing this ttm range have been invalidated

 *

 * Returns: true if pages are still valid

		/*

		 * FIXME: Must always hold notifier_lock for this, and must

		 * not ignore the return code.

/*

 * amdgpu_ttm_tt_set_user_pages - Copy pages in, putting old pages as necessary.

 *

 * Called by amdgpu_cs_list_validate(). This creates the page list

 * that backs user memory and will ultimately be mapped into the device

 * address space.

/*

 * amdgpu_ttm_tt_pin_userptr - prepare the sg table with the user pages

 *

 * Called by amdgpu_ttm_backend_bind()

 Allocate an SG array and squash pages into it */

 Map SG to device */

 convert SG to linear array of pages and dma addresses */

/*

 * amdgpu_ttm_tt_unpin_userptr - Unpin and unmap userptr pages

 double check that we don't free the table twice */

 unmap the pages mapped to the device */

		/* The memory type of the first page defaults to UC. Now

		 * modify the memory type to NC from the second page of

		 * the BO onward.

/*

 * amdgpu_ttm_backend_bind - Bind GTT memory

 *

 * Called by ttm_tt_bind() on behalf of ttm_bo_handle_move_mem().

 * This handles binding GTT memory to the device address space.

 compute PTE flags relevant to this BO memory */

 bind pages into GART page tables */

/*

 * amdgpu_ttm_alloc_gart - Make sure buffer object is accessible either

 * through AGP or GART aperture.

 *

 * If bo is accessible through AGP aperture, then use AGP aperture

 * to access bo; otherwise allocate logical space in GART aperture

 * and map bo to GART aperture.

 allocate GART space */

 compute PTE flags for this buffer object */

 Bind pages */

/*

 * amdgpu_ttm_recover_gart - Rebind GTT pages

 *

 * Called by amdgpu_gtt_mgr_recover() from amdgpu_device_reset() to

 * rebind GTT pages during a GPU reset.

/*

 * amdgpu_ttm_backend_unbind - Unbind GTT mapped pages

 *

 * Called by ttm_tt_unbind() on behalf of ttm_bo_move_ttm() and

 * ttm_tt_destroy().

 if the pages have userptr pinning then clear that first */

 unbind shouldn't be done for GDS/GWS/OA in ttm_bo_clean_mm */

/**

 * amdgpu_ttm_tt_create - Create a ttm_tt object for a given BO

 *

 * @bo: The buffer object to create a GTT ttm_tt object around

 * @page_flags: Page flags to be added to the ttm_tt object

 *

 * Called by ttm_tt_create().

 allocate space for the uninitialized page entries */

/*

 * amdgpu_ttm_tt_populate - Map GTT pages visible to the device

 *

 * Map the pages of a ttm_tt object to an address space visible

 * to the underlying device.

 user pages are bound by amdgpu_ttm_tt_pin_userptr() */

/*

 * amdgpu_ttm_tt_unpopulate - unmap GTT pages and unpopulate page arrays

 *

 * Unmaps pages of a ttm_tt object from the device address space and

 * unpopulates the page array backing it.

/**

 * amdgpu_ttm_tt_set_userptr - Initialize userptr GTT ttm_tt for the current

 * task

 *

 * @bo: The ttm_buffer_object to bind this userptr to

 * @addr:  The address in the current tasks VM space to use

 * @flags: Requirements of userptr object.

 *

 * Called by amdgpu_gem_userptr_ioctl() to bind userptr pages

 * to current task

 TODO: We want a separate TTM object type for userptrs */

 Set TTM_TT_FLAG_EXTERNAL before populate but after create. */

/*

 * amdgpu_ttm_tt_get_usermm - Return memory manager for ttm_tt object

/*

 * amdgpu_ttm_tt_affect_userptr - Determine if a ttm_tt object lays inside an

 * address range for the current task.

 *

	/* Return false if no part of the ttm_tt object lies within

	 * the range

/*

 * amdgpu_ttm_tt_is_userptr - Have the pages backing by userptr?

/*

 * amdgpu_ttm_tt_is_readonly - Is the ttm_tt object read only?

/**

 * amdgpu_ttm_tt_pde_flags - Compute PDE flags for ttm_tt object

 *

 * @ttm: The ttm_tt object to compute the flags for

 * @mem: The memory registry backing this ttm_tt object

 *

 * Figure out the flags to use for a VM PDE (Page Directory Entry).

/**

 * amdgpu_ttm_tt_pte_flags - Compute PTE flags for ttm_tt object

 *

 * @adev: amdgpu_device pointer

 * @ttm: The ttm_tt object to compute the flags for

 * @mem: The memory registry backing this ttm_tt object

 *

 * Figure out the flags to use for a VM PTE (Page Table Entry).

/*

 * amdgpu_ttm_bo_eviction_valuable - Check to see if we can evict a buffer

 * object.

 *

 * Return true if eviction is sensible. Called by ttm_mem_evict_first() on

 * behalf of ttm_bo_mem_force_space() which tries to evict buffer objects until

 * it can find space for a new object and by ttm_bo_force_list_clean() which is

 * used to clean out a memory space.

 Swapout? */

	/* If bo is a KFD BO, check if the bo belongs to the current process.

	 * If true, then return false as any KFD process needs all its BOs to

	 * be resident to run successfully

		/* Preemptible BOs don't own system resources managed by the

		 * driver (pages, VRAM, GART space). They point to resources

		 * owned by someone else (e.g. pageable memory in user mode

		 * or a DMABuf). They are used in a preemptible context so we

		 * can guarantee no deadlocks and good QoS in case of MMU

		 * notifiers or DMABuf move notifiers from the resource owner.

 Check each drm MM node individually */

/**

 * amdgpu_ttm_access_memory - Read or Write memory that backs a buffer object.

 *

 * @bo:  The buffer object to read/write

 * @offset:  Offset into buffer object

 * @buf:  Secondary buffer to write/read from

 * @len: Length in bytes of access

 * @write:  true if writing

 *

 * This is used to access VRAM that backs a buffer object via MMIO

 * access for debugging purposes.

 using MM to access rest vram and handle un-aligned address */

/*

 * Firmware Reservation functions

/**

 * amdgpu_ttm_fw_reserve_vram_fini - free fw reserved vram

 *

 * @adev: amdgpu_device pointer

 *

 * free fw reserved vram if it has been reserved.

/**

 * amdgpu_ttm_fw_reserve_vram_init - create bo vram reservation from fw

 *

 * @adev: amdgpu_device pointer

 *

 * create bo vram reservation from fw.

/*

 * Memoy training reservation functions

/**

 * amdgpu_ttm_training_reserve_vram_fini - free memory training reserved vram

 *

 * @adev: amdgpu_device pointer

 *

 * free memory training reserved vram if it has been reserved.

/*

 * reserve TMR memory at the top of VRAM which holds

 * IP Discovery data and is protected by PSP.

	/*

	 * Query reserved tmr size through atom firmwareinfo for Sienna_Cichlid and onwards for all

	 * the use cases (IP discovery/G6 memory training/profiling/diagnostic data.etc)

	 *

	 * Otherwise, fallback to legacy approach to check and reserve tmr block for ip

	 * discovery data and G6 memory training data respectively

 reserve vram for mem train according to TMR location */

/*

 * amdgpu_ttm_init - Init the memory management (ttm) as well as various

 * gtt/vram related fields.

 *

 * This initializes all of the memory space pools that the TTM layer

 * will need such as the GTT space (system memory mapped to the device),

 * VRAM (on-board memory), and on-chip memories (GDS, GWS, OA) which

 * can be mapped per VMID.

 No others user of address space so set it to 0 */

 Initialize VRAM pool with all of VRAM divided into pages */

 Reduce size of CPU-visible VRAM if requested */

 Change the size here instead of the init above so only lpfn is affected */

	/*

	 *The reserved vram for firmware must be pinned to the specified

	 *place on the VRAM, so reserve it early.

	/*

	 * only NAVI10 and onwards ASIC support for IP discovery.

	 * If IP discovery enabled, a block of memory should be

	 * reserved for IP discovey.

	/* allocate memory as required for VGA

	 * This is used for VGA emulation and pre-OS scanout buffers to

	 * avoid display artifacts while transitioning between pre-OS

	/* Compute GTT size, either bsaed on 3/4th the size of RAM size

 Initialize GTT memory pool */

 Initialize preemptible memory pool */

 Initialize various on-chip memory pools */

/*

 * amdgpu_ttm_fini - De-initialize the TTM memory pools

 return the stolen vga memory back to VRAM */

 return the IP Discovery TMR memory back to VRAM */

/**

 * amdgpu_ttm_set_buffer_funcs_status - enable/disable use of buffer functions

 *

 * @adev: amdgpu_device pointer

 * @enable: true when we can use buffer functions.

 *

 * Enable/disable use of buffer functions during suspend/resume. This should

 * only be called at bootup or when userspace isn't running.

 this just adjusts TTM size idea, which sets lpfn to the correct value */

 for IB padding */

/**

 * amdgpu_ttm_evict_resources - evict memory buffers

 * @adev: amdgpu device object

 * @mem_type: evicted BO's memory type

 *

 * Evicts all @mem_type buffers on the lru list of the memory type.

 *

 * Returns:

 * 0 for success or a negative error code on failure.

/*

 * amdgpu_ttm_vram_read - Linear read access to VRAM

 *

 * Accesses VRAM via MMIO for debugging purposes.

/*

 * amdgpu_ttm_vram_write - Linear write access to VRAM

 *

 * Accesses VRAM via MMIO for debugging purposes.

/*

 * amdgpu_iomem_read - Virtual read access to GPU mapped memory

 *

 * This function is used to read memory that has been mapped to the

 * GPU and the known addresses are not physical addresses but instead

 * bus addresses (e.g., what you'd put in an IB or ring buffer).

 retrieve the IOMMU domain if any for this device */

		/* Translate the bus address to a physical address.  If

		 * the domain is NULL it means there is no IOMMU active

		 * and the address translation is the identity

/*

 * amdgpu_iomem_write - Virtual write access to GPU mapped memory

 *

 * This function is used to write memory that has been mapped to the

 * GPU and the known addresses are not physical addresses but instead

 * bus addresses (e.g., what you'd put in an IB or ring buffer).

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 *

		/* for VI. JT2 should be the same as JT1, because:

			1, MEC2 and MEC1 use exactly same FW.

			2, JT2 is not pached but JT1 is.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Alex Deucher

/*

 * sDMA - System DMA

 * Starting with CIK, the GPU has new asynchronous

 * DMA engines.  These engines are used for compute

 * and gfx.  There are two DMA engines (SDMA0, SDMA1)

 * and each one supports 1 ring buffer used for gfx

 * and 2 queues used for compute.

 *

 * The programming model is very similar to the CP

 * (ring buffer, IBs, etc.), but sDMA has it's own

 * packet format that is different from the PM4 format

 * used by the CP. sDMA supports copying data, writing

 * embedded data, solid fills, and a number of other

 * things.  It also has support for tiling/detiling of

 * buffers.

/**

 * sdma_v3_0_init_microcode - load ucode images from disk

 *

 * @adev: amdgpu_device pointer

 *

 * Use the firmware interface to load the ucode images into

 * the driver (not loaded into hw).

 * Returns 0 on success, error on failure.

/**

 * sdma_v3_0_ring_get_rptr - get the current read pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Get the current rptr from the hardware (VI+).

 XXX check if swapping is necessary on BE */

/**

 * sdma_v3_0_ring_get_wptr - get the current write pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Get the current wptr from the hardware (VI+).

 XXX check if swapping is necessary on BE */

/**

 * sdma_v3_0_ring_set_wptr - commit the write pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Write the wptr back to the hardware (VI+).

 XXX check if swapping is necessary on BE */

/**

 * sdma_v3_0_ring_emit_ib - Schedule an IB on the DMA engine

 *

 * @ring: amdgpu ring pointer

 * @job: job to retrieve vmid from

 * @ib: IB object to schedule

 * @flags: unused

 *

 * Schedule an IB in the DMA ring (VI).

 IB packet must end on a 8 DW boundary */

 base must be 32 byte aligned */

/**

 * sdma_v3_0_ring_emit_hdp_flush - emit an hdp flush on the DMA ring

 *

 * @ring: amdgpu ring pointer

 *

 * Emit an hdp flush packet on the requested DMA ring.

 == */

 reference */

 mask */

 retry count, poll interval */

/**

 * sdma_v3_0_ring_emit_fence - emit a fence on the DMA ring

 *

 * @ring: amdgpu ring pointer

 * @addr: address

 * @seq: sequence number

 * @flags: fence related flags

 *

 * Add a DMA fence packet to the ring to write

 * the fence seq number and DMA trap packet to generate

 * an interrupt if needed (VI).

 write the fence */

 optionally write high bits as well */

 generate an interrupt */

/**

 * sdma_v3_0_gfx_stop - stop the gfx async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Stop the gfx async dma ring buffers (VI).

/**

 * sdma_v3_0_rlc_stop - stop the compute async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Stop the compute async dma queues (VI).

 XXX todo */

/**

 * sdma_v3_0_ctx_switch_enable - stop the async dma engines context switch

 *

 * @adev: amdgpu_device pointer

 * @enable: enable/disable the DMA MEs context switch.

 *

 * Halt or unhalt the async dma engines context switch (VI).

/**

 * sdma_v3_0_enable - stop the async dma engines

 *

 * @adev: amdgpu_device pointer

 * @enable: enable/disable the DMA MEs.

 *

 * Halt or unhalt the async dma engines (VI).

/**

 * sdma_v3_0_gfx_resume - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the gfx DMA ring buffers and enable them (VI).

 * Returns 0 for success, error for failure.

 SDMA GFX */

 Set ring buffer size in dwords */

 Initialize the ring buffer's read and write pointers */

 set the wb address whether it's enabled or not */

 setup the wptr shadow polling */

wptr polling is not enogh fast, directly clean the wptr register */

 enable DMA RB */

 enable DMA IBs */

 unhalt the MEs */

 enable sdma ring preemption */

/**

 * sdma_v3_0_rlc_resume - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the compute DMA queues and enable them (VI).

 * Returns 0 for success, error for failure.

 XXX todo */

/**

 * sdma_v3_0_start - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the DMA engines and enable them (VI).

 * Returns 0 for success, error for failure.

 disable sdma engine before programing it */

 start the gfx rings and rlc compute queues */

/**

 * sdma_v3_0_ring_test_ring - simple async dma engine test

 *

 * @ring: amdgpu_ring structure holding ring information

 *

 * Test the DMA engine by writing using it to write an

 * value to memory. (VI).

 * Returns 0 for success, error for failure.

/**

 * sdma_v3_0_ring_test_ib - test an IB on the DMA engine

 *

 * @ring: amdgpu_ring structure holding ring information

 * @timeout: timeout value in jiffies, or MAX_SCHEDULE_TIMEOUT

 *

 * Test a simple IB in the DMA ring (VI).

 * Returns 0 on success, error on failure.

/**

 * sdma_v3_0_vm_copy_pte - update PTEs by copying them from the GART

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @src: src addr to copy from

 * @count: number of page entries to update

 *

 * Update PTEs by copying them from the GART using sDMA (CIK).

 src/dst endian swap */

/**

 * sdma_v3_0_vm_write_pte - update PTEs by writing them manually

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @value: dst addr to write into pe

 * @count: number of page entries to update

 * @incr: increase next addr by incr bytes

 *

 * Update PTEs by writing them manually using sDMA (CIK).

/**

 * sdma_v3_0_vm_set_pte_pde - update the page tables using sDMA

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @addr: dst addr to write into pe

 * @count: number of page entries to update

 * @incr: increase next addr by incr bytes

 * @flags: access flags

 *

 * Update the page tables using sDMA (CIK).

 for physically contiguous pages (vram) */

 dst addr */

 mask */

 value */

 increment size */

 number of entries */

/**

 * sdma_v3_0_ring_pad_ib - pad the IB to the required number of dw

 *

 * @ring: amdgpu_ring structure holding ring information

 * @ib: indirect buffer to fill with padding

 *

/**

 * sdma_v3_0_ring_emit_pipeline_sync - sync the pipeline

 *

 * @ring: amdgpu_ring pointer

 *

 * Make sure all previous operations are completed (CIK).

 wait for idle */

 equal */

 reference */

 mask */

 retry count, poll interval */

/**

 * sdma_v3_0_ring_emit_vm_flush - cik vm flush using sDMA

 *

 * @ring: amdgpu_ring pointer

 * @vmid: vmid number to use

 * @pd_addr: address

 *

 * Update the page table base and flush the VM TLB

 * using sDMA (VI).

 wait for flush */

 always */

 reference */

 mask */

 retry count, poll interval */

 SDMA trap event */

 SDMA Privileged inst */

 SDMA Privileged inst */

 Wait a little for things to settle down */

 XXX compute */

 XXX compute */

 XXX compute */

 XXX compute */

 AMD_CG_SUPPORT_SDMA_MGCG */

 AMD_CG_SUPPORT_SDMA_LS */

 sdma_v3_0_ring_emit_hdp_flush */

 hdp invalidate */

 sdma_v3_0_ring_emit_pipeline_sync */

 sdma_v3_0_ring_emit_vm_flush */

 sdma_v3_0_ring_emit_fence x3 for user fence, vm fence */

 sdma_v3_0_ring_emit_ib */

/**

 * sdma_v3_0_emit_copy_buffer - copy buffer using the sDMA engine

 *

 * @ib: indirect buffer to copy to

 * @src_offset: src GPU address

 * @dst_offset: dst GPU address

 * @byte_count: number of bytes to xfer

 * @tmz: unused

 *

 * Copy GPU buffers using the DMA engine (VI).

 * Used by the amdgpu ttm implementation to move pages if

 * registered as the asic copy callback.

 src/dst endian swap */

/**

 * sdma_v3_0_emit_fill_buffer - fill buffer using the sDMA engine

 *

 * @ib: indirect buffer to copy to

 * @src_data: value to write to buffer

 * @dst_offset: dst GPU address

 * @byte_count: number of bytes to xfer

 *

 * Fill GPU buffers using the DMA engine (VI).

 not 0x3fffff due to HW limitation */

 not 0x3fffff due to HW limitation */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 set dummy read address to dummy page address */

 SPDX-License-Identifier: GPL-2.0-only

/*

 * Copyright (c) 2010 Red Hat Inc.

 * Author : Dave Airlie <airlied@redhat.com>

 *

 * ATPX support for both Intel/ATI

 handle for device - and atpx */

 structure size in bytes (includes size field) */

 version */

 supported functions bit vector */

 structure size in bytes (includes size field) */

 which flags are valid */

 flags */

/**

 * amdgpu_atpx_call - call an ATPX method

 *

 * @handle: acpi handle

 * @function: the ATPX function to execute

 * @params: ATPX function params

 *

 * Executes the requested ATPX function (all asics).

 * Returns a pointer to the acpi output buffer.

 We need a second fake parameter */

 Fail only if calling the method fails and ATPX is supported */

/**

 * amdgpu_atpx_parse_functions - parse supported functions

 *

 * @f: supported functions struct

 * @mask: supported functions mask from ATPX

 *

 * Use the supported functions mask from ATPX function

 * ATPX_FUNCTION_VERIFY_INTERFACE to determine what functions

 * are supported (all asics).

/**

 * amdgpu_atpx_validate_functions - validate ATPX functions

 *

 * @atpx: amdgpu atpx struct

 *

 * Validate that required functions are enabled (all asics).

 * returns 0 on success, error on failure.

 if separate mux flag is set, mux controls are required */

 if any outputs are muxed, mux controls are required */

 some bioses set these bits rather than flagging power_cntl as supported */

			/*

			 * Disable legacy PM methods only when pcie port PM is usable,

			 * otherwise the device might fail to power off or power on.

/**

 * amdgpu_atpx_verify_interface - verify ATPX

 *

 * @atpx: amdgpu atpx struct

 *

 * Execute the ATPX_FUNCTION_VERIFY_INTERFACE ATPX function

 * to initialize ATPX and determine what features are supported

 * (all asics).

 * returns 0 on success, error on failure.

 TODO: check version? */

/**

 * amdgpu_atpx_set_discrete_state - power up/down discrete GPU

 *

 * @atpx: atpx info struct

 * @state: discrete GPU state (0 = power down, 1 = power up)

 *

 * Execute the ATPX_FUNCTION_POWER_CONTROL ATPX function to

 * power down/up the discrete GPU (all asics).

 * Returns 0 on success, error on failure.

 200ms delay is required after off */

/**

 * amdgpu_atpx_switch_disp_mux - switch display mux

 *

 * @atpx: atpx info struct

 * @mux_id: mux state (0 = integrated GPU, 1 = discrete GPU)

 *

 * Execute the ATPX_FUNCTION_DISPLAY_MUX_CONTROL ATPX function to

 * switch the display mux between the discrete GPU and integrated GPU

 * (all asics).

 * Returns 0 on success, error on failure.

/**

 * amdgpu_atpx_switch_i2c_mux - switch i2c/hpd mux

 *

 * @atpx: atpx info struct

 * @mux_id: mux state (0 = integrated GPU, 1 = discrete GPU)

 *

 * Execute the ATPX_FUNCTION_I2C_MUX_CONTROL ATPX function to

 * switch the i2c/hpd mux between the discrete GPU and integrated GPU

 * (all asics).

 * Returns 0 on success, error on failure.

/**

 * amdgpu_atpx_switch_start - notify the sbios of a GPU switch

 *

 * @atpx: atpx info struct

 * @mux_id: mux state (0 = integrated GPU, 1 = discrete GPU)

 *

 * Execute the ATPX_FUNCTION_GRAPHICS_DEVICE_SWITCH_START_NOTIFICATION ATPX

 * function to notify the sbios that a switch between the discrete GPU and

 * integrated GPU has begun (all asics).

 * Returns 0 on success, error on failure.

/**

 * amdgpu_atpx_switch_end - notify the sbios of a GPU switch

 *

 * @atpx: atpx info struct

 * @mux_id: mux state (0 = integrated GPU, 1 = discrete GPU)

 *

 * Execute the ATPX_FUNCTION_GRAPHICS_DEVICE_SWITCH_END_NOTIFICATION ATPX

 * function to notify the sbios that a switch between the discrete GPU and

 * integrated GPU has ended (all asics).

 * Returns 0 on success, error on failure.

/**

 * amdgpu_atpx_switchto - switch to the requested GPU

 *

 * @id: GPU to switch to

 *

 * Execute the necessary ATPX functions to switch between the discrete GPU and

 * integrated GPU (all asics).

 * Returns 0 on success, error on failure.

/**

 * amdgpu_atpx_power_state - power down/up the requested GPU

 *

 * @id: GPU to power down/up

 * @state: requested power state (0 = off, 1 = on)

 *

 * Execute the necessary ATPX function to power down/up the discrete GPU

 * (all asics).

 * Returns 0 on success, error on failure.

 on w500 ACPI can't change intel gpu state */

/**

 * amdgpu_atpx_pci_probe_handle - look up the ATPX handle

 *

 * @pdev: pci device

 *

 * Look up the ATPX handles (all asics).

 * Returns true if the handles are found, false if not.

/**

 * amdgpu_atpx_init - verify the ATPX interface

 *

 * Verify the ATPX interface (all asics).

 * Returns 0 on success, error on failure.

 set up the ATPX handle */

 validate the atpx setup */

/**

 * amdgpu_atpx_get_client_id - get the client id

 *

 * @pdev: pci device

 *

 * look up whether we are the integrated or discrete GPU (all asics).

 * Returns the client id.

 HG _PR3 doesn't seem to work on this A+A weston board */

 Apply PX quirks */

/**

 * amdgpu_atpx_detect - detect whether we have PX

 *

 * Check if we have a PX system (all asics).

 * Returns true if we have a PX system, false if not.

/**

 * amdgpu_register_atpx_handler - register with vga_switcheroo

 *

 * Register the PX callbacks with vga_switcheroo (all asics).

 detect if we have any ATPX + 2 VGA in the system */

/**

 * amdgpu_unregister_atpx_handler - unregister with vga_switcheroo

 *

 * Unregister the PX callbacks with vga_switcheroo (all asics).

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Author: Huang Rui

 *

	/* Check sOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Wait for bootloader to signify that is ready having bit 31 of C2PMSG_35 set to 1 */

 Copy PSP System Driver binary to memory */

 Provide the sys driver to bootloader */

 there might be handshake issue with hardware which needs delay */

	/* Check sOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Wait for bootloader to signify that is ready having bit 31 of C2PMSG_35 set to 1 */

 Copy Secure OS binary to PSP memory */

 Provide the PSP secure OS to bootloader */

 there might be handshake issue with hardware which needs delay */

 allocate 4k Page of Local Frame Buffer memory for ring */

 Change IH ring for VMC */

 Change IH ring for UMC */

 Write low address of the ring to C2PMSG_102 */

 Write high address of the ring to C2PMSG_103 */

 No size initialization for sriov  */

 Write the ring initialization command to C2PMSG_101 */

 there might be hardware handshake issue which needs delay */

 Wait for response flag (bit 31) in C2PMSG_101 */

 Write low address of the ring to C2PMSG_69 */

 Write high address of the ring to C2PMSG_70 */

 Write size of ring to C2PMSG_71 */

 Write the ring initialization command to C2PMSG_64 */

 there might be hardware handshake issue which needs delay */

 Wait for response flag (bit 31) in C2PMSG_64 */

 Write the ring destroy command*/

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) */

send the mode 1 reset command*/

 send interrupt to PSP for SRIOV ring write pointer update */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 error codes */

/* The T_I2C_POLL_US is defined as follows:

 *

 * "Define a timer interval (t_i2c_poll) equal to 10 times the

 *  signalling period for the highest I2C transfer speed used in the

 *  system and supported by DW_apb_i2c. For instance, if the highest

 *  I2C data transfer mode is 400 kb/s, then t_i2c_poll is 25 us."  --

 * DesignWare DW_apb_i2c Databook, Version 1.21a, section 3.8.3.1,

 * page 56, with grammar and syntax corrections.

 *

 * Vcc for our device is at 1.8V which puts it at 400 kHz,

 * see Atmel AT24CM02 datasheet, section 8.3 DC Characteristics table, page 14.

 *

 * The procedure to disable the IP block is described in section

 * 3.8.3 Disabling DW_apb_i2c on page 56.

 do */

 while (reg_CKSVII2C_ic_clr_intr == 0) */

	/* The values of IC_MAX_SPEED_MODE are,

	 * 1: standard mode, 0 - 100 Kb/s,

	 * 2: fast mode, <= 400 Kb/s, or fast mode plus, <= 1000 Kb/s,

	 * 3: high speed mode, <= 3.4 Mb/s.

	/*

	 * Standard mode speed, These values are taken from SMUIO MAS,

	 * but are different from what is given is

	 * Synopsys spec. The values here are based on assumption

	 * that refclock is 100MHz

	 *

	 * Configuration for standard mode; Speed = 100kbps

	 * Scale linearly, for now only support standard speed clock

	 * This will work only with 100M ref clock

	 *

	 * TBD:Change the calculation to take into account ref clock values also.

	/* The IC_TAR::IC_TAR field is 10-bits wide.

	 * It takes a 7-bit or 10-bit addresses as an address,

	 * i.e. no read/write bit--no wire format, just the address.

Check if transmission is completed */

 This only checks if NAK is received and transaction got aborted */

 Check for stop due to NACK */

 If slave is not present */

 wait till some data is there in RXFIFO */

 Poll for some byte in RXFIFO */

/**

 * smu_v11_0_i2c_transmit - Send a block of data over the I2C bus to a slave device.

 *

 * @control: I2C adapter reference

 * @address: The I2C address of the slave device.

 * @data: The data to transmit over the bus.

 * @numbytes: The amount of data to transmit.

 * @i2c_flag: Flags for transmission

 *

 * Returns 0 on success or error.

 Set the I2C slave address */

 Enable I2C */

 Clear status bits */

			/*

			 * We waited for too long for the transmission

			 * FIFO to become not-full.  Exit the loop

			 * with error.

			/* Final message, final byte, must generate a

			 * STOP to release the bus, i.e. don't hold

			 * SCL low.

 Write */

 Record that the bytes were transmitted */

 Any error, no point in proceeding */

/**

 * smu_v11_0_i2c_receive - Receive a block of data over the I2C bus from a slave device.

 *

 * @control: I2C adapter reference

 * @address: The I2C address of the slave device.

 * @data: Placeholder to store received data.

 * @numbytes: The amount of data to transmit.

 * @i2c_flag: Flags for transmission

 *

 * Returns 0 on success or error.

 Set the I2C slave address */

 Enable I2C */

 Prepare transaction */

 Read */

		/* Final message, final byte, must generate a STOP

		 * to release the bus, i.e. don't hold SCL low.

 Any error, no point in proceeding */

 Record that the bytes were received */

 Enable I2C engine; */

 Abort previous transaction */

		/*

		 * Nobody is using I2C engine, but engine remains active because

		 * someone missed to send STOP

 Nobody is using I2C engine */

 Keep reading activity bit until it's cleared */

 Disable clock gating */

 Disable I2C */

 Configure I2C to operate as master and in standard mode */

 Initialize the clock to 50 kHz default */

		/* Nobody is using the I2C engine, yet it remains

		 * active, possibly because someone missed to send

		 * STOP.

 Restore clock gating */

	/*

	 * TODO Reenabling clock gating seems to break subsequent SMU operation

	 *      on the I2C bus. My guess is that SMU doesn't disable clock gating like

	 *      we do here before working with the bus. So for now just don't restore

	 *      it but later work with SMU to see if they have this issue and can

	 *      update their code appropriately

 smu_v11_0_i2c_set_clock_gating(control, true); */

 Send  PPSMC_MSG_RequestI2CBus */

 Send  PPSMC_MSG_ReleaseI2CBus */

**************************** I2C GLUE ****************************/

	/* From the client's point of view, this sequence of

	 * messages-- the array i2c_msg *msg, is a single transaction

	 * on the bus, starting with START and ending with STOP.

	 *

	 * The client is welcome to send any sequence of messages in

	 * this array, as processing under this function here is

	 * striving to be agnostic.

	 *

	 * Record the first address and direction we see. If either

	 * changes for a subsequent message, generate ReSTART. The

	 * DW_apb_i2c databook, v1.21a, specifies that ReSTART is

	 * generated when the direction changes, with the default IP

	 * block parameter settings, but it doesn't specify if ReSTART

	 * is generated when the address changes (possibly...). We

	 * don't rely on the default IP block parameter settings as

	 * the block is shared and they may change.

			/* Set the STOP bit on the last message, so

			 * that the IP block generates a STOP after

			 * the last byte of the message.

/*

 * Keep this for future unit test if bugs arise

 Write 0xde to address 0x0000 on the EEPROM */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Author: Huang Rui

 *

/*

 * Due to DF Cstate management centralized to PMFW, the firmware

 * loading sequence will be updated as below:

 *   - Load KDB

 *   - Load SYS_DRV

 *   - Load tOS

 *   - Load PMFW

 *   - Setup TMR

 *   - Load other non-psp fw

 *   - Load ASD

 *   - Load XGMI/RAS/HDCP/DTM TA if any

 *

 * This new sequence is required for

 *   - Arcturus and onwards

/*

 * Helper funciton to query psp runtime database entry

 *

 * @adev: amdgpu_device pointer

 * @entry_type: the type of psp runtime database entry

 * @db_entry: runtime database entry pointer

 *

 * Return false if runtime database doesn't exit or entry is invalid

 * or true if the specific database entry is found, and copy to @db_entry

 read runtime db header from vram */

 runtime db doesn't exist, exit */

 read runtime database entry from vram */

 invalid db entry count, exit */

 look up for requested entry type */

 invalid db entry size */

 read runtime database entry */

			/* If psp runtime database exists, then

			 * only enable two stage memory training

			 * when TWO_STAGE_DRAM_TRAINING bit is set

		/* If psp runtime database doesn't exist or

		 * is invalid, force enable two stage memory

		/*

		 * Shouldn't wait for timeout when err_event_athub occurs,

		 * because gpu reset thread triggered and lock resource should

		 * be released for psp resume sequence.

 We allow TEE_ERROR_NOT_SUPPORTED for VMR command and PSP_ERR_UNKNOWN_COMMAND in SRIOV */

	/* In some cases, psp response status is not 0 even there is no

	 * problem while the command is submitted. Some version of PSP FW

	 * doesn't write 0 to that field.

	 * So here we would like to only print a warning instead of an error

	 * during psp initialization to avoid breaking hw_init and it doesn't

	 * return -EINVAL.

 Issue LOAD TOC cmd to PSP to part toc and calculate tmr size needed */

 Copy toc to psp firmware private buffer */

 Set up Trusted Memory Region */

	/*

	 * According to HW engineer, they prefer the TMR address be "naturally

	 * aligned" , e.g. the start address be an integer divide of TMR size.

	 *

	 * Note: this memory need be reserved till the driver

	 * uninitializes.

	/* For ASICs support RLC autoload, psp will parse the toc

	/* For Navi12 and CHIP_SIENNA_CICHLID SRIOV, do not set up TMR.

	 * Already set up by host driver.

 free TMR memory buffer */

	/* If PSP version doesn't match ASD version, asd loading will be failed.

	 * add workaround to bypass it for sriov now.

	 * TODO: add version check to make it common

	/*

	* Allocate 16k memory aligned to 4k from Frame Buffer (local

	* physical) for ta to host memory

 XGMI TA unload currently is not supported on Arcturus/Aldebaran A+A */

 free xgmi shared memory */

 Load XGMI TA */

 Initialize XGMI session */

 Invoke xgmi ta to get hive id */

 Invoke xgmi ta to get the node id */

/*

 * Chips that support extended topology information require the driver to

 * reflect topology information in the opposite direction.  This is

 * because the TA has already exceeded its link record limit and if the

 * TA holds bi-directional information, the driver would have to do

 * multiple fetches instead of just two.

			/*

			 * prevent 0 num_links value re-reflection since reflection

			 * criteria is based on num_hops (direct or indirect).

			 *

 Fill in the shared memory with topology information as input */

 Invoke xgmi ta to get the topology information */

 Read the output topology information from the shared memory */

 extended data will either be 0 or equal to non-extended data */

 non-extended data gets everything here so no need to update */

 Invoke xgmi ta again to get the link information */

 accumulate num_links on extended data */

 reflect the topology information for bi-directionality */

 Invoke xgmi ta to set topology information */

 ras begin

	/*

	 * TODO: bypass the loading in sriov for now

	/*

	 * TODO: bypass the terminate in sriov for now

 free ras shared memory */

	/*

	 * TODO: bypass the initialize in sriov for now

		/* query GECC enablement status from boot config

		 * boot_cfg: 1: GECC is enabled or 0: GECC is disabled

				/* disable GECC in next boot cycle if ras is

				 * disabled by module parameter amdgpu_ras_enable

				 * and/or amdgpu_ras_mask, or boot_config_get call

				 * is failed

				/* enable GECC in next boot cycle if it is disabled

				 * in boot config, or force enable GECC if failed to

				 * get boot configuration

	/* If err_event_athub occurs error inject was successful, however

 ras end

 HDCP start

	/*

	 * TODO: bypass the initialize in sriov for now

	/*

	 * TODO: bypass the loading in sriov for now

	/*

	 * TODO: bypass the terminate in sriov for now

 free hdcp shared memory */

 HDCP end

 DTM start

	/*

	 * TODO: bypass the initialize in sriov for now

	/*

	 * TODO: bypass the loading in sriov for now

	/*

	 * TODO: bypass the terminate in sriov for now

 free dtm shared memory */

 DTM end

 RAP start

	/*

	 * TODO: bypass the initialize in sriov for now

 free rap shared memory */

 RAP end

 securedisplay start */

	/*

	 * TODO: bypass the initialize in sriov for now

	/*

	 * TODO:bypass the terminate in sriov for now

 free securedisplay shared memory */

 SECUREDISPLAY end */

	/*

	 * For ASICs with DF Cstate management centralized

	 * to PMFW, TMR setup should be performed after PMFW

	 * loaded and before other non-psp firmware loaded.

skip ucode loading in SRIOV VF */

 skip mec JT when autoload is enabled */

			/* PSP only receive one SDMA fw for sienna_cichlid,

 Start rlc autoload after psp recieved all the gfx firmware */

 should not destroy ring, only stop */

	/*

	 * all cleanup jobs (xgmi terminate, ras terminate,

	 * ring destroy, cmd/fence/fw buffers destory,

	 * psp->cmd destory) are delayed to psp_hw_fini

	/*

	 * This sequence is just used on hw_init only once, no need on

	 * resume.

		/* Warning the XGMI seesion initialize failure

		 * Instead of stop driver initialization

 KM (GPCOM) prepare write pointer */

 Update KM RB frame pointer to new frame */

 write_frame ptr increments by size of rb_frame in bytes */

 psp_write_ptr_reg increments by size of rb_frame in DWORDs */

 Check invalid write_frame ptr address */

 Initialize KM RB frame */

 Update KM RB frame */

 Update the write Pointer in DWORDs */

 Load alternate PSP SOS FW */

 LFB address which is aligned to 1MB boundary per PSP request */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 HW has more IP blocks,  only initialized the blocke beend by our driver  */

 In unit of dword doorbell */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Vega, Raven, Arcturus */

 Vega */

 Raven */

 Renoir, Arcturus */

/*

 * Indirect registers accessor

 todo */

 todo */

 APU vbios image is part of sbios image */

 set rom index to 0 */

 read out the rom data */

/**

 * soc15_program_register_sequence - program an array of registers.

 *

 * @adev: amdgpu_device pointer

 * @regs: pointer to the register array

 * @array_size: size of the register array

 *

 * Programs an array or registers with and and or masks.

 * This is a helper for setting golden registers.

 avoid NBIF got stuck when do RAS recovery in BACO reset */

 re-enable doorbell interrupt after BACO exit */

 If connected to cpu, driver only support mode2 */

			/*

			 * 1. PMFW version > 0x284300: all cases use baco

			 * 2. PMFW version <= 0x284300: only sGPU w/o RAS use baco

		 /*

		 * 1.connected to cpu: driver issue mode2 reset

		 * 2.discret gpu: driver issue mode1 reset

 original raven doesn't have full asic reset */

/*static int soc15_set_uvd_clock(struct amdgpu_device *adev, u32 clock,

			u32 cntl_reg, u32 status_reg)

{

	return 0;

	/*int r;



	r = soc15_set_uvd_clock(adev, vclk, ixCG_VCLK_CNTL, ixCG_VCLK_STATUS);

	if (r)

		return r;



	r = soc15_set_uvd_clock(adev, dclk, ixCG_DCLK_CNTL, ixCG_DCLK_STATUS);

 todo */

 todo */

 Set IP register base before any HW register access */

		/* It's safe to do ip discovery here for Renior,

	/* init soc15 reg base early enough so we can

	 * request request full access for sriov before

 change this when we implement soft reset */

	/* This reports 0 on APUs, so return to avoid writing/reading registers

	 * that may or may not be different from their GPU counterparts

 Set the 2 events that we wish to watch, defined above */

 Reg 40 is # received msgs */

 Reg 104 is # of posted requests sent */

 Write to enable desired perf counters */

	/* Zero out and enable the perf counters

	 * Write 0x5:

	 * Bit 0 = Start all counters(1)

	 * Bit 2 = Global counter reset enable(1)

	/* Load the shadow and disable the perf counters

	 * Write 0x2:

	 * Bit 0 = Stop counters(0)

	 * Bit 1 = Load the shadow counters(1)

 Read register values to get any >32bit overflow */

 Get the values and add the overflow */

	/* This reports 0 on APUs, so return to avoid writing/reading registers

	 * that may or may not be different from their GPU counterparts

 Set the 2 events that we wish to watch, defined above */

 Reg 40 is # received msgs */

 Reg 108 is # of posted requests sent on VG20 */

 Write to enable desired perf counters */

	/* Zero out and enable the perf counters

	 * Write 0x5:

	 * Bit 0 = Start all counters(1)

	 * Bit 2 = Global counter reset enable(1)

	/* Load the shadow and disable the perf counters

	 * Write 0x2:

	 * Bit 0 = Stop counters(0)

	 * Bit 1 = Load the shadow counters(1)

 Read register values to get any >32bit overflow */

 Get the values and add the overflow */

	/* Just return false for soc15 GPUs.  Reset does not seem to

	 * be necessary.

	/* Check sOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Get the number of NAKs received and generated */

 Add the total number of NAKs, i.e the number of replays */

	/* TODO: split the GC and PG flags based on the relevant IP version for which

	 * they are relevant.

 FIXME: not supported yet */

 sdma/ih doorbell range are programed by hypervisor */

 enable pcie gen2/3 link */

 enable aspm */

 setup nbio registers */

	/* remap HDP registers to a hole in mmio space,

	 * for the purpose of expose those registers

	 * to process space

 enable the doorbell aperture */

	/* HW doorbell routing policy: doorbell writing not

	 * in SDMA/IH/MM/ACV range will be routed to CP. So

	 * we need to init SDMA/IH/MM/ACV doorbell range prior

	 * to CP ip block init and ring test.

 disable the doorbell aperture */

 AMD_CG_SUPPORT_DRM_MGCG */

 AMD_CG_SUPPORT_DRM_LS */

 AMD_CG_SUPPORT_ROM_MGCG */

 todo */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

MC_VM_XGMI_LFB_CNTL

MC_VM_XGMI_LFB_SIZE

 PF_MAX_REGION=0 means xgmi is disabled */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 select the lower chip */

 clear lower chip error count */

 select the higher chip */

 clear higher chip error count */

 UMC 8_7_2 registers */

 select the lower chip and check the error count */

 select the higher chip and check the err counter */

	/* check for SRAM correctable error

 check the MCUMC_STATUS */

 clear umc status */

 calculate error address if ue/ce error is detected */

 the lowest lsb bits should be ignored */

 translate umc channel address to soc pa, 3 parts are included */

 we only save ue error information currently, ce is skipped */

 page frame address is saved */

 clear umc status */

 select the lower chip and check the error count */

 set ce error interrupt type to APIC based interrupt */

 set error count to initial value */

 select the higher chip and check the err counter */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

	/* If use GART for FB translation, vmid0 page table covers both

	 * vram and system memory (gart)

 Program the AGP BAR */

 Program the system aperture low logical page number. */

			/*

			* Raven2 has a HW issue that it is unable to use the

			* vram which is out of MC_VM_SYSTEM_APERTURE_HIGH_ADDR.

			* So here is the workaround that increase system

			* aperture high address (add 1) to get rid of the VM

			* fault and hardware hang.

 Set default page address. */

 Program "protection fault". */

	/* In the case squeezing vram into GART aperture, we don't use

	 * FB aperture and AGP aperture. Disable them.

 Setup TLB control */

 XXX for emulation. */

 Setup L2 cache */

 XXX for emulation, Refer to closed source code.*/

		/* Send no-retry XNACK on fault to suppress VM fault storm.

		 * On Aldebaran, XNACK can be enabled in the SQ per-process.

		 * Retry faults need to be enabled for that to work.

 GART Enable. */

 Disable all tables */

 Avoid write to GMC registers */

 Setup TLB control */

 Setup L2 cache */

/**

 * gfxhub_v1_0_set_fault_enable_default - update GART/VM fault handling

 *

 * @adev: amdgpu_device pointer

 * @value: true redirects VM faults to the default page

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 enable/disable ROM CG is not supported on APU */

 CGTT_ROM_CLK_CTRL0 is not available for APU */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 *

 Effectively the job is aborted as the device is gone */

	/*

	 * Initialize the scheduler to at least some ring so that we always

	 * have a pointer to adev.

 use sched fence if available */

 only put the hw fence if has embedded fence */

 only put the hw fence if has embedded fence */

 record external_hw_fence for direct submit */

 skip IB as well if VRAM lost */

 Signal all jobs not yet scheduled */

 Signal all jobs already scheduled to HW */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 HW has more IP blocks,  only initialized the blocke beend by our driver  */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 setup interrupt control */

	/* INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=0 - dummy read disabled with msi, enabled without msi

	 * INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=1 - dummy read controlled by IH_DUMMY_RD_EN

 INTERRUPT_CNTL__IH_REQ_NONSNOOP_EN_MASK=1 if ring is in non-cacheable memory, e.g., vram */

 AMD_CG_SUPPORT_BIF_MGCG */

 AMD_CG_SUPPORT_BIF_LS */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * this peek_msg could *only* be called in IRQ routine becuase in IRQ routine

 * RCV_MSG_VALID filed of BIF_BX_PF_MAILBOX_CONTROL must already be set to 1

 * by host.

 *

 * if called no in IRQ routine, this peek_msg cannot guaranteed to return the

 * correct value since it doesn't return the RCV_DW0 under the case that

 * RCV_MSG_VALID is set by host.

	/* IMPORTANT:

	 * clear TRN_MSG_VALID valid to clear host's RCV_MSG_ACK

	 * and with host's RCV_MSG_ACK cleared hw automatically clear host's RCV_MSG_ACK

	 * which lead to VF's TRN_MSG_ACK cleared, otherwise below xgpu_nv_poll_ack()

	 * will return immediatly

 start to poll ack */

 host doesn't support REQ_GPU_INIT_DATA handshake */

 assume V1 in case host doesn't set version number */

 Retrieve checksum from mailbox2 */

	/* block amdgpu_gpu_recover till msg FLR COMPLETE received,

	 * otherwise the mailbox msg will be ruined/reseted by

	 * the VF FLR.

 Trigger recovery for world switch failure if no TDR */

		/* READY_TO_ACCESS_GPU is fetched by kernel polling, IRQ can ignore

		 * it byfar since that polling thread will handle it,

		 * other msg like flr complete is not handled here.

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 By now all MMIO pages except mailbox are blocked */

 if blocking is enabled in hypervisor. Choose the */

 SCRATCH_REG0 to test. */

 enable virtual display */

 don't wait anymore for IRQ context */

/**

 * amdgpu_virt_request_full_gpu() - request full gpu access

 * @adev:	amdgpu device.

 * @init:	is driver init time.

 * When start to init/fini driver, first need to request full gpu access.

 * Return: Zero if request success, otherwise will return error.

/**

 * amdgpu_virt_release_full_gpu() - release full gpu access

 * @adev:	amdgpu device.

 * @init:	is driver init time.

 * When finishing driver init/fini, need to release full gpu access.

 * Return: Zero if release success, otherwise will returen error.

/**

 * amdgpu_virt_reset_gpu() - reset gpu

 * @adev:	amdgpu device.

 * Send reset command to GPU hypervisor to reset GPU that VM is using

 * Return: Zero if reset success, otherwise will return error.

/**

 * amdgpu_virt_wait_reset() - wait for reset gpu completed

 * @adev:	amdgpu device.

 * Wait for GPU reset completed.

 * Return: Zero if reset success, otherwise will return error.

/**

 * amdgpu_virt_alloc_mm_table() - alloc memory for mm table

 * @adev:	amdgpu device.

 * MM table is used by UVD and VCE for its initialization

 * Return: Zero if allocate success.

/**

 * amdgpu_virt_free_mm_table() - free mm table memory

 * @adev:	amdgpu device.

 * Free MM table memory

 calculate checksum */

 minus the checksum itself */

	/* GPU will be marked bad on host if bp count more then 10,

	 * so alloc 512 is enough.

		/* There are two cases of reserve error should be ignored:

		 * 1) a ras bad page has been allocated (used by someone);

		 * 2) a ras bad page has been reserved (duplicate error injection

		 *    for one page);

 TODO: missing key, need to add it later */

 correct too large or too little interval value */

 no requirement, guest understands all

 TODO: read dynamic info */

 bad page handling for version 2 */

 other chip doesn't support SRIOV */

 passthrough mode exclus sriov mod */

 we have the ability to check now */

 try send GPU_INIT_DATA request to host */

 other chip doesn't support SRIOV */

/*

 * Copyright 2012 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* Call the ATIF method

/**

 * amdgpu_atif_call - call an ATIF method

 *

 * @atif: atif structure

 * @function: the ATIF function to execute

 * @params: ATIF function params

 *

 * Executes the requested ATIF function (all asics).

 * Returns a pointer to the acpi output buffer.

 We need a second fake parameter */

 Fail only if calling the method fails and ATIF is supported */

/**

 * amdgpu_atif_parse_notification - parse supported notifications

 *

 * @n: supported notifications struct

 * @mask: supported notifications mask from ATIF

 *

 * Use the supported notifications mask from ATIF function

 * ATIF_FUNCTION_VERIFY_INTERFACE to determine what notifications

 * are supported (all asics).

/**

 * amdgpu_atif_parse_functions - parse supported functions

 *

 * @f: supported functions struct

 * @mask: supported functions mask from ATIF

 *

 * Use the supported functions mask from ATIF function

 * ATIF_FUNCTION_VERIFY_INTERFACE to determine what functions

 * are supported (all asics).

/**

 * amdgpu_atif_verify_interface - verify ATIF

 *

 * @atif: amdgpu atif struct

 *

 * Execute the ATIF_FUNCTION_VERIFY_INTERFACE ATIF function

 * to initialize ATIF and determine what features are supported

 * (all asics).

 * returns 0 on success, error on failure.

 TODO: check version? */

/**

 * amdgpu_atif_get_notification_params - determine notify configuration

 *

 * @atif: acpi handle

 *

 * Execute the ATIF_FUNCTION_GET_SYSTEM_PARAMETERS ATIF function

 * to determine if a notifier is used and if so which one

 * (all asics).  This is either Notify(VGA, 0x81) or Notify(VGA, n)

 * where n is specified in the result if a notifier is used.

 * Returns 0 on success, error on failure.

/**

 * amdgpu_atif_query_backlight_caps - get min and max backlight input signal

 *

 * @atif: acpi handle

 *

 * Execute the QUERY_BRIGHTNESS_TRANSFER_CHARACTERISTICS ATIF function

 * to determine the acceptable range of backlight values

 *

 * Backlight_caps.caps_valid will be set to true if the query is successful

 *

 * The input signals are in range 0-255

 *

 * This function assumes the display with backlight is the first LCD

 *

 * Returns 0 on success, error on failure.

/**

 * amdgpu_atif_get_sbios_requests - get requested sbios event

 *

 * @atif: acpi handle

 * @req: atif sbios request struct

 *

 * Execute the ATIF_FUNCTION_GET_SYSTEM_BIOS_REQUESTS ATIF function

 * to determine what requests the sbios is making to the driver

 * (all asics).

 * Returns 0 on success, error on failure.

/**

 * amdgpu_atif_handler - handle ATIF notify requests

 *

 * @adev: amdgpu_device pointer

 * @event: atif sbios request struct

 *

 * Checks the acpi event and if it matches an atif event,

 * handles it.

 *

 * Returns:

 * NOTIFY_BAD or NOTIFY_DONE, depending on the event.

 Is this actually our event? */

 These events will generate keypresses otherwise */

 Check pending SBIOS requests */

				/*

				 * XXX backlight_device_set_brightness() is

				 * hardwired to post BACKLIGHT_UPDATE_SYSFS.

				 * It probably should accept 'reason' parameter.

 Just fire off a uevent and let userspace tell us what to do */

 TODO: check other events */

	/* We've handled the event, stop the notifier chain. The ACPI interface

	 * overloads ACPI_VIDEO_NOTIFY_PROBE, we don't want to send that to

	 * userspace if the event was generated only to signal a SBIOS

	 * request.

/* Call the ATCS method

/**

 * amdgpu_atcs_call - call an ATCS method

 *

 * @atcs: atcs structure

 * @function: the ATCS function to execute

 * @params: ATCS function params

 *

 * Executes the requested ATCS function (all asics).

 * Returns a pointer to the acpi output buffer.

 We need a second fake parameter */

 Fail only if calling the method fails and ATIF is supported */

/**

 * amdgpu_atcs_parse_functions - parse supported functions

 *

 * @f: supported functions struct

 * @mask: supported functions mask from ATCS

 *

 * Use the supported functions mask from ATCS function

 * ATCS_FUNCTION_VERIFY_INTERFACE to determine what functions

 * are supported (all asics).

/**

 * amdgpu_atcs_verify_interface - verify ATCS

 *

 * @atcs: amdgpu atcs struct

 *

 * Execute the ATCS_FUNCTION_VERIFY_INTERFACE ATCS function

 * to initialize ATCS and determine what features are supported

 * (all asics).

 * returns 0 on success, error on failure.

 TODO: check version? */

/**

 * amdgpu_acpi_is_pcie_performance_request_supported

 *

 * @adev: amdgpu_device pointer

 *

 * Check if the ATCS pcie_perf_req and pcie_dev_rdy methods

 * are supported (all asics).

 * returns true if supported, false if not.

/**

 * amdgpu_acpi_is_power_shift_control_supported

 *

 * Check if the ATCS power shift control method

 * is supported.

 * returns true if supported, false if not.

/**

 * amdgpu_acpi_pcie_notify_device_ready

 *

 * @adev: amdgpu_device pointer

 *

 * Executes the PCIE_DEVICE_READY_NOTIFICATION method

 * (all asics).

 * returns 0 on success, error on failure.

/**

 * amdgpu_acpi_pcie_performance_request

 *

 * @adev: amdgpu_device pointer

 * @perf_req: requested perf level (pcie gen speed)

 * @advertise: set advertise caps flag if set

 *

 * Executes the PCIE_PERFORMANCE_REQUEST method to

 * change the pcie gen speed (all asics).

 * returns 0 on success, error on failure.

 client id (bit 2-0: func num, 7-3: dev num, 15-8: bus num) */

/**

 * amdgpu_acpi_power_shift_control

 *

 * @adev: amdgpu_device pointer

 * @dev_state: device acpi state

 * @drv_state: driver state

 *

 * Executes the POWER_SHIFT_CONTROL method to

 * communicate current dGPU device state and

 * driver state to APU/SBIOS.

 * returns 0 on success, error on failure.

 dGPU id (bit 2-0: func num, 7-3: dev num, 15-8: bus num) */

/**

 * amdgpu_acpi_smart_shift_update - update dGPU device state to SBIOS

 *

 * @dev: drm_device pointer

 * @ss_state: current smart shift event

 *

 * returns 0 on success,

 * otherwise return error number.

	/* SBIOS trigger “stop”, “enable” and “start” at D0, Driver Operational.

	 * SBIOS trigger “stop” at D3, Driver Not Operational.

	 * SBIOS trigger “stop” and “disable” at D0, Driver NOT operational.

/**

 * amdgpu_acpi_event - handle notify events

 *

 * @nb: notifier block

 * @val: val

 * @data: acpi event

 *

 * Calls relevant amdgpu functions in response to various

 * acpi events.

 * Returns NOTIFY code

 Check for pending SBIOS requests */

 Call all ACPI methods here */

/**

 * amdgpu_acpi_init - init driver acpi support

 *

 * @adev: amdgpu_device pointer

 *

 * Verifies the AMD ACPI interfaces and registers with the acpi

 * notifier chain (all asics).

 * Returns 0 on success, error on failure.

 Find the encoder controlling the brightness */

/**

 * amdgpu_acpi_fini - tear down driver acpi support

 *

 * @adev: amdgpu_device pointer

 *

 * Unregisters with the acpi notifier chain (all asics).

/**

 * amdgpu_atif_pci_probe_handle - look up the ATIF handle

 *

 * @pdev: pci device

 *

 * Look up the ATIF handles (all asics).

 * Returns true if the handle is found, false if not.

/**

 * amdgpu_atcs_pci_probe_handle - look up the ATCS handle

 *

 * @pdev: pci device

 *

 * Look up the ATCS handles (all asics).

 * Returns true if the handle is found, false if not.

/*

 * amdgpu_acpi_detect - detect ACPI ATIF/ATCS methods

 *

 * Check if we have the ATIF/ATCS methods and populate

 * the structures in the driver.

		/* XXX check this workraround, if sbios request function is

		 * present we have to see how it's configured in the system

		 * params

 Disable notification */

/**

 * amdgpu_acpi_is_s0ix_active

 *

 * @adev: amdgpu_device_pointer

 *

 * returns true if supported, false if not.

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 *          Jerome Glisse

/**

 * DOC: GPUVM

 *

 * GPUVM is similar to the legacy gart on older asics, however

 * rather than there being a single global gart table

 * for the entire GPU, there are multiple VM page tables active

 * at any given time.  The VM page tables can contain a mix

 * vram pages and system memory pages and system memory pages

 * can be mapped as snooped (cached system pages) or unsnooped

 * (uncached system pages).

 * Each VM has an ID associated with it and there is a page table

 * associated with each VMID.  When execting a command buffer,

 * the kernel tells the the ring what VMID to use for that command

 * buffer.  VMIDs are allocated dynamically as commands are submitted.

 * The userspace drivers maintain their own address space and the kernel

 * sets up their pages tables accordingly when they submit their

 * command buffers and a VMID is assigned.

 * Cayman/Trinity support up to 8 active VMs at any given time;

 * SI supports 16.

/**

 * struct amdgpu_prt_cb - Helper to disable partial resident texture feature from a fence callback

	/**

	 * @adev: amdgpu device

	/**

	 * @cb: callback

/**

 * amdgpu_vm_set_pasid - manage pasid and vm ptr mapping

 *

 * @adev: amdgpu_device pointer

 * @vm: amdgpu_vm pointer

 * @pasid: the pasid the VM is using on this GPU

 *

 * Set the pasid this VM is using on this GPU, can also be used to remove the

 * pasid by passing in zero.

 *

/*

 * vm eviction_lock can be taken in MMU notifiers. Make sure no reclaim-FS

 * happens while holding this lock anywhere to prevent deadlocks when

 * an MMU notifier runs in reclaim-FS context.

/**

 * amdgpu_vm_level_shift - return the addr shift for each level

 *

 * @adev: amdgpu_device pointer

 * @level: VMPT level

 *

 * Returns:

 * The number of bits the pfn needs to be right shifted for a level.

/**

 * amdgpu_vm_num_entries - return the number of entries in a PD/PT

 *

 * @adev: amdgpu_device pointer

 * @level: VMPT level

 *

 * Returns:

 * The number of entries in a page directory or page table.

 For the root directory */

 Everything in between */

 For the page tables on the leaves */

/**

 * amdgpu_vm_num_ats_entries - return the number of ATS entries in the root PD

 *

 * @adev: amdgpu_device pointer

 *

 * Returns:

 * The number of entries in the root page directory which needs the ATS setting.

/**

 * amdgpu_vm_entries_mask - the mask to get the entry number of a PD/PT

 *

 * @adev: amdgpu_device pointer

 * @level: VMPT level

 *

 * Returns:

 * The mask to extract the entry number of a PD/PT from an address.

/**

 * amdgpu_vm_bo_size - returns the size of the BOs in bytes

 *

 * @adev: amdgpu_device pointer

 * @level: VMPT level

 *

 * Returns:

 * The size of the BO for a page directory or page table in bytes.

/**

 * amdgpu_vm_bo_evicted - vm_bo is evicted

 *

 * @vm_bo: vm_bo which is evicted

 *

 * State for PDs/PTs and per VM BOs which are not at the location they should

 * be.

/**

 * amdgpu_vm_bo_moved - vm_bo is moved

 *

 * @vm_bo: vm_bo which is moved

 *

 * State for per VM BOs which are moved, but that change is not yet reflected

 * in the page tables.

/**

 * amdgpu_vm_bo_idle - vm_bo is idle

 *

 * @vm_bo: vm_bo which is now idle

 *

 * State for PDs/PTs and per VM BOs which have gone through the state machine

 * and are now idle.

/**

 * amdgpu_vm_bo_invalidated - vm_bo is invalidated

 *

 * @vm_bo: vm_bo which is now invalidated

 *

 * State for normal BOs which are invalidated and that change not yet reflected

 * in the PTs.

/**

 * amdgpu_vm_bo_relocated - vm_bo is reloacted

 *

 * @vm_bo: vm_bo which is relocated

 *

 * State for PDs/PTs which needs to update their parent PD.

 * For the root PD, just move to idle state.

/**

 * amdgpu_vm_bo_done - vm_bo is done

 *

 * @vm_bo: vm_bo which is now done

 *

 * State for normal BOs which are invalidated and that change has been updated

 * in the PTs.

/**

 * amdgpu_vm_bo_base_init - Adds bo to the list of bos associated with the vm

 *

 * @base: base structure for tracking BO usage in a VM

 * @vm: vm to which bo is to be added

 * @bo: amdgpu buffer object

 *

 * Initialize a bo_va_base structure and add it to the appropriate lists

 *

	/*

	 * we checked all the prerequisites, but it looks like this per vm bo

	 * is currently evicted. add the bo to the evicted list to make sure it

	 * is validated on next vm use to avoid fault.

/**

 * amdgpu_vm_pt_parent - get the parent page directory

 *

 * @pt: child page table

 *

 * Helper to get the parent entry for the child page table. NULL if we are at

 * the root page directory.

/*

 * amdgpu_vm_pt_cursor - state for for_each_amdgpu_vm_pt

/**

 * amdgpu_vm_pt_start - start PD/PT walk

 *

 * @adev: amdgpu_device pointer

 * @vm: amdgpu_vm structure

 * @start: start address of the walk

 * @cursor: state to initialize

 *

 * Initialize a amdgpu_vm_pt_cursor to start a walk.

/**

 * amdgpu_vm_pt_descendant - go to child node

 *

 * @adev: amdgpu_device pointer

 * @cursor: current state

 *

 * Walk to the child node of the current node.

 * Returns:

 * True if the walk was possible, false otherwise.

/**

 * amdgpu_vm_pt_sibling - go to sibling node

 *

 * @adev: amdgpu_device pointer

 * @cursor: current state

 *

 * Walk to the sibling node of the current node.

 * Returns:

 * True if the walk was possible, false otherwise.

 Root doesn't have a sibling */

 Go to our parents and see if we got a sibling */

/**

 * amdgpu_vm_pt_ancestor - go to parent node

 *

 * @cursor: current state

 *

 * Walk to the parent node of the current node.

 * Returns:

 * True if the walk was possible, false otherwise.

/**

 * amdgpu_vm_pt_next - get next PD/PT in hieratchy

 *

 * @adev: amdgpu_device pointer

 * @cursor: current state

 *

 * Walk the PD/PT tree to the next node.

 First try a newborn child */

 If that didn't worked try to find a sibling */

 No sibling, go to our parents and grandparents */

/**

 * amdgpu_vm_pt_first_dfs - start a deep first search

 *

 * @adev: amdgpu_device structure

 * @vm: amdgpu_vm structure

 * @start: optional cursor to start with

 * @cursor: state to initialize

 *

 * Starts a deep first traversal of the PD/PT tree.

/**

 * amdgpu_vm_pt_continue_dfs - check if the deep first search should continue

 *

 * @start: starting point for the search

 * @entry: current entry

 *

 * Returns:

 * True when the search should continue, false otherwise.

/**

 * amdgpu_vm_pt_next_dfs - get the next node for a deep first search

 *

 * @adev: amdgpu_device structure

 * @cursor: current state

 *

 * Move the cursor to the next node in a deep first search.

/*

 * for_each_amdgpu_vm_pt_dfs_safe - safe deep first search of all PDs/PTs

/**

 * amdgpu_vm_get_pd_bo - add the VM PD to a validation list

 *

 * @vm: vm providing the BOs

 * @validated: head of validation list

 * @entry: entry to add

 *

 * Add the page directory to the list of BOs to

 * validate for command submission.

 Two for VM updates, one for TTM and one for the CS job */

/**

 * amdgpu_vm_del_from_lru_notify - update bulk_moveable flag

 *

 * @bo: BO which was removed from the LRU

 *

 * Make sure the bulk_moveable flag is updated when a BO is removed from the

 * LRU.

/**

 * amdgpu_vm_move_to_lru_tail - move all BOs to the end of LRU

 *

 * @adev: amdgpu device pointer

 * @vm: vm providing the BOs

 *

 * Move all BOs to the end of LRU and remember their positions to put them

 * together.

/**

 * amdgpu_vm_validate_pt_bos - validate the page table BOs

 *

 * @adev: amdgpu device pointer

 * @vm: vm providing the BOs

 * @validate: callback to do the validation

 * @param: parameter for the validation callback

 *

 * Validate the page table BOs on command submission if neccessary.

 *

 * Returns:

 * Validation result.

/**

 * amdgpu_vm_ready - check VM is ready for updates

 *

 * @vm: VM to check

 *

 * Check if all VM PDs/PTs are ready for updates

 *

 * Returns:

 * True if eviction list is empty.

/**

 * amdgpu_vm_clear_bo - initially clear the PDs/PTs

 *

 * @adev: amdgpu_device pointer

 * @vm: VM to clear BO from

 * @vmbo: BO to clear

 * @immediate: use an immediate update

 *

 * Root PD needs to be reserved when calling this.

 *

 * Returns:

 * 0 on success, errno otherwise.

 Figure out our place in the hierarchy */

 Handle leaf PDEs as PTEs */

 Handle leaf PDEs as PTEs */

 Workaround for fault priority problem on GMC9 */

/**

 * amdgpu_vm_pt_create - create bo for PD/PT

 *

 * @adev: amdgpu_device pointer

 * @vm: requesting vm

 * @level: the page table level

 * @immediate: use a immediate update

 * @vmbo: pointer to the buffer object pointer

/**

 * amdgpu_vm_alloc_pts - Allocate a specific page table

 *

 * @adev: amdgpu_device pointer

 * @vm: VM to allocate page tables for

 * @cursor: Which page table to allocate

 * @immediate: use an immediate update

 *

 * Make sure a specific page table or directory is allocated.

 *

 * Returns:

 * 1 if page table needed to be allocated, 0 if page table was already

 * allocated, negative errno if an error occurred.

	/* Keep a reference to the root directory to avoid

	 * freeing them up in the wrong order.

/**

 * amdgpu_vm_free_table - fre one PD/PT

 *

 * @entry: PDE to free

/**

 * amdgpu_vm_free_pts - free PD/PT levels

 *

 * @adev: amdgpu device structure

 * @vm: amdgpu vm structure

 * @start: optional cursor where to start freeing PDs/PTs

 *

 * Free the page directory or page table level and all sub levels.

/**

 * amdgpu_vm_check_compute_bug - check whether asic has compute vm bug

 *

 * @adev: amdgpu_device pointer

		/* Compute has a VM bug for GFX version < 7.

 only compute rings */

/**

 * amdgpu_vm_need_pipeline_sync - Check if pipe sync is needed for job.

 *

 * @ring: ring on which the job will be submitted

 * @job: job to submit

 *

 * Returns:

 * True if sync is needed.

/**

 * amdgpu_vm_flush - hardware flush the vm

 *

 * @ring: ring to use for flush

 * @job:  related job

 * @need_pipe_sync: is pipe sync needed

 *

 * Emit a VM flush when it is necessary.

 *

 * Returns:

 * 0 on success, errno otherwise.

 the double SWITCH_BUFFER here *cannot* be skipped by COND_EXEC */

/**

 * amdgpu_vm_bo_find - find the bo_va for a specific vm & bo

 *

 * @vm: requested vm

 * @bo: requested buffer object

 *

 * Find @bo inside the requested vm.

 * Search inside the @bos vm list for the requested vm

 * Returns the found bo_va or NULL if none is found

 *

 * Object has to be reserved!

 *

 * Returns:

 * Found bo_va or NULL.

/**

 * amdgpu_vm_map_gart - Resolve gart mapping of addr

 *

 * @pages_addr: optional DMA address to use for lookup

 * @addr: the unmapped addr

 *

 * Look up the physical address of the page that the pte resolves

 * to.

 *

 * Returns:

 * The pointer for the page table entry.

 page table offset */

 in case cpu page size != gpu page size*/

/**

 * amdgpu_vm_update_pde - update a single level in the hierarchy

 *

 * @params: parameters for the update

 * @vm: requested vm

 * @entry: entry to update

 *

 * Makes sure the requested entry in parent is up to date.

/**

 * amdgpu_vm_invalidate_pds - mark all PDs as invalid

 *

 * @adev: amdgpu_device pointer

 * @vm: related vm

 *

 * Mark all PD level as invalid after an error.

/**

 * amdgpu_vm_update_pdes - make sure that all directories are valid

 *

 * @adev: amdgpu_device pointer

 * @vm: requested vm

 * @immediate: submit immediately to the paging queue

 *

 * Makes sure all directories are up to date.

 *

 * Returns:

 * 0 for success, error for failure.

/*

 * amdgpu_vm_update_flags - figure out flags for PTE updates

 *

 * Make sure to set the right flags for the PTEs at the desired level.

 Workaround for fault priority problem on GMC9 */

/**

 * amdgpu_vm_fragment - get fragment for PTEs

 *

 * @params: see amdgpu_vm_update_params definition

 * @start: first PTE to handle

 * @end: last PTE to handle

 * @flags: hw mapping flags

 * @frag: resulting fragment size

 * @frag_end: end of this fragment

 *

 * Returns the first possible fragment for the start and end address.

	/**

	 * The MC L1 TLB supports variable sized pages, based on a fragment

	 * field in the PTE. When this field is set to a non-zero value, page

	 * granularity is increased from 4KB to (1 << (12 + frag)). The PTE

	 * flags are considered valid for all PTEs within the fragment range

	 * and corresponding mappings are assumed to be physically contiguous.

	 *

	 * The L1 TLB can store a single PTE for the whole fragment,

	 * significantly increasing the space available for translation

	 * caching. This leads to large improvements in throughput when the

	 * TLB is under pressure.

	 *

	 * The L2 TLB distributes small and large fragments into two

	 * asymmetric partitions. The large fragment cache is significantly

	 * larger. Thus, we try to use large fragments wherever possible.

	 * Userspace can support this by aligning virtual base address and

	 * allocation size to the fragment size.

	 *

	 * Starting with Vega10 the fragment size only controls the L1. The L2

	 * is now directly feed with small/huge/giant pages from the walker.

 system pages are non continuously */

 This intentionally wraps around if no bit is set */

/**

 * amdgpu_vm_update_ptes - make sure that page tables are valid

 *

 * @params: see amdgpu_vm_update_params definition

 * @start: start of GPU address range

 * @end: end of GPU address range

 * @dst: destination address to map to, the next dst inside the function

 * @flags: mapping flags

 *

 * Update the page tables in the range @start - @end.

 *

 * Returns:

 * 0 for success, -EINVAL for failure.

 figure out the initial fragment */

 walk over the address space and update the PTs */

			/* make sure that the page tables covering the

			 * address range are actually allocated

 Unlocked updates are only allowed on the leaves */

 No huge page support before GMC v9 */

			/* We can't use this level when the fragment size is

			 * smaller than the address shift. Go to the next

			 * child entry and try again.

			/* If the fragment size is even larger than the parent

			 * shift we should go up one level and check it again.

 We need all PDs and PTs for mapping something, */

			/* but unmapping something can happen at a higher

			 * level.

 Looks good so far, calculate parameters for the update */

			/* This can happen when we set higher level PDs to

			 * silent to stop fault floods.

 figure out the next fragment */

			/* Free all child entries.

			 * Update the tables with the flags and addresses and free up subsequent

			 * tables in the case of huge pages or freed up areas.

			 * This is the maximum you can free, because all other page tables are not

			 * completely covered by the range and so potentially still in use.

 Make sure previous mapping is freed */

 or just move on to the next on the same level. */

/**

 * amdgpu_vm_bo_update_mapping - update a mapping in the vm page table

 *

 * @adev: amdgpu_device pointer of the VM

 * @bo_adev: amdgpu_device pointer of the mapped BO

 * @vm: requested vm

 * @immediate: immediate submission in a page fault

 * @unlocked: unlocked invalidation during MM callback

 * @resv: fences we need to sync to

 * @start: start of mapped range

 * @last: last mapped entry

 * @flags: flags for the entries

 * @offset: offset into nodes and pages_addr

 * @res: ttm_resource to map

 * @pages_addr: DMA addresses to use for mapping

 * @fence: optional resulting fence

 * @table_freed: return true if page table is freed

 *

 * Fill in the page table entries between @start and @last.

 *

 * Returns:

 * 0 for success, -EINVAL for failure.

	/* Implicitly sync to command submissions in the same VM before

	 * unmapping. Sync to moving fences before mapping.

/**

 * amdgpu_vm_bo_update - update all BO mappings in the vm page table

 *

 * @adev: amdgpu_device pointer

 * @bo_va: requested BO and VM object

 * @clear: if true clear the entries

 * @table_freed: return true if page table is freed

 *

 * Fill in the page table entries for @bo_va.

 *

 * Returns:

 * 0 for success, -EINVAL for failure.

		/* normally,bo_va->flags only contians READABLE and WIRTEABLE bit go here

		 * but in case of something, we filter the flags in first place

 Apply ASIC specific mapping flags */

	/* If the BO is not in its preferred location add it back to

	 * the evicted list so that it gets validated again on the

	 * next command submission.

/**

 * amdgpu_vm_update_prt_state - update the global PRT state

 *

 * @adev: amdgpu_device pointer

/**

 * amdgpu_vm_prt_get - add a PRT user

 *

 * @adev: amdgpu_device pointer

/**

 * amdgpu_vm_prt_put - drop a PRT user

 *

 * @adev: amdgpu_device pointer

/**

 * amdgpu_vm_prt_cb - callback for updating the PRT status

 *

 * @fence: fence for the callback

 * @_cb: the callback function

/**

 * amdgpu_vm_add_prt_cb - add callback for updating the PRT status

 *

 * @adev: amdgpu_device pointer

 * @fence: fence for the callback

 Last resort when we are OOM */

/**

 * amdgpu_vm_free_mapping - free a mapping

 *

 * @adev: amdgpu_device pointer

 * @vm: requested vm

 * @mapping: mapping to be freed

 * @fence: fence of the unmap operation

 *

 * Free a mapping and make sure we decrease the PRT usage count if applicable.

/**

 * amdgpu_vm_prt_fini - finish all prt mappings

 *

 * @adev: amdgpu_device pointer

 * @vm: requested vm

 *

 * Register a cleanup callback to disable PRT support after VM dies.

		/* Not enough memory to grab the fence list, as last resort

		 * block for all the fences to complete.

 Add a callback for each fence in the reservation object */

/**

 * amdgpu_vm_clear_freed - clear freed BOs in the PT

 *

 * @adev: amdgpu_device pointer

 * @vm: requested vm

 * @fence: optional resulting fence (unchanged if no work needed to be done

 * or if an error occurred)

 *

 * Make sure all freed BOs are cleared in the PT.

 * PTs have to be reserved and mutex must be locked!

 *

 * Returns:

 * 0 for success.

 *

/**

 * amdgpu_vm_handle_moved - handle moved BOs in the PT

 *

 * @adev: amdgpu_device pointer

 * @vm: requested vm

 *

 * Make sure all BOs which are moved are updated in the PTs.

 *

 * Returns:

 * 0 for success.

 *

 * PTs have to be reserved!

 Per VM BOs never need to bo cleared in the page tables */

 Try to reserve the BO to avoid clearing its ptes */

 Somebody else is using the BO right now */

/**

 * amdgpu_vm_bo_add - add a bo to a specific vm

 *

 * @adev: amdgpu_device pointer

 * @vm: requested vm

 * @bo: amdgpu buffer object

 *

 * Add @bo into the requested vm.

 * Add @bo to the list of bos associated with the vm

 *

 * Returns:

 * Newly added bo_va or NULL for failure

 *

 * Object has to be reserved!

 Power up XGMI if it can be potentially used */

/**

 * amdgpu_vm_bo_insert_map - insert a new mapping

 *

 * @adev: amdgpu_device pointer

 * @bo_va: bo_va to store the address

 * @mapping: the mapping to insert

 *

 * Insert a new mapping into all structures.

/**

 * amdgpu_vm_bo_map - map bo inside a vm

 *

 * @adev: amdgpu_device pointer

 * @bo_va: bo_va to store the address

 * @saddr: where to map the BO

 * @offset: requested offset in the BO

 * @size: BO size in bytes

 * @flags: attributes of pages (read/write/valid/etc.)

 *

 * Add a mapping of the BO at the specefied addr into the VM.

 *

 * Returns:

 * 0 for success, error for failure.

 *

 * Object has to be reserved and unreserved outside!

 validate the parameters */

 make sure object fit at this offset */

 bo and tmp overlap, invalid addr */

/**

 * amdgpu_vm_bo_replace_map - map bo inside a vm, replacing existing mappings

 *

 * @adev: amdgpu_device pointer

 * @bo_va: bo_va to store the address

 * @saddr: where to map the BO

 * @offset: requested offset in the BO

 * @size: BO size in bytes

 * @flags: attributes of pages (read/write/valid/etc.)

 *

 * Add a mapping of the BO at the specefied addr into the VM. Replace existing

 * mappings as we do so.

 *

 * Returns:

 * 0 for success, error for failure.

 *

 * Object has to be reserved and unreserved outside!

 validate the parameters */

 make sure object fit at this offset */

 Allocate all the needed memory */

/**

 * amdgpu_vm_bo_unmap - remove bo mapping from vm

 *

 * @adev: amdgpu_device pointer

 * @bo_va: bo_va to remove the address from

 * @saddr: where to the BO is mapped

 *

 * Remove a mapping of the BO at the specefied addr from the VM.

 *

 * Returns:

 * 0 for success, error for failure.

 *

 * Object has to be reserved and unreserved outside!

/**

 * amdgpu_vm_bo_clear_mappings - remove all mappings in a specific range

 *

 * @adev: amdgpu_device pointer

 * @vm: VM structure to use

 * @saddr: start of the range

 * @size: size of the range

 *

 * Remove all mappings in a range, split them as appropriate.

 *

 * Returns:

 * 0 for success, error for failure.

 Allocate all the needed memory */

 Now gather all removed mappings */

 Remember mapping split at the start */

 Remember mapping split at the end */

 And free them up */

 Insert partial mapping before the range */

 Insert partial mapping after the range */

/**

 * amdgpu_vm_bo_lookup_mapping - find mapping by address

 *

 * @vm: the requested VM

 * @addr: the address

 *

 * Find a mapping by it's address.

 *

 * Returns:

 * The amdgpu_bo_va_mapping matching for addr or NULL

 *

/**

 * amdgpu_vm_bo_trace_cs - trace all reserved mappings

 *

 * @vm: the requested vm

 * @ticket: CS ticket

 *

 * Trace all mappings of BOs reserved during a command submission.

/**

 * amdgpu_vm_bo_rmv - remove a bo to a specific vm

 *

 * @adev: amdgpu_device pointer

 * @bo_va: requested bo_va

 *

 * Remove @bo_va->bo from the requested vm.

 *

 * Object have to be reserved!

/**

 * amdgpu_vm_evictable - check if we can evict a VM

 *

 * @bo: A page table of the VM.

 *

 * Check if it is possible to evict a VM.

 Page tables of a destroyed VM can go away immediately */

 Don't evict VM page tables while they are busy */

 Try to block ongoing updates */

 Don't evict VM page tables while they are updated */

/**

 * amdgpu_vm_bo_invalidate - mark the bo as invalid

 *

 * @adev: amdgpu_device pointer

 * @bo: amdgpu buffer object

 * @evicted: is the BO evicted

 *

 * Mark @bo as invalid.

 shadow bo doesn't have bo base, its validation needs its parent */

/**

 * amdgpu_vm_get_block_size - calculate VM page table size as power of two

 *

 * @vm_size: VM size

 *

 * Returns:

 * VM page table as power of two

 Total bits covered by PD + PTs */

	/* Make sure the PD is 4K in size up to 8GB address space.

/**

 * amdgpu_vm_adjust_size - adjust vm size, block size and fragment size

 *

 * @adev: amdgpu_device pointer

 * @min_vm_size: the minimum vm size in GB if it's set auto

 * @fragment_size_default: Default PTE fragment size

 * @max_level: max VMPT level

 * @max_bits: max address space size in bits

 *

 adjust vm size first */

		/* Optimal VM size depends on the amount of physical

		 * RAM available. Underlying requirements and

		 * assumptions:

		 *

		 *  - Need to map system memory and VRAM from all GPUs

		 *     - VRAM from other GPUs not known here

		 *     - Assume VRAM <= system memory

		 *  - On GFX8 and older, VM space can be segmented for

		 *    different MTYPEs

		 *  - Need to allow room for fragmentation, guard pages etc.

		 *

		 * This adds up to a rough guess of system memory x3.

		 * Round up to power of two to maximize the available

		 * VM size with the given page table size.

 block size depends on vm size and hw setup*/

/**

 * amdgpu_vm_wait_idle - wait for the VM to become idle

 *

 * @vm: VM object to wait for

 * @timeout: timeout to wait for VM to become idle

/**

 * amdgpu_vm_init - initialize a vm instance

 *

 * @adev: amdgpu_device pointer

 * @vm: requested vm

 *

 * Init @vm fields.

 *

 * Returns:

 * 0 for success, error for failure.

 create scheduler entities for page table updates */

/**

 * amdgpu_vm_check_clean_reserved - check if a VM is clean

 *

 * @adev: amdgpu_device pointer

 * @vm: the VM to check

 *

 * check all entries of the root PD, if any subsequent PDs are allocated,

 * it means there are page table creating and filling, and is no a clean

 * VM

 *

 * Returns:

 *	0 if this VM is clean

/**

 * amdgpu_vm_make_compute - Turn a GFX VM into a compute VM

 *

 * @adev: amdgpu_device pointer

 * @vm: requested vm

 *

 * This only works on GFX VMs that don't have any BOs added and no

 * page tables allocated yet.

 *

 * Changes the following VM parameters:

 * - use_cpu_for_update

 * - pte_supports_ats

 *

 * Reinitializes the page directory to reflect the changed ATS

 * setting.

 *

 * Returns:

 * 0 for success, -errno for errors.

 Sanity checks */

	/* Check if PD needs to be reinitialized and do it before

	 * changing any other state, in case it fails.

 Update VM state */

 Sync with last SDMA update/clear before switching to CPU */

 Free the shadow bo for compute VM */

/**

 * amdgpu_vm_release_compute - release a compute vm

 * @adev: amdgpu_device pointer

 * @vm: a vm turned into compute vm by calling amdgpu_vm_make_compute

 *

 * This is a correspondant of amdgpu_vm_make_compute. It decouples compute

 * pasid from vm. Compute should stop use of vm after this call.

/**

 * amdgpu_vm_fini - tear down a vm instance

 *

 * @adev: amdgpu_device pointer

 * @vm: requested vm

 *

 * Tear down @vm.

 * Unbind the VM and remove all bos from the vm bo list

		/* Don't remove the mapping here, we don't want to trigger a

		 * rebalance and the tree is about to be destroyed anyway.

/**

 * amdgpu_vm_manager_init - init the VM manager

 *

 * @adev: amdgpu_device pointer

 *

 * Initialize the VM manager structures

	/* Concurrent flushes are only possible starting with Vega10 and

	 * are broken on Navi10 and Navi14.

	/* If not overridden by the user, by default, only in large BAR systems

	 * Compute VM tables will be updated by CPU

/**

 * amdgpu_vm_manager_fini - cleanup VM manager

 *

 * @adev: amdgpu_device pointer

 *

 * Cleanup the VM manager and free resources.

/**

 * amdgpu_vm_ioctl - Manages VMID reservation for vm hubs.

 *

 * @dev: drm device pointer

 * @data: drm_amdgpu_vm

 * @filp: drm file pointer

 *

 * Returns:

 * 0 for success, -errno for errors.

 We only have requirement to reserve vmid from gfxhub */

		/* Wait vm idle to make sure the vmid set in SPM_VMID is

		 * not referenced anymore.

/**

 * amdgpu_vm_get_task_info - Extracts task info for a PASID.

 *

 * @adev: drm device pointer

 * @pasid: PASID identifier for VM

 * @task_info: task_info to fill.

/**

 * amdgpu_vm_set_task_info - Sets VMs task info.

 *

 * @vm: vm for which to set the info

/**

 * amdgpu_vm_handle_fault - graceful handling of VM faults.

 * @adev: amdgpu device pointer

 * @pasid: PASID of the VM

 * @addr: Address of the fault

 * @write_fault: true is write fault, false is read fault

 *

 * Try to gracefully handle a VM fault. Return true if the fault was handled and

 * shouldn't be reported any more.

 Double check that the VM still exists */

		/* Intentionally setting invalid PTE flag

		 * combination to force a no-retry-fault

 Redirect the access to the dummy page */

 Let the hw retry silently on the PTE */

/**

 * amdgpu_debugfs_vm_bo_info  - print BO info for the VM

 *

 * @vm: Requested VM for printing BO info

 * @m: debugfs file

 *

 * Print BO information in debugfs file for the VM

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 *          Jerome Glisse

 *          Christian König

/*

 * Rings

 * Most engines on the GPU are fed via ring buffers.  Ring

 * buffers are areas of GPU accessible memory that the host

 * writes commands into and the GPU reads commands out of.

 * There is a rptr (read pointer) that determines where the

 * GPU is currently reading, and a wptr (write pointer)

 * which determines where the host has written.  When the

 * pointers are equal, the ring is idle.  When the host

 * writes commands to the ring buffer, it increments the

 * wptr.  The GPU then starts fetching commands and executes

 * them until the pointers are equal again.

/**

 * amdgpu_ring_alloc - allocate space on the ring buffer

 *

 * @ring: amdgpu_ring structure holding ring information

 * @ndw: number of dwords to allocate in the ring buffer

 *

 * Allocate @ndw dwords in the ring buffer (all asics).

 * Returns 0 on success, error on failure.

	/* Align requested size with padding so unlock_commit can

	/* Make sure we aren't trying to allocate more space

	 * than the maximum for one submission

/** amdgpu_ring_insert_nop - insert NOP packets

 *

 * @ring: amdgpu_ring structure holding ring information

 * @count: the number of NOP packets to insert

 *

 * This is the generic insert_nop function for rings except SDMA

/**

 * amdgpu_ring_generic_pad_ib - pad IB with NOP packets

 *

 * @ring: amdgpu_ring structure holding ring information

 * @ib: IB to add NOP packets to

 *

 * This is the generic pad_ib function for rings except SDMA

/**

 * amdgpu_ring_commit - tell the GPU to execute the new

 * commands on the ring buffer

 *

 * @ring: amdgpu_ring structure holding ring information

 *

 * Update the wptr (write pointer) to tell the GPU to

 * execute new commands on the ring buffer (all asics).

 We pad to match fetch size */

/**

 * amdgpu_ring_undo - reset the wptr

 *

 * @ring: amdgpu_ring structure holding ring information

 *

 * Reset the driver's copy of the wptr (all asics).

/**

 * amdgpu_ring_init - init driver ring struct.

 *

 * @adev: amdgpu_device pointer

 * @ring: amdgpu_ring structure holding ring information

 * @max_dw: maximum number of dw for ring alloc

 * @irq_src: interrupt source to use for this ring

 * @irq_type: interrupt type to use for this ring

 * @hw_prio: ring priority (NORMAL/HIGH)

 * @sched_score: optional score atomic shared with other schedulers

 *

 * Initialize the driver information for the selected ring (all asics).

 * Returns 0 on success, error on failure.

	/* Set the hw submission limit higher for KIQ because

	 * it's used for a number of gfx/compute tasks by both

	 * KFD and KGD which may have outstanding fences and

	 * it doesn't really use the gpu scheduler anyway;

	 * KIQ tasks get submitted directly to the ring.

 always set cond_exec_polling to CONTINUE */

 Allocate ring buffer */

/**

 * amdgpu_ring_fini - tear down the driver ring struct.

 *

 * @ring: amdgpu_ring structure holding ring information

 *

 * Tear down the driver information for the selected ring (all asics).

 Not to finish a ring which is not initialized */

/**

 * amdgpu_ring_emit_reg_write_reg_wait_helper - ring helper

 *

 * @ring: ring to write to

 * @reg0: register to write

 * @reg1: register to wait on

 * @ref: reference value to write/wait on

 * @mask: mask to wait on

 *

 * Helper for rings that don't support write and wait in a

 * single oneshot packet.

/**

 * amdgpu_ring_soft_recovery - try to soft recover a ring lockup

 *

 * @ring: ring to try the recovery on

 * @vmid: VMID we try to get going again

 * @fence: timedout fence

 *

 * Tries to get a ring proceeding again when it is stuck.

/*

 * Debugfs info

/* Layout of file is 12 bytes consisting of

 * - rptr

 * - wptr

 * - driver's copy of wptr

 *

 * followed by n-words of ring data

/**

 * amdgpu_ring_test_helper - tests ring and set sched readiness status

 *

 * @ring: ring to try the recovery on

 *

 * Tests ring and set sched readiness status

 *

 * Returns 0 on success, error on failure.

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 version of the fwar feature */

 cookie as an extra check for corrupt data */

 Legacy FW Type field */

 V2 FW ID field */

 FW Version */

 The VF ID (only in VF Attestation Table) */

 FW source indicator */

 Indicates whether the record is a valid entry */

 Ta ID (only in TA Attestation Table) */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 invalidate using legacy mode on vmid*/

 Disable AGP. */

 Program the system aperture low logical page number. */

 Set default page address. */

 Program "protection fault". */

 Setup TLB control */

 UC, uncached */

 Setup L2 cache */

 XXX for emulation, Refer to closed source code.*/

 Send no-retry XNACK on fault to suppress VM fault storm. */

		/*

		 * MMMC_VM_FB_LOCATION_BASE/TOP is NULL for VF, becuase they are

		 * VF copy registers so vbios post doesn't program them, for

		 * SRIOV driver need to program them

 GART Enable. */

 Disable all tables */

 Setup TLB control */

 Setup L2 cache */

/**

 * mmhub_v2_3_set_fault_enable_default - update GART/VM fault handling

 *

 * @adev: amdgpu_device pointer

 * @value: true redirects VM faults to the default page

 AMD_CG_SUPPORT_MC_MGCG */

 AMD_CG_SUPPORT_MC_LS */

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Don't suspend on bare metal if we are not going to HW reset the ASIC */

 disable BM */

 Wrong context, return error */

	/*

	 * Mode2 reset doesn't need any sync between nodes in XGMI hive, instead launch

	 * them together so that they can be completed asynchronously on multiple nodes

 For XGMI run all resets in parallel to speed up the process */

 For XGMI wait for all resets to complete before proceed */

 Reinit NBIF block */

 Reinit GFXHUB */

 Reload GFX firmware */

 Resume RLC, FW needs RLC alive to complete reset process */

 Wait for FW reset event complete */

 Wrong context, return error */

		/*

		 * Add this ASIC as tracked as reset was already

		 * complete successfully.

 Resume RAS */

 Update PSP FW topology after reset */

 Only mode2 is handled through reset control now */

/*

 * Copyright 2013 Advanced Micro Devices, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sub license, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL

 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,

 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 * USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

 * Authors: Christian König <christian.koenig@amd.com>

/**

 * vce_v2_0_ring_get_rptr - get read pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware read pointer

/**

 * vce_v2_0_ring_get_wptr - get write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware write pointer

/**

 * vce_v2_0_ring_set_wptr - set write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Commits the write pointer to the hardware

/**

 * vce_v2_0_start - start VCE block

 *

 * @adev: amdgpu_device pointer

 *

 * Setup and start the VCE block

 set BUSY flag */

 clear BUSY flag */

 Stall UMC and register bus before resetting VCPU */

 put LMI, VCPU, RBC etc... into reset */

/* LMI_MC/LMI_UMC always set in dynamic,

 * set {CGC_*_GATE_MODE, CGC_*_SW_GATE} = {0, 0}

 Exception for ECPU, IH, SEM, SYS blocks needs to be turned on/off by SW */

 set VCE_UENC_REG_CLOCK_GATING always in dynamic mode */

 VCE */

	/*

	 * Proper cleanups before halting the HW engine:

	 *   - cancel the delayed idle work

	 *   - enable powergating

	 *   - enable clockgating

	 *   - disable dpm

	 *

	 * TODO: to align with the VCN implementation, move the

	 * jobs for clockgating/powergating/dpm setting to

	 * ->set_powergating_state().

	/* This doesn't actually powergate the VCE block.

	 * That's done in the dpm code via the SMC.  This

	 * just re-inits the block as necessary.  The actual

	 * gating still happens in the dpm code.  We should

	 * revisit this when there is a cleaner line between

	 * the smc and the hw blocks

 amdgpu_vce_ring_emit_fence  x1 no user fence */

 amdgpu_vce_ring_emit_ib */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 setup interrupt control */

	/*

	 * INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=0 - dummy read disabled with msi, enabled without msi

	 * INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=1 - dummy read controlled by IH_DUMMY_RD_EN

 INTERRUPT_CNTL__IH_REQ_NONSNOOP_EN_MASK=1 if ring is in non-cacheable memory, e.g., vram */

 AMD_CG_SUPPORT_BIF_MGCG */

 AMD_CG_SUPPORT_BIF_LS */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

	/*

	 * We have to assume that there is no outstanding mapping.

	 * The ATC_VMID_PASID_MAPPING_UPDATE_STATUS bit could be 0 because

	 * a mapping is in progress or because a mapping finished

	 * and the SW cleared it.

	 * So the protocol is to always wait & clear.

 Mapping vmid to pasid also for IH block */

 HIQ is set during driver init period with vmid set to 0*/

 HQD registers extend from CP_MQD_BASE_ADDR to CP_HQD_EOP_WPTR_MEM. */

	/* Tonga errata: EOP RPTR/WPTR should be left unmodified.

	 * This is safe since EOP RPTR==WPTR for any inactive HQD

	 * on ASICs that do not support context-save.

	 * EOP writes/reads can start anywhere in the ring.

	/* Copy userspace write pointer value to register.

	 * Activate doorbell logic to monitor subsequent changes.

	/* read_user_ptr may take the mm->mmap_lock.

	 * release srbm_mutex to avoid circular dependency between

	 * srbm_mutex->mm_sem->reservation_ww_class_mutex->srbm_mutex.

	/* Workaround: If IQ timer is active and the wait time is close to or

	 * equal to 0, dequeueing is not safe. Wait until either the wait time

	 * is larger or timer is cleared. Also, ensure that IQ_REQ_PEND is

	 * cleared before continuing. Also, ensure wait times are set to at

	 * least 0x3.

 wait for 500 usecs at maximum */

 SEM-rearm is safe */

			/* Wait time 3 is safe for CP, but our MMIO read/write

			 * time is close to 1 microsecond, so check for 10 to

			 * leave more buffer room

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

static void gfx_v6_0_init_cp_pg_table(struct amdgpu_device *adev);

 GRBM_GFX_INDEX has a different offset on SI */

 GRBM_GFX_INDEX has a different offset on SI */

 cache the values for userspace */

 flush read cache over gart */

 poll interval */

 EVENT_WRITE_EOP - flush caches, send int */

 insert SWITCH_BUFFER packet before first IB in the ring frame */

/**

 * gfx_v6_0_ring_test_ib - basic ring IB test

 *

 * @ring: amdgpu_ring structure holding ring information

 * @timeout: timeout value in jiffies, or MAX_SCHEDULE_TIMEOUT

 *

 * Allocate an IB and execute it on the gfx ring (SI).

 * Provides a basic gfx ring test to verify that IBs are working.

 * Returns 0 on success, error on failure.

 PFP */

 CE */

 ME */

 Set the write pointer delay */

 ring 0 - compute and gfx */

 Set ring buffer size */

 Initialize the ring buffer's read and write pointers */

 set the wb address whether it's enabled or not */

 start the rings */

 ring1  - compute only */

 Set ring buffer size */

 read a gfx register */

 memory */

 equal */

 pfp or me */

 poll interval */

 synce CE with ME to prevent CE fetch CEIB before context switch done */

 wait for the invalidate to complete */

 always */

 me */

 ref */

 mask */

 poll interval */

 sync PFP to ME, otherwise we might get invalid PFP reads */

 synce CE with ME to prevent CE fetch CEIB before context switch done */

 init save restore block */

 clear state block */

 set up the cs buffer */

 Enable LBPW only for DDR3 */

/*

static void gfx_v6_0_update_cg(struct amdgpu_device *adev,

			       bool enable)

{

	gfx_v6_0_enable_gui_idle_interrupt(adev, false);

	if (enable) {

		gfx_v6_0_enable_mgcg(adev, true);

		gfx_v6_0_enable_cgcg(adev, true);

	} else {

		gfx_v6_0_enable_cgcg(adev, false);

		gfx_v6_0_enable_mgcg(adev, false);

	}

	gfx_v6_0_enable_gui_idle_interrupt(adev, true);

}

/*

static void gfx_v6_0_init_cp_pg_table(struct amdgpu_device *adev)

{

	const __le32 *fw_data;

	volatile u32 *dst_ptr;

	int me, i, max_me = 4;

	u32 bo_offset = 0;

	u32 table_offset, table_size;



	if (adev->asic_type == CHIP_KAVERI)

		max_me = 5;



	if (adev->gfx.rlc.cp_table_ptr == NULL)

		return;



	dst_ptr = adev->gfx.rlc.cp_table_ptr;

	for (me = 0; me < max_me; me++) {

		if (me == 0) {

			const struct gfx_firmware_header_v1_0 *hdr =

				(const struct gfx_firmware_header_v1_0 *)adev->gfx.ce_fw->data;

			fw_data = (const __le32 *)

				(adev->gfx.ce_fw->data +

				 le32_to_cpu(hdr->header.ucode_array_offset_bytes));

			table_offset = le32_to_cpu(hdr->jt_offset);

			table_size = le32_to_cpu(hdr->jt_size);

		} else if (me == 1) {

			const struct gfx_firmware_header_v1_0 *hdr =

				(const struct gfx_firmware_header_v1_0 *)adev->gfx.pfp_fw->data;

			fw_data = (const __le32 *)

				(adev->gfx.pfp_fw->data +

				 le32_to_cpu(hdr->header.ucode_array_offset_bytes));

			table_offset = le32_to_cpu(hdr->jt_offset);

			table_size = le32_to_cpu(hdr->jt_size);

		} else if (me == 2) {

			const struct gfx_firmware_header_v1_0 *hdr =

				(const struct gfx_firmware_header_v1_0 *)adev->gfx.me_fw->data;

			fw_data = (const __le32 *)

				(adev->gfx.me_fw->data +

				 le32_to_cpu(hdr->header.ucode_array_offset_bytes));

			table_offset = le32_to_cpu(hdr->jt_offset);

			table_size = le32_to_cpu(hdr->jt_size);

		} else if (me == 3) {

			const struct gfx_firmware_header_v1_0 *hdr =

				(const struct gfx_firmware_header_v1_0 *)adev->gfx.mec_fw->data;

			fw_data = (const __le32 *)

				(adev->gfx.mec_fw->data +

				 le32_to_cpu(hdr->header.ucode_array_offset_bytes));

			table_offset = le32_to_cpu(hdr->jt_offset);

			table_size = le32_to_cpu(hdr->jt_size);

		} else {

			const struct gfx_firmware_header_v1_0 *hdr =

				(const struct gfx_firmware_header_v1_0 *)adev->gfx.mec2_fw->data;

			fw_data = (const __le32 *)

				(adev->gfx.mec2_fw->data +

				 le32_to_cpu(hdr->header.ucode_array_offset_bytes));

			table_offset = le32_to_cpu(hdr->jt_offset);

			table_size = le32_to_cpu(hdr->jt_size);

		}



		for (i = 0; i < table_size; i ++) {

			dst_ptr[bo_offset + i] =

				cpu_to_le32(le32_to_cpu(fw_data[table_offset + i]));

		}



		bo_offset += table_size;

	}

}

 begin clear state */

 context control state */

 pa_sc_raster_config */

 end clear state */

 clear state */

 type 0 wave data */

 CP_COHER_CNTL */

 CP_COHER_SIZE */

 CP_COHER_BASE */

 poll interval */

 hdp flush / invalidate */

 gfx_v6_0_ring_emit_fence x3 for user fence, vm fence */

 gfx_v6_0_ring_emit_pipeline_sync */

 gfx_v6_0_ring_emit_vm_flush */

 gfx_v6_ring_emit_cntxcntl including vgt flush */

 SURFACE_SYNC */

 gfx_v6_0_ring_emit_ib */

 hdp flush / invalidate */

 gfx_v6_0_ring_emit_pipeline_sync */

 gfx_v6_0_ring_emit_vm_flush */

 gfx_v6_0_ring_emit_fence x3 for user fence, vm fence */

 SURFACE_SYNC */

 gfx_v6_0_ring_emit_ib */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Alex Deucher

/*

 * sDMA - System DMA

 * Starting with CIK, the GPU has new asynchronous

 * DMA engines.  These engines are used for compute

 * and gfx.  There are two DMA engines (SDMA0, SDMA1)

 * and each one supports 1 ring buffer used for gfx

 * and 2 queues used for compute.

 *

 * The programming model is very similar to the CP

 * (ring buffer, IBs, etc.), but sDMA has it's own

 * packet format that is different from the PM4 format

 * used by the CP. sDMA supports copying data, writing

 * embedded data, solid fills, and a number of other

 * things.  It also has support for tiling/detiling of

 * buffers.

/**

 * sdma_v2_4_init_microcode - load ucode images from disk

 *

 * @adev: amdgpu_device pointer

 *

 * Use the firmware interface to load the ucode images into

 * the driver (not loaded into hw).

 * Returns 0 on success, error on failure.

/**

 * sdma_v2_4_ring_get_rptr - get the current read pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Get the current rptr from the hardware (VI+).

 XXX check if swapping is necessary on BE */

/**

 * sdma_v2_4_ring_get_wptr - get the current write pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Get the current wptr from the hardware (VI+).

/**

 * sdma_v2_4_ring_set_wptr - commit the write pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Write the wptr back to the hardware (VI+).

/**

 * sdma_v2_4_ring_emit_ib - Schedule an IB on the DMA engine

 *

 * @ring: amdgpu ring pointer

 * @job: job to retrieve vmid from

 * @ib: IB object to schedule

 * @flags: unused

 *

 * Schedule an IB in the DMA ring (VI).

 IB packet must end on a 8 DW boundary */

 base must be 32 byte aligned */

/**

 * sdma_v2_4_ring_emit_hdp_flush - emit an hdp flush on the DMA ring

 *

 * @ring: amdgpu ring pointer

 *

 * Emit an hdp flush packet on the requested DMA ring.

 == */

 reference */

 mask */

 retry count, poll interval */

/**

 * sdma_v2_4_ring_emit_fence - emit a fence on the DMA ring

 *

 * @ring: amdgpu ring pointer

 * @addr: address

 * @seq: sequence number

 * @flags: fence related flags

 *

 * Add a DMA fence packet to the ring to write

 * the fence seq number and DMA trap packet to generate

 * an interrupt if needed (VI).

 write the fence */

 optionally write high bits as well */

 generate an interrupt */

/**

 * sdma_v2_4_gfx_stop - stop the gfx async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Stop the gfx async dma ring buffers (VI).

/**

 * sdma_v2_4_rlc_stop - stop the compute async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Stop the compute async dma queues (VI).

 XXX todo */

/**

 * sdma_v2_4_enable - stop the async dma engines

 *

 * @adev: amdgpu_device pointer

 * @enable: enable/disable the DMA MEs.

 *

 * Halt or unhalt the async dma engines (VI).

/**

 * sdma_v2_4_gfx_resume - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the gfx DMA ring buffers and enable them (VI).

 * Returns 0 for success, error for failure.

 SDMA GFX */

 Set ring buffer size in dwords */

 Initialize the ring buffer's read and write pointers */

 set the wb address whether it's enabled or not */

 enable DMA RB */

 enable DMA IBs */

/**

 * sdma_v2_4_rlc_resume - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the compute DMA queues and enable them (VI).

 * Returns 0 for success, error for failure.

 XXX todo */

/**

 * sdma_v2_4_start - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the DMA engines and enable them (VI).

 * Returns 0 for success, error for failure.

 halt the engine before programing */

 start the gfx rings and rlc compute queues */

/**

 * sdma_v2_4_ring_test_ring - simple async dma engine test

 *

 * @ring: amdgpu_ring structure holding ring information

 *

 * Test the DMA engine by writing using it to write an

 * value to memory. (VI).

 * Returns 0 for success, error for failure.

/**

 * sdma_v2_4_ring_test_ib - test an IB on the DMA engine

 *

 * @ring: amdgpu_ring structure holding ring information

 * @timeout: timeout value in jiffies, or MAX_SCHEDULE_TIMEOUT

 *

 * Test a simple IB in the DMA ring (VI).

 * Returns 0 on success, error on failure.

/**

 * sdma_v2_4_vm_copy_pte - update PTEs by copying them from the GART

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @src: src addr to copy from

 * @count: number of page entries to update

 *

 * Update PTEs by copying them from the GART using sDMA (CIK).

 src/dst endian swap */

/**

 * sdma_v2_4_vm_write_pte - update PTEs by writing them manually

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @value: dst addr to write into pe

 * @count: number of page entries to update

 * @incr: increase next addr by incr bytes

 *

 * Update PTEs by writing them manually using sDMA (CIK).

/**

 * sdma_v2_4_vm_set_pte_pde - update the page tables using sDMA

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @addr: dst addr to write into pe

 * @count: number of page entries to update

 * @incr: increase next addr by incr bytes

 * @flags: access flags

 *

 * Update the page tables using sDMA (CIK).

 for physically contiguous pages (vram) */

 dst addr */

 mask */

 value */

 increment size */

 number of entries */

/**

 * sdma_v2_4_ring_pad_ib - pad the IB to the required number of dw

 *

 * @ring: amdgpu_ring structure holding ring information

 * @ib: indirect buffer to fill with padding

 *

/**

 * sdma_v2_4_ring_emit_pipeline_sync - sync the pipeline

 *

 * @ring: amdgpu_ring pointer

 *

 * Make sure all previous operations are completed (CIK).

 wait for idle */

 equal */

 reference */

 mask */

 retry count, poll interval */

/**

 * sdma_v2_4_ring_emit_vm_flush - cik vm flush using sDMA

 *

 * @ring: amdgpu_ring pointer

 * @vmid: vmid number to use

 * @pd_addr: address

 *

 * Update the page table base and flush the VM TLB

 * using sDMA (VI).

 wait for flush */

 always */

 reference */

 mask */

 retry count, poll interval */

 SDMA trap event */

 SDMA Privileged inst */

 SDMA Privileged inst */

 sdma0 */

 sdma1 */

 Wait a little for things to settle down */

 XXX compute */

 XXX compute */

 XXX compute */

 XXX compute */

 XXX handled via the smc on VI */

 sdma_v2_4_ring_emit_hdp_flush */

 hdp invalidate */

 sdma_v2_4_ring_emit_pipeline_sync */

 sdma_v2_4_ring_emit_vm_flush */

 sdma_v2_4_ring_emit_fence x3 for user fence, vm fence */

 sdma_v2_4_ring_emit_ib */

/**

 * sdma_v2_4_emit_copy_buffer - copy buffer using the sDMA engine

 *

 * @ib: indirect buffer to copy to

 * @src_offset: src GPU address

 * @dst_offset: dst GPU address

 * @byte_count: number of bytes to xfer

 * @tmz: unused

 *

 * Copy GPU buffers using the DMA engine (VI).

 * Used by the amdgpu ttm implementation to move pages if

 * registered as the asic copy callback.

 src/dst endian swap */

/**

 * sdma_v2_4_emit_fill_buffer - fill buffer using the sDMA engine

 *

 * @ib: indirect buffer to copy to

 * @src_data: value to write to buffer

 * @dst_offset: dst GPU address

 * @byte_count: number of bytes to xfer

 *

 * Fill GPU buffers using the DMA engine (VI).

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 address block */

	/* Check sOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Wait for bootloader to signify that is ready having bit 31 of C2PMSG_35 set to 1 */

 Copy PSP System Driver binary to memory */

 Provide the sys driver to bootloader */

 there might be handshake issue with hardware which needs delay */

	/* Check sOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Wait for bootloader to signify that is ready having bit 31 of C2PMSG_35 set to 1 */

 Copy Secure OS binary to PSP memory */

 Provide the PSP secure OS to bootloader */

 there might be handshake issue with hardware which needs delay */

 Change IH ring for VMC */

 Change IH ring for UMC */

 allocate 4k Page of Local Frame Buffer memory for ring */

 Write low address of the ring to C2PMSG_102 */

 Write high address of the ring to C2PMSG_103 */

 Write the ring initialization command to C2PMSG_101 */

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) in C2PMSG_101 */

 Write low address of the ring to C2PMSG_69 */

 Write high address of the ring to C2PMSG_70 */

 Write size of ring to C2PMSG_71 */

 Write the ring initialization command to C2PMSG_64 */

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) in C2PMSG_64 */

 Write the ring destroy command*/

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) */

send the mode 1 reset command*/

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * amdgpu_debugfs_process_reg_op - Handle MMIO register reads/writes

 *

 * @read: True if reading

 * @f: open file handle

 * @buf: User buffer to write/read to

 * @size: Number of bytes to write/read

 * @pos:  Offset to seek to

 *

 * This debugfs entry has special meaning on the offset being sought.

 * Various bits have different meanings:

 *

 * Bit 62:  Indicates a GRBM bank switch is needed

 * Bit 61:  Indicates a SRBM bank switch is needed (implies bit 62 is

 * 	    zero)

 * Bits 24..33: The SE or ME selector if needed

 * Bits 34..43: The SH (or SA) or PIPE selector if needed

 * Bits 44..53: The INSTANCE (or CU/WGP) or QUEUE selector if needed

 *

 * Bit 23:  Indicates that the PM power gating lock should be held

 * 	    This is necessary to read registers that might be

 * 	    unreliable during a power gating transistion.

 *

 * The lower bits are the BYTE offset of the register to read.  This

 * allows reading multiple registers in a single call and having

 * the returned size reflect that.

 are we reading registers for which a PG lock is necessary? */

/*

 * amdgpu_debugfs_regs_read - Callback for reading MMIO registers

/*

 * amdgpu_debugfs_regs_write - Callback for writing MMIO registers

/**

 * amdgpu_debugfs_regs_pcie_read - Read from a PCIE register

 *

 * @f: open file handle

 * @buf: User buffer to store read data in

 * @size: Number of bytes to read

 * @pos:  Offset to seek to

 *

 * The lower bits are the BYTE offset of the register to read.  This

 * allows reading multiple registers in a single call and having

 * the returned size reflect that.

/**

 * amdgpu_debugfs_regs_pcie_write - Write to a PCIE register

 *

 * @f: open file handle

 * @buf: User buffer to write data from

 * @size: Number of bytes to write

 * @pos:  Offset to seek to

 *

 * The lower bits are the BYTE offset of the register to write.  This

 * allows writing multiple registers in a single call and having

 * the returned size reflect that.

/**

 * amdgpu_debugfs_regs_didt_read - Read from a DIDT register

 *

 * @f: open file handle

 * @buf: User buffer to store read data in

 * @size: Number of bytes to read

 * @pos:  Offset to seek to

 *

 * The lower bits are the BYTE offset of the register to read.  This

 * allows reading multiple registers in a single call and having

 * the returned size reflect that.

/**

 * amdgpu_debugfs_regs_didt_write - Write to a DIDT register

 *

 * @f: open file handle

 * @buf: User buffer to write data from

 * @size: Number of bytes to write

 * @pos:  Offset to seek to

 *

 * The lower bits are the BYTE offset of the register to write.  This

 * allows writing multiple registers in a single call and having

 * the returned size reflect that.

/**

 * amdgpu_debugfs_regs_smc_read - Read from a SMC register

 *

 * @f: open file handle

 * @buf: User buffer to store read data in

 * @size: Number of bytes to read

 * @pos:  Offset to seek to

 *

 * The lower bits are the BYTE offset of the register to read.  This

 * allows reading multiple registers in a single call and having

 * the returned size reflect that.

/**

 * amdgpu_debugfs_regs_smc_write - Write to a SMC register

 *

 * @f: open file handle

 * @buf: User buffer to write data from

 * @size: Number of bytes to write

 * @pos:  Offset to seek to

 *

 * The lower bits are the BYTE offset of the register to write.  This

 * allows writing multiple registers in a single call and having

 * the returned size reflect that.

/**

 * amdgpu_debugfs_gca_config_read - Read from gfx config data

 *

 * @f: open file handle

 * @buf: User buffer to store read data in

 * @size: Number of bytes to read

 * @pos:  Offset to seek to

 *

 * This file is used to access configuration data in a somewhat

 * stable fashion.  The format is a series of DWORDs with the first

 * indicating which revision it is.  New content is appended to the

 * end so that older software can still read the data.

 version, increment each time something is added */

 rev==1 */

 rev==2 */

 rev==3 */

/**

 * amdgpu_debugfs_sensor_read - Read from the powerplay sensors

 *

 * @f: open file handle

 * @buf: User buffer to store read data in

 * @size: Number of bytes to read

 * @pos:  Offset to seek to

 *

 * The offset is treated as the BYTE address of one of the sensors

 * enumerated in amd/include/kgd_pp_interface.h under the

 * 'amd_pp_sensors' enumeration.  For instance to read the UVD VCLK

 * you would use the offset 3 * 4 = 12.

 convert offset to sensor number */

/** amdgpu_debugfs_wave_read - Read WAVE STATUS data

 *

 * @f: open file handle

 * @buf: User buffer to store read data in

 * @size: Number of bytes to read

 * @pos:  Offset to seek to

 *

 * The offset being sought changes which wave that the status data

 * will be returned for.  The bits are used as follows:

 *

 * Bits 0..6: 	Byte offset into data

 * Bits 7..14:	SE selector

 * Bits 15..22:	SH/SA selector

 * Bits 23..30: CU/{WGP+SIMD} selector

 * Bits 31..36: WAVE ID selector

 * Bits 37..44: SIMD ID selector

 *

 * The returned data begins with one DWORD of version information

 * Followed by WAVE STATUS registers relevant to the GFX IP version

 * being used.  See gfx_v8_0_read_wave_data() for an example output.

 decode offset */

 switch to the specific se/sh/cu */

/** amdgpu_debugfs_gpr_read - Read wave gprs

 *

 * @f: open file handle

 * @buf: User buffer to store read data in

 * @size: Number of bytes to read

 * @pos:  Offset to seek to

 *

 * The offset being sought changes which wave that the status data

 * will be returned for.  The bits are used as follows:

 *

 * Bits 0..11:	Byte offset into data

 * Bits 12..19:	SE selector

 * Bits 20..27:	SH/SA selector

 * Bits 28..35: CU/{WGP+SIMD} selector

 * Bits 36..43: WAVE ID selector

 * Bits 37..44: SIMD ID selector

 * Bits 52..59: Thread selector

 * Bits 60..61: Bank selector (VGPR=0,SGPR=1)

 *

 * The return data comes from the SGPR or VGPR register bank for

 * the selected operational unit.

 decode offset */

 switch to the specific se/sh/cu */

/**

 * amdgpu_debugfs_gfxoff_write - Enable/disable GFXOFF

 *

 * @f: open file handle

 * @buf: User buffer to write data from

 * @size: Number of bytes to write

 * @pos:  Offset to seek to

 *

 * Write a 32-bit zero to disable or a 32-bit non-zero to enable

/**

 * amdgpu_debugfs_gfxoff_read - read gfxoff status

 *

 * @f: open file handle

 * @buf: User buffer to store read data in

 * @size: Number of bytes to read

 * @pos:  Offset to seek to

/**

 * amdgpu_debugfs_regs_init -	Initialize debugfs entries that provide

 * 				register access.

 *

 * @adev: The device to attach the debugfs entries to

 Avoid accidently unparking the sched thread during GPU reset */

 hold on the scheduler */

 go on the scheduler */

 remove job from ring_mirror_list */

 mark the job as preempted */

 the last preemption failed */

 Avoid accidently unparking the sched thread during GPU reset */

 stop the scheduler */

 preempt the IB */

 swap out the old fences */

 resubmit unfinished jobs */

 wait for jobs finished */

 signal the old fences */

 restart the scheduler */

 Register debugfs entries for amdgpu_ttm */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 The base should be same b/t 2 mmhubs on Acrturus. Read one here. */

 Program the AGP BAR */

 Program the system aperture low logical page number. */

 Set default page address. */

 Program "protection fault". */

 Setup TLB control */

 XXX for emulation. */

 Setup L2 cache */

 XXX for emulation, Refer to closed source code.*/

 Send no-retry XNACK on fault to suppress VM fault storm. */

 GART Enable. */

 Disable all tables */

 Setup TLB control */

 Setup L2 cache */

/**

 * mmhub_v9_4_set_fault_enable_default - update GART/VM fault handling

 *

 * @adev: amdgpu_device pointer

 * @value: true redirects VM faults to the default page

 AMD_CG_SUPPORT_MC_MGCG */

 AMD_CG_SUPPORT_MC_LS */

 MMHUB Range 0 */

 MMHUB Range 1 */

 MMHAB Range 2*/

 MMHUB Rang 3 */

 MMHUB Range 4 */

 MMHUAB Range 5 */

 MMHUB Range 6 */

 MMHUB Range 7*/

 read back edc counter registers to reset the counters to 0 */

			/* SDP read/write error/parity error in FUE_IS_FATAL mode

			 * can cause system fatal error in arcturas. Harvest the error

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 SDMA CSA reside in the 3rd page of CSA */

/*

 * GPU SDMA IP block helpers function.

 don't enable OS preemption on SDMA under SRIOV */

			/* the cb member will not be used by

			 * amdgpu_ras_interrupt_remove_handler, init it only

			 * to cheat the check in ras_late_fini

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * vcn_v2_0_early_init - set function pointers

 *

 * @handle: amdgpu_device pointer

 *

 * Set ring and irq function pointers

/**

 * vcn_v2_0_sw_init - sw init for VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * Load firmware and sw initialization

 VCN DEC TRAP */

 VCN ENC TRAP */

/**

 * vcn_v2_0_sw_fini - sw fini for VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * VCN suspend and free up sw allocation

/**

 * vcn_v2_0_hw_init - start and test VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * Initialize the hardware, boot up the VCPU and do some testing

Disable vcn decode for sriov

/**

 * vcn_v2_0_hw_fini - stop the hardware block

 *

 * @handle: amdgpu_device pointer

 *

 * Stop the VCN block, mark ring as not ready any more

/**

 * vcn_v2_0_suspend - suspend VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * HW fini and suspend VCN block

/**

 * vcn_v2_0_resume - resume VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * Resume firmware and hw init VCN block

/**

 * vcn_v2_0_mc_resume - memory controller programming

 *

 * @adev: amdgpu_device pointer

 *

 * Let the VCN memory controller know it's offsets

 cache window 0: fw */

 cache window 1: stack */

 cache window 2: context */

 non-cache window */

 cache window 0: fw */

 cache window 1: stack */

 cache window 2: context */

 non-cache window */

 VCN global tiling registers */

/**

 * vcn_v2_0_disable_clock_gating - disable VCN clock gating

 *

 * @adev: amdgpu_device pointer

 *

 * Disable clock gating for VCN block

 UVD disable CGC */

 turn on */

 enable sw clock gating control */

 turn off clock gating */

 turn on SUVD clock gating */

 turn on sw mode in UVD_SUVD_CGC_CTRL */

/**

 * vcn_v2_0_enable_clock_gating - enable VCN clock gating

 *

 * @adev: amdgpu_device pointer

 *

 * Enable clock gating for VCN block

 enable UVD CGC */

	/* polling UVD_PGFSM_STATUS to confirm UVDM_PWR_STATUS,

 Before power off, this indicator has to be turned on */

 enable dynamic power gating mode */

 enable clock gating */

 enable VCPU clock */

 disable master interupt */

 setup mmUVD_LMI_CTRL */

 release VCPU reset to boot */

 enable LMI MC and UMC channels */

 enable master interrupt */

 force RBC into idle state */

 Stall DPG before WPTR/RPTR reset */

 set the write pointer delay */

 set the wb address */

 program the RB_BASE for ring buffer */

 Initialize the ring buffer's read and write pointers */

 Unstall DPG */

 set uvd status busy */

SW clock gating */

 enable VCPU clock */

 disable master interrupt */

 setup mmUVD_LMI_CTRL */

 setup mmUVD_MPC_CNTL */

 setup UVD_MPC_SET_MUXA0 */

 setup UVD_MPC_SET_MUXB0 */

 setup mmUVD_MPC_SET_MUX */

 release VCPU reset to boot */

 enable LMI MC and UMC channels */

 disable byte swapping */

 swap (8 in 32) RB and IB */

 enable master interrupt */

 clear the busy bit of VCN_STATUS */

 force RBC into idle state */

 program the RB_BASE for ring buffer */

 Initialize the ring buffer's read and write pointers */

 Wait for power status to be 1 */

 wait for read ptr to be equal to write ptr */

 disable dynamic power gating mode */

 wait for uvd idle */

 stall UMC channel */

 disable VCPU clock */

 reset LMI UMC */

 reset LMI */

 reset VCPU */

 clear status */

 pause/unpause if state is changed */

 pause DPG */

 wait for ACK */

 Stall DPG before WPTR/RPTR reset */

 Restore */

 Unstall DPG */

 unpause dpg, no need to wait */

 wait for STATUS to clear */

 disable HW gating and enable Sw gating */

/**

 * vcn_v2_0_dec_ring_get_rptr - get read pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware read pointer

/**

 * vcn_v2_0_dec_ring_get_wptr - get write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware write pointer

/**

 * vcn_v2_0_dec_ring_set_wptr - set write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Commits the write pointer to the hardware

/**

 * vcn_v2_0_dec_ring_insert_start - insert a start command

 *

 * @ring: amdgpu_ring pointer

 *

 * Write a start command to the ring.

/**

 * vcn_v2_0_dec_ring_insert_end - insert a end command

 *

 * @ring: amdgpu_ring pointer

 *

 * Write a end command to the ring.

/**

 * vcn_v2_0_dec_ring_insert_nop - insert a nop command

 *

 * @ring: amdgpu_ring pointer

 * @count: the number of NOP packets to insert

 *

 * Write a nop command to the ring.

/**

 * vcn_v2_0_dec_ring_emit_fence - emit an fence & trap command

 *

 * @ring: amdgpu_ring pointer

 * @addr: address

 * @seq: sequence number

 * @flags: fence related flags

 *

 * Write a fence and a trap command to the ring.

/**

 * vcn_v2_0_dec_ring_emit_ib - execute indirect buffer

 *

 * @ring: amdgpu_ring pointer

 * @job: job to retrieve vmid from

 * @ib: indirect buffer to execute

 * @flags: unused

 *

 * Write ring commands to execute the indirect buffer

 wait for register write */

/**

 * vcn_v2_0_enc_ring_get_rptr - get enc read pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware enc read pointer

 /**

 * vcn_v2_0_enc_ring_get_wptr - get enc write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware enc write pointer

 /**

 * vcn_v2_0_enc_ring_set_wptr - set enc write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Commits the enc write pointer to the hardware

/**

 * vcn_v2_0_enc_ring_emit_fence - emit an enc fence & trap command

 *

 * @ring: amdgpu_ring pointer

 * @addr: address

 * @seq: sequence number

 * @flags: fence related flags

 *

 * Write enc a fence and a trap command to the ring.

/**

 * vcn_v2_0_enc_ring_emit_ib - enc execute indirect buffer

 *

 * @ring: amdgpu_ring pointer

 * @job: job to retrive vmid from

 * @ib: indirect buffer to execute

 * @flags: unused

 *

 * Write enc ring commands to execute the indirect buffer

 wait for reg writes */

	/* This doesn't actually powergate the VCN block.

	 * That's done in the dpm code via the SMC.  This

	 * just re-inits the block as necessary.  The actual

	 * gating still happens in the dpm code.  We should

	 * revisit this when there is a cleaner line between

	 * the smc and the hw blocks

	/* 1, write to vce_mmsch_vf_ctx_addr_lo/hi register with GPU mc addr

	 * of memory descriptor location

 2, update vmid of descriptor */

 use domain0 for MM scheduler */

 3, notify mmsch about the size of this descriptor */

 4, set resp to zero */

	/* 5, kick off the initialization and wait until

	 * VCE_MMSCH_VF_MAILBOX_RESP becomes non-zero

 mc resume*/

 force RBC into idle state */

 add end packet */

 vcn_v2_0_dec_ring_emit_vm_flush */

 vcn_v2_0_dec_ring_emit_fence x2 vm fence */

 vcn_v2_0_dec_ring_emit_ib */

 vcn_v2_0_enc_ring_emit_vm_flush */

 vcn_v2_0_enc_ring_emit_fence x2 vm fence */

 vcn_v2_0_enc_ring_insert_end */

 vcn_v2_0_enc_ring_emit_ib */

 SPDX-License-Identifier: MIT

/* Copyright Red Hat Inc 2010.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Author : Dave Airlie <airlied@redhat.com>

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 *          Jerome Glisse

/**

 * amdgpu_driver_unload_kms - Main unload function for KMS.

 *

 * @dev: drm dev pointer

 *

 * This is the main unload function for KMS (all asics).

 * Returns 0 on success.

/**

 * amdgpu_driver_load_kms - Main load function for KMS.

 *

 * @adev: pointer to struct amdgpu_device

 * @flags: device flags

 *

 * This is the main load function for KMS (all asics).

 * Returns 0 on success, error on failure.

	/* amdgpu_device_init should report only fatal error

	 * like memory allocation failure or iomapping failure,

	 * or memory manager initialization failure, it must

	 * properly initialize the GPU MC controller and permit

	 * VRAM allocation

 enable runpm by default for atpx */

 enable runpm by default for boco */

 enable runpm if runpm=1 */

 turn runpm on if noretry=0 */

 enable runpm on CI+ */

	/* Call ACPI methods: require modeset init

	 * but failure is not fatal

 only need to skip on ATPX */

 we want direct complete for BOCO */

		/*

		 * For runpm implemented via BACO, PMFW will handle the

		 * timing for BACO in and out:

		 *   - put ASIC into BACO state only when both video and

		 *     audio functions are in D3 state.

		 *   - pull ASIC out of BACO state when either video or

		 *     audio function is in D0 state.

		 * Also, at startup, PMFW assumes both functions are in

		 * D0 state.

		 *

		 * So if snd driver was loaded prior to amdgpu driver

		 * and audio function was put into D3 state, there will

		 * be no PMFW-aware D-state transition(D0->D3) on runpm

		 * suspend. Thus the BACO will be not correctly kicked in.

		 *

		 * Via amdgpu_get_audio_func(), the audio dev is put

		 * into D0 state. Then there will be a PMFW-aware D-state

		 * transition(D0->D3) on runpm suspend.

 balance pm_runtime_get_sync in amdgpu_driver_unload_kms */

/*

 * Userspace get information ioctl

/**

 * amdgpu_info_ioctl - answer a device specific request.

 *

 * @dev: drm device pointer

 * @data: request object

 * @filp: drm filp

 *

 * This function is used to pass device specific parameters to the userspace

 * drivers.  Examples include: pci device id, pipeline parms, tiling params,

 * etc. (all asics).

 * Returns 0 on success, -EINVAL on failure.

 We only support one instance of each IP block right now. */

		/* set full masks if the userspace set all bits

 return all clocks in KHz */

 Older VCE FW versions are buggy and can handle only 40bits */

 Starting Polaris, we support unlimited UVD handles */

 get sclk in Mhz */

 get mclk in Mhz */

 get temperature in millidegrees C */

 get GPU load */

 get average GPU power */

 get VDDNB in millivolts */

 get VDDGFX in millivolts */

 get stable pstate sclk in Mhz */

 get stable pstate mclk in Mhz */

/*

 * Outdated mess for old drm with Xorg being in charge (void function now).

/**

 * amdgpu_driver_lastclose_kms - drm callback for last close

 *

 * @dev: drm dev pointer

 *

 * Switch vga_switcheroo state after last close (all asics).

/**

 * amdgpu_driver_open_kms - drm callback for open

 *

 * @dev: drm dev pointer

 * @file_priv: drm file

 *

 * On device open, init vm on cayman+ (all asics).

 * Returns 0 on success, error on failure.

 Ensure IB tests are run on ring */

/**

 * amdgpu_driver_postclose_kms - drm callback for post close

 *

 * @dev: drm dev pointer

 * @file_priv: drm file

 *

 * On device post close, tear down vm on cayman+ (all asics).

 TODO: how to handle reserve failure */

/*

 * VBlank related functions.

/**

 * amdgpu_get_vblank_counter_kms - get frame count

 *

 * @crtc: crtc to get the frame count from

 *

 * Gets the frame count on the requested crtc (all asics).

 * Returns frame count on success, -EINVAL on failure.

	/* The hw increments its frame counter at start of vsync, not at start

	 * of vblank, as is required by DRM core vblank counter handling.

	 * Cook the hw count here to make it appear to the caller as if it

	 * incremented at start of vblank. We measure distance to start of

	 * vblank in vpos. vpos therefore will be >= 0 between start of vblank

	 * and start of vsync, so vpos >= 0 means to bump the hw frame counter

	 * result by 1 to give the proper appearance to caller.

		/* Repeat readout if needed to provide stable result if

		 * we cross start of vsync during the queries.

			/* Ask amdgpu_display_get_crtc_scanoutpos to return

			 * vpos as distance to start of vblank, instead of

			 * regular vertical scanout pos.

			/* Bump counter if we are at >= leading edge of vblank,

			 * but before vsync where vpos would turn negative and

			 * the hw counter really increments.

 Fallback to use value as is. */

/**

 * amdgpu_enable_vblank_kms - enable vblank interrupt

 *

 * @crtc: crtc to enable vblank interrupt for

 *

 * Enable the interrupt on the requested crtc (all asics).

 * Returns 0 on success, -EINVAL on failure.

/**

 * amdgpu_disable_vblank_kms - disable vblank interrupt

 *

 * @crtc: crtc to disable vblank interrupt for

 *

 * Disable the interrupt on the requested crtc (all asics).

/*

 * Debugfs info

 VCE */

 UVD */

 GMC */

 ME */

 PFP */

 CE */

 RLC */

 RLC SAVE RESTORE LIST CNTL */

 RLC SAVE RESTORE LIST GPM MEM */

 RLC SAVE RESTORE LIST SRM MEM */

 MEC */

 MEC2 */

 PSP SOS */

 PSP ASD */

 SMC */

 SDMA */

 VCN */

 DMCU */

 DMCUB */

 TOC */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.



 * * Author: Monk.liu@amd.com

/*

 * amdgpu_map_static_csa should be called during amdgpu_vm_init

 * it maps virtual address amdgpu_csa_vaddr() to this VM, and each command

 * submission of GFX should use this virtual address within META_DATA init

 * package to support SRIOV gfx preemption.

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 NBIF_MGCG_CTRL_LCLK */

 SYSHUB_MGCG_CTRL_SOCCLK */

 SYSHUB_MGCG_CTRL_SHUBCLK */

 AMD_CG_SUPPORT_BIF_MGCG */

 AMD_CG_SUPPORT_BIF_LS */

 setup interrupt control */

	/* INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=0 - dummy read disabled with msi, enabled without msi

	 * INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=1 - dummy read controlled by IH_DUMMY_RD_EN

 INTERRUPT_CNTL__IH_REQ_NONSNOOP_EN_MASK=1 if ring is in non-cacheable memory, e.g., vram */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Interrupts

 * Starting with r6xx, interrupts are handled via a ring buffer.

 * Ring buffers are areas of GPU accessible memory that the GPU

 * writes interrupt vectors into and the host reads vectors out of.

 * There is a rptr (read pointer) that determines where the

 * host is currently reading, and a wptr (write pointer)

 * which determines where the GPU has written.  When the

 * pointers are equal, the ring is idle.  When the GPU

 * writes vectors to the ring buffer, it increments the

 * wptr.  When there is an interrupt, the host then starts

 * fetching commands and processing them until the pointers are

 * equal again at which point it updates the rptr.

/**

 * iceland_ih_enable_interrupts - Enable the interrupt ring buffer

 *

 * @adev: amdgpu_device pointer

 *

 * Enable the interrupt ring buffer (VI).

/**

 * iceland_ih_disable_interrupts - Disable the interrupt ring buffer

 *

 * @adev: amdgpu_device pointer

 *

 * Disable the interrupt ring buffer (VI).

 set rptr, wptr to 0 */

/**

 * iceland_ih_irq_init - init and enable the interrupt ring

 *

 * @adev: amdgpu_device pointer

 *

 * Allocate a ring buffer for the interrupt controller,

 * enable the RLC, disable interrupts, enable the IH

 * ring buffer and enable it (VI).

 * Called at device load and reume.

 * Returns 0 for success, errors for failure.

 disable irqs */

 setup interrupt control */

	/* INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=0 - dummy read disabled with msi, enabled without msi

	 * INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=1 - dummy read controlled by IH_DUMMY_RD_EN

 INTERRUPT_CNTL__IH_REQ_NONSNOOP_EN_MASK=1 if ring is in non-cacheable memory, e.g., vram */

 Ring Buffer base. [39:8] of 40-bit address of the beginning of the ring buffer*/

 Ring Buffer write pointer writeback. If enabled, IH_RB_WPTR register value is written to memory */

 set the writeback address whether it's enabled or not */

 set rptr, wptr to 0 */

 Default settings for IH_CNTL (disabled at first) */

 enable interrupts */

/**

 * iceland_ih_irq_disable - disable interrupts

 *

 * @adev: amdgpu_device pointer

 *

 * Disable interrupts on the hw (VI).

 Wait and acknowledge irq */

/**

 * iceland_ih_get_wptr - get the IH ring buffer wptr

 *

 * @adev: amdgpu_device pointer

 * @ih: IH ring buffer to fetch wptr

 *

 * Get the IH ring buffer wptr from either the register

 * or the writeback memory buffer (VI).  Also check for

 * ring buffer overflow and deal with it.

 * Used by cz_irq_process(VI).

 * Returns the value of the wptr.

 Double check that the overflow wasn't already cleared. */

	/* When a ring buffer overflow happen start parsing interrupt

	 * from the last not overwritten vector (wptr + 16). Hopefully

	 * this should allow us to catchup.

/**

 * iceland_ih_decode_iv - decode an interrupt vector

 *

 * @adev: amdgpu_device pointer

 * @ih: IH ring buffer to decode

 * @entry: IV entry to place decoded information into

 *

 * Decodes the interrupt vector at the current rptr

 * position and also advance the position.

 wptr/rptr are in bytes! */

 wptr/rptr are in bytes! */

/**

 * iceland_ih_set_rptr - set the IH ring buffer rptr

 *

 * @adev: amdgpu_device pointer

 * @ih: IH ring buffer to set rptr

 *

 * Set the IH ring buffer rptr.

 read MC_STATUS */

 Wait a little for things to settle down */

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Author: Stanislaw Skowronek

 translate destination alignment field to the source alignment encoding */

		/* get_unaligned_le32 avoids unaligned accesses from atombios

 functionally, a nop */

 jiffies wrap around we will just wait a little longer */

 nothing */

 op needs to full dst value */

 op needs to full dst value */

 reset data block */

 reset reg block */

 reset fb window */

 reset io mode */

 reset divmul */

 do not know where to find name */

	/*

	 * skip the atombios strings, usually 4

	 * 1st is P/N, 2nd is ASIC, 3rd is PCI type, 4th is Memory type

 skip the following 2 chars: 0x0D 0x0A */

 find anchor ATOMBIOSBK-AMD */

 skip ATOMBIOSBK-AMD VER */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 AMD_CG_SUPPORT_ATHUB_MGCG */

 AMD_CG_SUPPORT_ATHUB_LS */

/*

 * Copyright 2011 Advanced Micro Devices, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sub license, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL

 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,

 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 * USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

/*

 * Authors:

 *    Christian König <deathsimple@vodafone.de>

 1 second timeout */

 Firmware versions for VI */

 Polaris10/11 firmware version */

 Firmware Names */

 These are common relative offsets for all asics, from uvd_7_0_offset.h,  */

/*

 * amdgpu_uvd_cs_ctx - Command submission parser context

 *

 * Used for emulating virtual memory support on UVD 4.2.

 does the IB has a msg command */

 minimum buffer sizes */

 Set the default UVD handles that the firmware can handle */

		/*

		 * Limit the number of UVD handles depending on microcode major

		 * and minor versions. The firmware version which has 40 UVD

		 * instances support is 1.80. So all subsequent versions should

		 * also have the same support.

 from uvd v5.0 HW addressing capacity increased to 64 bits */

/**

 * amdgpu_uvd_entity_init - init entity

 *

 * @adev: amdgpu_device pointer

 *

 only valid for physical mode */

 re-write 0 since err_event_athub will corrupt VCPU buffer */

 to restore uvd fence seq */

/**

 * amdgpu_uvd_cs_pass1 - first parsing round

 *

 * @ctx: UVD parser context

 *

 * Make sure UVD message and feedback buffers are in VRAM and

 * nobody is violating an 256MB boundary.

 check if it's a message or feedback command */

 yes, force it into VRAM */

/**

 * amdgpu_uvd_cs_msg_decode - handle UVD decode message

 *

 * @adev: amdgpu_device pointer

 * @msg: pointer to message structure

 * @buf_sizes: placeholder to put the different buffer lengths

 *

 * Peek into the decode message and calculate the necessary buffer sizes.

 H264 */

 reference picture buffer */

 macroblock context buffer */

 IT surface buffer */

 VC1 */

 reference picture buffer */

 CONTEXT_BUFFER */

 IT surface buffer */

 DB surface buffer */

 BP */

 MPEG2 */

 reference picture buffer */

 MPEG4 */

 reference picture buffer */

 CM */

 IT surface buffer */

 H264 Perf */

 reference picture buffer */

 macroblock context buffer */

 IT surface buffer */

 macroblock context buffer */

 MJPEG */

 H265 */

 store image width to adjust nb memory pstate */

/**

 * amdgpu_uvd_cs_msg - handle UVD message

 *

 * @ctx: UVD parser context

 * @bo: buffer object containing the message

 * @offset: offset into the buffer object

 *

 * Peek into the UVD message and extract the session id.

 * Make sure that we don't open up to many sessions.

 it's a create msg, calc image size (width * height) */

 try to alloc a new handle */

 it's a decode msg, calc buffer sizes */

 validate the handle */

 it's a destroy msg, free the handle */

/**

 * amdgpu_uvd_cs_pass2 - second parsing round

 *

 * @ctx: UVD parser context

 *

 * Patch buffer addresses, make sure buffer sizes are correct.

/**

 * amdgpu_uvd_cs_reg - parse register writes

 *

 * @ctx: UVD parser context

 * @cb: callback function

 *

 * Parse the register writes, call cb on each complete command.

/**

 * amdgpu_uvd_cs_packets - parse UVD packets

 *

 * @ctx: UVD parser context

 * @cb: callback function

 *

 * Parse the command stream packets.

/**

 * amdgpu_uvd_ring_parse_cs - UVD command submission parser

 *

 * @parser: Command submission parser context

 * @ib_idx: Which indirect buffer to use

 *

 * Parse the command stream, patch in addresses as necessary.

 first round only required on chips without UVD 64 bit address support */

 first round, make sure the buffers are actually in the UVD segment */

 second round, patch buffer addresses into the command stream */

/* multiple fence commands without any stream commands in between can

   crash the vcpu so just try to emmit a dummy create/destroy msg to

 stitch together an UVD create msg */

 stitch together an UVD destroy msg */

 shutdown the UVD block */

/**

 * amdgpu_uvd_ring_test_ib - test ib execution

 *

 * @ring: amdgpu_ring pointer

 * @timeout: timeout value in jiffies, or MAX_SCHEDULE_TIMEOUT

 *

 * Test if we can successfully execute an IB

/**

 * amdgpu_uvd_used_handles - returns used UVD handles

 *

 * @adev: amdgpu_device pointer

 *

 * Returns the number of UVD handles in use

		/*

		 * Handles can be freed in any order, and not

		 * necessarily linear. So we need to count

		 * all non-zero handles.

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 set ucode start address */

 clear BYPASS_UNCACHED to avoid hangs after interrupt. */

 unhalt MES and activate pipe0 */

 This function is for backdoor MES firmware */

 me=3, pipe=0, queue=0 */

 set ucode start address */

 set ucode fimrware address */

 set ucode instruction cache boundary to 2M-1 */

 set ucode data firmware address */

 Set 0x3FFFF (256K-1) to CP_MES_MDBOUND_LO */

 invalidate ICACHE */

 prime the ICACHE. */

 set the EOP size, register value is 2^(EOP_SIZE+1) dwords */

 enable doorbell? */

 disable the queue if it's active */

 set the pointer to the MQD */

 set MQD vmid to 0 */

 set the pointer to the HQD, this is similar CP_RB0_BASE/_HI */

 set up the HQD, this is similar to CP_RB0_CNTL */

 set the wb address whether it's enabled or not */

 only used if CP_PQ_WPTR_POLL_CNTL.CP_PQ_WPTR_POLL_CNTL__EN_MASK=1 */

 enable the doorbell if requested */

 reset read and write pointers, similar to CP_RB0_WPTR/_RPTR */

 set the vmid for the queue */

 set MIN_IB_AVAIL_SIZE */

 activate the queue */

 set CP_HQD_VMID.VMID = 0. */

 set CP_HQD_PQ_DOORBELL_CONTROL.DOORBELL_EN=0 */

 set CP_MQD_BASE_ADDR/HI with the MQD base address */

 set CP_MQD_CONTROL.VMID=0 */

 set CP_HQD_PQ_BASE/HI with the ring buffer base address */

 set CP_HQD_PQ_RPTR_REPORT_ADDR/HI */

 set CP_HQD_PQ_CONTROL */

 set CP_HQD_PQ_WPTR_POLL_ADDR/HI */

 set CP_HQD_PQ_DOORBELL_CONTROL */

 set CP_HQD_PERSISTENT_STATE.PRELOAD_SIZE=0x53 */

 set CP_HQD_ACTIVE.ACTIVE=1 */

 prepare MQD backup */

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 *          Jerome Glisse

/*

 * BIOS.

/* Check if current bios is an ATOM BIOS.

 * Return true if it is ATOM BIOS. Otherwise, return false.

/* If you boot an IGP board with a discrete card as the primary,

 * the IGP rom is not accessible via the rom bar as the IGP rom is

 * part of the system bios.  On boot, the system bios puts a

 * copy of the igp rom at the start of vram if a discrete card is

 * present.

 ??? */

 FB BAR not enabled */

 XXX: some cards may return 0 for rom size? ddx has a workaround */

 validate VBIOS signature */

 valid vbios, go on */

 read complete BIOS */

/* ATRM is used to get the BIOS on the discrete cards in

 * dual-gpu systems.

 retrieve the ROM in 4k blocks */

/**

 * amdgpu_atrm_call - fetch a chunk of the vbios

 *

 * @atrm_handle: acpi ATRM handle

 * @bios: vbios image pointer

 * @offset: offset of vbios image data to fetch

 * @len: length of vbios image data to fetch

 *

 * Executes ATRM to fetch a chunk of the discrete

 * vbios image on PX systems (all asics).

 * Returns the length of the buffer fetched.

 ATRM is for the discrete card only */

/*

 * Copyright 2013 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Alex Deucher

/*

 * sDMA - System DMA

 * Starting with CIK, the GPU has new asynchronous

 * DMA engines.  These engines are used for compute

 * and gfx.  There are two DMA engines (SDMA0, SDMA1)

 * and each one supports 1 ring buffer used for gfx

 * and 2 queues used for compute.

 *

 * The programming model is very similar to the CP

 * (ring buffer, IBs, etc.), but sDMA has it's own

 * packet format that is different from the PM4 format

 * used by the CP. sDMA supports copying data, writing

 * embedded data, solid fills, and a number of other

 * things.  It also has support for tiling/detiling of

 * buffers.

/**

 * cik_sdma_init_microcode - load ucode images from disk

 *

 * @adev: amdgpu_device pointer

 *

 * Use the firmware interface to load the ucode images into

 * the driver (not loaded into hw).

 * Returns 0 on success, error on failure.

/**

 * cik_sdma_ring_get_rptr - get the current read pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Get the current rptr from the hardware (CIK+).

/**

 * cik_sdma_ring_get_wptr - get the current write pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Get the current wptr from the hardware (CIK+).

/**

 * cik_sdma_ring_set_wptr - commit the write pointer

 *

 * @ring: amdgpu ring pointer

 *

 * Write the wptr back to the hardware (CIK+).

/**

 * cik_sdma_ring_emit_ib - Schedule an IB on the DMA engine

 *

 * @ring: amdgpu ring pointer

 * @job: job to retrive vmid from

 * @ib: IB object to schedule

 * @flags: unused

 *

 * Schedule an IB in the DMA ring (CIK).

 IB packet must end on a 8 DW boundary */

 base must be 32 byte aligned */

/**

 * cik_sdma_ring_emit_hdp_flush - emit an hdp flush on the DMA ring

 *

 * @ring: amdgpu ring pointer

 *

 * Emit an hdp flush packet on the requested DMA ring.

 == */

 reference */

 mask */

 retry count, poll interval */

/**

 * cik_sdma_ring_emit_fence - emit a fence on the DMA ring

 *

 * @ring: amdgpu ring pointer

 * @addr: address

 * @seq: sequence number

 * @flags: fence related flags

 *

 * Add a DMA fence packet to the ring to write

 * the fence seq number and DMA trap packet to generate

 * an interrupt if needed (CIK).

 write the fence */

 optionally write high bits as well */

 generate an interrupt */

/**

 * cik_sdma_gfx_stop - stop the gfx async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Stop the gfx async dma ring buffers (CIK).

/**

 * cik_sdma_rlc_stop - stop the compute async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Stop the compute async dma queues (CIK).

 XXX todo */

/**

 * cik_ctx_switch_enable - stop the async dma engines context switch

 *

 * @adev: amdgpu_device pointer

 * @enable: enable/disable the DMA MEs context switch.

 *

 * Halt or unhalt the async dma engines context switch (VI).

/**

 * cik_sdma_enable - stop the async dma engines

 *

 * @adev: amdgpu_device pointer

 * @enable: enable/disable the DMA MEs.

 *

 * Halt or unhalt the async dma engines (CIK).

/**

 * cik_sdma_gfx_resume - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the gfx DMA ring buffers and enable them (CIK).

 * Returns 0 for success, error for failure.

 SDMA GFX */

 XXX SDMA RLC - todo */

 Set ring buffer size in dwords */

 Initialize the ring buffer's read and write pointers */

 set the wb address whether it's enabled or not */

 enable DMA RB */

 enable DMA IBs */

/**

 * cik_sdma_rlc_resume - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the compute DMA queues and enable them (CIK).

 * Returns 0 for success, error for failure.

 XXX todo */

/**

 * cik_sdma_load_microcode - load the sDMA ME ucode

 *

 * @adev: amdgpu_device pointer

 *

 * Loads the sDMA0/1 ucode.

 * Returns 0 for success, -EINVAL if the ucode is not available.

 halt the MEs */

/**

 * cik_sdma_start - setup and start the async dma engines

 *

 * @adev: amdgpu_device pointer

 *

 * Set up the DMA engines and enable them (CIK).

 * Returns 0 for success, error for failure.

 halt the engine before programing */

 enable sdma ring preemption */

 start the gfx rings and rlc compute queues */

/**

 * cik_sdma_ring_test_ring - simple async dma engine test

 *

 * @ring: amdgpu_ring structure holding ring information

 *

 * Test the DMA engine by writing using it to write an

 * value to memory. (CIK).

 * Returns 0 for success, error for failure.

 number of DWs to follow */

/**

 * cik_sdma_ring_test_ib - test an IB on the DMA engine

 *

 * @ring: amdgpu_ring structure holding ring information

 * @timeout: timeout value in jiffies, or MAX_SCHEDULE_TIMEOUT

 *

 * Test a simple IB in the DMA ring (CIK).

 * Returns 0 on success, error on failure.

/**

 * cik_sdma_vm_copy_pte - update PTEs by copying them from the GART

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @src: src addr to copy from

 * @count: number of page entries to update

 *

 * Update PTEs by copying them from the GART using sDMA (CIK).

 src/dst endian swap */

/**

 * cik_sdma_vm_write_pte - update PTEs by writing them manually

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @value: dst addr to write into pe

 * @count: number of page entries to update

 * @incr: increase next addr by incr bytes

 *

 * Update PTEs by writing them manually using sDMA (CIK).

/**

 * cik_sdma_vm_set_pte_pde - update the page tables using sDMA

 *

 * @ib: indirect buffer to fill with commands

 * @pe: addr of the page entry

 * @addr: dst addr to write into pe

 * @count: number of page entries to update

 * @incr: increase next addr by incr bytes

 * @flags: access flags

 *

 * Update the page tables using sDMA (CIK).

 for physically contiguous pages (vram) */

 dst addr */

 mask */

 value */

 increment size */

 number of entries */

/**

 * cik_sdma_ring_pad_ib - pad the IB to the required number of dw

 *

 * @ring: amdgpu_ring structure holding ring information

 * @ib: indirect buffer to fill with padding

 *

/**

 * cik_sdma_ring_emit_pipeline_sync - sync the pipeline

 *

 * @ring: amdgpu_ring pointer

 *

 * Make sure all previous operations are completed (CIK).

 wait for idle */

 equal */

 reference */

 mask */

 retry count, poll interval */

/**

 * cik_sdma_ring_emit_vm_flush - cik vm flush using sDMA

 *

 * @ring: amdgpu_ring pointer

 * @vmid: vmid number to use

 * @pd_addr: address

 *

 * Update the page table base and flush the VM TLB

 * using sDMA (CIK).

 always */

 reference */

 mask */

 retry count, poll interval */

 SDMA trap event */

 SDMA Privileged inst */

 SDMA Privileged inst */

 sdma0 */

 sdma1 */

 Wait a little for things to settle down */

 XXX compute */

 XXX compute */

 XXX compute */

 XXX compute */

 cik_sdma_ring_emit_hdp_flush */

 hdp invalidate */

 cik_sdma_ring_emit_pipeline_sync */

 cik_sdma_ring_emit_vm_flush */

 cik_sdma_ring_emit_fence x3 for user fence, vm fence */

 cik_sdma_ring_emit_ib */

/**

 * cik_sdma_emit_copy_buffer - copy buffer using the sDMA engine

 *

 * @ib: indirect buffer to copy to

 * @src_offset: src GPU address

 * @dst_offset: dst GPU address

 * @byte_count: number of bytes to xfer

 * @tmz: is this a secure operation

 *

 * Copy GPU buffers using the DMA engine (CIK).

 * Used by the amdgpu ttm implementation to move pages if

 * registered as the asic copy callback.

 src/dst endian swap */

/**

 * cik_sdma_emit_fill_buffer - fill buffer using the sDMA engine

 *

 * @ib: indirect buffer to fill

 * @src_data: value to write to buffer

 * @dst_offset: dst GPU address

 * @byte_count: number of bytes to xfer

 *

 * Fill GPU buffers using the DMA engine (CIK).

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 For large FW files the time to complete can be very long */

 Read USB-PD from LFB */

		/* Wait for bootloader to signify that is

	/* Check tOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Copy PSP KDB binary to memory */

 Provide the PSP KDB to bootloader */

	/* Check sOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Copy Secure OS binary to PSP memory */

 Provide the PSP secure OS to bootloader */

 there might be handshake issue with hardware which needs delay */

 allocate 4k Page of Local Frame Buffer memory for ring */

 Write the ring destroy command*/

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) */

 Write the ring destroy command*/

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) */

 Write low address of the ring to C2PMSG_102 */

 Write high address of the ring to C2PMSG_103 */

 Write the ring initialization command to C2PMSG_101 */

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) in C2PMSG_101 */

 Wait for sOS ready for ring creation */

 Write low address of the ring to C2PMSG_69 */

 Write high address of the ring to C2PMSG_70 */

 Write size of ring to C2PMSG_71 */

 Write the ring initialization command to C2PMSG_64 */

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) in C2PMSG_64 */

	/*

	 * LFB address which is aligned to 1MB address and has to be

	 * right-shifted by 20 so that LFB address can be passed on a 32-bit C2P

	 * register

 Fireup interrupt so PSP can pick up the address */

 FW load takes very long time */

/*

 * Copyright 2008 Jerome Glisse.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * PRECISION INSIGHT AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER

 * DEALINGS IN THE SOFTWARE.

 *

 * Authors:

 *    Jerome Glisse <glisse@freedesktop.org>

 One for TTM and one for the CS job */

 skip guilty context job */

 get chunks */

 Use this opportunity to fill in task info for the vm */

 Convert microseconds to bytes. */

	/* Since accum_us is incremented by a million per second, just

	 * multiply it by the number of MB/s to get the number of bytes.

/* Returns how many bytes TTM can move right now. If no bytes can be moved,

 * it returns 0. If it returns non-zero, it's OK to move at least one buffer,

 * which means it can go over the threshold once. If that happens, the driver

 * will be in debt and no other buffer migrations can be done until that debt

 * is repaid.

 *

 * This approach allows moving a buffer of any size (it's important to allow

 * that).

 *

 * The currency is simply time in microseconds and it increases as the clock

 * ticks. The accumulated microseconds (us) are converted to bytes and

 * returned.

	/* Allow a maximum of 200 accumulated ms. This is basically per-IB

	 * throttling.

	 *

	 * It means that in order to get full max MBps, at least 5 IBs per

	 * second must be submitted and not more than 200ms apart from each

	 * other.

 Increase the amount of accumulated us. */

	/* This prevents the short period of low performance when the VRAM

	 * usage is low and the driver is in debt or doesn't have enough

	 * accumulated us to fill VRAM quickly.

	 *

	 * The situation can occur in these cases:

	 * - a lot of VRAM is freed by userspace

	 * - the presence of a big buffer causes a lot of evictions

	 *   (solution: split buffers into smaller ones)

	 *

	 * If 128 MB or 1/8th of VRAM is free, start filling it now by setting

	 * accum_us to a positive number.

		/* Be more aggresive on dGPUs. Try to fill a portion of free

		 * VRAM now.

 Reset accum_us on APUs. */

	/* This is set to 0 if the driver is in debt to disallow (optional)

	 * buffer moves.

 Do the same for visible VRAM if half of it is free */

/* Report how many bytes have really been moved for the last command

 * submission. This can result in a debt that can stop buffer migrations

 * temporarily.

	/* Don't move this buffer if we have depleted our allowance

	 * to move it. Don't move anything if the threshold is zero.

			/* And don't move a CPU_ACCESS_REQUIRED BO to limited

			 * visible VRAM if we've depleted our allowance to do

			 * that.

 p->bo_list could already be assigned if AMDGPU_CHUNK_ID_BO_HANDLES is present */

 Create a empty bo_list when no handle is provided */

 One for TTM and one for the CS job */

	/* Get userptr backing pages. If pages are updated after registered

	 * in amdgpu_gem_userptr_ioctl(), amdgpu_cs_list_validate() will do

	 * amdgpu_ttm_backend_bind() to flush and invalidate new pages

/**

 * amdgpu_cs_parser_fini() - clean parser states

 * @parser:	parser structure holding parsing context.

 * @error:	error number

 * @backoff:	indicator to backoff the reservation

 *

 * If error is set then unvalidate buffer, otherwise just free memory

 * used by parsing context.

 Only for UVD/VCE VM emulation */

 the IB should be reserved at this point */

 ignore duplicates */

 Invalidate all BOs to test for userspace bugs */

 ignore duplicates */

 each GFX command submit allows 0 or 1 IB preemptible for CE & DE */

		/* Return if there is no run queue associated with this entity.

 MM engine doesn't support user fences */

	/* No memory allocation is allowed while holding the notifier lock.

	 * The lock is held until amdgpu_cs_submit is finished and fence is

	 * added to BOs.

	/* If userptr are invalidated after amdgpu_cs_parser_bos(), return

	 * -EAGAIN, drmIoctl in libdrm will restart the amdgpu_cs_ioctl.

		/*

		 * Work around dma_resv shortcommings by wrapping up the

		 * submission in a dma_fence_chain and add it as exclusive

		 * fence, but first add the submission as shared fence to make

		 * sure that shared fences never signal before the exclusive

		 * one.

/**

 * amdgpu_cs_wait_ioctl - wait for a command submission to finish

 *

 * @dev: drm device

 * @data: data from userspace

 * @filp: file private

 *

 * Wait for the command submission identified by handle to finish.

/**

 * amdgpu_cs_get_fence - helper to get fence from drm_amdgpu_fence

 *

 * @adev: amdgpu device

 * @filp: file private

 * @user: drm_amdgpu_fence copied from user space

/**

 * amdgpu_cs_wait_all_fences - wait on all fences to signal

 *

 * @adev: amdgpu device

 * @filp: file private

 * @wait: wait parameters

 * @fences: array of drm_amdgpu_fence

/**

 * amdgpu_cs_wait_any_fence - wait on any fence to signal

 *

 * @adev: amdgpu device

 * @filp: file private

 * @wait: wait parameters

 * @fences: array of drm_amdgpu_fence

 Prepare the fence array */

 NULL, the fence has been already signaled */

/**

 * amdgpu_cs_wait_fences_ioctl - wait for multiple command submissions to finish

 *

 * @dev: drm device

 * @data: data from userspace

 * @filp: file private

 Get the fences from userspace */

/**

 * amdgpu_cs_find_mapping - find bo_va for VM address

 *

 * @parser: command submission parser context

 * @addr: VM address

 * @bo: resulting BO of the mapping found

 * @map: Placeholder to return found BO mapping

 *

 * Search the buffer objects in the command submission context for a certain

 * virtual memory address. Returns allocation structure when found, NULL

 * otherwise.

 Double check that the BO is reserved by this CS */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * vega20_ih_init_register_offset - Initialize register offset for ih rings

 *

 * @adev: amdgpu_device pointer

 *

 * Initialize register offset ih rings (VEGA20).

/**

 * vega20_ih_toggle_ring_interrupts - toggle the interrupt ring buffer

 *

 * @adev: amdgpu_device pointer

 * @ih: amdgpu_ih_ring pointer

 * @enable: true - enable the interrupts, false - disable the interrupts

 *

 * Toggle the interrupt ring buffer (VEGA20)

 enable_intr field is only valid in ring0 */

 set rptr, wptr to 0 */

/**

 * vega20_ih_toggle_interrupts - Toggle all the available interrupt ring buffers

 *

 * @adev: amdgpu_device pointer

 * @enable: enable or disable interrupt ring buffers

 *

 * Toggle all the available interrupt ring buffers (VEGA20).

	/* Ring Buffer write pointer writeback. If enabled, IH_RB_WPTR register

	 * value is written to memory

/**

 * vega20_ih_enable_ring - enable an ih ring buffer

 *

 * @adev: amdgpu_device pointer

 * @ih: amdgpu_ih_ring pointer

 *

 * Enable an ih ring buffer (VEGA20)

 Ring Buffer base. [39:8] of 40-bit address of the beginning of the ring buffer*/

 set the ih ring 0 writeback address whether it's enabled or not */

 set rptr, wptr to 0 */

/**

 * vega20_ih_reroute_ih - reroute VMC/UTCL2 ih to an ih ring

 *

 * @adev: amdgpu_device pointer

 *

 * Reroute VMC and UMC interrupts on primary ih ring to

 * ih ring 1 so they won't lose when bunches of page faults

 * interrupts overwhelms the interrupt handler(VEGA20)

	/* vega20 ih reroute will go through psp this

	 * function is used for newer asics starting arcturus

 Reroute to IH ring 1 for VMC */

 Reroute IH ring 1 for UTCL2 */

/**

 * vega20_ih_irq_init - init and enable the interrupt ring

 *

 * @adev: amdgpu_device pointer

 *

 * Allocate a ring buffer for the interrupt controller,

 * enable the RLC, disable interrupts, enable the IH

 * ring buffer and enable it (VI).

 * Called at device load and reume.

 * Returns 0 for success, errors for failure.

 disable irqs */

	/* psp firmware won't program IH_CHICKEN for aldebaran

	 * driver needs to program it properly according to

 enable interrupts */

/**

 * vega20_ih_irq_disable - disable interrupts

 *

 * @adev: amdgpu_device pointer

 *

 * Disable interrupts on the hw (VEGA20).

 Wait and acknowledge irq */

/**

 * vega20_ih_get_wptr - get the IH ring buffer wptr

 *

 * @adev: amdgpu_device pointer

 * @ih: amdgpu_ih_ring pointer

 *

 * Get the IH ring buffer wptr from either the register

 * or the writeback memory buffer (VEGA20).  Also check for

 * ring buffer overflow and deal with it.

 * Returns the value of the wptr.

		/* Only ring0 supports writeback. On other rings fall back

		 * to register-based code with overflow checking below.

 Double check that the overflow wasn't already cleared. */

	/* When a ring buffer overflow happen start parsing interrupt

	 * from the last not overwritten vector (wptr + 32). Hopefully

	 * this should allow us to catchup.

/**

 * vega20_ih_irq_rearm - rearm IRQ if lost

 *

 * @adev: amdgpu_device pointer

 * @ih: amdgpu_ih_ring pointer

 *

 Rearm IRQ / re-wwrite doorbell if doorbell write is lost */

/**

 * vega20_ih_set_rptr - set the IH ring buffer rptr

 *

 * @adev: amdgpu_device pointer

 * @ih: amdgpu_ih_ring pointer

 *

 * Set the IH ring buffer rptr.

 XXX check if swapping is necessary on BE */

/**

 * vega20_ih_self_irq - dispatch work for ring 1 and 2

 *

 * @adev: amdgpu_device pointer

 * @source: irq source

 * @entry: IV with WPTR update

 *

 * Update the WPTR from the IV and schedule work to handle the entries.

 initialize ih control registers offset */

 todo */

 todo */

 todo */

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/* AT24CM02 and M24M02-R have a 256-byte write page size.

/* EEPROM memory addresses are 19-bits long, which can

 * be partitioned into 3, 8, 8 bits, for a total of 19.

 * The upper 3 bits are sent as part of the 7-bit

 * "Device Type Identifier"--an I2C concept, which for EEPROM devices

 * is hard-coded as 1010b, indicating that it is an EEPROM

 * device--this is the wire format, followed by the upper

 * 3 bits of the 19-bit address, followed by the direction,

 * followed by two bytes holding the rest of the 16-bits of

 * the EEPROM memory address. The format on the wire for EEPROM

 * devices is: 1010XYZD, A15:A8, A7:A0,

 * Where D is the direction and sequenced out by the hardware.

 * Bits XYZ are memory address bits 18, 17 and 16.

 * These bits are compared to how pins 1-3 of the part are connected,

 * depending on the size of the part, more on that later.

 *

 * Note that of this wire format, a client is in control

 * of, and needs to specify only XYZ, A15:A8, A7:0, bits,

 * which is exactly the EEPROM memory address, or offset,

 * in order to address up to 8 EEPROM devices on the I2C bus.

 *

 * For instance, a 2-Mbit I2C EEPROM part, addresses all its bytes,

 * using an 18-bit address, bit 17 to 0 and thus would use all but one bit of

 * the 19 bits previously mentioned. The designer would then not connect

 * pins 1 and 2, and pin 3 usually named "A_2" or "E2", would be connected to

 * either Vcc or GND. This would allow for up to two 2-Mbit parts on

 * the same bus, where one would be addressable with bit 18 as 1, and

 * the other with bit 18 of the address as 0.

 *

 * For a 2-Mbit part, bit 18 is usually known as the "Chip Enable" or

 * "Hardware Address Bit". This bit is compared to the load on pin 3

 * of the device, described above, and if there is a match, then this

 * device responds to the command. This way, you can connect two

 * 2-Mbit EEPROM devices on the same bus, but see one contiguous

 * memory from 0 to 7FFFFh, where address 0 to 3FFFF is in the device

 * whose pin 3 is connected to GND, and address 40000 to 7FFFFh is in

 * the 2nd device, whose pin 3 is connected to Vcc.

 *

 * This addressing you encode in the 32-bit "eeprom_addr" below,

 * namely the 19-bits "XYZ,A15:A0", as a single 19-bit address. For

 * instance, eeprom_addr = 0x6DA01, is 110_1101_1010_0000_0001, where

 * XYZ=110b, and A15:A0=DA01h. The XYZ bits become part of the device

 * address, and the rest of the address bits are sent as the memory

 * address bytes.

 *

 * That is, for an I2C EEPROM driver everything is controlled by

 * the "eeprom_addr".

 *

 * P.S. If you need to write, lock and read the Identification Page,

 * (M24M02-DR device only, which we do not use), change the "7" to

 * "0xF" in the macro below, and let the client set bit 20 to 1 in

 * "eeprom_addr", and set A10 to 0 to write into it, and A10 and A1 to

 * 1 to lock it permanently.

		/* Set the EEPROM address we want to write to/read from.

			/* Write the maximum amount of data, without

			 * crossing the device's page boundary, as per

			 * its spec. Partial page writes are allowed,

			 * starting at any location within the page,

			 * so long as the page boundary isn't crossed

			 * over (actually the page pointer rolls

			 * over).

			 *

			 * As per the AT24CM02 EEPROM spec, after

			 * writing into a page, the I2C driver should

			 * terminate the transfer, i.e. in

			 * "i2c_transfer()" below, with a STOP

			 * condition, so that the self-timed write

			 * cycle begins. This is implied for the

			 * "i2c_transfer()" abstraction.

			/* Reading from the EEPROM has no limitation

			 * on the number of bytes read from the EEPROM

			 * device--they are simply sequenced out.

		/* This constitutes a START-STOP transaction.

			/* According to EEPROM specs the length of the

			 * self-writing cycle, tWR (tW), is 10 ms.

			 *

			 * TODO: Use polling on ACK, aka Acknowledge

			 * Polling, to minimize waiting for the

			 * internal write cycle to complete, as it is

			 * usually smaller than tWR (tW).

/**

 * amdgpu_eeprom_xfer -- Read/write from/to an I2C EEPROM device

 * @i2c_adap: pointer to the I2C adapter to use

 * @eeprom_addr: EEPROM address from which to read/write

 * @eeprom_buf: pointer to data buffer to read into/write from

 * @buf_size: the size of @eeprom_buf

 * @read: True if reading from the EEPROM, false if writing

 *

 * Returns the number of bytes read/written; -errno on error.

 Partial size */

		/* The "limit" includes all data bytes sent/received,

		 * which would include the EEPROM_OFFSET_SIZE bytes.

		 * Account for them here.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * Interrupts

 * Starting with r6xx, interrupts are handled via a ring buffer.

 * Ring buffers are areas of GPU accessible memory that the GPU

 * writes interrupt vectors into and the host reads vectors out of.

 * There is a rptr (read pointer) that determines where the

 * host is currently reading, and a wptr (write pointer)

 * which determines where the GPU has written.  When the

 * pointers are equal, the ring is idle.  When the GPU

 * writes vectors to the ring buffer, it increments the

 * wptr.  When there is an interrupt, the host then starts

 * fetching commands and processing them until the pointers are

 * equal again at which point it updates the rptr.

/**

 * cz_ih_enable_interrupts - Enable the interrupt ring buffer

 *

 * @adev: amdgpu_device pointer

 *

 * Enable the interrupt ring buffer (VI).

/**

 * cz_ih_disable_interrupts - Disable the interrupt ring buffer

 *

 * @adev: amdgpu_device pointer

 *

 * Disable the interrupt ring buffer (VI).

 set rptr, wptr to 0 */

/**

 * cz_ih_irq_init - init and enable the interrupt ring

 *

 * @adev: amdgpu_device pointer

 *

 * Allocate a ring buffer for the interrupt controller,

 * enable the RLC, disable interrupts, enable the IH

 * ring buffer and enable it (VI).

 * Called at device load and reume.

 * Returns 0 for success, errors for failure.

 disable irqs */

 setup interrupt control */

	/* INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=0 - dummy read disabled with msi, enabled without msi

	 * INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=1 - dummy read controlled by IH_DUMMY_RD_EN

 INTERRUPT_CNTL__IH_REQ_NONSNOOP_EN_MASK=1 if ring is in non-cacheable memory, e.g., vram */

 Ring Buffer base. [39:8] of 40-bit address of the beginning of the ring buffer*/

 Ring Buffer write pointer writeback. If enabled, IH_RB_WPTR register value is written to memory */

 set the writeback address whether it's enabled or not */

 set rptr, wptr to 0 */

 Default settings for IH_CNTL (disabled at first) */

 enable interrupts */

/**

 * cz_ih_irq_disable - disable interrupts

 *

 * @adev: amdgpu_device pointer

 *

 * Disable interrupts on the hw (VI).

 Wait and acknowledge irq */

/**

 * cz_ih_get_wptr - get the IH ring buffer wptr

 *

 * @adev: amdgpu_device pointer

 * @ih: IH ring buffer to fetch wptr

 *

 * Get the IH ring buffer wptr from either the register

 * or the writeback memory buffer (VI).  Also check for

 * ring buffer overflow and deal with it.

 * Used by cz_irq_process(VI).

 * Returns the value of the wptr.

 Double check that the overflow wasn't already cleared. */

	/* When a ring buffer overflow happen start parsing interrupt

	 * from the last not overwritten vector (wptr + 16). Hopefully

	 * this should allow us to catchup.

/**

 * cz_ih_decode_iv - decode an interrupt vector

 *

 * @adev: amdgpu_device pointer

 * @ih: IH ring buffer to decode

 * @entry: IV entry to place decoded information into

 *

 * Decodes the interrupt vector at the current rptr

 * position and also advance the position.

 wptr/rptr are in bytes! */

 wptr/rptr are in bytes! */

/**

 * cz_ih_set_rptr - set the IH ring buffer rptr

 *

 * @adev: amdgpu_device pointer

 * @ih: IH ring buffer to set rptr

 *

 * Set the IH ring buffer rptr.

 read MC_STATUS */

 Wait a little for things to settle down */

 TODO

 TODO

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Program the AGP BAR */

 Program the system aperture low logical page number. */

		/*

		 * Raven2 has a HW issue that it is unable to use the vram which

		 * is out of MC_VM_SYSTEM_APERTURE_HIGH_ADDR. So here is the

		 * workaround that increase system aperture high address (add 1)

		 * to get rid of the VM fault and hardware hang.

 Set default page address. */

 Program "protection fault". */

 Setup TLB control */

 XXX for emulation. */

 Setup L2 cache */

 XXX for emulation, Refer to closed source code.*/

 Send no-retry XNACK on fault to suppress VM fault storm. */

		/*

		 * MC_VM_FB_LOCATION_BASE/TOP is NULL for VF, becuase they are

		 * VF copy registers so vbios post doesn't program them, for

		 * SRIOV driver need to program them

 GART Enable. */

 Disable all tables */

 Setup TLB control */

 Setup L2 cache */

/**

 * mmhub_v1_0_set_fault_enable_default - update GART/VM fault handling

 *

 * @adev: amdgpu_device pointer

 * @value: true redirects VM faults to the default page

 AMD_CG_SUPPORT_MC_MGCG */

 AMD_CG_SUPPORT_MC_LS */

 read back edc counter registers to reset the counters to 0 */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sub license, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL

 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,

 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 * USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

 Firmware Names */

	/* Bit 20-23, it is encode major and non-zero for new naming convention.

	 * This field is part of version minor and DRM_DISABLED_FLAG in old naming

	 * convention. Since the l:wq!atest version minor is 0x5B and DRM_DISABLED_FLAG

	 * is zero in old naming convention, this field is always zero so far.

	 * These four bits are used to tell which naming convention is present.

 if cannot find IP data, then this VCN does not exist */

 VCN in SRIOV does not support direct register read/write */

 session info */

 task info */

 op initialize */

 op close session */

 currently only support 2 FW instances */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 HW has more IP blocks,  only initialized the block needed by our driver  */

/*

 * Copyright 2007-8 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 *          Jerome Glisse

 move these to drm_dp_helper.c/h */

**** amdgpu AUX functions *****/

 timeout */

 flags not zero */

 error */

		/* tx_size needs to be 4 even for bare address packets since the atom

		 * table needs the info in tx_buf[3].

 Return payload size. */

		/* tx_size needs to be 4 even for bare address packets since the atom

		 * table needs the info in tx_buf[3].

**** general DP utility functions *****/

 convert bits per color to bits per pixel */

 get bpc from the EDID */

**** amdgpu specific DP functions *****/

 DP bridge chips */

 eDP */

 power up/down the sink */

 set the initial vs/emph on the source */

 sets all lanes at once */

 set the vs/emph on the sink */

 set training pattern on the source */

 enable training pattern on the sink */

 power up the sink */

 possibly enable downspread on the sink */

 set the lane count on the sink */

 set the link rate on the sink */

 start training on the source */

 disable the training pattern on the sink */

 disable the training pattern on the sink */

 disable the training pattern on the source */

 clock recovery loop */

 Compute new train_set as requested by sink */

 channel equalization loop */

 Try 5 times */

 Compute new train_set as requested by sink */

/*

 * Copyright © 2007 David Airlie

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER

 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING

 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER

 * DEALINGS IN THE SOFTWARE.

 *

 * Authors:

 *     David Airlie

/* object hierarchy -

   this contains a helper + a amdgpu fb

   the helper contains a pointer to amdgpu framebuffer baseclass.

 useful for testing */

 need to align pitch with crtc limits */

 okay we have an object now allocate the framebuffer */

 setup helper */

 setup aperture base/size for vesafb takeover */

 Use default scratch pixmap (info->pixmap.flags = FB_PIXMAP_SYSTEM) */

 don't init fbdev on hw without DCE */

 don't init fbdev if there are no connectors */

 select 8 bpp console on low vram cards */

 disable all the possible outputs/crtcs before entering KMS mode */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 TODO add golden setting for hdp */

 MM HUB */

 GFX HUB */

 MM HUB */

 GFX HUB */

 Returning 1 here also prevents sending the IV to the KFD */

 Process it onyl if it's the first fault for this address */

		/* Delegate it to a different ring if the hardware hasn't

		 * already done it.

		/* Try to handle the recoverable page faults by filling page

		 * tables

		/*

		 * Issue a dummy read to wait for the status register to

		 * be updated to avoid reading an incorrect value due to

		 * the new fast GRBM interface.

/**

 * gmc_v10_0_use_invalidate_semaphore - judge whether to use semaphore

 *

 * @adev: amdgpu_device pointer

 * @vmhub: vmhub type

 *

/*

 * GART

 * VMID 0 is the physical GPU addresses as used by the kernel.

 * VMIDs 1-15 are used for userspace clients and are handled

 * by the amdgpu vm/hsa code.

 Use register 17 for GART */

	/*

	 * It may lose gpuvm invalidate acknowldege state across power-gating

	 * off cycle, add semaphore acquire before invalidation and semaphore

	 * release after invalidation to avoid entering power gated state

	 * to WA the Issue

 TODO: It needs to continue working on debugging with semaphore for GFXHUB as well. */

 a read return value of 1 means semaphore acuqire */

	/*

	 * Issue a dummy read to wait for the ACK register to be cleared

	 * to avoid a false ACK due to the new fast GRBM interface.

 Wait for ACK with a delay.*/

 TODO: It needs to continue working on debugging with semaphore for GFXHUB as well. */

		/*

		 * add semaphore release after invalidation,

		 * write with 0 means semaphore release

/**

 * gmc_v10_0_flush_gpu_tlb - gart tlb flush callback

 *

 * @adev: amdgpu_device pointer

 * @vmid: vm instance to flush

 * @vmhub: vmhub type

 * @flush_type: the flush type

 *

 * Flush the TLB for the requested page table.

 flush hdp cache */

	/* For SRIOV run time, driver shouldn't access the register through MMIO

	 * Directly use kiq to do the vm invalidation instead

	/* The SDMA on Navi has a bug which can theoretically result in memory

	 * corruption if an invalidation happens at the same time as an VA

	 * translation. Avoid this by doing the invalidation from the SDMA

	 * itself.

/**

 * gmc_v10_0_flush_gpu_tlb_pasid - tlb flush via pasid

 *

 * @adev: amdgpu_device pointer

 * @pasid: pasid to be flush

 * @flush_type: the flush type

 * @all_hub: Used with PACKET3_INVALIDATE_TLBS_ALL_HUB()

 *

 * Flush the TLB for the requested pasid.

 2 dwords flush + 8 dwords fence */

	/*

	 * It may lose gpuvm invalidate acknowldege state across power-gating

	 * off cycle, add semaphore acquire before invalidation and semaphore

	 * release after invalidation to avoid entering power gated state

	 * to WA the Issue

 TODO: It needs to continue working on debugging with semaphore for GFXHUB as well. */

 a read return value of 1 means semaphore acuqire */

 TODO: It needs to continue working on debugging with semaphore for GFXHUB as well. */

		/*

		 * add semaphore release after invalidation,

		 * write with 0 means semaphore release

/*

 * PTE format on NAVI 10:

 * 63:59 reserved

 * 58 reserved and for sienna_cichlid is used for MALL noalloc

 * 57 reserved

 * 56 F

 * 55 L

 * 54 reserved

 * 53:52 SW

 * 51 T

 * 50:48 mtype

 * 47:12 4k physical page base address

 * 11:7 fragment

 * 6 write

 * 5 read

 * 4 exe

 * 3 Z

 * 2 snooped

 * 1 system

 * 0 valid

 *

 * PDE format on NAVI 10:

 * 63:59 block fragment size

 * 58:55 reserved

 * 54 P

 * 53:48 reserved

 * 47:6 physical base address of PD or PTE

 * 5:3 reserved

 * 2 C

 * 1 system

 * 0 valid

 Set the block fragment size */

 add the xgmi offset of the physical node */

 base offset of vram pages */

 add the xgmi offset of the physical node */

/**

 * gmc_v10_0_mc_init - initialize the memory controller driver params

 *

 * @adev: amdgpu_device pointer

 *

 * Look up the amount of vram, vram width, and decide how to place

 * vram and gart within the GPU's physical address space.

 * Returns 0 for success.

 size in MB on si */

 In case the PCI BAR is larger than the actual amount of vram */

 set the gart size */

 Initialize common gart structure */

 numchan * chansize */

		/*

		 * To fulfill 4-level page support,

		 * vm size is 256TB (48bit), maximum size of Navi10/Navi14/Navi12,

		 * block size 512 (9bit)

 This interrupt is VMC page fault.*/

 interrupt sent to DF. */

	/*

	 * Set the internal MC address mask This is the max address of the GPU's

	 * internal address space.

 48 bit MC */

 Memory manager */

	/*

	 * number of VMs

	 * VMID 0 is reserved for System

	 * amdgpu graphics/compute will use VMIDs 1-7

	 * amdkfd will use VMIDs 8-15

/**

 * gmc_v10_0_gart_fini - vm fini callback

 *

 * @adev: amdgpu_device pointer

 *

 * Tears down the driver GART/VM setup (CIK).

/**

 * gmc_v10_0_gart_enable - gart enable

 *

 * @adev: amdgpu_device pointer

 Flush HDP after it is initialized */

 The sequence of these two function calls matters.*/

	/*

	 * harvestable groups in gc_utcl2 need to be programmed before any GFX block

	 * register setup within GMC, or else system hang when harvesting SA.

/**

 * gmc_v10_0_gart_disable - gart disable

 *

 * @adev: amdgpu_device pointer

 *

 * This disables all VM page table.

 full access mode, so don't touch any GMC register */

 MC is always ready in GMC v10.*/

 There is no need to wait for MC idle in GMC v10.*/

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Author: Huang Rui

 *

 allocate 4k Page of Local Frame Buffer memory for ring */

 Write low address of the ring to C2PMSG_69 */

 Write high address of the ring to C2PMSG_70 */

 Write size of ring to C2PMSG_71 */

 Write the ring initialization command to C2PMSG_64 */

 There might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) in C2PMSG_64 */

 Write the ring destroy command to C2PMSG_64 */

 There might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) in C2PMSG_64 */

/*

 * Copyright 2017 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Xiangliang.Yu@amd.com

 VI golden setting */

/*

 * Mailbox communication between GPU hypervisor and VFs

Wait for RCV_MSG_VALID to be 0*/

 workaround: host driver doesn't set VALID for CMPL now */

 send ack to PF */

 start to poll ack */

 start to check msg if request is idh_req_gpu_init_access */

 add support mailbox interrupts */

 wait until RCV_MSG become 3 */

 Trigger recovery due to world switch failure */

 trigger gpu-reset by hypervisor only if TDR disbaled */

 see what event we get */

 only handle FLR_NOTIFY now */

 Does not need to trans VF errors to host. */

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 *          Jerome Glisse

/*

 * Call from drm_gem_handle_create which appear in both new and open ioctl

 * case.

	/* Workaround for Thunk bug creating PROT_NONE,MAP_PRIVATE mappings

	 * for debugger access to invisible VRAM. Should have used MAP_SHARED

	 * instead. Clearing VM_MAYWRITE prevents the mapping from ever

	 * becoming writable and makes is_cow_mapping(vm_flags) false.

/*

 * GEM ioctls.

 reject invalid gem flags */

 reject invalid gem domains */

 create a gem object to contain this object in */

			/* if gds bo is created from user space, it must be

			 * passed to bo list

 drop reference from allocate - handle holds it now */

 reject unknown flag values */

 if we want to write to it we must install a MMU notifier */

 create a gem object to contain this object in */

/**

 * amdgpu_gem_timeout - calculate jiffies timeout from absolute value

 *

 * @timeout_ns: timeout in ns

 *

 * Calculate the timeout in jiffies from an absolute timeout in ns.

 clamp timeout if it's to large */

  clamp timeout to avoid unsigned-> signed overflow */

	/* ret == 0 means not signaled,

	 * ret > 0 means signaled

	 * ret < 0 means interrupted before timeout

/**

 * amdgpu_gem_va_update_vm -update the bo_va in its VM

 *

 * @adev: amdgpu_device pointer

 * @vm: vm to update

 * @bo_va: bo_va to update

 * @operation: map, unmap or clear

 *

 * Update the bo_va directly after setting its address. Errors are not

 * vital here, so they are not reported back to userspace.

/**

 * amdgpu_gem_va_map_flags - map GEM UAPI flags into hardware flags

 *

 * @adev: amdgpu_device pointer

 * @flags: GEM UAPI flags

 *

 * Returns the GEM UAPI flags mapped into hardware for the ASIC.

	/*

	 * The buffer returned from this function should be cleared, but

	 * it can only be done if the ring is enabled or we'll fail to

	 * create the buffer.

 drop reference from allocate - handle holds it now */

		/*

		 * Although we have a valid reference on file->pid, that does

		 * not guarantee that the task_struct who called get_pid() is

		 * still alive (e.g. get_pid(current) => fork() => exit()).

		 * Therefore, we need to protect this ->comm access using RCU.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 delay 0.1 second to enable gfx off feature */

/*

 * GPU GFX IP block helpers function.

/**

 * amdgpu_gfx_scratch_get - Allocate a scratch register

 *

 * @adev: amdgpu_device pointer

 * @reg: scratch register mmio offset

 *

 * Allocate a CP scratch register for use by the driver (all asics).

 * Returns 0 on success or -EINVAL on failure.

/**

 * amdgpu_gfx_scratch_free - Free a scratch register

 *

 * @adev: amdgpu_device pointer

 * @reg: scratch register mmio offset

 *

 * Free a CP scratch register allocated for use by the driver (all asics)

/**

 * amdgpu_gfx_parse_disable_cu - Parse the disable_cu module parameter

 *

 * @mask: array in which the per-shader array disable masks will be stored

 * @max_se: number of SEs

 * @max_sh: number of SHs

 *

 * The bitmask of CUs to be disabled in the shader array determined by se and

 * sh is stored in mask[se * max_sh + sh].

	/* FIXME: spreading the queues across pipes causes perf regressions

	/* Policy: use 1st queue as high priority compute queue if we

	 * have more than one compute queue.

 policy: make queues evenly cross all pipes on MEC1 only */

 policy: amdgpu owns all queues in the given pipe */

		/* policy: amdgpu owns the first queue per pipe at this stage

 update the number of active graphics rings */

		/*

		 * 1. Using pipes 2/3 from MEC 2 seems cause problems.

		 * 2. It must use queue id 0, because CGPG_IDLE/SAVE/LOAD/RUN

		 * only can be issued on queue 0.

 create MQD for each compute/gfx queue */

 create MQD for KIQ */

		/* originaly the KIQ MQD is put in GTT domain, but for SRIOV VRAM domain is a must

		 * otherwise hypervisor trigger SAVE_VF fail after driver unloaded which mean MQD

		 * deallocated and gart_unbind, to strict diverage we decide to use VRAM domain for

		 * KIQ MQD no matter SRIOV or Bare-metal

 prepare MQD backup */

 create MQD for each KGQ */

 prepare MQD backup */

 create MQD for each KCQ */

 prepare MQD backup */

		/* This situation may be hit in the future if a new HW

		 * generation exposes more than 64 queues. If so, the

/* amdgpu_gfx_off_ctrl - Handle gfx off feature enable/disable

 *

 * @adev: amdgpu_device pointer

 * @bool enable true: enable gfx off feature, false: disable gfx off feature

 *

 * 1. gfx off feature will be enabled by gfx ip after gfx cg gp enabled.

 * 2. other client can send request to disable gfx off feature, the request should be honored.

 * 3. other client can cancel their request of disable gfx off feature

 * 4. other client should not send request to enable gfx off feature before disable gfx off feature.

		/* If the count is already 0, it means there's an imbalance bug somewhere.

		 * Note that the bug may be in a different caller than the one which triggers the

		 * WARN_ON_ONCE.

 If going to s2idle, no need to wait */

 free gfx ras_if if ras is not supported */

	/* TODO ue will trigger an interrupt.

	 *

	 * When “Full RAS” is enabled, the per-IP interrupt sources should

	 * be disabled and the driver should only look for the aggregated

	 * interrupt via sync flood

	/* don't wait anymore for gpu reset case because this way may

	 * block gpu_recover() routine forever, e.g. this virt_kiq_rreg

	 * is triggered in TTM and ttm_bo_lock_delayed_workqueue() will

	 * never return if we keep waiting in virt_kiq_rreg, which cause

	 * gpu_recover() hang there.

	 *

	 * also don't wait anymore for IRQ context

	/* don't wait anymore for gpu reset case because this way may

	 * block gpu_recover() routine forever, e.g. this virt_kiq_rreg

	 * is triggered in TTM and ttm_bo_lock_delayed_workqueue() will

	 * never return if we keep waiting in virt_kiq_rreg, which cause

	 * gpu_recover() hang there.

	 *

	 * also don't wait anymore for IRQ context

/* amdgpu_gfx_state_change_set - Handle gfx power state change set

 * @adev: amdgpu_device pointer

 * @state: gfx power state(1 -sGpuChangeState_D0Entry and 2 -sGpuChangeState_D3Entry)

 *

/*

 * Copyright 2007-11 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 Convert brightness to hardware level */

	/* Mac laptops with multiple GPUs use the gmux driver for backlight

	 * so don't register a backlight device

 !CONFIG_BACKLIGHT_CLASS_DEVICE */

 set the active encoder to connector routing */

 hw bug */

 vertical FP must be at least 1 */

 get the native mode for scaling */

 R4xx, R5xx */

 RS600/690/740 */

 DFP1, CRT1, TV1 depending on the type of port */

 R6xx */

 XXX */

 DCE8 */

 XXX */

 dp bridges are always DP */

 DVO is always DVO */

	/* if we don't have an active device yet, just use one of

	 * the connectors tied to the encoder.

 HDMI-B is basically DL-DVI; analog works fine */

 fix me */

/*

 * DIG Encoder/Transmitter Setup

 *

 * DCE 6.0

 * - 3 DIG transmitter blocks UNIPHY0/1/2 (links A and B).

 * Supports up to 6 digital outputs

 * - 6 DIG encoder blocks.

 * - DIG to PHY mapping is hardcoded

 * DIG1 drives UNIPHY0 link A, A+B

 * DIG2 drives UNIPHY0 link B

 * DIG3 drives UNIPHY1 link A, A+B

 * DIG4 drives UNIPHY1 link B

 * DIG5 drives UNIPHY2 link A, A+B

 * DIG6 drives UNIPHY2 link B

 *

 * Routing

 * crtc -> dig encoder -> UNIPHY/LVTMA (1 or 2 links)

 * Examples:

 * crtc0 -> dig2 -> LVTMA   links A+B -> TMDS/HDMI

 * crtc1 -> dig1 -> UNIPHY0 link  B   -> DP

 * crtc0 -> dig1 -> UNIPHY2 link  A   -> LVDS

 * crtc1 -> dig2 -> UNIPHY1 link  B+A -> TMDS/HDMI

 no dig encoder assigned */

		/* just needed to avoid bailing in the encoder check.  the encoder

		 * isn't used for init

 no dig encoder assigned */

			/* Select the PLL for the PHY

			 * DP PHY should be clocked from external src if there is

			 * one.

 On DCE4, if there is an external clock, it generates the DP ref clock */

 external src */

 DP requires coherent */

			/* Select the PLL for the PHY

			 * DP PHY should be clocked from external src if there is

			 * one.

 On DCE5 DCPLL usually generates the DP ref clock */

 DP requires coherent */

 DP requires coherent */

 wait for the panel to power up */

 no params on frev 1 */

 setup and enable the encoder */

 enable the transmitter */

 DP_SET_POWER_D0 is set in amdgpu_atombios_dp_link_train */

 disable the transmitter */

 This only needs to be called once at startup */

 CTV */

 STV */

 load detect on the dp bridge */

 CTV */

 STV */

 ddc_setup on the dp bridge */

 set crtc values */

 parse the lcd record table */

 absolute */

 relative */

 coherent mode by default */

/*

 * Copyright 2009 Jerome Glisse.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sub license, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL

 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,

 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 * USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

/*

 * Authors:

 *    Jerome Glisse <glisse@freedesktop.org>

 *    Dave Airlie

/*

 * Fences

 * Fences mark an event in the GPUs pipeline and are used

 * for GPU/CPU synchronization.  When the fence is written,

 * it is expected that all buffers associated with that fence

 * are no longer in use by the associated ring on the GPU and

 * that the the relevant GPU caches have been flushed.

 RB, DMA, etc. */

/*

 * Cast helper

/**

 * amdgpu_fence_write - write a fence value

 *

 * @ring: ring the fence is associated with

 * @seq: sequence number to write

 *

 * Writes a fence value to memory (all asics).

/**

 * amdgpu_fence_read - read a fence value

 *

 * @ring: ring the fence is associated with

 *

 * Reads a fence value from memory (all asics).

 * Returns the value of the fence read from memory.

/**

 * amdgpu_fence_emit - emit a fence on the requested ring

 *

 * @ring: ring the fence is associated with

 * @f: resulting fence object

 * @job: job the fence is embedded in

 * @flags: flags to pass into the subordinate .emit_fence() call

 *

 * Emits a fence command on the requested ring (all asics).

 * Returns 0 on success, -ENOMEM on failure.

 create a sperate hw fence */

 take use of job-embedded fence */

 reinit seq for resubmitted jobs */

 mark this fence has a parent job */

	/* This function can't be called concurrently anyway, otherwise

	 * emitting the fence would mess up the hardware ring buffer.

/**

 * amdgpu_fence_emit_polling - emit a fence on the requeste ring

 *

 * @ring: ring the fence is associated with

 * @s: resulting sequence number

 * @timeout: the timeout for waiting in usecs

 *

 * Emits a fence command on the requested ring (all asics).

 * Used For polling fence.

 * Returns 0 on success, -ENOMEM on failure.

/**

 * amdgpu_fence_schedule_fallback - schedule fallback check

 *

 * @ring: pointer to struct amdgpu_ring

 *

 * Start a timer as fallback to our interrupts.

/**

 * amdgpu_fence_process - check for fence activity

 *

 * @ring: pointer to struct amdgpu_ring

 *

 * Checks the current fence value and calculates the last

 * signalled fence value. Wakes the fence queue if the

 * sequence number has increased.

 *

 * Returns true if fence was processed

 There is always exactly one thread signaling this fence slot */

/**

 * amdgpu_fence_fallback - fallback for hardware interrupts

 *

 * @t: timer context used to obtain the pointer to ring structure

 *

 * Checks for fence activity.

/**

 * amdgpu_fence_wait_empty - wait for all fences to signal

 *

 * @ring: ring index the fence is associated with

 *

 * Wait for all fences on the requested ring to signal (all asics).

 * Returns 0 if the fences have passed, error for all other cases.

/**

 * amdgpu_fence_wait_polling - busy wait for givn sequence number

 *

 * @ring: ring index the fence is associated with

 * @wait_seq: sequence number to wait

 * @timeout: the timeout for waiting in usecs

 *

 * Wait for all fences on the requested ring to signal (all asics).

 * Returns left time if no timeout, 0 or minus if timeout.

/**

 * amdgpu_fence_count_emitted - get the count of emitted fences

 *

 * @ring: ring the fence is associated with

 *

 * Get the number of fences emitted on the requested ring (all asics).

 * Returns the number of emitted fences on the ring.  Used by the

 * dynpm code to ring track activity.

	/* We are not protected by ring lock when reading the last sequence

	 * but it's ok to report slightly wrong fence count here.

/**

 * amdgpu_fence_driver_start_ring - make the fence driver

 * ready for use on the requested ring.

 *

 * @ring: ring to start the fence driver on

 * @irq_src: interrupt source to use for this ring

 * @irq_type: interrupt type to use for this ring

 *

 * Make the fence driver ready for processing (all asics).

 * Not all asics have all rings, so each asic will only

 * start the fence driver on the rings it has.

 * Returns 0 for success, errors for failure.

 put fence directly behind firmware */

/**

 * amdgpu_fence_driver_init_ring - init the fence driver

 * for the requested ring.

 *

 * @ring: ring to init the fence driver on

 * @num_hw_submission: number of entries on the hardware queue

 * @sched_score: optional score atomic shared with other schedulers

 *

 * Init the fence driver for the requested ring (all asics).

 * Helper function for amdgpu_fence_driver_init().

 No need to setup the GPU scheduler for rings that don't need it */

/**

 * amdgpu_fence_driver_sw_init - init the fence driver

 * for all possible rings.

 *

 * @adev: amdgpu device pointer

 *

 * Init the fence driver for all possible rings (all asics).

 * Not all asics have all rings, so each asic will only

 * start the fence driver on the rings it has using

 * amdgpu_fence_driver_start_ring().

 * Returns 0 for success.

/**

 * amdgpu_fence_driver_hw_fini - tear down the fence driver

 * for all possible rings.

 *

 * @adev: amdgpu device pointer

 *

 * Tear down the fence driver for all possible rings (all asics).

 You can't wait for HW to signal if it's gone */

 no need to trigger GPU reset as we are unloading */

/**

 * amdgpu_fence_driver_hw_init - enable the fence driver

 * for all possible rings.

 *

 * @adev: amdgpu device pointer

 *

 * Enable the fence driver for all possible rings (all asics).

 * Not all asics have all rings, so each asic will only

 * start the fence driver on the rings it has using

 * amdgpu_fence_driver_start_ring().

 * Returns 0 for success.

 enable the interrupt */

/**

 * amdgpu_fence_driver_force_completion - force signal latest fence of ring

 *

 * @ring: fence of the ring to signal

 *

/*

 * Common fence implementation

/**

 * amdgpu_fence_enable_signaling - enable signalling on fence

 * @f: fence

 *

 * This function is called with fence_queue lock held, and adds a callback

 * to fence_queue that checks if this fence is signaled, and if so it

 * signals the fence and removes itself.

/**

 * amdgpu_fence_free - free up the fence memory

 *

 * @rcu: RCU callback head

 *

 * Free up the fence memory after the RCU grace period.

 free job if fence has a parent job */

 free fence_slab if it's separated fence*/

/**

 * amdgpu_fence_release - callback that fence can be freed

 *

 * @f: fence

 *

 * This function is called when the reference count becomes zero.

 * It just RCU schedules freeing up the fence.

/*

 * Fence debugfs

 set in CP_VMID_PREEMPT and preemption occurred */

 set in CP_VMID_RESET and reset occurred */

 Both preemption and reset occurred */

/*

 * amdgpu_debugfs_gpu_recover - manually trigger a gpu reset & recover

 *

 * Manually trigger a gpu reset at the next fence wait.

/*

 * Copyright 2008 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 *          Jerome Glisse

/**

 * DOC: Interrupt Handling

 *

 * Interrupts generated within GPU hardware raise interrupt requests that are

 * passed to amdgpu IRQ handler which is responsible for detecting source and

 * type of the interrupt and dispatching matching handlers. If handling an

 * interrupt requires calling kernel functions that may sleep processing is

 * dispatched to work handlers.

 *

 * If MSI functionality is not disabled by module parameter then MSI

 * support will be enabled.

 *

 * For GPU interrupt sources that may be driven by another driver, IRQ domain

 * support is used (with mapping between virtual and hardware IRQs).

/**

 * amdgpu_hotplug_work_func - work handler for display hotplug event

 *

 * @work: work struct pointer

 *

 * This is the hotplug event work handler (all ASICs).

 * The work gets scheduled from the IRQ handler if there

 * was a hotplug interrupt.  It walks through the connector table

 * and calls hotplug handler for each connector. After this, it sends

 * a DRM hotplug event to alert userspace.

 *

 * This design approach is required in order to defer hotplug event handling

 * from the IRQ handler to a work handler because hotplug handler has to use

 * mutexes which cannot be locked in an IRQ handler (since &mutex_lock may

 * sleep).

 Just fire off a uevent and let userspace tell us what to do */

/**

 * amdgpu_irq_disable_all - disable *all* interrupts

 *

 * @adev: amdgpu device pointer

 *

 * Disable all types of interrupts from all sources.

/**

 * amdgpu_irq_handler - IRQ handler

 *

 * @irq: IRQ number (unused)

 * @arg: pointer to DRM device

 *

 * IRQ handler for amdgpu driver (all ASICs).

 *

 * Returns:

 * result of handling the IRQ, as defined by &irqreturn_t

	/* For the hardware that cannot enable bif ring for both ras_controller_irq

         * and ras_err_evnet_athub_irq ih cookies, the driver has to poll status

	 * register to check whether the interrupt is triggered or not, and properly

	 * ack the interrupt if it is there

/**

 * amdgpu_irq_handle_ih1 - kick of processing for IH1

 *

 * @work: work structure in struct amdgpu_irq

 *

 * Kick of processing IH ring 1.

/**

 * amdgpu_irq_handle_ih2 - kick of processing for IH2

 *

 * @work: work structure in struct amdgpu_irq

 *

 * Kick of processing IH ring 2.

/**

 * amdgpu_irq_handle_ih_soft - kick of processing for ih_soft

 *

 * @work: work structure in struct amdgpu_irq

 *

 * Kick of processing IH soft ring.

/**

 * amdgpu_msi_ok - check whether MSI functionality is enabled

 *

 * @adev: amdgpu device pointer (unused)

 *

 * Checks whether MSI functionality has been disabled via module parameter

 * (all ASICs).

 *

 * Returns:

 * *true* if MSIs are allowed to be enabled or *false* otherwise

 VF FLR */

/**

 * amdgpu_irq_init - initialize interrupt handling

 *

 * @adev: amdgpu device pointer

 *

 * Sets up work functions for hotplug and reset interrupts, enables MSI

 * functionality, initializes vblank, hotplug and reset interrupt handling.

 *

 * Returns:

 * 0 on success or error code on failure

 Enable MSI if not disabled by module parameter */

 we only need one vector */

 Disable vblank IRQs aggressively for power-saving */

 XXX: can this be enabled for DC? */

 Pre-DCE11 */

 Use vector 0 for MSI-X. */

 PCI devices require shared interrupts. */

/**

 * amdgpu_irq_fini - shut down interrupt handling

 *

 * @adev: amdgpu device pointer

 *

 * Tears down work functions for hotplug and reset interrupts, disables MSI

 * functionality, shuts down vblank, hotplug and reset interrupt handling,

 * turns off interrupts from all sources (all ASICs).

/**

 * amdgpu_irq_add_id - register IRQ source

 *

 * @adev: amdgpu device pointer

 * @client_id: client id

 * @src_id: source id

 * @source: IRQ source pointer

 *

 * Registers IRQ source on a client.

 *

 * Returns:

 * 0 on success or error code otherwise

/**

 * amdgpu_irq_dispatch - dispatch IRQ to IP blocks

 *

 * @adev: amdgpu device pointer

 * @ih: interrupt ring instance

 *

 * Dispatches IRQ to IP blocks.

 Send it to amdkfd as well if it isn't already handled */

/**

 * amdgpu_irq_delegate - delegate IV to soft IH ring

 *

 * @adev: amdgpu device pointer

 * @entry: IV entry

 * @num_dw: size of IV

 *

 * Delegate the IV to the soft IH ring and schedule processing of it. Used

 * if the hardware delegation to IH1 or IH2 doesn't work for some reason.

/**

 * amdgpu_irq_update - update hardware interrupt state

 *

 * @adev: amdgpu device pointer

 * @src: interrupt source pointer

 * @type: type of interrupt

 *

 * Updates interrupt state for the specific source (all ASICs).

	/* We need to determine after taking the lock, otherwise

/**

 * amdgpu_irq_gpu_reset_resume_helper - update interrupt states on all sources

 *

 * @adev: amdgpu device pointer

 *

 * Updates state of all types of interrupts on all sources on resume after

 * reset.

/**

 * amdgpu_irq_get - enable interrupt

 *

 * @adev: amdgpu device pointer

 * @src: interrupt source pointer

 * @type: type of interrupt

 *

 * Enables specified type of interrupt on the specified source (all ASICs).

 *

 * Returns:

 * 0 on success or error code otherwise

/**

 * amdgpu_irq_put - disable interrupt

 *

 * @adev: amdgpu device pointer

 * @src: interrupt source pointer

 * @type: type of interrupt

 *

 * Enables specified type of interrupt on the specified source (all ASICs).

 *

 * Returns:

 * 0 on success or error code otherwise

/**

 * amdgpu_irq_enabled - check whether interrupt is enabled or not

 *

 * @adev: amdgpu device pointer

 * @src: interrupt source pointer

 * @type: type of interrupt

 *

 * Checks whether the given type of interrupt is enabled on the given source.

 *

 * Returns:

 * *true* if interrupt is enabled, *false* if interrupt is disabled or on

 * invalid parameters

 XXX: Generic IRQ handling */

 XXX */

 XXX */

 amdgpu hardware interrupt chip descriptor */

/**

 * amdgpu_irqdomain_map - create mapping between virtual and hardware IRQ numbers

 *

 * @d: amdgpu IRQ domain pointer (unused)

 * @irq: virtual IRQ number

 * @hwirq: hardware irq number

 *

 * Current implementation assigns simple interrupt handler to the given virtual

 * IRQ.

 *

 * Returns:

 * 0 on success or error code otherwise

 Implementation of methods for amdgpu IRQ domain */

/**

 * amdgpu_irq_add_domain - create a linear IRQ domain

 *

 * @adev: amdgpu device pointer

 *

 * Creates an IRQ domain for GPU interrupt sources

 * that may be driven by another driver (e.g., ACP).

 *

 * Returns:

 * 0 on success or error code otherwise

/**

 * amdgpu_irq_remove_domain - remove the IRQ domain

 *

 * @adev: amdgpu device pointer

 *

 * Removes the IRQ domain for GPU interrupt sources

 * that may be driven by another driver (e.g., ACP).

/**

 * amdgpu_irq_create_mapping - create mapping between domain Linux IRQs

 *

 * @adev: amdgpu device pointer

 * @src_id: IH source id

 *

 * Creates mapping between a domain IRQ (GPU IH src id) and a Linux IRQ

 * Use this for components that generate a GPU interrupt, but are driven

 * by a different driver (e.g., ACP).

 *

 * Returns:

 * Linux IRQ

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * This shader is used to clear VGPRS and LDS, and also write the input

 * pattern into the write back buffer, which will be used by driver to

 * check whether all SIMDs have been covered.

 64KB LDS */

  63 - accum-offset = 256 */

/*

 * The below shaders are used to clear SGPRS, and also write the input

 * pattern into the write back buffer. The first two dispatch should be

 * scheduled simultaneously which make sure that all SGPRS could be

 * allocated, so the dispatch 1 need check write back buffer before scheduled,

 * make sure that waves of dispatch 0 are all dispacthed to all simds

 * balanced. both dispatch 0 and dispatch 1 should be halted until all waves

 * are dispatched, and then driver write a pattern to the shared memory to make

 * all waves continue.

/*

 * This shader is used to clear the uninitiated sgprs after the above

 * two dispatches, because of hardware feature, dispath 0 couldn't clear

 * top hole sgprs. Therefore need 4 waves per SIMD to cover these sgprs

 allocate an indirect buffer to put the commands in */

 load the compute shaders */

 init the ib length to 0 */

 write the register state for the compute dispatch */

 write the shader start address: mmCOMPUTE_PGM_LO, mmCOMPUTE_PGM_HI */

 write the wb buffer address */

 write dispatch packet */

 x */

 y */

 z */

 shedule the ib on the ring */

 bail if the compute ring is not ready */

 allocate the write-back buffer from IB */

 stop waves */

 stop waves */

 stop waves */

 wait for the GPU to finish processing the IB */

 stop waves */

 stop waves */

 CU_ID: 0~15, SIMD_ID: 0~3, WAVE_ID: 0 ~ 9 */

 bail if the compute ring is not ready */

 allocate the write-back buffer from IB */

 wait for the GPU to finish processing the IB */

 only support when RAS is enabled */

	/* Workaround for ALDEBARAN, skip GPRs init in GPU reset.

 apply golden settings per die */

 CPF */

 CPC */

 GDS */

 RLC */

 SPI */

 SQC */

 SQ */

 TCP */

 TCI */

 TCC */

 TCA */

 TCX */

 TD */

 TA */

 GCEA */

 CPF */

 CPC */

 GDS */

 RLC */

 SPI */

 SQC - regSQC_EDC_CNT */

 SQC - regSQC_EDC_CNT2 */

 SQC - regSQC_EDC_CNT3 */

 SQC - regSQC_EDC_PARITY_CNT3 */

 SQ */

 TCP */

 TCI */

 TCC */

 TCA */

 TCX */

 TD */

 TA */

 EA - regGCEA_EDC_CNT */

 EA - regGCEA_EDC_CNT2 */

 EA - regGCEA_EDC_CNT3 */

 if sec/ded_count is null, just clear counter */

 clear counter after read */

 if sec/ded_count is NULL, just clear counter */

 clear counter after read */

 print the edc count */

 clear after read */

 clear old status */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 XXX: update when we support VCE */

 tahiti, pitcarin, verde */

 oland and hainan don't support encode */

 tahiti, pitcarin, verde, oland */

 hainan doesn't support decode */

 enable the rom */

 Disable VGA mode */

 restore regs */

 APU vbios image is part of sbios image */

 set rom index to 0 */

 set mclk/sclk to bypass */

 powerdown spll */

 disable BM */

 reset */

 wait for asic to come out of reset */

 enable BM */

 change this when we support soft reset */

	/* This reports 0 on APUs, so return to avoid writing/reading registers

	 * that may or may not be different from their GPU counterparts

 Set the 2 events that we wish to watch, defined above */

 Reg 40 is # received msgs, Reg 104 is # of posted requests sent */

 Write to enable desired perf counters */

	/* Zero out and enable the perf counters

	 * Write 0x5:

	 * Bit 0 = Start all counters(1)

	 * Bit 2 = Global counter reset enable(1)

	/* Load the shadow and disable the perf counters

	 * Write 0x2:

	 * Bit 0 = Stop counters(0)

	 * Bit 1 = Load the shadow counters(1)

 Read register values to get any >32bit overflow */

 Get the values and add the overflow */

 Get the number of NAKs received and generated */

 Add the total number of NAKs, i.e the number of replays */

 Make sure UPLL_CTLREQ is deasserted */

 Assert UPLL_CTLREQ */

 Wait for CTLACK and CTLACK2 to get asserted */

 Deassert UPLL_CTLREQ */

 Adjust to post divider minimum value */

 We alway need a frequency less than or equal the target */

 Post dividers above a certain value must be even */

/**

 * si_calc_upll_dividers - calc UPLL clock dividers

 *

 * @adev: amdgpu_device pointer

 * @vclk: wanted VCLK

 * @dclk: wanted DCLK

 * @vco_min: minimum VCO frequency

 * @vco_max: maximum VCO frequency

 * @fb_factor: factor to multiply vco freq with

 * @fb_mask: limit and bitmask for feedback divider

 * @pd_min: post divider minimum

 * @pd_max: post divider maximum

 * @pd_even: post divider must be even above this value

 * @optimal_fb_div: resulting feedback divider

 * @optimal_vclk_div: resulting vclk post divider

 * @optimal_dclk_div: resulting dclk post divider

 *

 * Calculate dividers for UVDs UPLL (except APUs).

 * Returns zero on success; -EINVAL on error.

 Start off with something large */

 Loop through vco from low to high */

 fb div out of range ? */

 It can oly get worse */

 Calc vclk divider with current vco freq */

 vco is too big, it has to stop */

 Calc dclk divider with current vco freq */

 vco is too big, it has to stop */

 Calc score with current vco freq */

 Determine if this vco setting is better than current optimal settings */

 It can't get better than this */

 Did we found a valid setup ? */

 Bypass vclk and dclk with bclk */

 Put PLL in bypass mode */

 Keep the Bypass mode */

 Set RESET_ANTI_MUX to 0 */

 Set VCO_MODE to 1 */

 Disable sleep mode */

 Deassert UPLL_RESET */

 Assert UPLL_RESET again */

 Disable spread spectrum. */

 Set feedback divider */

 Set ref divider to 0 */

 Set PDIV_A and PDIV_B */

 Give the PLL some time to settle */

 Deassert PLL_RESET */

 Switch from bypass mode to normal mode */

 Switch VCLK and DCLK selection */

 Make sure VCEPLL_CTLREQ is deasserted */

 Assert UPLL_CTLREQ */

 Wait for CTLACK and CTLACK2 to get asserted */

 Deassert UPLL_CTLREQ */

 Bypass evclk and ecclk with bclk */

 Put PLL in bypass mode */

 Keep the Bypass mode, put PLL to sleep */

 Set RESET_ANTI_MUX to 0 */

 Set VCO_MODE to 1 */

 Toggle VCEPLL_SLEEP to 1 then back to 0 */

 Deassert VCEPLL_RESET */

 Assert VCEPLL_RESET again */

 Disable spread spectrum. */

 Set feedback divider */

 Set ref divider to 0 */

 Set PDIV_A and PDIV_B */

 Give the PLL some time to settle */

 Deassert PLL_RESET */

 Switch from bypass mode to normal mode */

 Switch VCLK and DCLK selection */

AMD_CG_SUPPORT_GFX_CGCG |*/

AMD_CG_SUPPORT_GFX_CGCG |*/

???

AMD_CG_SUPPORT_GFX_CGCG |*/

AMD_CG_SUPPORT_GFX_CGCG |*/

 gen3 */

 gen2 */

 gen1 */

 amdgpu_device_ip_block_add(adev, &vce_v1_0_ip_block); */

 amdgpu_device_ip_block_add(adev, &vce_v1_0_ip_block); */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 3 bits in the bitfield. */

  not defined in the CI/KV reg file  */

 extend the mask to 26 bits to match the low address field */

	/*

	 * We have to assume that there is no outstanding mapping.

	 * The ATC_VMID_PASID_MAPPING_UPDATE_STATUS bit could be 0 because

	 * a mapping is in progress or because a mapping finished and the

	 * SW cleared it. So the protocol is to always wait & clear.

 Mapping vmid to pasid also for IH block */

 HQD registers extend from CP_MQD_BASE_ADDR to CP_MQD_CONTROL. */

	/* Copy userspace write pointer value to register.

	 * Activate doorbell logic to monitor subsequent changes.

	/* read_user_ptr may take the mm->mmap_lock.

	 * release srbm_mutex to avoid circular dependency between

	 * srbm_mutex->mm_sem->reservation_ww_class_mutex->srbm_mutex.

	/* Workaround: If IQ timer is active and the wait time is close to or

	 * equal to 0, dequeueing is not safe. Wait until either the wait time

	 * is larger or timer is cleared. Also, ensure that IQ_REQ_PEND is

	 * cleared before continuing. Also, ensure wait times are set to at

	 * least 0x3.

 wait for 500 usecs at maximum */

 SEM-rearm is safe */

			/* Wait time 3 is safe for CP, but our MMIO read/write

			 * time is close to 1 microsecond, so check for 10 to

			 * leave more buffer room

 Turning off this address until we set all the registers */

 Turning off this watch point until we set all the registers */

 Enable the watch point */

  Restore the GRBM_GFX_INDEX register  */

 /**

  * read_vmid_from_vmfault_reg - read vmid from register

  *

  * adev: amdgpu_device pointer

  * @vmid: vmid pointer

  * read vmid from register (CIK).

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * vcn_v2_5_early_init - set function pointers

 *

 * @handle: amdgpu_device pointer

 *

 * Set ring and irq function pointers

 both instances are harvested, disable the block */

/**

 * vcn_v2_5_sw_init - sw init for VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * Load firmware and sw initialization

 VCN DEC TRAP */

 VCN ENC TRAP */

/**

 * vcn_v2_5_sw_fini - sw fini for VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * VCN suspend and free up sw allocation

/**

 * vcn_v2_5_hw_init - start and test VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * Initialize the hardware, boot up the VCPU and do some testing

/**

 * vcn_v2_5_hw_fini - stop the hardware block

 *

 * @handle: amdgpu_device pointer

 *

 * Stop the VCN block, mark ring as not ready any more

/**

 * vcn_v2_5_suspend - suspend VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * HW fini and suspend VCN block

/**

 * vcn_v2_5_resume - resume VCN block

 *

 * @handle: amdgpu_device pointer

 *

 * Resume firmware and hw init VCN block

/**

 * vcn_v2_5_mc_resume - memory controller programming

 *

 * @adev: amdgpu_device pointer

 *

 * Let the VCN memory controller know it's offsets

 cache window 0: fw */

 cache window 1: stack */

 cache window 2: context */

 non-cache window */

 cache window 0: fw */

 cache window 1: stack */

 cache window 2: context */

 non-cache window */

 VCN global tiling registers */

/**

 * vcn_v2_5_disable_clock_gating - disable VCN clock gating

 *

 * @adev: amdgpu_device pointer

 *

 * Disable clock gating for VCN block

 UVD disable CGC */

 turn on */

 enable sw clock gating control */

 turn off clock gating */

 turn on SUVD clock gating */

 turn on sw mode in UVD_SUVD_CGC_CTRL */

/**

 * vcn_v2_5_enable_clock_gating - enable VCN clock gating

 *

 * @adev: amdgpu_device pointer

 *

 * Enable clock gating for VCN block

 enable UVD CGC */

 disable register anti-hang mechanism */

 enable dynamic power gating mode */

 enable clock gating */

 enable VCPU clock */

 disable master interupt */

 setup mmUVD_LMI_CTRL */

 enable LMI MC and UMC channels */

 unblock VCPU register access */

 enable master interrupt */

 force RBC into idle state */

 Stall DPG before WPTR/RPTR reset */

 set the write pointer delay */

 set the wb address */

 program the RB_BASE for ring buffer */

 Initialize the ring buffer's read and write pointers */

 Unstall DPG */

 disable register anti-hang mechanism */

 set uvd status busy */

SW clock gating */

 enable VCPU clock */

 disable master interrupt */

 setup mmUVD_LMI_CTRL */

 setup mmUVD_MPC_CNTL */

 setup UVD_MPC_SET_MUXA0 */

 setup UVD_MPC_SET_MUXB0 */

 setup mmUVD_MPC_SET_MUX */

 VCN global tiling registers */

 enable LMI MC and UMC channels */

 unblock VCPU register access */

 enable master interrupt */

 clear the busy bit of VCN_STATUS */

 force RBC into idle state */

 program the RB_BASE for ring buffer */

 Initialize the ring buffer's read and write pointers */

	/*

	 * 1, write to vce_mmsch_vf_ctx_addr_lo/hi register with GPU mc addr of

	 *  memory descriptor location

 2, update vmid of descriptor */

 use domain0 for MM scheduler */

 3, notify mmsch about the size of this descriptor */

 4, set resp to zero */

	/*

	 * 5, kick off the initialization and wait until

	 * VCE_MMSCH_VF_MAILBOX_RESP becomes non-zero

 mc resume*/

 force RBC into idle state */

 add end packet */

 refine header */

 Wait for power status to be 1 */

 wait for read ptr to be equal to write ptr */

 disable dynamic power gating mode */

 wait for vcn idle */

 block LMI UMC channel */

 block VCPU register access */

 reset VCPU */

 disable VCPU clock */

 clear status */

 enable register anti-hang mechanism */

 pause/unpause if state is changed */

 pause DPG */

 wait for ACK */

 Stall DPG before WPTR/RPTR reset */

 Restore */

 Unstall DPG */

/**

 * vcn_v2_5_dec_ring_get_rptr - get read pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware read pointer

/**

 * vcn_v2_5_dec_ring_get_wptr - get write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware write pointer

/**

 * vcn_v2_5_dec_ring_set_wptr - set write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Commits the write pointer to the hardware

 vcn_v2_0_dec_ring_emit_vm_flush */

 vcn_v2_0_dec_ring_emit_fence x2 vm fence */

 vcn_v2_0_dec_ring_emit_ib */

 vcn_v2_0_dec_ring_emit_vm_flush */

 vcn_v2_0_dec_ring_emit_fence x2 vm fence */

 vcn_v2_0_dec_ring_emit_ib */

/**

 * vcn_v2_5_enc_ring_get_rptr - get enc read pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware enc read pointer

/**

 * vcn_v2_5_enc_ring_get_wptr - get enc write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware enc write pointer

/**

 * vcn_v2_5_enc_ring_set_wptr - set enc write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Commits the enc write pointer to the hardware

 vcn_v2_0_enc_ring_emit_vm_flush */

 vcn_v2_0_enc_ring_emit_fence x2 vm fence */

 vcn_v2_0_enc_ring_insert_end */

 vcn_v2_0_enc_ring_emit_ib */

 vcn_v2_0_enc_ring_emit_vm_flush */

 vcn_v2_0_enc_ring_emit_fence x2 vm fence */

 vcn_v2_0_enc_ring_insert_end */

 vcn_v2_0_enc_ring_emit_ib */

 CHIP_ALDEBARAN */

 CHIP_ALDEBARAN */

/*

 * Copyright 2009 Jerome Glisse.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Jerome Glisse

 Check error value now. The value can be overwritten when clean up.*/

 simple test, VRAM to GTT and GTT to VRAM */

 simple test, VRAM to VRAM */

 GTT to VRAM, buffer size sweep, powers of 2 */

 VRAM to GTT, buffer size sweep, powers of 2 */

 VRAM to VRAM, buffer size sweep, powers of 2 */

 GTT to VRAM, buffer size sweep, common modes */

 VRAM to GTT, buffer size sweep, common modes */

 VRAM to VRAM, buffer size sweep, common modes */

 SPDX-License-Identifier: GPL-2.0 OR MIT

/*

 * Copyright 2016-2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Christian König, Felix Kuehling

/**

 * DOC: mem_info_preempt_used

 *

 * The amdgpu driver provides a sysfs API for reporting current total amount of

 * used preemptible memory.

 * The file mem_info_preempt_used is used for this, and returns the current

 * used size of the preemptible block, in bytes

/**

 * amdgpu_preempt_mgr_new - allocate a new node

 *

 * @man: TTM memory type manager

 * @tbo: TTM BO we need this range for

 * @place: placement flags and restrictions

 * @mem: the resulting mem object

 *

 * Dummy, just count the space used without allocating resources or any limit.

/**

 * amdgpu_preempt_mgr_del - free ranges

 *

 * @man: TTM memory type manager

 * @mem: TTM memory object

 *

 * Free the allocated GTT again.

/**

 * amdgpu_preempt_mgr_usage - return usage of PREEMPT domain

 *

 * @man: TTM memory type manager

 *

 * Return how many bytes are used in the GTT domain

/**

 * amdgpu_preempt_mgr_debug - dump VRAM table

 *

 * @man: TTM memory type manager

 * @printer: DRM printer to use

 *

 * Dump the table content using printk.

/**

 * amdgpu_preempt_mgr_init - init PREEMPT manager and DRM MM

 *

 * @adev: amdgpu_device pointer

 *

 * Allocate and initialize the GTT manager.

/**

 * amdgpu_preempt_mgr_fini - free and destroy GTT manager

 *

 * @adev: amdgpu_device pointer

 *

 * Destroy and free the GTT manager, returns -EBUSY if ranges are still

 * allocated inside it.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/**

 * amdgpu_ih_ring_init - initialize the IH state

 *

 * @adev: amdgpu_device pointer

 * @ih: ih ring to initialize

 * @ring_size: ring size to allocate

 * @use_bus_addr: true when we can use dma_alloc_coherent

 *

 * Initializes the IH state and allocates a buffer

 * for the IH ring buffer.

 * Returns 0 for success, errors for failure.

 Align ring size */

		/* add 8 bytes for the rptr/wptr shadows and

		 * add them to the end of the ring allocation.

/**

 * amdgpu_ih_ring_fini - tear down the IH state

 *

 * @adev: amdgpu_device pointer

 * @ih: ih ring to tear down

 *

 * Tears down the IH state and frees buffer

 * used for the IH ring buffer.

		/* add 8 bytes for the rptr/wptr shadows and

		 * add them to the end of the ring allocation.

/**

 * amdgpu_ih_ring_write - write IV to the ring buffer

 *

 * @ih: ih ring to write to

 * @iv: the iv to write

 * @num_dw: size of the iv in dw

 *

 * Writes an IV to the ring buffer using the CPU and increment the wptr.

 * Used for testing and delegating IVs to a software ring.

 Only commit the new wptr if we don't overflow */

 Waiter helper that checks current rptr matches or passes checkpoint wptr */

 rptr has wrapped. */

 check ring is empty to workaround missing wptr overflow flag */

/**

 * amdgpu_ih_wait_on_checkpoint_process - wait to process IVs up to checkpoint

 *

 * @adev: amdgpu_device pointer

 * @ih: ih ring to process

 *

 * Used to ensure ring has processed IVs up to the checkpoint write pointer.

 Order wptr with rptr. */

 wptr has wrapped. */

/**

 * amdgpu_ih_process - interrupt handler

 *

 * @adev: amdgpu_device pointer

 * @ih: ih ring to process

 *

 * Interrupt hander (VI), walk the IH ring.

 * Returns irq process return code.

 Order reading of wptr vs. reading of IH ring data */

 make sure wptr hasn't changed while processing */

/**

 * amdgpu_ih_decode_iv_helper - decode an interrupt vector

 *

 * @adev: amdgpu_device pointer

 * @ih: ih ring to process

 * @entry: IV entry

 *

 * Decodes the interrupt vector at the current rptr

 * position and also advance the position for for Vega10

 * and later GPUs.

 wptr/rptr are in bytes! */

 wptr/rptr are in bytes! */

 SPDX-License-Identifier: MIT

/* Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: David Nieto

 *          Roy Sun

/**

 * \file amdgpu_ioc32.c

 *

 * 32-bit ioctl compatibility routines for the AMDGPU DRM.

 *

 * \author Paul Mackerras <paulus@samba.org>

 *

 * Copyright (C) Paul Mackerras 2005

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice (including the next

 * paragraph) shall be included in all copies or substantial portions of the

 * Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE AUTHOR BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,

 * WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,

 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS

 * IN THE SOFTWARE.

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

/* Total memory size in system memory and all GPU VRAM. Used to

 * estimate worst case amount of memory to reserve for page tables

/**

 * amdgpu_doorbell_get_kfd_info - Report doorbell configuration required to

 *                                setup amdkfd

 *

 * @adev: amdgpu_device pointer

 * @aperture_base: output returning doorbell aperture base physical address

 * @aperture_size: output returning doorbell aperture size in bytes

 * @start_offset: output returning # of doorbell bytes reserved for amdgpu.

 *

 * amdgpu and amdkfd share the doorbell aperture. amdgpu sets it up,

 * takes doorbells required for its own rings and reports the setup to amdkfd.

 * amdgpu reserved doorbells are at the start of the doorbell aperture.

	/*

	 * The first num_doorbells are used by amdgpu.

	 * amdkfd takes whatever's left in the aperture.

		/* this is going to have a few of the MSBs set that we need to

		 * clear

		/* According to linux/bitmap.h we shouldn't use bitmap_clear if

		 * nbits is not compile time constant

 only first MEC can have compute queues */

		/* Since SOC15, BIF starts to statically use the

		 * lower 12 bits of doorbell addresses for routing

		 * based on settings in registers like

		 * SDMA0_DOORBELL_RANGE etc..

		 * In order to route a doorbell to CP engine, the lower

		 * 12 bits of its address has to be outside the range

		 * set for SDMA, VCN, and IH blocks.

 map the buffer */

 the sclk is in quantas of 10kHz */

 Can't handle non-graphics buffers */

 Can't handle buffers from different drivers */

 Only VRAM and GTT BOs are supported */

 num links returns 0 for indirect peers since indirect route is unknown. */

 Aldebaran xGMI DPM is defeatured so assume x16 x 25Gbps for bandwidth. */

 This works for NO_HWS. TODO: need to handle without knowing VMID */

 CPU MCA will handle page retirement if connected_to_cpu is 1 */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * this peek_msg could *only* be called in IRQ routine becuase in IRQ routine

 * RCV_MSG_VALID filed of BIF_BX_PF0_MAILBOX_CONTROL must already be set to 1

 * by host.

 *

 * if called no in IRQ routine, this peek_msg cannot guaranteed to return the

 * correct value since it doesn't return the RCV_DW0 under the case that

 * RCV_MSG_VALID is set by host.

	/* IMPORTANT:

	 * clear TRN_MSG_VALID valid to clear host's RCV_MSG_ACK

	 * and with host's RCV_MSG_ACK cleared hw automatically clear host's RCV_MSG_ACK

	 * which lead to VF's TRN_MSG_ACK cleared, otherwise below xgpu_ai_poll_ack()

	 * will return immediatly

 start to poll ack */

 start to check msg if request is idh_req_gpu_init_access */

 Retrieve checksum from mailbox2 */

	/* block amdgpu_gpu_recover till msg FLR COMPLETE received,

	 * otherwise the mailbox msg will be ruined/reseted by

	 * the VF FLR.

 Trigger recovery for world switch failure if no TDR */

		/* READY_TO_ACCESS_GPU is fetched by kernel polling, IRQ can ignore

		 * it byfar since that polling thread will handle it,

		 * other msg like flr complete is not handled here.

/*

 * Copyright 2011 Red Hat Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sub license, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL

 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,

 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 * USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

/*

 * Authors:

 *    Jerome Glisse <glisse@freedesktop.org>

/* Algorithm:

 *

 * We store the last allocated bo in "hole", we always try to allocate

 * after the last allocated bo. Principle is that in a linear GPU ring

 * progression was is after last is the oldest bo we allocated and thus

 * the first one that should no longer be in use by the GPU.

 *

 * If it's not the case we skip over the bo after last to the closest

 * done bo if such one exist. If none exist and we are not asked to

 * block we report failure to allocate.

 *

 * If we are asked to block we wait on all the oldest fence of all

 * rings. We just wait for any of those fence to complete.

/**

 * amdgpu_sa_event - Check if we can stop waiting

 *

 * @sa_manager: pointer to the sa_manager

 * @size: number of bytes we want to allocate

 * @align: alignment we need to match

 *

 * Check if either there is a fence we can wait for or

 * enough free memory to satisfy the allocation directly

 if hole points to the end of the buffer */

 try again with its beginning */

 to handle wrap around we add sa_manager->size */

	/* go over all fence list and try to find the closest sa_bo

	 * of the current last

 limit the number of tries each ring gets */

 wrap around, pretend it's after */

 this sa bo is the closest one */

		/* we knew that this one is signaled,

 see if we can skip over some allocations */

 if we have nothing to wait for block */

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: AMD

 *

	/* call smu to POWER GATE ACP block

	 * smu will

	 * 1. turn off the acp clock

	 * 2. power off the acp tiles

	 * 3. check and enter ulv state

	/* call smu to UNGATE ACP block

	 * smu will

	 * 1. exit ulv

	 * 2. turn on acp clock

	 * 3. power on acp tiles

 Continue to remove */

/**

 * acp_hw_init - start and test ACP block

 *

 * @handle: handle used to pass amdgpu_device pointer

 *

 -ENODEV means board uses AZ rather than ACP */

 Assert Soft reset of ACP */

 Enable clock to ACP and wait until the clock is enabled */

 Deassert the SOFT RESET flags */

/**

 * acp_hw_fini - stop the hardware block

 *

 * @handle: handle used to pass amdgpu_device pointer

 *

 return early if no ACP */

 Assert Soft reset of ACP */

 Disable ACP clock */

 power up on suspend */

 power down again on resume */

/*

 * Copyright 2016 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 add these here since we already include dce12 headers and these are for DCN */

	/* Devices newer then VEGA10/12 shall have these programming

 Returning 1 here also prevents sending the IV to the KFD */

 Process it onyl if it's the first fault for this address */

		/* Delegate it to a different ring if the hardware hasn't

		 * already done it.

		/* Try to handle the recoverable page faults by filling page

		 * tables

	/*

	 * Issue a dummy read to wait for the status register to

	 * be updated to avoid reading an incorrect value due to

	 * the new fast GRBM interface.

/**

 * gmc_v9_0_use_invalidate_semaphore - judge whether to use semaphore

 *

 * @adev: amdgpu_device pointer

 * @vmhub: vmhub type

 *

/*

 * GART

 * VMID 0 is the physical GPU addresses as used by the kernel.

 * VMIDs 1-15 are used for userspace clients and are handled

 * by the amdgpu vm/hsa code.

/**

 * gmc_v9_0_flush_gpu_tlb - tlb flush with certain type

 *

 * @adev: amdgpu_device pointer

 * @vmid: vm instance to flush

 * @vmhub: which hub to flush

 * @flush_type: the flush type

 *

 * Flush the TLB for the requested page table using certain type.

		/* Vega20+XGMI caches PTEs in TC and TLB. Add a

		 * heavy-weight TLB flush (type 2), which flushes

		 * both. Due to a race condition with concurrent

		 * memory accesses using the same TLB cache line, we

		 * still need a second TLB flush after this.

	/* This is necessary for a HW workaround under SRIOV as well

	 * as GFXOFF under bare metal

	/*

	 * It may lose gpuvm invalidate acknowldege state across power-gating

	 * off cycle, add semaphore acquire before invalidation and semaphore

	 * release after invalidation to avoid entering power gated state

	 * to WA the Issue

 TODO: It needs to continue working on debugging with semaphore for GFXHUB as well. */

 a read return value of 1 means semaphore acuqire */

		/*

		 * Issue a dummy read to wait for the ACK register to

		 * be cleared to avoid a false ACK due to the new fast

		 * GRBM interface.

 TODO: It needs to continue working on debugging with semaphore for GFXHUB as well. */

		/*

		 * add semaphore release after invalidation,

		 * write with 0 means semaphore release

/**

 * gmc_v9_0_flush_gpu_tlb_pasid - tlb flush via pasid

 *

 * @adev: amdgpu_device pointer

 * @pasid: pasid to be flush

 * @flush_type: the flush type

 * @all_hub: flush all hubs

 *

 * Flush the TLB for the requested pasid.

		/* Vega20+XGMI caches PTEs in TC and TLB. Add a

		 * heavy-weight TLB flush (type 2), which flushes

		 * both. Due to a race condition with concurrent

		 * memory accesses using the same TLB cache line, we

		 * still need a second TLB flush after this.

 2 dwords flush + 8 dwords fence */

 2 dwords flush + 8 dwords fence */

	/*

	 * It may lose gpuvm invalidate acknowldege state across power-gating

	 * off cycle, add semaphore acquire before invalidation and semaphore

	 * release after invalidation to avoid entering power gated state

	 * to WA the Issue

 TODO: It needs to continue working on debugging with semaphore for GFXHUB as well. */

 a read return value of 1 means semaphore acuqire */

 TODO: It needs to continue working on debugging with semaphore for GFXHUB as well. */

		/*

		 * add semaphore release after invalidation,

		 * write with 0 means semaphore release

 Do nothing because there's no lut register for mmhub1. */

/*

 * PTE format on VEGA 10:

 * 63:59 reserved

 * 58:57 mtype

 * 56 F

 * 55 L

 * 54 P

 * 53 SW

 * 52 T

 * 50:48 reserved

 * 47:12 4k physical page base address

 * 11:7 fragment

 * 6 write

 * 5 read

 * 4 exe

 * 3 Z

 * 2 snooped

 * 1 system

 * 0 valid

 *

 * PDE format on VEGA 10:

 * 63:59 block fragment size

 * 58:55 reserved

 * 54 P

 * 53:48 reserved

 * 47:6 physical base address of PD or PTE

 * 5:3 reserved

 * 2 C

 * 1 system

 * 0 valid

 Set the block fragment size */

 mmhub ras is not available */

 is UMC the right IP to check for MCA?  Maybe DF? */

 ARCT and VEGA20 don't have XGMI defined in their IP discovery tables */

	/*

	 * Workaround performance drop issue with VBIOS enables partial

	 * writes, while disables HBM ECC for vega10.

 add the xgmi offset of the physical node */

 base offset of vram pages */

 XXX: add the xgmi offset of the physical node? */

/**

 * gmc_v9_0_mc_init - initialize the memory controller driver params

 *

 * @adev: amdgpu_device pointer

 *

 * Look up the amount of vram, vram width, and decide how to place

 * vram and gart within the GPU's physical address space.

 * Returns 0 for success.

 size in MB on si */

	/*

	 * AMD Accelerated Processing Platform (APP) supporting GPU-HOST xgmi

	 * interface can use VRAM through here as it appears system reserved

	 * memory in host address space.

	 *

	 * For APUs, VRAM is just the stolen system memory and can be accessed

	 * directly.

	 *

	 * Otherwise, use the legacy Host Data Path (HDP) through PCIe BAR.

 check whether both host-gpu and gpu-gpu xgmi links exist */

 In case the PCI BAR is larger than the actual amount of vram */

 set the gart size */

 all engines support GPUVM */

 all engines support GPUVM */

 DCE SG support */

 DCE SG support */

 Initialize common gart structure */

/**

 * gmc_v9_0_save_registers - saves regs

 *

 * @adev: amdgpu_device pointer

 *

 * This saves potential register values that should be

 * restored upon resume

		/* For Vega10 SR-IOV, vram_width can't be read from ATOM as RAVEN,

		 * and DF related registers is not readable, seems hardcord is the

		 * only way to set the correct vram_width

 hbm memory channel size */

 vm_size is 128TB + 512GB for legacy 3-level page support */

		/*

		 * To fulfill 4-level page support,

		 * vm size is 256TB (48bit), maximum size of Vega10,

		 * block size 512 (9bit)

 sriov restrict max_pfn below AMDGPU_GMC_HOLE */

 Keep the vm size same with Vega20 */

 This interrupt is VMC page fault.*/

 interrupt sent to DF. */

	/* Set the internal MC address mask

	 * This is the max address of the GPU's

	 * internal address space.

 48 bit MC */

 Memory manager */

	/*

	 * number of VMs

	 * VMID 0 is reserved for System

	 * amdgpu graphics/compute will use VMIDs 1..n-1

	 * amdkfd will use VMIDs n..15

	 *

	 * The first KFD VMID is 8 for GPUs with graphics, 3 for

	 * compute-only GPUs. On compute-only GPUs that leaves 2 VMIDs

	 * for video processing.

 TODO for renoir */

/**

 * gmc_v9_0_restore_registers - restores regs

 *

 * @adev: amdgpu_device pointer

 *

 * This restores register values, saved at suspend.

/**

 * gmc_v9_0_gart_enable - gart enable

 *

 * @adev: amdgpu_device pointer

 The sequence of these two function calls matters.*/

 Lockout access through VGA aperture*/

 disable VGA render */

 After HDP is initialized, flush HDP.*/

/**

 * gmc_v9_0_gart_disable - gart disable

 *

 * @adev: amdgpu_device pointer

 *

 * This disables all VM page table.

 full access mode, so don't touch any GMC register */

 MC is always ready in GMC v9.*/

 There is no need to wait for MC idle in GMC v9.*/

 XXX for emulation.*/

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 for Vega20 register name change */

 HDP SRAM errors are uncorrectable ones (i.e. fatal errors) */

read back hdp ras counter to reset it to 0 */

 AMD_CG_SUPPORT_HDP_LS */

/*

 * Copyright 2007-8 Advanced Micro Devices, Inc.

 * Copyright 2008 Red Hat Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 * Authors: Dave Airlie

 *          Alex Deucher

 bit banging i2c */

 switch the pads to ddc mode */

 clear the output pin values */

 set the pins to input */

 mask the gpio pins for software use */

 unmask the gpio pins for software use */

 read the value off the pin */

 read the value off the pin */

 set pin direction */

 set pin direction */

 don't add the mm_i2c bus unless hw_i2c is enabled */

 hw i2c using atom */

 set the amdgpu bit adapter */

 from VESA */

 Add the default buses */

 remove all the buses */

 Add additional buses */

 looks up bus based on id */

 ddc router switching */

 clock/data router switching */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 APE1 no longer exists on GFX9 */

	/*

	 * We have to assume that there is no outstanding mapping.

	 * The ATC_VMID_PASID_MAPPING_UPDATE_STATUS bit could be 0 because

	 * a mapping is in progress or because a mapping finished

	 * and the SW cleared it.

	 * So the protocol is to always wait & clear.

 TODO: uncomment this code when the hardware support is ready. */

 Mapping vmid to pasid also for IH block */

/* TODO - RING0 form of field is obsolete, seems to date back to SI

 * but still works

		/* On gfx10, mmSDMA1_xxx registers are defined NOT based

		 * on SDMA1 base address (dw 0x1860) but based on SDMA0

		 * base address (dw 0x1260). Therefore use mmSDMA0_RLC0_RB_CNTL

		 * instead of mmSDMA1_RLC0_RB_CNTL for the base address calc

		 * below

 HQD registers extend from CP_MQD_BASE_ADDR to CP_HQD_EOP_WPTR_MEM. */

 Activate doorbell logic before triggering WPTR poll. */

		/* Don't read wptr with get_user because the user

		 * context may not be accessible (if this function

		 * runs in a work queue). Instead trigger a one-shot

		 * polling read from memory in the CP. This assumes

		 * that wptr is GPU-accessible in the queue's VMID via

		 * ATC or SVM. WPTR==RPTR before starting the poll so

		 * the CP starts fetching new commands from the right

		 * place.

		 *

		 * Guessing a 64-bit WPTR from a 32-bit RPTR is a bit

		 * tricky. Assume that the queue didn't overflow. The

		 * number of valid bits in the 32-bit RPTR depends on

		 * the queue size. The remaining bits are taken from

		 * the saved 64-bit WPTR. If the WPTR wrapped, add the

		 * queue size.

 Start the EOP fetcher */

 Queue_Sel */

 VMID */

queue_type: normal compute queue */

 alloc format: all_on_one_pipe */

 engine_sel: hiq */

 num_queues: must be 1 */

 Is this still needed? */

	/* Workaround: If IQ timer is active and the wait time is close to or

	 * equal to 0, dequeueing is not safe. Wait until either the wait time

	 * is larger or timer is cleared. Also, ensure that IQ_REQ_PEND is

	 * cleared before continuing. Also, ensure wait times are set to at

	 * least 0x3.

 wait for 500 usecs at maximum */

 SEM-rearm is safe */

			/* Wait time 3 is safe for CP, but our MMIO read/write

			 * time is close to 1 microsecond, so check for 10 to

			 * leave more buffer room

 SDMA is on gfxhub as well for Navi1* series */

	/*

	 * Program TBA registers

	/*

	 * Program TMA registers

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sub license, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL

 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,

 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 * USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

/**

 * amdgpu_gmc_pdb0_alloc - allocate vram for pdb0

 *

 * @adev: amdgpu_device pointer

 *

 * Allocate video memory for pdb0 and map it for CPU access

 * Returns 0 for success, error for failure.

/**

 * amdgpu_gmc_get_pde_for_bo - get the PDE for a BO

 *

 * @bo: the BO to get the PDE for

 * @level: the level in the PD hirarchy

 * @addr: resulting addr

 * @flags: resulting flags

 *

 * Get the address and flags to be used for a PDE (Page Directory Entry).

/*

 * amdgpu_gmc_pd_addr - return the address of the root directory

 TODO: move that into ASIC specific code */

/**

 * amdgpu_gmc_set_pte_pde - update the page tables using CPU

 *

 * @adev: amdgpu_device pointer

 * @cpu_pt_addr: cpu address of the page table

 * @gpu_page_idx: entry in the page table to update

 * @addr: dst addr to write into pte/pde

 * @flags: access flags

 *

 * Update the page tables using CPU.

	/*

	 * The following is for PTE only. GART does not have PDEs.

/**

 * amdgpu_gmc_agp_addr - return the address in the AGP address space

 *

 * @bo: TTM BO which needs the address, must be in GTT domain

 *

 * Tries to figure out how to access the BO through the AGP aperture. Returns

 * AMDGPU_BO_INVALID_OFFSET if that is not possible.

/**

 * amdgpu_gmc_vram_location - try to find VRAM location

 *

 * @adev: amdgpu device structure holding all necessary information

 * @mc: memory controller structure holding memory information

 * @base: base address at which to put VRAM

 *

 * Function will try to place VRAM at base address provided

 * as parameter.

/** amdgpu_gmc_sysvm_location - place vram and gart in sysvm aperture

 *

 * @adev: amdgpu device structure holding all necessary information

 * @mc: memory controller structure holding memory information

 *

 * This function is only used if use GART for FB translation. In such

 * case, we use sysvm aperture (vmid0 page tables) for both vram

 * and gart (aka system memory) access.

 *

 * GPUVM (and our organization of vmid0 page tables) require sysvm

 * aperture to be placed at a location aligned with 8 times of native

 * page size. For example, if vm_context0_cntl.page_table_block_size

 * is 12, then native page size is 8G (2M*2^12), sysvm should start

 * with a 64G aligned address. For simplicity, we just put sysvm at

 * address 0. So vram start at address 0 and gart is right after vram.

/**

 * amdgpu_gmc_gart_location - try to find GART location

 *

 * @adev: amdgpu device structure holding all necessary information

 * @mc: memory controller structure holding memory information

 *

 * Function will place try to place GART before or after VRAM.

 * If GART size is bigger than space left then we ajust GART size.

 * Thus function will never fails.

To avoid the hole, limit the max mc address to AMDGPU_GMC_HOLE_START*/

	/* VCE doesn't like it when BOs cross a 4GB segment, so align

	 * the GART base on a 4GB boundary as well.

/**

 * amdgpu_gmc_agp_location - try to find AGP location

 * @adev: amdgpu device structure holding all necessary information

 * @mc: memory controller structure holding memory information

 *

 * Function will place try to find a place for the AGP BAR in the MC address

 * space.

 *

 * AGP BAR will be assigned the largest available hole in the address space.

 * Should be called after VRAM and GART locations are setup.

/**

 * amdgpu_gmc_fault_key - get hask key from vm fault address and pasid

 *

 * @addr: 48 bit physical address, page aligned (36 significant bits)

 * @pasid: 16 bit process address space identifier

/**

 * amdgpu_gmc_filter_faults - filter VM faults

 *

 * @adev: amdgpu device structure

 * @addr: address of the VM fault

 * @pasid: PASID of the process causing the fault

 * @timestamp: timestamp of the fault

 *

 * Returns:

 * True if the fault was filtered and should not be processed further.

 * False if the fault is a new one and needs to be handled.

 If we don't have space left in the ring buffer return immediately */

 Try to find the fault in the hash */

 Check if the entry was reused */

 Add the fault to the ring */

 And update the hash */

/**

 * amdgpu_gmc_filter_faults_remove - remove address from VM faults filter

 *

 * @adev: amdgpu device structure

 * @addr: address of the VM fault

 * @pasid: PASID of the process causing the fault

 *

 * Remove the address from fault filter, then future vm fault on this address

 * will pass to retry fault handler to recover.

	/*

	 * The latest engine allocation on gfx9/10 is:

	 * Engine 2, 3: firmware

	 * Engine 0, 1, 4~16: amdgpu ring,

	 *                    subject to change when ring number changes

	 * Engine 17: Gart flushes

/**

 * amdgpu_gmc_tmz_set -- check and set if a device supports TMZ

 * @adev: amdgpu_device pointer

 *

 * Check and set if an the device @adev supports Trusted Memory

 * Zones (TMZ).

		/* Don't enable it by default yet.

/**

 * amdgpu_gmc_noretry_set -- set per asic noretry defaults

 * @adev: amdgpu_device pointer

 *

 * Set a per asic default for the no-retry parameter.

 *

		/*

		 * noretry = 0 will cause kfd page fault tests fail

		 * for some ASICs, so set default to 1 for these ASICs.

		/* Raven currently has issues with noretry

		 * regardless of what we decide for other

		 * asics, we should leave raven with

		 * noretry = 0 until we root cause the

		 * issues.

		 *

		 * default this to 0 for now, but we may want

		 * to change this in the future for certain

		 * GPUs as it can increase performance in

		 * certain cases.

	/*

	 * TODO:

	 * Currently there is a bug where some memory client outside

	 * of the driver writes to first 8M of VRAM on S3 resume,

	 * this overrides GART which by default gets placed in first 8M and

	 * causes VM_FAULTS once GTT is accessed.

	 * Keep the stolen memory reservation until the while this is not solved.

 set to 0 if the pre-OS buffer uses up most of vram */

/**

 * amdgpu_gmc_init_pdb0 - initialize PDB0

 *

 * @adev: amdgpu_device pointer

 *

 * This function is only used when GART page table is used

 * for FB address translatioin. In such a case, we construct

 * a 2-level system VM page table: PDB0->PTB, to cover both

 * VRAM of the hive and system memory.

 *

 * PDB0 is static, initialized once on driver initialization.

 * The first n entries of PDB0 are used as PTE by setting

 * P bit to 1, pointing to VRAM. The n+1'th entry points

 * to a big PTB covering system memory.

 *

TODO it is UC. explore NC/RW?

	/* Each PDE0 (used as PTE) covers (2^vmid0_page_table_block_size)*2M

	/* The first n PDE0 entries are used as PTE,

	 * pointing to vram

	/* The n+1'th PDE0 entry points to a huge

	 * PTB who has more than 512 entries each

	 * pointing to a 4K system page

 Requires gart_ptb_gpu_pa to be 4K aligned */

/**

 * amdgpu_gmc_vram_mc2pa - calculate vram buffer's physical address from MC

 * address

 *

 * @adev: amdgpu_device pointer

 * @mc_addr: MC address of buffer

/**

 * amdgpu_gmc_vram_pa - calculate vram buffer object's physical address from

 * GPU's view

 *

 * @adev: amdgpu_device pointer

 * @bo: amdgpu buffer object

/**

 * amdgpu_gmc_vram_cpu_pa - calculate vram buffer object's physical address

 * from CPU's view

 *

 * @adev: amdgpu_device pointer

 * @bo: amdgpu buffer object

	/* Some ASICs need to reserve a region of video memory to avoid access

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

/*

 * These are nbio v7_4_1 registers mask. Temporarily define these here since

 * nbio v7_4_1 header is incomplete.

 Don't use.  Firmware uses this bit internally */

BIF_MMSCH1_DOORBELL_RANGE

BIF_MMSCH1_DOORBELL_ALDE_RANGE

		/*

		 * These registers address of SDMA2~7 is not consecutive

		 * from SDMA0~1. Need plus 4 dwords offset.

		 *

		 *   BIF_SDMA0_DOORBELL_RANGE:  0x3bc0

		 *   BIF_SDMA1_DOORBELL_RANGE:  0x3bc4

		 *   BIF_SDMA2_DOORBELL_RANGE:  0x3bd8

+		 *   BIF_SDMA4_DOORBELL_RANGE:

+		 *     ARCTURUS:  0x3be0

+		 *     ALDEBARAN: 0x3be4

TODO: Add support for v7.4

 AMD_CG_SUPPORT_BIF_MGCG */

 AMD_CG_SUPPORT_BIF_LS */

 setup interrupt control */

	/* INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=0 - dummy read disabled with msi, enabled without msi

	 * INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=1 - dummy read controlled by IH_DUMMY_RD_EN

 INTERRUPT_CNTL__IH_REQ_NONSNOOP_EN_MASK=1 if ring is in non-cacheable memory, e.g., vram */

 driver has to clear the interrupt status when bif ring is disabled */

			/*

			 * clear error status after ras_controller_intr

			 * according to hw team and count ue number

			 * for query

 logging on error cnt and printing for awareness */

		/* ras_controller_int is dedicated for nbif ras error,

		 * not the global interrupt for sync flood

 driver has to clear the interrupt status when bif ring is disabled */

	/* The ras_controller_irq enablement should be done in psp bl when it

	 * tries to enable ras feature. Driver only need to set the correct interrupt

	 * vector for bare-metal and sriov use case respectively

		/* set interrupt vector select bit to 0 to select

	/* By design, the ih cookie for ras_controller_irq should be written

	 * to BIFring instead of general iv ring. However, due to known bif ring

	 * hw bug, it has to be disabled. There is no chance the process function

	 * will be involked. Just left it as a dummy one.

	/* The ras_controller_irq enablement should be done in psp bl when it

	 * tries to enable ras feature. Driver only need to set the correct interrupt

	 * vector for bare-metal and sriov use case respectively

		/* set interrupt vector select bit to 0 to select

	/* By design, the ih cookie for err_event_athub_irq should be written

	 * to BIFring instead of general iv ring. However, due to known bif ring

	 * hw bug, it has to be disabled. There is no chance the process function

	 * will be involked. Just left it as a dummy one.

 init the irq funcs */

 register ras controller interrupt */

 init the irq funcs */

 register ras err event athub interrupt */

 clear error status register */

 clear parity fatal error indication field */

 clear interrupt status register */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 *

 same as vg20*/

/**

 * DOC: AMDGPU XGMI Support

 *

 * XGMI is a high speed interconnect that joins multiple GPU cards

 * into a homogeneous memory space that is organized by a collective

 * hive ID and individual node IDs, both of which are 64-bit numbers.

 *

 * The file xgmi_device_id contains the unique per GPU device ID and

 * is stored in the /sys/class/drm/card${cardno}/device/ directory.

 *

 * Inside the device directory a sub-directory 'xgmi_hive_info' is

 * created which contains the hive ID and the list of nodes.

 *

 * The hive ID is stored in:

 *   /sys/class/drm/card${cardno}/device/xgmi_hive_info/xgmi_hive_id

 *

 * The node information is stored in numbered directories:

 *   /sys/class/drm/card${cardno}/device/xgmi_hive_info/node${nodeno}/xgmi_device_id

 *

 * Each device has their own xgmi_hive_info direction with a mirror

 * set of node sub-directories.

 *

 * The XGMI memory space is built by contiguously adding the power of

 * two padded VRAM space from each node to each other.

 *

 Create xgmi device id file */

 Create xgmi error file */

 Create sysfs link to hive info folder on the first device */

 Create sysfs link form the hive folder to yourself */

 initialize new hive if not exist */

	/*

	 * hive pstate on boot is high in vega20 so we have to go to low

	 * pstate on after boot.

 fw bug so temporarily disable pstate switching */

	/*

	 * Vega20 only needs single peer to request pstate high for the hive to

	 * go high but all peers must request pstate low for the hive to go low

 Each psp need to set the latest topology */

/*

 * NOTE psp_xgmi_node_info.num_hops layout is as follows:

 * num_hops[7:6] = link type (0 = xGMI2, 1 = xGMI3, 2/3 = reserved)

 * num_hops[5:3] = reserved

 * num_hops[2:0] = number of hops

/*

 * Devices that support extended data require the entire hive to initialize with

 * the shared memory buffer flag set.

 *

 * Hive locks and conditions apply - see amdgpu_xgmi_add_device

 update node list for other device in the hive */

 get latest topology info for each device from psp */

 To do : continue with some node failed or disable the whole hive */

 get topology again for hives that support extended data */

 initialize the hive to get extended data.  */

 get the extended data. */

 initialize the hive to get non-extended data for the next round. */

 Remove the hive from global hive list */

		/* query xgmi pcs error status,

		/* query wafl pcs error status,

 check xgmi pcs error */

 check wafl pcs error */

 check xgmi pcs error */

 check wafl pcs error */

 check xgmi23 pcs error */

 check xgmi3x16 pcs error */

 check wafl pcs error */

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 enable/disable ROM CG is not supported on APU */

 CGTT_ROM_CLK_CTRL0 is not available for APU */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Block CPU access */

 blackout the MC */

 wait for the MC to settle */

 unblackout the MC */

 allow CPU access */

 this memory configuration requires special firmware */

 reset the engine and set to writable */

 load mc io regs */

 load the MC ucode */

 put the engine back into the active state */

 wait for training to complete */

 Initialize HDP */

 Lockout access through VGA aperture*/

 disable VGA render */

 Update configuration */

 size in MB on si */

 set the gart size */

 no MM engines */

 UVD, VCE do not support GPUVM */

 UVD, VCE do not support GPUVM */

 UVD, VCE do not support GPUVM */

 UVD, VCE do not support GPUVM */

 write new base address */

 bits 0-15 are the VM contexts0-15 */

 /**

   + * gmc_v8_0_set_prt - set PRT VM fault

   + *

   + * @adev: amdgpu_device pointer

   + * @enable: enable/disable VM fault handling for PRT

 Setup TLB control */

 Setup L2 cache */

 setup context0 */

 empty context1-15 */

 set vm size, must be a multiple of 4 */

	/* Assign the pt base to something valid for now; the pts used for

	 * the VMs are determined by the application and setup and assigned

	 * on the fly in the vm part of radeon_gart.c

 enable context1-15 */

	/*unsigned i;



	for (i = 1; i < 16; ++i) {

		uint32_t reg;

		if (i < 8)

			reg = VM_CONTEXT0_PAGE_TABLE_BASE_ADDR + i ;

		else

			reg = VM_CONTEXT8_PAGE_TABLE_BASE_ADDR + (i - 8);

		adev->vm_manager.saved_table_addr[i] = RREG32(reg);

 Disable all tables */

 Setup TLB control */

 Setup L2 cache */

/*

static const u32 mc_cg_registers[] = {

	MC_HUB_MISC_HUB_CG,

	MC_HUB_MISC_SIP_CG,

	MC_HUB_MISC_VM_CG,

	MC_XPB_CLK_GAT,

	ATC_MISC_CG,

	MC_CITF_MISC_WR_CG,

	MC_CITF_MISC_RD_CG,

	MC_CITF_MISC_VM_CG,

	VM_L2_CG,

};



static const u32 mc_cg_ls_en[] = {

	MC_HUB_MISC_HUB_CG__MEM_LS_ENABLE_MASK,

	MC_HUB_MISC_SIP_CG__MEM_LS_ENABLE_MASK,

	MC_HUB_MISC_VM_CG__MEM_LS_ENABLE_MASK,

	MC_XPB_CLK_GAT__MEM_LS_ENABLE_MASK,

	ATC_MISC_CG__MEM_LS_ENABLE_MASK,

	MC_CITF_MISC_WR_CG__MEM_LS_ENABLE_MASK,

	MC_CITF_MISC_RD_CG__MEM_LS_ENABLE_MASK,

	MC_CITF_MISC_VM_CG__MEM_LS_ENABLE_MASK,

	VM_L2_CG__MEM_LS_ENABLE_MASK,

};



static const u32 mc_cg_en[] = {

	MC_HUB_MISC_HUB_CG__ENABLE_MASK,

	MC_HUB_MISC_SIP_CG__ENABLE_MASK,

	MC_HUB_MISC_VM_CG__ENABLE_MASK,

	MC_XPB_CLK_GAT__ENABLE_MASK,

	ATC_MISC_CG__ENABLE_MASK,

	MC_CITF_MISC_WR_CG__ENABLE_MASK,

	MC_CITF_MISC_RD_CG__ENABLE_MASK,

	MC_CITF_MISC_VM_CG__ENABLE_MASK,

	VM_L2_CG__ENABLE_MASK,

};



static void gmc_v6_0_enable_mc_ls(struct amdgpu_device *adev,

				  bool enable)

{

	int i;

	u32 orig, data;



	for (i = 0; i < ARRAY_SIZE(mc_cg_registers); i++) {

		orig = data = RREG32(mc_cg_registers[i]);

		if (enable && (adev->cg_flags & AMDGPU_CG_SUPPORT_MC_LS))

			data |= mc_cg_ls_en[i];

		else

			data &= ~mc_cg_ls_en[i];

		if (data != orig)

			WREG32(mc_cg_registers[i], data);

	}

}



static void gmc_v6_0_enable_mc_mgcg(struct amdgpu_device *adev,

				    bool enable)

{

	int i;

	u32 orig, data;



	for (i = 0; i < ARRAY_SIZE(mc_cg_registers); i++) {

		orig = data = RREG32(mc_cg_registers[i]);

		if (enable && (adev->cg_flags & AMDGPU_CG_SUPPORT_MC_MGCG))

			data |= mc_cg_en[i];

		else

			data &= ~mc_cg_en[i];

		if (data != orig)

			WREG32(mc_cg_registers[i], data);

	}

}



static void gmc_v6_0_enable_bif_mgls(struct amdgpu_device *adev,

				     bool enable)

{

	u32 orig, data;



	orig = data = RREG32_PCIE(ixPCIE_CNTL2);



	if (enable && (adev->cg_flags & AMDGPU_CG_SUPPORT_BIF_LS)) {

		data = REG_SET_FIELD(data, PCIE_CNTL2, SLV_MEM_LS_EN, 1);

		data = REG_SET_FIELD(data, PCIE_CNTL2, MST_MEM_LS_EN, 1);

		data = REG_SET_FIELD(data, PCIE_CNTL2, REPLAY_MEM_LS_EN, 1);

		data = REG_SET_FIELD(data, PCIE_CNTL2, SLV_MEM_AGGRESSIVE_LS_EN, 1);

	} else {

		data = REG_SET_FIELD(data, PCIE_CNTL2, SLV_MEM_LS_EN, 0);

		data = REG_SET_FIELD(data, PCIE_CNTL2, MST_MEM_LS_EN, 0);

		data = REG_SET_FIELD(data, PCIE_CNTL2, REPLAY_MEM_LS_EN, 0);

		data = REG_SET_FIELD(data, PCIE_CNTL2, SLV_MEM_AGGRESSIVE_LS_EN, 0);

	}



	if (orig != data)

		WREG32_PCIE(ixPCIE_CNTL2, data);

}



static void gmc_v6_0_enable_hdp_mgcg(struct amdgpu_device *adev,

				     bool enable)

{

	u32 orig, data;



	orig = data = RREG32(mmHDP_HOST_PATH_CNTL);



	if (enable && (adev->cg_flags & AMDGPU_CG_SUPPORT_HDP_MGCG))

		data = REG_SET_FIELD(data, HDP_HOST_PATH_CNTL, CLOCK_GATING_DIS, 0);

	else

		data = REG_SET_FIELD(data, HDP_HOST_PATH_CNTL, CLOCK_GATING_DIS, 1);



	if (orig != data)

		WREG32(mmHDP_HOST_PATH_CNTL, data);

}



static void gmc_v6_0_enable_hdp_ls(struct amdgpu_device *adev,

				   bool enable)

{

	u32 orig, data;



	orig = data = RREG32(mmHDP_MEM_POWER_LS);



	if (enable && (adev->cg_flags & AMDGPU_CG_SUPPORT_HDP_LS))

		data = REG_SET_FIELD(data, HDP_MEM_POWER_LS, LS_ENABLE, 1);

	else

		data = REG_SET_FIELD(data, HDP_MEM_POWER_LS, LS_ENABLE, 0);



	if (orig != data)

		WREG32(mmHDP_MEM_POWER_LS, data);

}

	/*

	 * number of VMs

	 * VMID 0 is reserved for System

	 * amdgpu graphics/compute will use VMIDs 1-7

	 * amdkfd will use VMIDs 8-15

 base offset of vram pages */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Don't use.  Firmware uses this bit internally */

	/*

	 * guest vm gets 0xffffffff when reading RCC_DEV0_EPF0_STRAP0,

	 * therefore we force rev_id to 0 (which is the default value)

 setup interrupt control */

	/*

	 * INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=0 - dummy read disabled with msi, enabled without msi

	 * INTERRUPT_CNTL__IH_DUMMY_RD_OVERRIDE_MASK=1 - dummy read controlled by IH_DUMMY_RD_EN

 INTERRUPT_CNTL__IH_REQ_NONSNOOP_EN_MASK=1 if ring is in non-cacheable memory, e.g., vram */

 AMD_CG_SUPPORT_BIF_MGCG */

 AMD_CG_SUPPORT_BIF_LS */

 off by default, no gains over L1

 1=1us, 9=1ms

 4ms

 Disable ASPM L0s/L1 first */

 Disbale ASPM L1 */

 Disable ASPM TxL0s */

 Disable ACPI L1 */

	/*

	 * Program PCIE_LC_CNTL6.LC_SPC_MODE_8GT to 0x2 (4 symbols per clock data)

	 * if link_width is 0x3 (x4)

	/* Clear Interrupt Status

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 1st: program mmUVD_LMI_JRBC_RB_MEM_RD_64BIT_BAR_LOW

 2nd: program mmUVD_LMI_JRBC_RB_MEM_RD_64BIT_BAR_HIGH

 3rd to 5th: issue MEM_READ commands

 6th: program mmUVD_JRBC_RB_CNTL register to enable NO_FETCH and RPTR write ability

 7th: program mmUVD_JRBC_RB_REF_DATA

 8th: issue conditional register read mmUVD_JRBC_RB_CNTL

9th to 21st: insert no-op

22nd: reset mmUVD_JRBC_RB_RPTR

23rd: program mmUVD_JRBC_RB_CNTL to disable no_fetch

/**

 * jpeg_v1_0_decode_ring_get_rptr - get read pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware read pointer

/**

 * jpeg_v1_0_decode_ring_get_wptr - get write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Returns the current hardware write pointer

/**

 * jpeg_v1_0_decode_ring_set_wptr - set write pointer

 *

 * @ring: amdgpu_ring pointer

 *

 * Commits the write pointer to the hardware

/**

 * jpeg_v1_0_decode_ring_insert_start - insert a start command

 *

 * @ring: amdgpu_ring pointer

 *

 * Write a start command to the ring.

/**

 * jpeg_v1_0_decode_ring_insert_end - insert a end command

 *

 * @ring: amdgpu_ring pointer

 *

 * Write a end command to the ring.

/**

 * jpeg_v1_0_decode_ring_emit_fence - emit an fence & trap command

 *

 * @ring: amdgpu_ring pointer

 * @addr: address

 * @seq: sequence number

 * @flags: fence related flags

 *

 * Write a fence and a trap command to the ring.

 emit trap */

/**

 * jpeg_v1_0_decode_ring_emit_ib - execute indirect buffer

 *

 * @ring: amdgpu_ring pointer

 * @job: job to retrieve vmid from

 * @ib: indirect buffer to execute

 * @flags: unused

 *

 * Write ring commands to execute the indirect buffer.

 wait for register write */

/**

 * jpeg_v1_0_early_init - set function pointers

 *

 * @handle: amdgpu_device pointer

 *

 * Set ring and irq function pointers

/**

 * jpeg_v1_0_sw_init - sw init for JPEG block

 *

 * @handle: amdgpu_device pointer

 *

 JPEG TRAP */

/**

 * jpeg_v1_0_sw_fini - sw fini for JPEG block

 *

 * @handle: amdgpu_device pointer

 *

 * JPEG free up sw allocation

/**

 * jpeg_v1_0_start - start JPEG block

 *

 * @adev: amdgpu_device pointer

 * @mode: SPG or DPG mode

 *

 * Setup and start the JPEG block

 initialize wptr */

 copy patch commands to the jpeg ring */

 hdp invalidate / flush */

 jpeg_v1_0_decode_ring_emit_vm_flush */

 jpeg_v1_0_decode_ring_emit_fence x2 vm fence */

 jpeg_v1_0_decode_ring_emit_ib */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Navi */

 Navi1x */

 Sienna Cichlid */

 SRIOV Sienna Cichlid, not const since data is controlled by host */

 Beige Goby*/

 Yellow Carp*/

/*

 * Indirect registers accessor

 todo */

 todo */

 APU vbios image is part of sbios image */

 set rom index to 0 */

 read out the rom data */

 some asics don't have SDMA1 */

 disable BM */

 wait for asic to come out of reset */

 todo */

 todo */

 todo */

	/* Check sOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

	/* TODO

	 * dummy implement for pcie_replay_count sysfs interface

 TODO: will add them during VCN v2 implementation */

	/* TODO: split the GC and PG flags based on the relevant IP version for which

	 * they are relevant.

		/* guest vm gets 0xffffffff when reading RCC_DEV0_EPF0_STRAP0,

		 * as a consequence, the rev_id and external_rev_id are wrong.

		 * workaround it by hardcoding rev_id to 0 (default value).

 hypervisor control CG and PG enablement */

 FIXME: not supported yet */

 enable pcie gen2/3 link */

 enable aspm */

 setup nbio registers */

	/* remap HDP registers to a hole in mmio space,

	 * for the purpose of expose those registers

	 * to process space

 enable the doorbell aperture */

 disable the doorbell aperture */

 TODO */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 enable/disable ROM CG is not supported on APU */

 CGTT_ROM_CLK_CTRL0 is not available for APU */

/**

 * smuio_v13_0_get_die_id - query die id from FCH.

 *

 * @adev: amdgpu device pointer

 *

 * Returns die id

/**

 * smuio_v13_0_get_socket_id - query socket id from FCH

 *

 * @adev: amdgpu device pointer

 *

 * Returns socket id

/**

 * smuio_v13_0_is_host_gpu_xgmi_supported - detect xgmi interface between cpu and gpu/s.

 *

 * @adev: amdgpu device pointer

 *

 * Returns true on success or false otherwise.

	/* data[4:0]

	 * bit 0 == 0 host-gpu interface is PCIE

	 * bit 0 == 1 host-gpu interface is Alternate Protocal

	 * for AMD, this is XGMI

/*

 * Copyright 2015 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 Enable pflip interrupts */

 Disable pflip interrupts */

/**

 * dce_v6_0_page_flip - pageflip callback.

 *

 * @adev: amdgpu_device pointer

 * @crtc_id: crtc to cleanup pageflip on

 * @crtc_base: new address of the crtc (GPU MC address)

 * @async: asynchronous flip

 *

 * Does the actual pageflip (evergreen+).

 * During vblank we take the crtc lock and wait for the update_pending

 * bit to go high, when it does, we release the lock, and allow the

 * double buffered update to take place.

 * Returns the current update pending status.

 flip at hsync for async, default is vsync */

 update pitch */

 update the scanout addresses */

 post the write */

/**

 * dce_v6_0_hpd_sense - hpd sense callback.

 *

 * @adev: amdgpu_device pointer

 * @hpd: hpd (hotplug detect) pin

 *

 * Checks if a digital monitor is connected (evergreen+).

 * Returns true if connected, false if not connected.

/**

 * dce_v6_0_hpd_set_polarity - hpd set polarity callback.

 *

 * @adev: amdgpu_device pointer

 * @hpd: hpd (hotplug detect) pin

 *

 * Set the polarity of the hpd pin (evergreen+).

/**

 * dce_v6_0_hpd_init - hpd setup callback.

 *

 * @adev: amdgpu_device pointer

 *

 * Setup the hpd pins used by the card (evergreen+).

 * Enable the pin, set the polarity, and enable the hpd interrupts.

			/* don't try to enable hpd on eDP or LVDS avoid breaking the

			 * aux dp channel on imac and help (but not completely fix)

			 * https://bugzilla.redhat.com/show_bug.cgi?id=726143

			 * also avoid interrupt storms during dpms.

/**

 * dce_v6_0_hpd_fini - hpd tear down callback.

 *

 * @adev: amdgpu_device pointer

 *

 * Tear down the hpd pins used by the card (evergreen+).

 * Disable the hpd interrupts.

Disable VGA render and enabled crtc, if has DCE engine*/

Disable crtc*/

 LVDS FMT is set up by atom */

 XXX sort out optimal dither settings */

 XXX sort out optimal dither settings */

 not needed */

/**

 * si_get_number_of_dram_channels - get the number of dram channels

 *

 * @adev: amdgpu_device pointer

 *

 * Look up the number of video ram channels (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the number of dram channels

 number of dram channels */

 bandwidth per dram data pin in kHz */

 engine clock in kHz */

 display clock in kHz */

 viewport width */

 active display time in ns */

 blank time in ns */

 mode is interlaced */

 vertical scale ratio */

 number of active crtcs */

 bytes per pixel display + overlay */

 line buffer allocated to pipe */

 vertical scaler taps */

/**

 * dce_v6_0_dram_bandwidth - get the dram bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the raw dram bandwidth (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the dram bandwidth in MBytes/s

 Calculate raw DRAM Bandwidth */

 0.7 */

/**

 * dce_v6_0_dram_bandwidth_for_display - get the dram bandwidth for display

 *

 * @wm: watermark calculation data

 *

 * Calculate the dram bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the dram bandwidth for display in MBytes/s

 Calculate DRAM Bandwidth and the part allocated to display. */

 0.3 to 0.7 */

 XXX worse case value 0.3 */

/**

 * dce_v6_0_data_return_bandwidth - get the data return bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the data return bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the data return bandwidth in MBytes/s

 Calculate the display Data return Bandwidth */

 0.8 */

/**

 * dce_v6_0_dmif_request_bandwidth - get the dmif bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the dmif bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the dmif bandwidth in MBytes/s

 Calculate the DMIF Request Bandwidth */

 0.8 */

/**

 * dce_v6_0_available_bandwidth - get the min available bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the min available bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the min available bandwidth in MBytes/s

 Calculate the Available bandwidth. Display can use this temporarily but not in average. */

/**

 * dce_v6_0_average_bandwidth - get the average available bandwidth

 *

 * @wm: watermark calculation data

 *

 * Calculate the average available bandwidth used for display (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the average available bandwidth in MBytes/s

	/* Calculate the display mode Average Bandwidth

	 * DisplayMode should contain the source and destination dimensions,

	 * timing, etc.

/**

 * dce_v6_0_latency_watermark - get the latency watermark

 *

 * @wm: watermark calculation data

 *

 * Calculate the latency watermark (CIK).

 * Used for display watermark bandwidth calculations

 * Returns the latency watermark in ns

 First calculate the latency in ns */

 2000 ns. */

 dc pipe latency */

/**

 * dce_v6_0_average_bandwidth_vs_dram_bandwidth_for_display - check

 * average and available dram bandwidth

 *

 * @wm: watermark calculation data

 *

 * Check if the display average bandwidth fits in the display

 * dram bandwidth (CIK).

 * Used for display watermark bandwidth calculations

 * Returns true if the display fits, false if not.

/**

 * dce_v6_0_average_bandwidth_vs_available_bandwidth - check

 * average and available bandwidth

 *

 * @wm: watermark calculation data

 *

 * Check if the display average bandwidth fits in the display

 * available bandwidth (CIK).

 * Used for display watermark bandwidth calculations

 * Returns true if the display fits, false if not.

/**

 * dce_v6_0_check_latency_hiding - check latency hiding

 *

 * @wm: watermark calculation data

 *

 * Check latency hiding (CIK).

 * Used for display watermark bandwidth calculations

 * Returns true if the display fits, false if not.

/**

 * dce_v6_0_program_watermarks - program display watermarks

 *

 * @adev: amdgpu_device pointer

 * @amdgpu_crtc: the selected display controller

 * @lb_size: line buffer size

 * @num_heads: number of display controllers in use

 *

 * Calculate and program the display watermarks for the

 * selected display controller (CIK).

 watermark for high clocks */

 XXX: get this from fb config */

 watermark for low clocks */

 XXX: get this from fb config */

 set for high clocks */

 set for low clocks */

 possibly force display priority to high */

 should really do this at mode validation time... */

 select wm A */

 select wm B */

 restore original selection */

 write the priority marks */

 save values for DPM */

 Save number of lines the linebuffer leads before the scanout */

 watermark setup */

	/*

	 * Line Buffer Setup

	 * There are 3 line buffers, each one shared by 2 display controllers.

	 * mmDC_LB_MEMORY_SPLIT controls how that line buffer is shared between

	 * the display controllers.  The paritioning is done via one of four

	 * preset allocations specified in bits 21:20:

	 *  0 - half lb

	 *  2 - whole lb, other crtc must be disabled

	/* this can get tricky if we have two large displays on a paired group

	 * of crtcs.  Ideally for multiple large displays we'd assign them to

	 * non-linked crtcs for maximum line buffer allocation.

 1/2 */

 whole */

 controller not enabled, so no lb used */

/**

 * dce_v6_0_bandwidth_update - program display watermarks

 *

 * @adev: amdgpu_device pointer

 *

 * Calculate and program the display watermarks and line

 * buffer allocation (CIK).

 program the speaker allocation */

 stereo */

 anything other than 0 */

	/*

	 * Two dtos: generally use dto0 for hdmi, dto1 for dp.

	 * Express [24MHz / target pixel clock] as an exact rational

	 * number (coefficient of two integer numbers.  DCCG_AUDIO_DTOx_PHASE

	 * is the numerator, DCCG_AUDIO_DTOx_MODULE is the denominator

 disable audio before setting up hw */

 enable audio after setting up hw */

 Silent, r600_hdmi_enable will raise WARN for us */

 DCE6 has audio blocks tied to DIG encoders */

 no fb bound */

	/* If atomic, assume fb object is pinned & idle & fenced and

	 * just update base pointers

 Greater 8 bpc fb needs to bypass hw-lut to retain precision */

 Greater 8 bpc fb needs to bypass hw-lut to retain precision */

	/* Make sure surface address is updated at vertical blank rather than

	 * horizontal blank

	/*

	 * The LUT only has 256 slots for indexing by a 8 bpc fb. Bypass the LUT

	 * for > 8 bpc scanout to avoid truncation of fb indices to 8 msb's, to

	 * retain the full precision throughout the pipeline.

 set pageflip to happen anywhere in vblank interval */

 Bytes per pixel may have changed */

 XXX match this to the depth of the crtc fmt block, move to modeset? */

/**

 * dce_v6_0_pick_pll - Allocate a PPLL for use by the crtc.

 *

 * @crtc: drm crtc

 *

 * Returns the PPLL (Pixel PLL) to be used by the crtc.  For DP monitors

 * a single PPLL can be used for all DP crtcs/encoders.  For non-DP

 * monitors a dedicated PPLL must be used.  If a particular board has

 * an external DP PLL, return ATOM_PPLL_INVALID to skip PLL programming

 * as there is no need to program the PLL itself.  If we are not able to

 * allocate a PLL, return ATOM_PPLL_INVALID to skip PLL programming to

 * avoid messing up an existing monitor.

 *

 *

 skip PPLL programming if using ext clock */

 use the same PPLL for all monitors with the same clock */

  PPLL1, and PPLL2 */

 avivo cursor are offset into the total surface */

 turn off cursor */

 Make sure VBLANK and PFLIP interrupts are still enabled */

 adjust pm to dpms */

 disable crtc pair power gating before programming */

 disable the GRPH */

			/* one other crtc is using this pll don't turn

			 * off the pll

 disable the ppll */

 update the hw version fpr dpm */

 assign the encoder to the amdgpu crtc to avoid repeated lookups later */

 pick pll */

 if we can't get a PPLL for a non-DP encoder, fail */

 HPD hotplug */

 allocate crtcs */

 setup afmt */

 disable vga render */

 init dig PHYs, disp eng pll */

 initialize hpd */

 turn on the BL */

 vblank */

 vline */

 IRQ could occur when in initial stage */

 page flip completed. clean up */

 wakeup usersapce */

 need to call this here rather than in prepare() since we need some crtc info */

 set scaler clears this on some chips */

 select the clock/data port if it uses a router */

 turn eDP panel on for mode set */

 this is needed for the pll/ss setup to work correctly in some cases */

 set up the FMT blocks */

 need to call this here as we need the crtc set up */

 these are handled by the primary encoders */

 no detect for TMDS/LVDS yet */

 see if we already added it */

 add a new one */

 these are handled by the primary encoders */

/*

 * Copyright 2020 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 HW has more IP blocks,  only initialized the block needed by our driver  */

/*

 * Copyright 2021 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 TODO: Check if handler exists? */

/*

 * Copyright 2019 Advanced Micro Devices, Inc.

 * All Rights Reserved.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the

 * "Software"), to deal in the Software without restriction, including

 * without limitation the rights to use, copy, modify, merge, publish,

 * distribute, sub license, and/or sell copies of the Software, and to

 * permit persons to whom the Software is furnished to do so, subject to

 * the following conditions:

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL

 * THE COPYRIGHT HOLDERS, AUTHORS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM,

 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR

 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE

 * USE OR OTHER DEALINGS IN THE SOFTWARE.

 *

 * The above copyright notice and this permission notice (including the

 * next paragraph) shall be included in all copies or substantial portions

 * of the Software.

 *

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 address block */

 navi10 reg offset define */

 memory training timeout define */

 For large FW files the time to complete can be very long */

 Read USB-PD from LFB */

		/* Wait for bootloader to signify that is

	/* Check tOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Copy PSP KDB binary to memory */

 Provide the PSP KDB to bootloader */

	/* Check tOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Copy PSP SPL binary to memory */

 Provide the PSP SPL to bootloader */

	/* Check sOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Copy PSP System Driver binary to memory */

 Provide the sys driver to bootloader */

 there might be handshake issue with hardware which needs delay */

	/* Check sOS sign of life register to confirm sys driver and sOS

	 * are already been loaded.

 Copy Secure OS binary to PSP memory */

 Provide the PSP secure OS to bootloader */

 there might be handshake issue with hardware which needs delay */

 allocate 4k Page of Local Frame Buffer memory for ring */

 Write the ring destroy command*/

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) */

 Write low address of the ring to C2PMSG_102 */

 Write high address of the ring to C2PMSG_103 */

 Write the ring initialization command to C2PMSG_101 */

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) in C2PMSG_101 */

 Wait for sOS ready for ring creation */

 Write low address of the ring to C2PMSG_69 */

 Write high address of the ring to C2PMSG_70 */

 Write size of ring to C2PMSG_71 */

 Write the ring initialization command to C2PMSG_64 */

 there might be handshake issue with hardware which needs delay */

 Wait for response flag (bit 31) in C2PMSG_64 */

send the mode 1 reset command*/

/*

 * save and restore process

		/*

		 * Long training will encroach a certain amount on the bottom of VRAM;

		 * save the content from the bottom of VRAM to system memory

		 * before training, and restore it after training to avoid

		 * VRAM corruption.

	/*

	 * LFB address which is aligned to 1MB address and has to be

	 * right-shifted by 20 so that LFB address can be passed on a 32-bit C2P

	 * register

 Fireup interrupt so PSP can pick up the address */

 FW load takes very long time */

/*

 * Copyright 2014 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 BPM SERDES CMD */

 BPM Register Address*/

 Enable/Disable CGLS */

 ON/OFF CGLS: shall be controlled by RLC FW */

 Set/Clear CGCG Override */

 Set/Clear MGCG Override */

 Set/Clear FGCG Override */

	/*

	 * Support for MCBP/Virtualization in combination with chained IBs is

	 * formal released on feature version #46

 we need account JT in */

 init clear state block */

 JT + GDS */

 init spm vmid with 0xf */

 take ownership of the relevant compute queues */

 CU_GROUP_COUNT=1 */

 VGPRS=15 (64 logical VGPRs), SGPRS=1 (16 SGPRs), BULKY=1 */

 CU_GROUP_COUNT=1 */

 SGPRS=9 (80 GPRS) */

 SGPRS=9 (80 GPRS) */

 only supported on CZ */

 bail if the compute ring is not ready */

 allocate an indirect buffer to put the commands in */

 load the compute shaders */

 init the ib length to 0 */

 VGPR */

 write the register state for the compute dispatch */

 write the shader start address: mmCOMPUTE_PGM_LO, mmCOMPUTE_PGM_HI */

 write dispatch packet */

 x */

 y */

 z */

 write CS partial flush packet */

 SGPR1 */

 write the register state for the compute dispatch */

 write the shader start address: mmCOMPUTE_PGM_LO, mmCOMPUTE_PGM_HI */

 write dispatch packet */

 x */

 y */

 z */

 write CS partial flush packet */

 SGPR2 */

 write the register state for the compute dispatch */

 write the shader start address: mmCOMPUTE_PGM_LO, mmCOMPUTE_PGM_HI */

 write dispatch packet */

 x */

 y */

 z */

 write CS partial flush packet */

 shedule the ib on the ring */

 wait for the GPU to finish processing the IB */

 read back registers to clear the counters */

 Get memory bank mapping mode. */

 Validate settings in case only one DIMM installed. */

 If DIMM Addr map is 8GB, ROW size should be 2KB. Otherwise 1KB. */

 If ROW size(DIMM1) != ROW size(DMIMM0), ROW size should be larger one. */

 fix up row size */

 mec0 is me1 */

 type-2 packets are deprecated on MEC, use type-3 instead */

 EOP Event */

 Privileged reg */

 Privileged inst */

 Add CP EDC/ECC irq  */

 SQ interrupts. */

 set up the gfx ring */

 no gfx doorbells on iceland */

 set up the compute queues - allocate horizontally across pipes */

 create MQD for all compute queues as well as KIQ for SRIOV case */

 GRBM_GFX_INDEX has a different offset on VI */

 GRBM_GFX_INDEX has a different offset on VI */

 cache the values for userspace */

/**

 * gfx_v8_0_init_compute_vmid - gart enable

 *

 * @adev: amdgpu_device pointer

 *

 * Initialize compute vmid sh_mem registers

 *

	/*

	 * Configure apertures:

	 * LDS:         0x60000000'00000000 - 0x60000001'00000000 (4GB)

	 * Scratch:     0x60000001'00000000 - 0x60000002'00000000 (4GB)

	 * GPUVM:       0x60010000'00000000 - 0x60020000'00000000 (1TB)

 CP and shaders */

	/* Initialize all compute VMIDs to have no GDS, GWS, or OA

	/*

	 * Initialize all compute and user-gfx VMIDs to have no GDS, GWS, or OA

	 * access. Compute VMIDs should be enabled by FW for target VMIDs,

	 * the driver can enable them for graphics. VMID0 should maintain

	 * access so that HWS firmware can save/restore entries.

 XXX SH_MEM regs */

 where to put LDS, scratch, GPUVM in FSA64 space */

 CP and shaders */

	/*

	 * making sure that the following register writes will be broadcasted

	 * to all the shaders

 csib */

 look for the matching indice */

 save and restore list */

 indirect list */

 starting offsets starts */

 unique indices */

 carrizo do enable cp interrupt after cp inited */

 begin clear state */

 context control state */

 pa_sc_raster_config/pa_sc_raster_config1 */

 end clear state */

 clear state */

 init the CP */

 clear state buffer */

 init the CE partitions */

 no gfx doorbells on iceland */

 Set the write pointer delay */

 set the RB to use vmid 0 */

 Set ring buffer size */

 Initialize the ring buffer's read and write pointers */

 set the wb address wether it's enabled or not */

 start the ring */

 KIQ functions */

 tell RLC which is KIQ queue */

		/* This situation may be hit in the future if a new HW

		 * generation exposes more than 64 queues. If so, the

 set resources */

 vmid_mask:0 queue_type:0 (KIQ) */

 queue mask lo */

 queue mask hi */

 gws mask lo */

 gws mask hi */

 oac mask */

 gds heap base:0, gds heap size:0 */

 map queues */

 Q_sel:0, vmid:0, vidmem: 1, engine:0, num_Q:1*/

 doorbell */

 set the EOP size, register value is 2^(EOP_SIZE+1) dwords */

 enable doorbell? */

 set the pointer to the MQD */

 set MQD vmid to 0 */

 set the pointer to the HQD, this is similar CP_RB0_BASE/_HI */

 set up the HQD, this is similar to CP_RB0_CNTL */

 set the wb address whether it's enabled or not */

 only used if CP_PQ_WPTR_POLL_CNTL.CP_PQ_WPTR_POLL_CNTL__EN_MASK=1 */

 enable the doorbell if requested */

 reset read and write pointers, similar to CP_RB0_WPTR/_RPTR */

 set the vmid for the queue */

 set MTYPE */

 defaults */

 set static priority for a queue/ring */

	/* map_queues packet doesn't need activate the queue,

	 * so only kiq need set this field.

 HQD registers extend from mmCP_MQD_BASE_ADDR to mmCP_HQD_ERROR */

 disable wptr polling */

 program all HQD registers */

	/* Tonga errata: EOP RPTR/WPTR should be left unmodified.

	 * This is safe since EOP RPTR==WPTR for any inactive HQD

	 * on ASICs that do not support context-save.

	 * EOP writes/reads can start anywhere in the ring.

 activate the HQD */

 for GPU_RESET case */

 reset MQD to a clean status */

 reset ring buffer */

 for GPU_RESET case */

 reset MQD to a clean status */

 reset ring buffer */

 enable doorbells */

 collect all the ring_tests here, gfx, kiq, compute */

 Q_sel: 0, vmid: 0, engine: 0, num_Q: 1 */

 RESET_QUEUES */

 disable KCQ to avoid CPC touch memory not valid anymore */

 GRBM_STATUS */

 GRBM_STATUS2 */

 SRBM_STATUS */

 stop the rlc */

 Disable GFX parsing/prefetching */

 Disable MEC parsing/prefetching */

 Wait a little for things to settle down */

/**

 * gfx_v8_0_get_gpu_clock_counter - return GPU clock counter snapshot

 *

 * @adev: amdgpu_device pointer

 *

 * Fetches a GPU clock counter snapshot.

 * Returns the 64 bit clock counter snapshot.

 GDS Base */

 GDS Size */

 GWS */

 OA */

 type 0 wave data */

 requires IBs so do in late init after IB pool is initialized */

 Send msg to SMU via Powerplay */

 Read any GFX register to wake up GFX. */

 AMD_CG_SUPPORT_GFX_MGCG */

 AMD_CG_SUPPORT_GFX_CGLG */

 AMD_CG_SUPPORT_GFX_CGLS */

 AMD_CG_SUPPORT_GFX_CGTS */

 AMD_CG_SUPPORT_GFX_CGTS_LS */

 AMD_CG_SUPPORT_GFX_RLC_LS */

 AMD_CG_SUPPORT_GFX_CP_LS */

 wait for RLC_SAFE_MODE */

 It is disabled by HW by default */

 1 - RLC memory Light sleep */

 3 - RLC_CGTT_MGCG_OVERRIDE */

 4 - wait for RLC_SERDES_CU_MASTER & RLC_SERDES_NONCU_MASTER idle */

 5 - clear mgcg override */

 6 - Enable CGTS(Tree Shade) MGCG /MGLS */

 7 - wait for RLC_SERDES_CU_MASTER & RLC_SERDES_NONCU_MASTER idle */

 1 - MGCG_OVERRIDE[0] for CP and MGCG_OVERRIDE[1] for RLC */

 2 - disable MGLS in RLC */

 3 - disable MGLS in CP */

 4 - Disable CGTS(Tree Shade) MGCG and MGLS */

 5 - wait for RLC_SERDES_CU_MASTER & RLC_SERDES_NONCU_MASTER idle */

 6 - set mgcg override */

 7- wait for RLC_SERDES_CU_MASTER & RLC_SERDES_NONCU_MASTER idle */

 : wait for RLC_SERDES_CU_MASTER & RLC_SERDES_NONCU_MASTER idle */

 2 - clear cgcg override */

 wait for RLC_SERDES_CU_MASTER & RLC_SERDES_NONCU_MASTER idle */

 3 - write cmd to set CGLS */

 4 - enable cgcg */

 enable cgls*/

		/* 5 enable cntx_empty_int_enable/cntx_busy_int_enable/

		 * Cmp_busy/GFX_Idle interrupts

 disable cntx_empty_int_enable & GFX Idle interrupt */

 TEST CGCG */

 read gfx register to wake up cgcg */

 wait for RLC_SERDES_CU_MASTER & RLC_SERDES_NONCU_MASTER idle */

 write cmd to Set CGCG Overrride */

 wait for RLC_SERDES_CU_MASTER & RLC_SERDES_NONCU_MASTER idle */

 write cmd to Clear CGLS */

 disable cgcg, cgls should be disabled too. */

 enable interrupts again for PG */

		/* CGCG/CGLS should be enabled after MGCG/MGLS/TS(CG/LS)

		 * ===  MGCG + MGLS + TS(CG/LS) ===

		/* CGCG/CGLS should be disabled before MGCG/MGLS/TS(CG/LS)

		 * ===  CGCG + CGLS ===

 XXX check if swapping is necessary on BE */

 XXX check if swapping is necessary on BE */

 pfp */

 write, wait, write */

 == */

 poll interval */

	/* Currently, there is a high possibility to get wave ID mismatch

	 * between ME and GDS, leading to a hw deadlock, because ME generates

	 * different wave IDs than the GDS expects. This situation happens

	 * randomly when at least 5 compute pipes use GDS ordered append.

	 * The wave IDs generated by ME are also wrong after suspend/resume.

	 * Those are probably bugs somewhere else in the kernel driver.

	 *

	 * Writing GDS_COMPUTE_MAX_WAVE_ID resets wave ID counters in ME and

	 * GDS to 0 for this ring (me/pipe).

	/* Workaround for cache flush problems. First send a dummy EOP

	 * event down the pipe with seq one below.

	/* Then send the real EOP event down the pipe:

 memory */

 equal */

 pfp or me */

 poll interval */

 wait for the invalidate to complete */

 wait */

 always */

 me */

 ref */

 mask */

 poll interval */

 compute doesn't have PFP */

 sync PFP to ME, otherwise we might get invalid PFP reads */

 XXX check if swapping is necessary on BE */

 RELEASE_MEM - flush caches, send int */

 we only allocate 32bit for each seq wb address */

 write fence seq to the "addr" */

 set register to trigger INT */

 src_id is 178 */

 set load_enable otherwise this package is just NOPs */

 set load_global_config & load_global_uconfig */

 set load_cs_sh_regs */

 set load_per_context_state & load_gfx_sh_regs for GFX */

 set load_ce_ram if preamble presented */

		/* still load_ce_ram if this is the first time preamble presented

		 * although there is no context switch happens.

 discard following DWs if *cond_exec_gpu_addr==0 */

 patch dummy value later */

 src: register*/

 dst: memory */

 write confirm */

 no inc addr */

	/*

	 * amdgpu controls only the first MEC. That's why this function only

	 * handles the setting of interrupts for this specific MEC. All other

	 * pipes' interrupts are set by amdkfd.

			/* Per-queue interrupt is supported for MEC starting from VI.

			  * The interrupt can only be enabled/disabled per pipe instead of per queue.

			/*

			 * This function can be called either directly from ISR

			 * or from BH in which case we can access SQ_EDC_INFO

			 * instance

	/*

	 * Try to submit work so SQ_EDC_INFO can be accessed from

	 * BH. If previous work submission hasn't finished yet

	 * just print whatever info is possible directly from the ISR.

 CP_COHER_CNTL */

 CP_COHER_SIZE */

 CP_COHER_BASE */

 poll interval */

 CP_COHER_CNTL */

 CP_COHER_SIZE */

 CP_COHER_SIZE_HI */

 CP_COHER_BASE */

 CP_COHER_BASE_HI */

 poll interval */

 mmSPI_WCL_PIPE_PERCENT_CS[0-7]_DEFAULT values are same */

	/* mmSPI_WCL_PIPE_PERCENT_GFX is 7 bit multiplier register to limit

	 * number of gfx waves. Setting 5 bit will make sure gfx only gets

	 * around 25% of gpu resources.

	/* Restrict waves for normal/low priority compute queues as well

	 * to get best QoS for high priority compute jobs.

	 *

	 * amdgpu controls only 1st ME(0-3 CS pipes).

 maximum 215dw if count 16 IBs in */

 COND_EXEC */

 PIPELINE_SYNC */

 VM_FLUSH */

 FENCE for VM_FLUSH */

 GDS switch */

		4 + /* double SWITCH_BUFFER,

		       the first COND_EXEC jump to the place just

 COND_EXEC */

	HDP_flush */

	VGT_flush */

	CE_META */

	DE_META */

 CNTX_CTRL */

 HDP_INVL */

 FENCE x2 */

 SWITCH_BUFFER */

 SURFACE_SYNC */

 gfx_v8_0_ring_emit_ib_gfx */

 gfx_v8_0_ring_emit_gds_switch */

 gfx_v8_0_ring_emit_hdp_flush */

 hdp_invalidate */

 gfx_v8_0_ring_emit_pipeline_sync */

 gfx_v8_0_ring_emit_vm_flush */

 gfx_v8_0_ring_emit_fence_compute x3 for user fence, vm fence */

 gfx_v8_0_emit_mem_sync_compute */

 gfx_v8_0_emit_wave_limit for updating mmSPI_WCL_PIPE_PERCENT_GFX register */

 for updating 3 mmSPI_WCL_PIPE_PERCENT_CS registers */

 gfx_v8_0_ring_emit_ib_compute */

 gfx_v8_0_ring_emit_gds_switch */

 gfx_v8_0_ring_emit_hdp_flush */

 hdp_invalidate */

 gfx_v8_0_ring_emit_pipeline_sync */

 gfx_v8_0_ring_emit_vm_flush */

 gfx_v8_0_ring_emit_fence_kiq x3 for user fence, vm fence */

 gfx_v8_0_ring_emit_ib_compute */

 init asci gds info */

/*

 * Copyright 2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 *

 *

 inject address is 52 bits */

 typical ECC bad page rate is 1 bad page per 100MB VRAM */

 ascii string, but commands are not matched. */

 only ue and ce errors are supported */

/**

 * DOC: AMDGPU RAS debugfs control interface

 *

 * The control interface accepts struct ras_debug_if which has two members.

 *

 * First member: ras_debug_if::head or ras_debug_if::inject.

 *

 * head is used to indicate which IP block will be under control.

 *

 * head has four members, they are block, type, sub_block_index, name.

 * block: which IP will be under control.

 * type: what kind of error will be enabled/disabled/injected.

 * sub_block_index: some IPs have subcomponets. say, GFX, sDMA.

 * name: the name of IP.

 *

 * inject has two more members than head, they are address, value.

 * As their names indicate, inject operation will write the

 * value to the address.

 *

 * The second member: struct ras_debug_if::op.

 * It has three kinds of operations.

 *

 * - 0: disable RAS on the block. Take ::head as its data.

 * - 1: enable RAS on the block. Take ::head as its data.

 * - 2: inject errors on the block. Take ::inject as its data.

 *

 * How to use the interface?

 *

 * In a program

 *

 * Copy the struct ras_debug_if in your code and initialize it.

 * Write the struct to the control interface.

 *

 * From shell

 *

 * .. code-block:: bash

 *

 *	echo "disable <block>" > /sys/kernel/debug/dri/<N>/ras/ras_ctrl

 *	echo "enable  <block> <error>" > /sys/kernel/debug/dri/<N>/ras/ras_ctrl

 *	echo "inject  <block> <error> <sub-block> <address> <value> > /sys/kernel/debug/dri/<N>/ras/ras_ctrl

 *

 * Where N, is the card which you want to affect.

 *

 * "disable" requires only the block.

 * "enable" requires the block and error type.

 * "inject" requires the block, error type, address, and value.

 *

 * The block is one of: umc, sdma, gfx, etc.

 *	see ras_block_string[] for details

 *

 * The error type is one of: ue, ce, where,

 *	ue is multi-uncorrectable

 *	ce is single-correctable

 *

 * The sub-block is a the sub-block index, pass 0 if there is no sub-block.

 * The address and value are hexadecimal numbers, leading 0x is optional.

 *

 * For instance,

 *

 * .. code-block:: bash

 *

 *	echo inject umc ue 0x0 0x0 0x0 > /sys/kernel/debug/dri/0/ras/ras_ctrl

 *	echo inject umc ce 0 0 0 > /sys/kernel/debug/dri/0/ras/ras_ctrl

 *	echo disable umc > /sys/kernel/debug/dri/0/ras/ras_ctrl

 *

 * How to check the result of the operation?

 *

 * To check disable/enable, see "ras" features at,

 * /sys/class/drm/card[0/1/2...]/device/ras/features

 *

 * To check inject, see the corresponding error count at,

 * /sys/class/drm/card[0/1/2...]/device/ras/[gfx|sdma|umc|...]_err_count

 *

 * .. note::

 *	Operations are only allowed on blocks which are supported.

 *	Check the "ras" mask at /sys/module/amdgpu/parameters/ras_mask

 *	to see which blocks support RAS on a particular asic.

 *

 umc ce/ue error injection for a bad page is not allowed */

 data.inject.address is offset instead of absolute gpu address */

/**

 * DOC: AMDGPU RAS debugfs EEPROM table reset interface

 *

 * Some boards contain an EEPROM which is used to persistently store a list of

 * bad pages which experiences ECC errors in vram.  This interface provides

 * a way to reset the EEPROM, e.g., after testing error injection.

 *

 * Usage:

 *

 * .. code-block:: bash

 *

 *	echo 1 > ../ras/ras_eeprom_reset

 *

 * will reset EEPROM table to 0 entries.

 *

		/* Something was written to EEPROM.

/**

 * DOC: AMDGPU RAS sysfs Error Count Interface

 *

 * It allows the user to read the error count for each IP block on the gpu through

 * /sys/class/drm/card[0/1/2...]/device/ras/[gfx/sdma/...]_err_count

 *

 * It outputs the multiple lines which report the uncorrected (ue) and corrected

 * (ce) error counts.

 *

 * The format of one line is below,

 *

 * [ce|ue]: count

 *

 * Example:

 *

 * .. code-block:: bash

 *

 *	ue: 0

 *	ce: 1

 *

 obj begin */

 make one obj and return it. */

 already exist. return obj? */

 return an obj equal to head, or the first when head is NULL */

 obj end */

 feature ctl begin */

/*

 * if obj is not created, then create one.

 * set feature enable flag.

	/* If hardware does not support ras, then do not create obj.

	 * But if hardware support ras, we can create the obj.

	 * Ras framework checks con->hw_supported to see if it need do

	 * corresponding initialization.

	 * IP checks con->support to see if it need disable ras.

 In case we create obj somewhere else */

 wrapper of psp_ras_enable_features */

 Do not enable if it is not allowed. */

 setup the obj */

 Only used in device probe stage and called only once. */

			/* There is no harm to issue a ras TA cmd regardless of

			 * the currecnt ras state.

			 * If current state == target state, it will do nothing

			 * But sometimes it requests driver to reset and repost

			 * with error code -EAGAIN.

			/* With old ras TA, we might fail to enable ras.

			 * Log it and just setup the object.

			 * TODO need remove this WA in the future.

 setup the object then issue a ras TA disable cmd.*/

 gfx block ras dsiable cmd must send to ras-ta */

 clean gfx block ras features flag */

		/* bypass psp.

		 * aka just release the obj and corresponding flags

			/*

			 * bypass psp. vbios enable ras for us.

			 * so just create the obj

			/*

			 * bypass psp. vbios enable ras for us.

			 * so just create the obj

 feature ctl end */

 query/inject/cure begin */

		/* umc query_ras_error_address is also responsible for clearing

		 * error status

 Trigger XGMI/WAFL error */

 wrapper of psp_ras_trigger_error */

 Calculate XGMI relative offset */

/**

 * amdgpu_ras_query_error_count -- Get error counts of all IPs

 * adev: pointer to AMD GPU device

 * ce_count: pointer to an integer to be set to the count of correctible errors.

 * ue_count: pointer to an integer to be set to the count of uncorrectible

 * errors.

 *

 * If set, @ce_count or @ue_count, count and return the corresponding

 * error counts in those integer pointers. Return 0 if the device

 * supports RAS. Return -EOPNOTSUPP if the device doesn't support RAS.

	/* Don't count since no reporting.

 query/inject/cure end */

 sysfs begin */

/**

 * DOC: AMDGPU RAS sysfs gpu_vram_bad_pages Interface

 *

 * It allows user to read the bad pages of vram on the gpu through

 * /sys/class/drm/card[0/1/2...]/device/ras/gpu_vram_bad_pages

 *

 * It outputs multiple lines, and each line stands for one gpu page.

 *

 * The format of one line is below,

 * gpu pfn : gpu page size : flags

 *

 * gpu pfn and gpu page size are printed in hex format.

 * flags can be one of below character,

 *

 * R: reserved, this gpu page is reserved and not able to use.

 *

 * P: pending for reserve, this gpu page is marked as bad, will be reserved

 * in next window of page_reserve.

 *

 * F: unable to reserve. this gpu page can't be reserved due to some reasons.

 *

 * Examples:

 *

 * .. code-block:: bash

 *

 *	0x00000001 : 0x00001000 : R

 *	0x00000002 : 0x00001000 : P

 *

 sysfs end */

/**

 * DOC: AMDGPU RAS Reboot Behavior for Unrecoverable Errors

 *

 * Normally when there is an uncorrectable error, the driver will reset

 * the GPU to recover.  However, in the event of an unrecoverable error,

 * the driver provides an interface to reboot the system automatically

 * in that event.

 *

 * The following file in debugfs provides that interface:

 * /sys/kernel/debug/dri/[0/1/2...]/ras/auto_reboot

 *

 * Usage:

 *

 * .. code-block:: bash

 *

 *	echo true > .../ras/auto_reboot

 *

 debugfs begin */

	/*

	 * After one uncorrectable error happens, usually GPU recovery will

	 * be scheduled. But due to the known problem in GPU recovery failing

	 * to bring GPU back, below interface provides one direct way to

	 * user to reboot system automatically in such case within

	 * ERREVENT_ATHUB_INTERRUPT generated. Normal GPU recovery routine

	 * will never be called.

	/*

	 * User could set this not to clean up hardware's error count register

	 * of RAS IPs during ras recovery.

	/*

	 * it won't be called in resume path, no need to check

	 * suspend and gpu reset status

 debugfs end */

 ras fs */

 add features entry */

 add bad_page_features entry */

 ras fs end */

 ih begin */

				/* Let IP handle its data, maybe we need get the output

				 * from the callback to udpate the error type/count, etc

				/* ue will trigger an interrupt, and in that case

				 * we need do a reset to recovery the whole system.

				 * But leave IP do that recovery, here we just dispatch

				 * the error.

					/* these counts could be left as 0 if

					 * some blocks do not count error number

 Might be overflow... */

 in case we registe the IH before enable ras feature */

 add the callback.etc */

 the ring can store 64 iv entries. */

 IH is ready */

 ih end */

 traversal all IPs except NBIO to query error counter */

		/*

		 * PCIE_BIF IP has one different isr by ras controller

		 * interrupt, the specific ras counter query will be

		 * done in that isr. So skip such block from common

		 * sync flood interrupt isr calling.

 Parse RdRspStatus and WrRspStatus */

	/*

	 * Only two block need to query read/write

	 * RspStatus at current state

 recovery begin */

/* return 0 on success.

 * caller need free bps.

 Build list of devices to query RAS related errors */

 alloc/realloc bps array */

 it deal with vram only. */

/*

 * write error record array to eeprom, the function should be

 * protected by recovery_lock

 only new entries are saved */

/*

 * read error record array in eeprom and reserve enough space for

 * storing new bad pages

 no bad page record, skip eeprom access */

/*

 * check if an address belongs to bad page

 *

 * Note: this check is only for umc block

	/*

	 * Justification of value bad_page_cnt_threshold in ras structure

	 *

	 * Generally, -1 <= amdgpu_bad_page_threshold <= max record length

	 * in eeprom, and introduce two scenarios accordingly.

	 *

	 * Bad page retirement enablement:

	 *    - If amdgpu_bad_page_threshold = -1,

	 *      bad_page_cnt_threshold = typical value by formula.

	 *

	 *    - When the value from user is 0 < amdgpu_bad_page_threshold <

	 *      max record length in eeprom, use it directly.

	 *

	 * Bad page retirement disablement:

	 *    - If amdgpu_bad_page_threshold = 0, bad page retirement

	 *      functionality is disabled, and bad_page_cnt_threshold will

	 *      take no effect.

	/* Allow access to RAS EEPROM via debugfs, when the ASIC

	 * supports RAS and debugfs is enabled, but when

	 * adev->ras_enabled is unset, i.e. when "ras_enable"

	 * module parameter is set to 0.

	/* Todo: During test the SMU might fail to read the eeprom through I2C

	 * when the GPU is pending on XGMI reset during probe time

	 * (Mostly after second bus reset), skip it now

	/*

	 * This calling fails when exc_err_limit is true or

	 * ret != 0.

	/*

	 * Except error threshold exceeding case, other failure cases in this

	 * function would not fail amdgpu driver init.

 recovery_init failed to init it, fini is useless */

 recovery end */

/*

 * this is workaround for vega20 workstation sku,

 * force enable gfx ras, ignore vbios gfx ras flag

 * due to GC EDC can not write

/*

 * check hardware's ras ability which will be saved in hw_supported.

 * if hardware does not support ras, we can skip some ras initializtion and

 * forbid some ras operations from IP.

 * if software itself, say boot parameter, limit the ras ability. We still

 * need allow IP do some limited operations, like disable. In such case,

 * we have to initialize ras as normal. but need check if operation is

 * allowed or not in each function.

		/* driver only manages a few IP blocks RAS feature

 hw_supported needs to be aligned with RAS block mask. */

	/* Cache new values.

		/* set gfx block ras context feature for VEGA20 Gaming

		 * send ras disable cmd to ras ta during ras late init.

 Might need get this flag from vbios. */

	/* initialize nbio ras function ahead of any other

	 * ras functions so hardware fatal error interrupt

 nbio ras is not available */

 Init poison supported flag, the default value is false */

 Only poison is set in both DF and UMC, we can support it */

 helper function to handle common stuff in ip late init phase */

 disable RAS feature per IP block if it is not supported */

			/* in resume phase, if fail to enable ras,

 check for errors on warm reset edc persisant supported ASIC */

 in resume phase, no need to create ras fs node */

	/* Those are the cached values at init.

 helper function to remove ras fs node and interrupt handler */

/* do some init work after IP late init as dependence.

 * and it runs in resume/gpu reset/booting up cases.

 clean ras context for VEGA20 Gaming after send ras disable cmd */

		/* Set up all other IPs which are not implemented. There is a

		 * tricky thing that IP's actual ras error type should be

		 * MULTI_UNCORRECTABLE, but as driver does not handle it, so

		 * ERROR_NONE make sense anyway.

		/* We enable ras on all hw_supported block, but as boot

		 * parameter might disable some of them and one or more IP has

		 * not implemented yet. So we disable them on behalf.

 there should be no any reference. */

 Make sure all ras objects are disabled. */

 do some fini work before IP fini as dependence */

 Need disable ras on all IPs here before ip [hw/sw]fini */

	/*

	 * If the error was generated in UMC_V2, which belongs to GPU UMCs,

	 * and error occurred in DramECC (Extended error code = 0) then only

	 * process the error, else bail out.

	/*

	 * If it is correctable error, return.

	/*

	 * GPU Id is offset by GPU_ID_OFFSET in MCA_IPID_UMC register.

	/*

	 * If it is uncorrectable error, then find out UMC instance and

	 * channel index.

	/*

	 * Translate UMC channel address to Physical address

	/*

	 * Add the adev to the mce_adev_list.

	 * During mode2 reset, amdgpu device is temporarily

	 * removed from the mgpu_info list which can cause

	 * page retirement to fail.

	 * Use this list instead of mgpu_info to find the amdgpu

	 * device on which the UMC error was reported.

	/*

	 * Register the x86 notifier only once

	 * with MCE subsystem.

/*

 * Copyright 2014-2018 Advanced Micro Devices, Inc.

 *

 * Permission is hereby granted, free of charge, to any person obtaining a

 * copy of this software and associated documentation files (the "Software"),

 * to deal in the Software without restriction, including without limitation

 * the rights to use, copy, modify, merge, publish, distribute, sublicense,

 * and/or sell copies of the Software, and to permit persons to whom the

 * Software is furnished to do so, subject to the following conditions:

 *

 * The above copyright notice and this permission notice shall be included in

 * all copies or substantial portions of the Software.

 *

 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR

 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,

 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL

 * THE COPYRIGHT HOLDER(S) OR AUTHOR(S) BE LIABLE FOR ANY CLAIM, DAMAGES OR

 * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,

 * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR

 * OTHER DEALINGS IN THE SOFTWARE.

 APE1 no longer exists on GFX9 */

	/*

	 * We have to assume that there is no outstanding mapping.

	 * The ATC_VMID_PASID_MAPPING_UPDATE_STATUS bit could be 0 because

	 * a mapping is in progress or because a mapping finished

	 * and the SW cleared it.

	 * So the protocol is to always wait & clear.

	/*

	 * need to do this twice, once for gfx and once for mmhub

	 * for ATC add 16 to VMID for mmhub, for IH different registers.

	 * ATC_VMID0..15 registers are separate from ATC_VMID16..31.

 Mapping vmid to pasid also for IH block */

 Mapping vmid to pasid also for IH block */

/* TODO - RING0 form of field is obsolete, seems to date back to SI

 * but still works

 HQD registers extend from CP_MQD_BASE_ADDR to CP_HQD_EOP_WPTR_MEM. */

 Activate doorbell logic before triggering WPTR poll. */

		/* Don't read wptr with get_user because the user

		 * context may not be accessible (if this function

		 * runs in a work queue). Instead trigger a one-shot

		 * polling read from memory in the CP. This assumes

		 * that wptr is GPU-accessible in the queue's VMID via

		 * ATC or SVM. WPTR==RPTR before starting the poll so

		 * the CP starts fetching new commands from the right

		 * place.

		 *

		 * Guessing a 64-bit WPTR from a 32-bit RPTR is a bit

		 * tricky. Assume that the queue didn't overflow. The

		 * number of valid bits in the 32-bit RPTR depends on

		 * the queue size. The remaining bits are taken from

		 * the saved 64-bit WPTR. If the WPTR wrapped, add the

		 * queue size.

 Start the EOP fetcher */

 Queue_Sel */

 VMID */

queue_type: normal compute queue */

 alloc format: all_on_one_pipe */

 engine_sel: hiq */

 num_queues: must be 1 */

/**

 * get_wave_count: Read device registers to get number of waves in flight for

 * a particular queue. The method also returns the VMID associated with the

 * queue.

 *

 * @adev: Handle of device whose registers are to be read

 * @queue_idx: Index of queue in the queue-map bit-field

 * @wave_cnt: Output parameter updated with number of waves in flight

 * @vmid: Output parameter updated with VMID of queue whose wave count

 * is being collected

	/*

	 * Program GRBM with appropriate MEID, PIPEID, QUEUEID and VMID

	 * parameters to read out waves in flight. Get VMID if there are

	 * non-zero waves in flight.

/**

 * kgd_gfx_v9_get_cu_occupancy: Reads relevant registers associated with each

 * shader engine and aggregates the number of waves that are in flight for the

 * process whose pasid is provided as a parameter. The process could have ZERO

 * or more queues running and submitting waves to compute units.

 *

 * @kgd: Handle of device from which to get number of waves in flight

 * @pasid: Identifies the process for which this query call is invoked

 * @pasid_wave_cnt: Output parameter updated with number of waves in flight that

 * belong to process with given pasid

 * @max_waves_per_cu: Output parameter updated with maximum number of waves

 * possible per Compute Unit

 *

 * Note: It's possible that the device has too many queues (oversubscription)

 * in which case a VMID could be remapped to a different PASID. This could lead

 * to an iaccurate wave count. Following is a high-level sequence:

 *    Time T1: vmid = getVmid(); vmid is associated with Pasid P1

 *    Time T2: passId = getPasId(vmid); vmid is associated with Pasid P2

 * In the sequence above wave count obtained from time T1 will be incorrectly

 * lost or added to total wave count.

 *

 * The registers that provide the waves in flight are:

 *

 *  SPI_CSQ_WF_ACTIVE_STATUS - bit-map of queues per pipe. The bit is ON if a

 *  queue is slotted, OFF if there is no queue. A process could have ZERO or

 *  more queues slotted and submitting waves to be run on compute units. Even

 *  when there is a queue it is possible there could be zero wave fronts, this

 *  can happen when queue is waiting on top-of-pipe events - e.g. waitRegMem

 *  command

 *

 *  For each bit that is ON from above:

 *

 *    Read (SPI_CSQ_WF_ACTIVE_COUNT_0 + queue_idx) register. It provides the

 *    number of waves that are in flight for the queue at specified index. The

 *    index ranges from 0 to 7.

 *

 *    If non-zero waves are in flight, read CP_HQD_VMID register to obtain VMID

 *    of the wave(s).

 *

 *    Determine if VMID from above step maps to pasid provided as parameter. If

 *    it matches agrregate the wave count. That the VMID will not match pasid is

 *    a normal condition i.e. a device is expected to support multiple queues

 *    from multiple proceses.

 *

 *  Reading registers referenced above involves programming GRBM appropriately

	/*

	 * Iterate through the shader engines and arrays of the device

	 * to get number of waves in flight

			/*

			 * Assumption: queue map encodes following schema: four

			 * pipes per each micro-engine, with each pipe mapping

			 * eight queues. This schema is true for GFX9 devices

			 * and must be verified for newer device families

				/* Skip qeueus that are not associated with

				 * compute functions

 Get number of waves in flight and aggregate them */

 Update the output parameters and return */

	/*

	 * Program TBA registers

	/*

	 * Program TMA registers

